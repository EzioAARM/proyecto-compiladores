/* The following code was generated by JFlex 1.7.0 */

package AnalizadorSintactico.Ascendente;
import java_cup.runtime.*;
import java.io.*;
import java.io.FileReader;
import AnalizadorLexico.MyToken;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>Lexemas.flex</tt>
 */
public class Lexemas implements java_cup.runtime.Scanner {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;
  public static final int COMENTARIOMULTI = 2;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0,  0,  1, 1
  };

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = {
    62, 62, 62, 62, 62, 62, 62, 62, 62, 17, 15, 19, 19, 18, 62, 62, 
    62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 
    17, 27, 62, 39, 62, 23, 28, 14, 34, 35, 21,  1, 31,  2,  7, 22, 
    10, 10,  3,  3,  3,  3,  3,  3,  3,  3, 62, 30, 24, 25, 26, 62, 
    38, 40, 51, 46, 41,  8, 58, 54, 47, 49, 60, 52, 13, 56, 11, 48, 
    53, 61, 43, 45, 42, 12, 57, 55, 59, 44, 50, 32, 62, 33, 62,  5, 
    62,  4,  4,  4,  4,  9,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4, 
     4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4, 36, 29, 37, 62, 62, 
    62, 62, 62, 62, 62, 19, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 
    62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 
    62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 
    62, 62, 62, 62, 16, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 
    62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 
    62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 
    62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 
    62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62, 62
  };

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\2\0\1\1\1\2\1\3\1\4\1\5\1\6\1\1"+
    "\1\7\1\5\1\10\3\5\1\6\1\11\1\6\1\12"+
    "\1\13\1\14\1\15\1\16\1\17\1\20\2\6\1\21"+
    "\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31"+
    "\1\32\24\5\14\33\1\0\1\11\1\34\11\5\1\35"+
    "\7\5\1\36\1\37\2\36\1\0\1\40\1\41\1\42"+
    "\1\43\1\44\1\45\1\46\1\47\1\50\1\51\4\5"+
    "\1\52\1\5\1\53\17\5\1\54\33\5\1\55\1\5"+
    "\1\56\3\5\1\57\1\60\1\5\1\61\1\5\1\62"+
    "\5\5\1\63\16\5\1\64\24\5\1\0\1\65\1\0"+
    "\1\66\16\5\1\67\4\5\1\70\16\5\2\71\1\72"+
    "\1\73\1\5\1\74\1\5\1\75\1\76\1\77\1\5"+
    "\1\100\2\5\1\101\4\5\1\102\3\5\1\103\17\5"+
    "\1\104\20\5\1\105\4\5\1\106\12\5\1\107\31\5"+
    "\1\110\2\5\1\111\17\5\1\112\1\113\4\5\1\114"+
    "\7\5\1\115\14\5\1\116\2\5\1\117\14\5\1\120"+
    "\3\5\1\0\1\34\1\0\1\121\2\5\1\122\3\5"+
    "\1\123\1\5\1\124\1\125\5\5\1\126\6\5\1\127"+
    "\6\5\1\130\1\5\1\131\1\132\3\5\1\133\6\5"+
    "\1\134\2\5\1\135\4\5\1\136\1\137\1\5\1\140"+
    "\5\5\1\141\1\142\4\5\1\143\3\5\1\144\1\5"+
    "\1\145\1\146\1\5\1\147\1\150\7\5\1\151\2\5"+
    "\1\152\3\5\1\153\10\5\1\154\5\5\1\155\1\156"+
    "\13\5\1\157\1\160\4\5\1\161\14\5\1\162\1\5"+
    "\1\163\4\5\1\164\1\5\1\165\5\5\1\166\7\5"+
    "\1\167\2\5\1\170\3\5\1\171\1\5\1\172\2\5"+
    "\1\173\5\5\1\174\11\5\1\175\2\5\1\176\2\5"+
    "\1\177\1\200\11\5\1\201\2\5\1\202\3\5\1\203"+
    "\3\5\1\204\2\5\1\205\1\34\1\0\13\5\1\206"+
    "\1\207\2\5\1\210\3\5\1\211\1\212\1\5\1\213"+
    "\1\5\1\214\1\5\1\215\1\216\3\5\1\217\23\5"+
    "\1\220\26\5\1\221\15\5\1\222\3\5\1\223\5\5"+
    "\1\224\3\5\1\225\1\226\7\5\1\227\10\5\1\230"+
    "\1\5\1\231\7\5\1\232\1\233\7\5\1\234\4\5"+
    "\1\235\1\5\1\236\12\5\1\237\1\240\3\5\1\241"+
    "\1\5\1\242\1\243\1\5\1\244\1\5\1\245\1\246"+
    "\1\5\1\247\1\250\1\251\3\5\1\252\2\5\1\253"+
    "\1\5\1\254\1\255\1\5\1\256\3\5\1\257\1\0"+
    "\1\260\1\261\3\5\1\262\1\263\1\264\5\5\1\265"+
    "\2\5\1\266\2\5\1\267\3\5\1\270\1\5\1\271"+
    "\7\5\1\272\1\273\22\5\1\274\4\5\1\275\1\276"+
    "\5\5\1\277\4\5\1\300\4\5\1\301\1\302\7\5"+
    "\1\303\3\5\1\304\10\5\1\305\4\5\1\306\1\307"+
    "\1\5\1\310\4\5\1\311\7\5\1\312\6\5\1\313"+
    "\1\314\2\5\1\315\1\5\1\316\7\5\1\317\3\5"+
    "\1\320\1\321\1\322\1\5\1\323\7\5\1\0\1\324"+
    "\1\5\1\325\1\5\1\326\1\327\2\5\1\330\1\331"+
    "\1\332\1\5\1\333\10\5\1\334\1\335\2\5\1\336"+
    "\15\5\1\337\1\340\5\5\1\341\7\5\1\342\1\343"+
    "\1\5\1\344\10\5\1\345\1\5\1\346\1\5\1\347"+
    "\1\350\3\5\1\351\3\5\1\352\1\353\3\5\1\354"+
    "\3\5\1\355\2\5\1\356\3\5\1\357\1\5\1\360"+
    "\4\5\1\361\1\5\1\362\1\363\2\5\1\364\1\5"+
    "\1\365\2\5\1\366\3\5\1\367\1\370\2\5\1\371"+
    "\1\372\1\5\1\373\1\374\1\5\1\375\2\5\1\376"+
    "\1\5\1\377\1\5\1\u0100\1\5\1\u0101\1\5\1\u0102"+
    "\1\5\1\u0103\2\5\1\u0104\2\5\1\u0105\1\5\1\u0106"+
    "\2\5\1\u0107\3\5\1\u0108\1\u0109\1\u010a\4\5\1\u010b"+
    "\1\u010c\7\5\1\u010d\1\u010e\1\u010f\1\u0110\3\5\1\u0111"+
    "\4\5\1\u0112\1\u0113\2\5\1\u0114\1\5\1\u0115\3\5"+
    "\1\u0116\2\5\1\u0117\2\5\1\u0118\3\5\1\u0119\3\5"+
    "\1\u011a\1\5\1\u011b\1\5\1\u011c\1\u011d\1\5\1\u011e"+
    "\3\5\1\u011f\6\5\1\u0120\1\5\1\u0121\3\5\1\u0122"+
    "\4\5\1\u0123\5\5\1\u0124\6\5\1\u0125\2\5\1\u0126"+
    "\3\5\1\u0127\3\5\1\u0128\1\u0129\1\u012a\1\5\1\u012b"+
    "\2\5\1\u012c\1\u012d\1\5\1\u012e\1\u012f\1\5\1\u0130"+
    "\1\u0131\3\5\1\u0132\1\5\1\u0133\1\u0134\1\u0135\2\5"+
    "\1\u0136\10\5\1\u0137\1\u0138\4\5\1\u0139\1\5\1\u013a"+
    "\3\5\1\u013b\2\5\1\u013c\1\5\1\u013d\6\5\1\u013e"+
    "\1\u013f\1\5\1\u0140\1\u0141\1\5\1\u0142\1\u0143\1\u0144"+
    "\1\u0145\1\u0146\1\u0147\2\5\1\u0148\1\u0149\4\5\1\u014a"+
    "\3\5\1\u014b\2\5\1\u014c\3\5\1\u014d\1\5\1\u014e"+
    "\4\5\1\u014f\3\5\1\u0150\1\u0151\1\u0152\3\5\1\u0153"+
    "\3\5\1\u0154\1\u0155\1\5\1\u0156\4\5\1\u0157\1\u0158"+
    "\2\5\1\u0159\5\5\1\u015a\1\5\1\u015b\4\5\1\u015c"+
    "\3\5\1\u015d\2\5\1\u015e\15\5\1\u015f\1\5\1\u0160"+
    "\6\5\1\u0161";

  private static int [] zzUnpackAction() {
    int [] result = new int[1410];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\77\0\176\0\275\0\374\0\u013b\0\u017a\0\176"+
    "\0\u01b9\0\176\0\u01f8\0\u013b\0\u0237\0\u0276\0\u02b5\0\u02f4"+
    "\0\176\0\u0333\0\176\0\u0372\0\176\0\u03b1\0\u03f0\0\u042f"+
    "\0\u046e\0\u04ad\0\u04ec\0\176\0\176\0\u052b\0\176\0\u056a"+
    "\0\176\0\u05a9\0\176\0\176\0\u05e8\0\u0627\0\u0666\0\u06a5"+
    "\0\u06e4\0\u0723\0\u0762\0\u07a1\0\u07e0\0\u081f\0\u085e\0\u089d"+
    "\0\u08dc\0\u091b\0\u095a\0\u0999\0\u09d8\0\u0a17\0\u0a56\0\u0a95"+
    "\0\u0ad4\0\176\0\u0b13\0\u03b1\0\u03f0\0\u042f\0\u046e\0\u04ad"+
    "\0\u04ec\0\u052b\0\u056a\0\u05a9\0\u05e8\0\u01b9\0\u0b52\0\u0b91"+
    "\0\u0bd0\0\u0c0f\0\u0c4e\0\u0c8d\0\u0ccc\0\u0d0b\0\u0d4a\0\u0d89"+
    "\0\u0dc8\0\u0e07\0\u0e46\0\u0e85\0\u0ec4\0\u0f03\0\u0f42\0\u0f81"+
    "\0\u0fc0\0\u02f4\0\176\0\176\0\u0333\0\u0fff\0\176\0\176"+
    "\0\176\0\176\0\176\0\176\0\176\0\176\0\176\0\176"+
    "\0\u103e\0\u107d\0\u10bc\0\u10fb\0\u017a\0\u113a\0\u1179\0\u11b8"+
    "\0\u11f7\0\u1236\0\u1275\0\u12b4\0\u12f3\0\u1332\0\u1371\0\u13b0"+
    "\0\u13ef\0\u142e\0\u146d\0\u14ac\0\u14eb\0\u152a\0\u1569\0\u15a8"+
    "\0\u15e7\0\u1626\0\u1665\0\u16a4\0\u16e3\0\u1722\0\u1761\0\u17a0"+
    "\0\u17df\0\u181e\0\u185d\0\u189c\0\u18db\0\u191a\0\u1959\0\u1998"+
    "\0\u19d7\0\u1a16\0\u1a55\0\u1a94\0\u1ad3\0\u1b12\0\u1b51\0\u1b90"+
    "\0\u1bcf\0\u1c0e\0\u1c4d\0\u1c8c\0\u1ccb\0\u1d0a\0\u1d49\0\u1d88"+
    "\0\u1dc7\0\u1e06\0\u1e45\0\u1e84\0\u1ec3\0\u017a\0\u1f02\0\u1f41"+
    "\0\u1f80\0\u1fbf\0\u1ffe\0\u017a\0\u203d\0\u207c\0\u20bb\0\u20fa"+
    "\0\u2139\0\u2178\0\u21b7\0\u21f6\0\u2235\0\u2274\0\u22b3\0\u22f2"+
    "\0\u2331\0\u2370\0\u23af\0\u23ee\0\u242d\0\u246c\0\u24ab\0\u24ea"+
    "\0\u2529\0\u2568\0\u25a7\0\u25e6\0\u2625\0\u2664\0\u26a3\0\u26e2"+
    "\0\u2721\0\u2760\0\u279f\0\u27de\0\u281d\0\u285c\0\u289b\0\u0b13"+
    "\0\176\0\u28da\0\u2919\0\u2958\0\u2997\0\u29d6\0\u2a15\0\u2a54"+
    "\0\u2a93\0\u2ad2\0\u2b11\0\u2b50\0\u2b8f\0\u2bce\0\u2c0d\0\u2c4c"+
    "\0\u2c8b\0\u017a\0\u2cca\0\u2d09\0\u2d48\0\u2d87\0\u2dc6\0\u2e05"+
    "\0\u2e44\0\u2e83\0\u2ec2\0\u2f01\0\u2f40\0\u2f7f\0\u2fbe\0\u2ffd"+
    "\0\u303c\0\u307b\0\u30ba\0\u30f9\0\u3138\0\176\0\u0fff\0\u017a"+
    "\0\u017a\0\u3177\0\u31b6\0\u31f5\0\u017a\0\u017a\0\u017a\0\u3234"+
    "\0\u017a\0\u3273\0\u32b2\0\u017a\0\u32f1\0\u3330\0\u336f\0\u33ae"+
    "\0\u33ed\0\u342c\0\u346b\0\u34aa\0\u017a\0\u34e9\0\u3528\0\u3567"+
    "\0\u35a6\0\u35e5\0\u3624\0\u3663\0\u36a2\0\u36e1\0\u3720\0\u375f"+
    "\0\u379e\0\u37dd\0\u381c\0\u385b\0\u017a\0\u389a\0\u38d9\0\u3918"+
    "\0\u3957\0\u3996\0\u39d5\0\u3a14\0\u3a53\0\u3a92\0\u3ad1\0\u3b10"+
    "\0\u3b4f\0\u3b8e\0\u3bcd\0\u3c0c\0\u3c4b\0\u3c8a\0\u3cc9\0\u3d08"+
    "\0\u3d47\0\u3d86\0\u017a\0\u3dc5\0\u3e04\0\u3e43\0\u3e82\0\u3ec1"+
    "\0\u3f00\0\u3f3f\0\u3f7e\0\u3fbd\0\u3ffc\0\u403b\0\u407a\0\u40b9"+
    "\0\u40f8\0\u4137\0\u4176\0\u41b5\0\u41f4\0\u4233\0\u4272\0\u42b1"+
    "\0\u42f0\0\u432f\0\u436e\0\u43ad\0\u43ec\0\u442b\0\u446a\0\u44a9"+
    "\0\u44e8\0\u4527\0\u4566\0\u45a5\0\u45e4\0\u4623\0\u4662\0\u46a1"+
    "\0\u46e0\0\u471f\0\u475e\0\u479d\0\u47dc\0\u481b\0\u485a\0\u4899"+
    "\0\u48d8\0\u4917\0\u4956\0\u4995\0\u49d4\0\u4a13\0\u4a52\0\u4a91"+
    "\0\u4ad0\0\u4b0f\0\u4b4e\0\u017a\0\u4b8d\0\u4bcc\0\u4c0b\0\u4c4a"+
    "\0\u017a\0\u4c89\0\u4cc8\0\u4d07\0\u4d46\0\u4d85\0\u4dc4\0\u4e03"+
    "\0\u017a\0\u4e42\0\u4e81\0\u4ec0\0\u4eff\0\u4f3e\0\u4f7d\0\u4fbc"+
    "\0\u4ffb\0\u503a\0\u5079\0\u50b8\0\u50f7\0\u017a\0\u5136\0\u5175"+
    "\0\u51b4\0\u51f3\0\u5232\0\u5271\0\u52b0\0\u52ef\0\u532e\0\u536d"+
    "\0\u53ac\0\u53eb\0\u542a\0\u5469\0\u54a8\0\u54e7\0\u5526\0\u5565"+
    "\0\u55a4\0\u55e3\0\u5622\0\u5661\0\u017a\0\u56a0\0\u56df\0\u571e"+
    "\0\u575d\0\u579c\0\u57db\0\u017a\0\u581a\0\u017a\0\u5859\0\u5898"+
    "\0\u58d7\0\u5916\0\u5955\0\u5994\0\u017a\0\u59d3\0\u5a12\0\u5a51"+
    "\0\u5a90\0\u5acf\0\u5b0e\0\u017a\0\u5b4d\0\u5b8c\0\u5bcb\0\u5c0a"+
    "\0\u5c49\0\u5c88\0\u017a\0\u5cc7\0\u017a\0\u017a\0\u5d06\0\u5d45"+
    "\0\u5d84\0\u017a\0\u5dc3\0\u5e02\0\u5e41\0\u5e80\0\u5ebf\0\u5efe"+
    "\0\u017a\0\u5f3d\0\u5f7c\0\u5fbb\0\u5ffa\0\u6039\0\u6078\0\u60b7"+
    "\0\u017a\0\u017a\0\u60f6\0\u017a\0\u6135\0\u6174\0\u61b3\0\u61f2"+
    "\0\u6231\0\u017a\0\u017a\0\u6270\0\u62af\0\u62ee\0\u632d\0\u636c"+
    "\0\u63ab\0\u63ea\0\u6429\0\u017a\0\u6468\0\u017a\0\u64a7\0\u64e6"+
    "\0\u017a\0\u6525\0\u6564\0\u65a3\0\u65e2\0\u6621\0\u6660\0\u669f"+
    "\0\u66de\0\u017a\0\u671d\0\u675c\0\u017a\0\u679b\0\u67da\0\u6819"+
    "\0\u017a\0\u6858\0\u6897\0\u68d6\0\u6915\0\u6954\0\u6993\0\u69d2"+
    "\0\u6a11\0\u017a\0\u6a50\0\u6a8f\0\u6ace\0\u6b0d\0\u6b4c\0\u017a"+
    "\0\u017a\0\u6b8b\0\u6bca\0\u6c09\0\u6c48\0\u6c87\0\u6cc6\0\u6d05"+
    "\0\u6d44\0\u6d83\0\u6dc2\0\u6e01\0\u017a\0\u017a\0\u6e40\0\u6e7f"+
    "\0\u6ebe\0\u6efd\0\u6f3c\0\u6f7b\0\u6fba\0\u6ff9\0\u7038\0\u7077"+
    "\0\u70b6\0\u70f5\0\u7134\0\u7173\0\u71b2\0\u71f1\0\u7230\0\u017a"+
    "\0\u726f\0\u017a\0\u72ae\0\u72ed\0\u732c\0\u736b\0\u73aa\0\u73e9"+
    "\0\u7428\0\u7467\0\u74a6\0\u74e5\0\u7524\0\u7563\0\u017a\0\u75a2"+
    "\0\u75e1\0\u7620\0\u765f\0\u769e\0\u76dd\0\u771c\0\u017a\0\u775b"+
    "\0\u779a\0\u017a\0\u77d9\0\u7818\0\u7857\0\u017a\0\u7896\0\u017a"+
    "\0\u78d5\0\u7914\0\u017a\0\u7953\0\u7992\0\u79d1\0\u7a10\0\u7a4f"+
    "\0\u7a8e\0\u7acd\0\u7b0c\0\u7b4b\0\u7b8a\0\u7bc9\0\u7c08\0\u7c47"+
    "\0\u7c86\0\u7cc5\0\u017a\0\u7d04\0\u7d43\0\u7d82\0\u7dc1\0\u7e00"+
    "\0\u017a\0\u7e3f\0\u7e7e\0\u7ebd\0\u7efc\0\u7f3b\0\u7f7a\0\u7fb9"+
    "\0\u7ff8\0\u8037\0\u8076\0\u017a\0\u80b5\0\u80f4\0\u017a\0\u8133"+
    "\0\u8172\0\u81b1\0\u017a\0\u81f0\0\u822f\0\u826e\0\u017a\0\u82ad"+
    "\0\u82ec\0\u017a\0\u832b\0\u836a\0\u83a9\0\u83e8\0\u8427\0\u8466"+
    "\0\u84a5\0\u84e4\0\u8523\0\u8562\0\u85a1\0\u85e0\0\u861f\0\u017a"+
    "\0\u017a\0\u865e\0\u869d\0\u017a\0\u86dc\0\u871b\0\u875a\0\u017a"+
    "\0\u017a\0\u8799\0\u017a\0\u87d8\0\u017a\0\u8817\0\u017a\0\u017a"+
    "\0\u8856\0\u8895\0\u88d4\0\u017a\0\u8913\0\u8952\0\u8991\0\u89d0"+
    "\0\u8a0f\0\u8a4e\0\u8a8d\0\u8acc\0\u8b0b\0\u8b4a\0\u8b89\0\u8bc8"+
    "\0\u8c07\0\u8c46\0\u8c85\0\u8cc4\0\u8d03\0\u8d42\0\u8d81\0\u8dc0"+
    "\0\u8dff\0\u8e3e\0\u8e7d\0\u8ebc\0\u8efb\0\u8f3a\0\u8f79\0\u8fb8"+
    "\0\u8ff7\0\u9036\0\u9075\0\u90b4\0\u90f3\0\u9132\0\u9171\0\u91b0"+
    "\0\u91ef\0\u922e\0\u926d\0\u92ac\0\u92eb\0\u932a\0\u017a\0\u9369"+
    "\0\u93a8\0\u93e7\0\u9426\0\u9465\0\u94a4\0\u94e3\0\u9522\0\u9561"+
    "\0\u95a0\0\u95df\0\u961e\0\u965d\0\u017a\0\u969c\0\u96db\0\u971a"+
    "\0\u017a\0\u9759\0\u9798\0\u97d7\0\u9816\0\u9855\0\u017a\0\u9894"+
    "\0\u98d3\0\u9912\0\u017a\0\u9951\0\u9990\0\u99cf\0\u9a0e\0\u9a4d"+
    "\0\u9a8c\0\u9acb\0\u9b0a\0\u017a\0\u9b49\0\u9b88\0\u9bc7\0\u9c06"+
    "\0\u9c45\0\u9c84\0\u9cc3\0\u9d02\0\u017a\0\u9d41\0\u017a\0\u9d80"+
    "\0\u9dbf\0\u9dfe\0\u9e3d\0\u9e7c\0\u9ebb\0\u9efa\0\u017a\0\u017a"+
    "\0\u9f39\0\u9f78\0\u9fb7\0\u9ff6\0\ua035\0\ua074\0\ua0b3\0\u017a"+
    "\0\ua0f2\0\ua131\0\ua170\0\ua1af\0\u017a\0\ua1ee\0\u017a\0\ua22d"+
    "\0\ua26c\0\ua2ab\0\ua2ea\0\ua329\0\ua368\0\ua3a7\0\ua3e6\0\ua425"+
    "\0\ua464\0\u017a\0\u017a\0\ua4a3\0\ua4e2\0\ua521\0\u017a\0\ua560"+
    "\0\u017a\0\u017a\0\ua59f\0\ua5de\0\ua61d\0\u017a\0\u017a\0\ua65c"+
    "\0\u017a\0\u017a\0\u017a\0\ua69b\0\ua6da\0\ua719\0\ua758\0\ua797"+
    "\0\ua7d6\0\u017a\0\ua815\0\u017a\0\u017a\0\ua854\0\u017a\0\ua893"+
    "\0\ua8d2\0\ua911\0\u017a\0\ua950\0\u017a\0\u017a\0\ua98f\0\ua9ce"+
    "\0\uaa0d\0\uaa4c\0\u017a\0\u017a\0\uaa8b\0\uaaca\0\uab09\0\uab48"+
    "\0\uab87\0\u017a\0\uabc6\0\uac05\0\uac44\0\uac83\0\uacc2\0\u017a"+
    "\0\uad01\0\uad40\0\uad7f\0\u017a\0\uadbe\0\u017a\0\uadfd\0\uae3c"+
    "\0\uae7b\0\uaeba\0\uaef9\0\uaf38\0\uaf77\0\u017a\0\u017a\0\uafb6"+
    "\0\uaff5\0\ub034\0\ub073\0\ub0b2\0\ub0f1\0\ub130\0\ub16f\0\ub1ae"+
    "\0\ub1ed\0\ub22c\0\ub26b\0\ub2aa\0\ub2e9\0\ub328\0\ub367\0\ub3a6"+
    "\0\ub3e5\0\u017a\0\ub424\0\ub463\0\ub4a2\0\ub4e1\0\u017a\0\u017a"+
    "\0\ub520\0\ub55f\0\ub59e\0\ub5dd\0\ub61c\0\u017a\0\ub65b\0\ub69a"+
    "\0\ub6d9\0\ub718\0\u017a\0\ub757\0\ub796\0\ub7d5\0\ub814\0\u017a"+
    "\0\u017a\0\ub853\0\ub892\0\ub8d1\0\ub910\0\ub94f\0\ub98e\0\ub9cd"+
    "\0\u017a\0\uba0c\0\uba4b\0\uba8a\0\u017a\0\ubac9\0\ubb08\0\ubb47"+
    "\0\ubb86\0\ubbc5\0\ubc04\0\ubc43\0\ubc82\0\u017a\0\ubcc1\0\ubd00"+
    "\0\ubd3f\0\ubd7e\0\u017a\0\u017a\0\ubdbd\0\u017a\0\ubdfc\0\ube3b"+
    "\0\ube7a\0\ubeb9\0\u017a\0\ubef8\0\ubf37\0\ubf76\0\ubfb5\0\ubff4"+
    "\0\uc033\0\uc072\0\u017a\0\uc0b1\0\uc0f0\0\uc12f\0\uc16e\0\uc1ad"+
    "\0\uc1ec\0\u017a\0\u017a\0\uc22b\0\uc26a\0\u017a\0\uc2a9\0\u017a"+
    "\0\uc2e8\0\uc327\0\uc366\0\uc3a5\0\uc3e4\0\uc423\0\uc462\0\u017a"+
    "\0\uc4a1\0\uc4e0\0\uc51f\0\u017a\0\u017a\0\u017a\0\uc55e\0\u017a"+
    "\0\uc59d\0\uc5dc\0\uc61b\0\uc65a\0\uc699\0\uc6d8\0\uc717\0\uc756"+
    "\0\u017a\0\uc795\0\u017a\0\uc7d4\0\u017a\0\u017a\0\uc813\0\uc852"+
    "\0\u017a\0\u017a\0\u017a\0\uc891\0\u017a\0\uc8d0\0\uc90f\0\uc94e"+
    "\0\uc98d\0\uc9cc\0\uca0b\0\uca4a\0\uca89\0\u017a\0\u017a\0\ucac8"+
    "\0\ucb07\0\u017a\0\ucb46\0\ucb85\0\ucbc4\0\ucc03\0\ucc42\0\ucc81"+
    "\0\uccc0\0\uccff\0\ucd3e\0\ucd7d\0\ucdbc\0\ucdfb\0\uce3a\0\u017a"+
    "\0\u017a\0\uce79\0\uceb8\0\ucef7\0\ucf36\0\ucf75\0\u017a\0\ucfb4"+
    "\0\ucff3\0\ud032\0\ud071\0\ud0b0\0\ud0ef\0\ud12e\0\u017a\0\ud16d"+
    "\0\ud1ac\0\u017a\0\ud1eb\0\ud22a\0\ud269\0\ud2a8\0\ud2e7\0\ud326"+
    "\0\ud365\0\ud3a4\0\u017a\0\ud3e3\0\ud422\0\ud461\0\u017a\0\ud4a0"+
    "\0\ud4df\0\ud51e\0\ud55d\0\ud59c\0\ud5db\0\ud61a\0\ud659\0\u017a"+
    "\0\u017a\0\ud698\0\ud6d7\0\ud716\0\u017a\0\ud755\0\ud794\0\ud7d3"+
    "\0\u017a\0\ud812\0\ud851\0\u017a\0\ud890\0\ud8cf\0\ud90e\0\u017a"+
    "\0\ud94d\0\u017a\0\ud98c\0\ud9cb\0\uda0a\0\uda49\0\u017a\0\uda88"+
    "\0\u017a\0\u017a\0\udac7\0\udb06\0\u017a\0\udb45\0\u017a\0\udb84"+
    "\0\udbc3\0\u017a\0\udc02\0\udc41\0\udc80\0\u017a\0\u017a\0\udcbf"+
    "\0\udcfe\0\u017a\0\u017a\0\udd3d\0\176\0\u017a\0\udd7c\0\u017a"+
    "\0\uddbb\0\uddfa\0\u017a\0\ude39\0\u017a\0\ude78\0\u017a\0\udeb7"+
    "\0\u017a\0\udef6\0\u017a\0\udf35\0\u017a\0\udf74\0\udfb3\0\u017a"+
    "\0\udff2\0\ue031\0\u017a\0\ue070\0\u017a\0\ue0af\0\ue0ee\0\u017a"+
    "\0\ue12d\0\ue16c\0\ue1ab\0\u017a\0\u017a\0\u017a\0\ue1ea\0\ue229"+
    "\0\ue268\0\ue2a7\0\u017a\0\u017a\0\ue2e6\0\ue325\0\ue364\0\ue3a3"+
    "\0\ue3e2\0\ue421\0\ue460\0\u017a\0\u017a\0\u017a\0\u017a\0\ue49f"+
    "\0\ue4de\0\ue51d\0\u017a\0\ue55c\0\ue59b\0\ue5da\0\ue619\0\ue658"+
    "\0\u017a\0\ue697\0\ue6d6\0\u017a\0\ue715\0\u017a\0\ue754\0\ue793"+
    "\0\ue7d2\0\u017a\0\ue811\0\ue850\0\u017a\0\ue88f\0\ue8ce\0\ue90d"+
    "\0\ue94c\0\ue98b\0\ue9ca\0\u017a\0\uea09\0\uea48\0\uea87\0\u017a"+
    "\0\ueac6\0\u017a\0\ueb05\0\u017a\0\ueb44\0\ueb83\0\u017a\0\uebc2"+
    "\0\uec01\0\uec40\0\u017a\0\uec7f\0\uecbe\0\uecfd\0\ued3c\0\ued7b"+
    "\0\uedba\0\u017a\0\uedf9\0\u017a\0\uee38\0\uee77\0\ueeb6\0\u017a"+
    "\0\ueef5\0\uef34\0\uef73\0\uefb2\0\u017a\0\ueff1\0\uf030\0\uf06f"+
    "\0\uf0ae\0\uf0ed\0\u017a\0\uf12c\0\uf16b\0\uf1aa\0\uf1e9\0\uf228"+
    "\0\uf267\0\u017a\0\uf2a6\0\uf2e5\0\uf324\0\uf363\0\uf3a2\0\uf3e1"+
    "\0\u017a\0\uf420\0\uf45f\0\uf49e\0\u017a\0\u017a\0\u017a\0\uf4dd"+
    "\0\u017a\0\uf51c\0\uf55b\0\u017a\0\u017a\0\uf59a\0\u017a\0\u017a"+
    "\0\uf5d9\0\u017a\0\u017a\0\uf618\0\uf657\0\uf696\0\u017a\0\uf6d5"+
    "\0\u017a\0\u017a\0\u017a\0\uf714\0\uf753\0\u017a\0\uf792\0\uf7d1"+
    "\0\uf810\0\uf84f\0\uf88e\0\uf8cd\0\uf90c\0\uf94b\0\u017a\0\u017a"+
    "\0\uf98a\0\uf9c9\0\ufa08\0\ufa47\0\u017a\0\ufa86\0\u017a\0\ufac5"+
    "\0\ufb04\0\ufb43\0\u017a\0\ufb82\0\ufbc1\0\u017a\0\ufc00\0\ufc3f"+
    "\0\ufc7e\0\ufcbd\0\ufcfc\0\ufd3b\0\ufd7a\0\ufdb9\0\u017a\0\u017a"+
    "\0\ufdf8\0\u017a\0\u017a\0\ufe37\0\u017a\0\u017a\0\u017a\0\u017a"+
    "\0\u017a\0\u017a\0\ufe76\0\ufeb5\0\u017a\0\u017a\0\ufef4\0\uff33"+
    "\0\uff72\0\uffb1\0\u017a\0\ufff0\1\57\1\156\0\u017a\1\255"+
    "\1\354\0\u017a\1\u012b\1\u016a\1\u01a9\0\u017a\1\u01e8\0\u017a"+
    "\1\u0227\1\u0266\1\u02a5\1\u02e4\0\u017a\1\u0323\1\u0362\1\u03a1"+
    "\0\u017a\0\u017a\1\u03e0\1\u041f\1\u045e\1\u049d\0\u017a\1\u04dc"+
    "\1\u051b\1\u055a\0\u017a\0\u017a\1\u0599\0\u017a\1\u05d8\1\u0617"+
    "\1\u0656\1\u0695\0\u017a\0\u017a\1\u06d4\1\u0713\0\u017a\1\u0752"+
    "\1\u0791\1\u07d0\1\u080f\1\u084e\0\u017a\1\u088d\0\u017a\1\u08cc"+
    "\1\u090b\1\u094a\1\u0989\0\u017a\1\u09c8\1\u0a07\1\u0a46\0\u017a"+
    "\1\u0a85\1\u0ac4\0\u017a\1\u0b03\1\u0b42\1\u0b81\1\u0bc0\1\u0bff"+
    "\1\u0c3e\1\u0c7d\1\u0cbc\1\u0cfb\1\u0d3a\1\u0d79\1\u0db8\1\u0df7"+
    "\0\u017a\1\u0e36\0\u017a\1\u0e75\1\u0eb4\1\u0ef3\1\u0f32\1\u0f71"+
    "\1\u0fb0\0\u017a";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[1410];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12"+
    "\1\13\1\7\1\14\1\15\1\16\1\17\1\20\1\21"+
    "\1\22\2\21\1\10\1\3\1\23\1\24\1\25\1\26"+
    "\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36"+
    "\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46"+
    "\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56"+
    "\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66"+
    "\1\67\1\70\1\7\1\71\1\7\1\10\22\72\2\10"+
    "\1\3\1\73\2\72\1\74\1\75\1\76\1\77\1\100"+
    "\1\101\2\72\1\102\1\72\1\103\1\72\1\104\2\72"+
    "\1\105\27\72\102\0\1\6\2\0\1\106\3\0\1\6"+
    "\66\0\1\107\1\6\2\0\1\106\3\0\1\6\67\0"+
    "\1\6\2\0\1\106\1\110\2\0\1\6\67\0\3\7"+
    "\2\0\6\7\32\0\26\7\4\0\1\106\2\0\1\106"+
    "\1\110\2\0\1\106\67\0\3\7\2\0\3\7\1\111"+
    "\1\7\1\112\32\0\3\7\1\113\1\7\1\114\15\7"+
    "\1\115\2\7\4\0\3\7\2\0\1\116\3\7\1\117"+
    "\1\7\32\0\1\120\5\7\1\121\1\7\1\122\15\7"+
    "\4\0\3\7\2\0\3\7\1\123\2\7\32\0\5\7"+
    "\1\124\7\7\1\125\10\7\4\0\3\7\2\0\1\126"+
    "\5\7\32\0\1\127\7\7\1\130\1\131\14\7\1\0"+
    "\16\132\1\133\1\134\57\132\17\135\1\134\1\133\56\135"+
    "\25\0\1\136\102\0\1\137\76\0\1\140\76\0\1\141"+
    "\76\0\1\142\101\0\1\143\77\0\1\144\102\0\1\145"+
    "\100\0\1\146\100\0\1\147\100\0\1\150\32\0\3\7"+
    "\2\0\3\7\1\151\1\152\1\153\32\0\1\7\1\154"+
    "\1\155\1\156\1\7\1\157\1\160\4\7\1\161\5\7"+
    "\1\162\4\7\4\0\3\7\2\0\1\163\3\7\1\164"+
    "\1\7\32\0\1\165\2\7\1\166\4\7\1\167\1\170"+
    "\1\7\1\171\12\7\4\0\3\7\2\0\1\172\5\7"+
    "\32\0\1\173\2\7\1\174\1\7\1\175\1\7\1\176"+
    "\1\177\1\200\14\7\4\0\3\7\2\0\1\201\3\7"+
    "\1\202\1\7\32\0\1\203\7\7\1\204\1\205\14\7"+
    "\4\0\3\7\2\0\1\206\5\7\32\0\26\7\4\0"+
    "\3\7\2\0\1\207\3\7\1\210\1\7\32\0\1\211"+
    "\1\7\1\212\1\7\1\213\1\7\1\214\1\215\1\216"+
    "\1\217\3\7\1\220\2\7\1\221\4\7\1\222\4\0"+
    "\3\7\2\0\4\7\1\223\1\224\32\0\1\225\2\7"+
    "\1\226\3\7\1\227\1\230\15\7\4\0\3\7\2\0"+
    "\6\7\32\0\1\231\7\7\1\232\15\7\4\0\3\7"+
    "\2\0\3\7\1\233\1\234\1\7\32\0\3\7\1\235"+
    "\2\7\1\236\6\7\1\237\3\7\1\240\1\241\3\7"+
    "\4\0\3\7\2\0\3\7\1\242\2\7\32\0\1\7"+
    "\1\243\3\7\1\244\12\7\1\245\1\7\1\246\3\7"+
    "\4\0\3\7\2\0\6\7\32\0\10\7\1\247\15\7"+
    "\4\0\3\7\2\0\1\250\3\7\1\251\1\7\32\0"+
    "\1\252\2\7\1\253\1\254\3\7\1\255\1\256\14\7"+
    "\4\0\3\7\2\0\1\257\5\7\32\0\11\7\1\260"+
    "\14\7\4\0\3\7\2\0\1\261\3\7\1\262\1\263"+
    "\32\0\1\264\2\7\1\265\4\7\1\266\1\267\14\7"+
    "\4\0\3\7\2\0\1\270\4\7\1\271\32\0\3\7"+
    "\1\272\4\7\1\273\15\7\4\0\3\7\2\0\6\7"+
    "\32\0\1\274\2\7\1\275\3\7\1\276\1\277\1\300"+
    "\14\7\4\0\3\7\2\0\1\301\5\7\32\0\1\302"+
    "\7\7\1\303\1\304\14\7\4\0\3\7\2\0\1\305"+
    "\5\7\32\0\1\306\10\7\1\307\14\7\4\0\3\7"+
    "\2\0\1\310\3\7\1\311\1\312\32\0\1\313\2\7"+
    "\1\314\4\7\1\315\1\316\14\7\4\0\3\7\2\0"+
    "\6\7\32\0\10\7\1\317\15\7\26\0\1\320\1\321"+
    "\50\0\17\107\1\0\2\107\3\0\52\107\3\0\1\110"+
    "\2\0\1\110\1\0\2\322\1\110\67\0\3\7\2\0"+
    "\6\7\32\0\1\7\1\323\24\7\4\0\3\7\2\0"+
    "\6\7\32\0\5\7\1\324\20\7\4\0\3\7\2\0"+
    "\6\7\32\0\3\7\1\325\22\7\4\0\3\7\2\0"+
    "\6\7\32\0\6\7\1\326\17\7\4\0\3\7\2\0"+
    "\1\327\5\7\32\0\2\7\1\330\3\7\1\331\2\7"+
    "\1\332\14\7\4\0\3\7\2\0\6\7\32\0\23\7"+
    "\1\333\2\7\4\0\3\7\2\0\5\7\1\334\32\0"+
    "\20\7\1\335\5\7\4\0\3\7\2\0\6\7\32\0"+
    "\2\7\1\336\15\7\1\337\5\7\4\0\3\7\2\0"+
    "\6\7\32\0\7\7\1\340\16\7\4\0\3\7\2\0"+
    "\3\7\1\341\2\7\32\0\2\7\1\342\3\7\1\343"+
    "\17\7\4\0\3\7\2\0\6\7\32\0\11\7\1\344"+
    "\2\7\1\345\1\346\10\7\4\0\3\7\2\0\1\347"+
    "\5\7\32\0\1\350\10\7\1\351\14\7\4\0\3\7"+
    "\2\0\6\7\32\0\1\7\1\352\13\7\1\353\10\7"+
    "\4\0\3\7\2\0\6\7\32\0\1\354\20\7\1\355"+
    "\1\356\3\7\4\0\3\7\2\0\3\7\1\357\2\7"+
    "\32\0\5\7\1\360\20\7\4\0\3\7\2\0\6\7"+
    "\32\0\1\361\5\7\1\362\10\7\1\363\6\7\4\0"+
    "\3\7\2\0\3\7\1\364\2\7\32\0\14\7\1\365"+
    "\11\7\1\0\17\366\1\0\2\366\3\0\1\367\51\366"+
    "\3\0\3\7\2\0\6\7\32\0\1\7\1\370\2\7"+
    "\1\371\21\7\4\0\3\7\2\0\6\7\32\0\2\7"+
    "\1\372\23\7\4\0\3\7\2\0\5\7\1\373\32\0"+
    "\2\7\1\374\23\7\4\0\3\7\2\0\6\7\32\0"+
    "\1\375\1\376\24\7\4\0\3\7\2\0\1\377\5\7"+
    "\32\0\26\7\4\0\3\7\2\0\6\7\32\0\5\7"+
    "\1\u0100\1\u0101\17\7\4\0\3\7\2\0\6\7\32\0"+
    "\2\7\1\u0102\23\7\4\0\3\7\2\0\6\7\32\0"+
    "\5\7\1\u0103\20\7\4\0\3\7\2\0\6\7\32\0"+
    "\16\7\1\u0104\7\7\4\0\3\7\2\0\3\7\1\u0105"+
    "\1\7\1\u0106\32\0\1\u0107\4\7\1\u0108\1\u0109\13\7"+
    "\1\u010a\3\7\4\0\3\7\2\0\6\7\32\0\20\7"+
    "\1\u010b\5\7\4\0\3\7\2\0\6\7\32\0\2\7"+
    "\1\u010c\1\7\1\u010d\21\7\4\0\3\7\2\0\6\7"+
    "\32\0\10\7\1\u010e\15\7\4\0\3\7\2\0\4\7"+
    "\1\u010f\1\7\32\0\20\7\1\u0110\5\7\4\0\3\7"+
    "\2\0\6\7\32\0\1\u0111\4\7\1\u0112\20\7\4\0"+
    "\3\7\2\0\6\7\32\0\6\7\1\u0113\17\7\4\0"+
    "\3\7\2\0\6\7\32\0\20\7\1\u0114\2\7\1\u0115"+
    "\2\7\4\0\3\7\2\0\6\7\32\0\13\7\1\u0116"+
    "\12\7\4\0\3\7\2\0\4\7\1\u0117\1\7\32\0"+
    "\1\u0118\3\7\1\u0119\4\7\1\u011a\14\7\4\0\3\7"+
    "\2\0\1\u011b\5\7\32\0\26\7\4\0\3\7\2\0"+
    "\1\u011c\5\7\32\0\26\7\4\0\3\7\2\0\6\7"+
    "\32\0\15\7\1\u011d\10\7\4\0\3\7\2\0\6\7"+
    "\32\0\20\7\1\u011e\5\7\4\0\3\7\2\0\5\7"+
    "\1\u011f\32\0\1\u0120\1\7\1\u0121\2\7\1\u0122\1\u0123"+
    "\6\7\1\u0124\3\7\1\u0125\1\u0126\3\7\4\0\3\7"+
    "\2\0\5\7\1\u0127\32\0\26\7\4\0\3\7\2\0"+
    "\6\7\32\0\11\7\1\u0128\14\7\4\0\3\7\2\0"+
    "\5\7\1\u0129\32\0\17\7\1\u012a\6\7\4\0\3\7"+
    "\2\0\6\7\32\0\16\7\1\u012b\7\7\4\0\3\7"+
    "\2\0\6\7\32\0\1\u012c\25\7\4\0\3\7\2\0"+
    "\5\7\1\u012d\32\0\2\7\1\u012e\2\7\1\u012f\1\u0130"+
    "\11\7\1\u0131\5\7\4\0\3\7\2\0\6\7\32\0"+
    "\13\7\1\u0132\4\7\1\u0133\5\7\4\0\3\7\2\0"+
    "\6\7\32\0\21\7\1\u0134\4\7\4\0\3\7\2\0"+
    "\6\7\32\0\1\u0135\25\7\4\0\3\7\2\0\6\7"+
    "\32\0\5\7\1\u0136\20\7\4\0\3\7\2\0\6\7"+
    "\32\0\3\7\1\u0137\3\7\1\u0138\16\7\4\0\3\7"+
    "\2\0\4\7\1\u0139\1\7\32\0\26\7\4\0\3\7"+
    "\2\0\6\7\32\0\20\7\1\u013a\5\7\4\0\3\7"+
    "\2\0\6\7\32\0\12\7\1\u013b\13\7\4\0\3\7"+
    "\2\0\6\7\32\0\1\u013c\25\7\4\0\3\7\2\0"+
    "\6\7\32\0\1\u013d\25\7\4\0\3\7\2\0\5\7"+
    "\1\u013e\32\0\26\7\4\0\3\7\2\0\6\7\32\0"+
    "\3\7\1\u013f\22\7\4\0\3\7\2\0\4\7\1\u0140"+
    "\1\7\32\0\10\7\1\u0141\15\7\4\0\3\7\2\0"+
    "\6\7\32\0\2\7\1\u0142\2\7\1\u0143\20\7\4\0"+
    "\3\7\2\0\1\u0144\5\7\32\0\10\7\1\u0145\15\7"+
    "\4\0\3\7\2\0\1\u0146\5\7\32\0\1\u0147\25\7"+
    "\4\0\3\7\2\0\3\7\1\u0148\1\u0149\1\u014a\32\0"+
    "\1\u014b\2\7\1\u014c\14\7\1\u014d\5\7\4\0\3\7"+
    "\2\0\6\7\32\0\21\7\1\u014e\4\7\4\0\3\7"+
    "\2\0\4\7\1\u014f\1\u0150\32\0\26\7\4\0\3\7"+
    "\2\0\5\7\1\u0151\32\0\26\7\4\0\3\7\2\0"+
    "\6\7\32\0\2\7\1\u0152\23\7\4\0\3\7\2\0"+
    "\6\7\32\0\1\7\1\u0153\24\7\4\0\3\7\2\0"+
    "\6\7\32\0\2\7\1\u0154\23\7\4\0\3\7\2\0"+
    "\1\u0155\5\7\32\0\2\7\1\u0156\23\7\4\0\3\7"+
    "\2\0\1\u0157\5\7\32\0\26\7\4\0\3\7\2\0"+
    "\6\7\32\0\22\7\1\u0158\3\7\4\0\3\7\2\0"+
    "\3\7\1\u0159\2\7\32\0\1\7\1\u015a\1\u015b\2\7"+
    "\1\u015c\1\u015d\2\7\1\u015e\3\7\1\u015f\10\7\4\0"+
    "\3\7\2\0\1\u0160\5\7\32\0\26\7\4\0\3\7"+
    "\2\0\6\7\32\0\10\7\1\u0161\15\7\4\0\3\7"+
    "\2\0\6\7\32\0\20\7\1\u0162\5\7\4\0\3\7"+
    "\2\0\3\7\1\u0163\2\7\32\0\26\7\4\0\3\7"+
    "\2\0\6\7\32\0\2\7\1\u0164\13\7\1\u0165\7\7"+
    "\4\0\3\7\2\0\5\7\1\u0166\32\0\26\7\4\0"+
    "\3\7\2\0\6\7\32\0\6\7\1\u0167\17\7\4\0"+
    "\3\7\2\0\1\u0168\5\7\32\0\10\7\1\u0169\15\7"+
    "\4\0\3\7\2\0\6\7\32\0\2\7\1\u016a\23\7"+
    "\4\0\3\7\2\0\6\7\32\0\2\7\1\u016b\23\7"+
    "\4\0\3\7\2\0\6\7\32\0\4\7\1\u016c\21\7"+
    "\4\0\3\7\2\0\5\7\1\u016d\32\0\26\7\4\0"+
    "\3\7\2\0\6\7\32\0\3\7\1\u016e\22\7\4\0"+
    "\3\7\2\0\6\7\32\0\13\7\1\u016f\12\7\4\0"+
    "\3\7\2\0\6\7\32\0\1\u0170\25\7\4\0\3\7"+
    "\2\0\6\7\32\0\1\7\1\u0171\1\7\1\u0172\1\7"+
    "\1\u0173\20\7\4\0\3\7\2\0\1\u0174\5\7\32\0"+
    "\10\7\1\u0175\1\u0176\14\7\4\0\3\7\2\0\6\7"+
    "\32\0\5\7\1\u0177\20\7\4\0\3\7\2\0\6\7"+
    "\32\0\21\7\1\u0178\4\7\4\0\3\7\2\0\6\7"+
    "\32\0\2\7\1\u0179\23\7\4\0\3\7\2\0\6\7"+
    "\32\0\10\7\1\u017a\15\7\4\0\3\7\2\0\6\7"+
    "\32\0\1\u017b\7\7\1\u017c\15\7\4\0\3\7\2\0"+
    "\6\7\32\0\2\7\1\u017d\23\7\4\0\3\7\2\0"+
    "\6\7\32\0\11\7\1\u017e\14\7\4\0\3\7\2\0"+
    "\6\7\32\0\11\7\1\u017f\14\7\4\0\3\7\2\0"+
    "\1\u0180\5\7\32\0\11\7\1\u0181\14\7\4\0\3\7"+
    "\2\0\6\7\32\0\3\7\1\u0182\22\7\4\0\3\7"+
    "\2\0\6\7\32\0\2\7\1\u0183\23\7\4\0\3\7"+
    "\2\0\6\7\32\0\3\7\1\u0184\22\7\4\0\3\7"+
    "\2\0\6\7\32\0\2\7\1\u0185\20\7\1\u0186\2\7"+
    "\4\0\3\7\2\0\3\7\1\u0187\2\7\32\0\1\7"+
    "\1\u0188\24\7\4\0\3\7\2\0\3\7\1\u0189\2\7"+
    "\32\0\26\7\4\0\3\7\2\0\6\7\32\0\3\7"+
    "\1\u018a\22\7\4\0\3\7\2\0\5\7\1\u018b\32\0"+
    "\3\7\1\u018c\22\7\4\0\3\7\2\0\1\u018d\5\7"+
    "\32\0\26\7\4\0\3\7\2\0\6\7\32\0\2\7"+
    "\1\u018e\23\7\4\0\3\7\2\0\3\7\1\u018f\1\7"+
    "\1\u0190\32\0\26\7\4\0\3\7\2\0\6\7\32\0"+
    "\10\7\1\u0191\15\7\4\0\3\7\2\0\5\7\1\u0192"+
    "\32\0\26\7\4\0\3\7\2\0\1\u0193\5\7\32\0"+
    "\10\7\1\u0194\15\7\4\0\3\7\2\0\4\7\1\u0195"+
    "\1\7\32\0\3\7\1\u0196\22\7\4\0\3\7\2\0"+
    "\5\7\1\u0197\32\0\3\7\1\u0198\22\7\4\0\3\7"+
    "\2\0\6\7\32\0\11\7\1\u0199\14\7\2\0\2\u019a"+
    "\1\u019b\2\0\1\u019b\3\0\1\u019b\66\0\1\u019c\3\7"+
    "\2\0\6\7\32\0\26\7\4\0\3\7\2\0\1\u019d"+
    "\5\7\32\0\26\7\4\0\3\7\2\0\5\7\1\u019e"+
    "\32\0\26\7\4\0\3\7\2\0\6\7\32\0\1\u019f"+
    "\25\7\4\0\3\7\2\0\6\7\32\0\6\7\1\u01a0"+
    "\17\7\4\0\3\7\2\0\1\u01a1\5\7\32\0\3\7"+
    "\1\u01a2\22\7\4\0\3\7\2\0\1\u01a3\5\7\32\0"+
    "\26\7\4\0\3\7\2\0\6\7\32\0\2\7\1\u01a4"+
    "\2\7\1\u01a5\20\7\4\0\3\7\2\0\6\7\32\0"+
    "\2\7\1\u01a6\23\7\4\0\3\7\2\0\5\7\1\u01a7"+
    "\32\0\26\7\4\0\3\7\2\0\1\u01a8\5\7\32\0"+
    "\26\7\4\0\3\7\2\0\4\7\1\u01a9\1\7\32\0"+
    "\11\7\1\u01aa\14\7\4\0\3\7\2\0\1\u01ab\5\7"+
    "\32\0\26\7\4\0\3\7\2\0\6\7\32\0\1\u01ac"+
    "\25\7\4\0\3\7\2\0\1\u01ad\5\7\32\0\26\7"+
    "\4\0\3\7\2\0\5\7\1\u01ae\32\0\7\7\1\u01af"+
    "\16\7\4\0\3\7\2\0\6\7\32\0\10\7\1\u01b0"+
    "\14\7\1\u01b1\4\0\3\7\2\0\3\7\1\u01b2\2\7"+
    "\32\0\26\7\4\0\3\7\2\0\6\7\32\0\11\7"+
    "\1\u01b3\14\7\4\0\3\7\2\0\6\7\32\0\3\7"+
    "\1\u01b4\22\7\4\0\3\7\2\0\6\7\32\0\16\7"+
    "\1\u01b5\7\7\4\0\3\7\2\0\3\7\1\u01b6\2\7"+
    "\32\0\26\7\4\0\3\7\2\0\6\7\32\0\1\u01b7"+
    "\25\7\4\0\3\7\2\0\1\u01b8\5\7\32\0\26\7"+
    "\4\0\3\7\2\0\6\7\32\0\1\7\1\u01b9\24\7"+
    "\4\0\3\7\2\0\1\u01ba\5\7\32\0\26\7\4\0"+
    "\3\7\2\0\6\7\32\0\2\7\1\u01bb\23\7\4\0"+
    "\3\7\2\0\6\7\32\0\16\7\1\u01bc\7\7\4\0"+
    "\3\7\2\0\6\7\32\0\2\7\1\u01bd\23\7\4\0"+
    "\3\7\2\0\6\7\32\0\1\7\1\u01be\24\7\4\0"+
    "\3\7\2\0\6\7\32\0\1\u01bf\25\7\4\0\3\7"+
    "\2\0\1\u01c0\5\7\32\0\26\7\4\0\3\7\2\0"+
    "\1\u01c1\5\7\32\0\26\7\4\0\3\7\2\0\1\u01c2"+
    "\5\7\32\0\26\7\4\0\3\7\2\0\6\7\32\0"+
    "\7\7\1\u01c3\16\7\4\0\3\7\2\0\6\7\32\0"+
    "\10\7\1\u01c4\15\7\4\0\3\7\2\0\1\u01c5\5\7"+
    "\32\0\26\7\4\0\3\7\2\0\1\u01c6\5\7\32\0"+
    "\26\7\4\0\3\7\2\0\6\7\32\0\11\7\1\u01c7"+
    "\14\7\4\0\3\7\2\0\6\7\32\0\10\7\1\u01c8"+
    "\15\7\4\0\3\7\2\0\6\7\32\0\4\7\1\u01c9"+
    "\21\7\4\0\3\7\2\0\1\u01ca\5\7\32\0\26\7"+
    "\4\0\3\7\2\0\5\7\1\u01cb\32\0\26\7\4\0"+
    "\3\7\2\0\6\7\32\0\6\7\1\u01cc\17\7\4\0"+
    "\3\7\2\0\5\7\1\u01cd\32\0\11\7\1\u01ce\14\7"+
    "\4\0\3\7\2\0\1\u01cf\5\7\32\0\1\u01d0\25\7"+
    "\4\0\3\7\2\0\6\7\32\0\15\7\1\u01d1\10\7"+
    "\4\0\3\7\2\0\1\u01d2\5\7\32\0\1\u01d3\25\7"+
    "\4\0\3\7\2\0\6\7\32\0\15\7\1\u01d4\10\7"+
    "\4\0\3\7\2\0\6\7\32\0\13\7\1\u01d5\12\7"+
    "\4\0\3\7\2\0\6\7\32\0\1\u01d6\25\7\4\0"+
    "\3\7\2\0\6\7\32\0\16\7\1\u01d7\7\7\4\0"+
    "\3\7\2\0\6\7\32\0\2\7\1\u01d8\3\7\1\u01d9"+
    "\5\7\1\u01da\11\7\4\0\3\7\2\0\6\7\32\0"+
    "\6\7\1\u01db\17\7\4\0\3\7\2\0\6\7\32\0"+
    "\15\7\1\u01dc\10\7\4\0\3\7\2\0\6\7\32\0"+
    "\2\7\1\u01dd\23\7\4\0\3\7\2\0\5\7\1\u01de"+
    "\32\0\26\7\4\0\3\7\2\0\3\7\1\u01df\2\7"+
    "\32\0\26\7\4\0\3\7\2\0\3\7\1\u01e0\2\7"+
    "\32\0\11\7\1\u01e1\14\7\4\0\2\7\1\u01e2\2\0"+
    "\6\7\32\0\26\7\4\0\3\7\2\0\6\7\32\0"+
    "\16\7\1\u01e3\1\7\1\u01e4\5\7\4\0\3\7\2\0"+
    "\6\7\32\0\25\7\1\u01e5\4\0\3\7\2\0\3\7"+
    "\1\u01e6\2\7\32\0\26\7\4\0\3\7\2\0\1\u01e7"+
    "\5\7\32\0\26\7\4\0\3\7\2\0\6\7\32\0"+
    "\1\u01e8\25\7\4\0\3\7\2\0\5\7\1\u01e9\32\0"+
    "\1\7\1\u01ea\24\7\4\0\3\7\2\0\4\7\1\u01eb"+
    "\1\7\32\0\26\7\4\0\3\7\2\0\6\7\32\0"+
    "\2\7\1\u01ec\23\7\4\0\3\7\2\0\6\7\32\0"+
    "\10\7\1\u01ed\15\7\4\0\3\7\2\0\5\7\1\u01ee"+
    "\32\0\26\7\4\0\3\7\2\0\1\u01ef\5\7\32\0"+
    "\10\7\1\u01f0\15\7\4\0\3\7\2\0\1\u01f1\5\7"+
    "\32\0\26\7\4\0\3\7\2\0\1\u01f2\5\7\32\0"+
    "\26\7\4\0\3\7\2\0\6\7\32\0\5\7\1\u01f3"+
    "\20\7\4\0\3\7\2\0\5\7\1\u01f4\32\0\26\7"+
    "\4\0\3\7\2\0\6\7\32\0\5\7\1\u01f5\1\u01f6"+
    "\7\7\1\u01f7\7\7\4\0\3\7\2\0\6\7\32\0"+
    "\7\7\1\u01f8\16\7\4\0\3\7\2\0\6\7\32\0"+
    "\3\7\1\u01f9\22\7\4\0\3\7\2\0\1\u01fa\5\7"+
    "\32\0\26\7\4\0\3\7\2\0\4\7\1\u01fb\1\7"+
    "\32\0\26\7\4\0\3\7\2\0\6\7\32\0\5\7"+
    "\1\u01fc\20\7\4\0\3\7\2\0\4\7\1\u01fd\1\7"+
    "\32\0\2\7\1\u01fe\5\7\1\u01ff\15\7\4\0\3\7"+
    "\2\0\6\7\32\0\1\u0200\25\7\4\0\3\7\2\0"+
    "\6\7\32\0\5\7\1\u0201\20\7\4\0\3\7\2\0"+
    "\1\u0202\5\7\32\0\26\7\4\0\3\7\2\0\6\7"+
    "\32\0\2\7\1\u0203\23\7\4\0\3\7\2\0\6\7"+
    "\32\0\2\7\1\u0204\23\7\4\0\3\7\2\0\6\7"+
    "\32\0\10\7\1\u0205\15\7\4\0\3\7\2\0\1\u0206"+
    "\5\7\32\0\26\7\4\0\3\7\2\0\6\7\32\0"+
    "\2\7\1\u0207\23\7\4\0\3\7\2\0\1\u0208\5\7"+
    "\32\0\26\7\4\0\3\7\2\0\1\u0209\5\7\32\0"+
    "\26\7\4\0\3\7\2\0\6\7\32\0\6\7\1\u020a"+
    "\17\7\4\0\3\7\2\0\5\7\1\u020b\32\0\26\7"+
    "\4\0\3\7\2\0\1\u020c\5\7\32\0\5\7\1\u020d"+
    "\1\u020e\10\7\1\u020f\6\7\4\0\3\7\2\0\6\7"+
    "\32\0\3\7\1\u0210\1\7\1\u0211\20\7\4\0\3\7"+
    "\2\0\6\7\32\0\5\7\1\u0212\20\7\4\0\3\7"+
    "\2\0\6\7\32\0\5\7\1\u0213\20\7\4\0\3\7"+
    "\2\0\6\7\32\0\1\u0214\25\7\4\0\3\7\2\0"+
    "\1\u0215\5\7\32\0\2\7\1\u0216\3\7\1\u0217\17\7"+
    "\4\0\3\7\2\0\6\7\32\0\1\u0218\25\7\4\0"+
    "\3\7\2\0\6\7\32\0\5\7\1\u0219\20\7\4\0"+
    "\3\7\2\0\6\7\32\0\6\7\1\u021a\17\7\4\0"+
    "\3\7\2\0\6\7\32\0\3\7\1\u021b\22\7\4\0"+
    "\3\7\2\0\3\7\1\u021c\2\7\32\0\2\7\1\u021d"+
    "\2\7\1\u021e\13\7\1\u021f\4\7\4\0\3\7\2\0"+
    "\3\7\1\u0220\2\7\32\0\26\7\4\0\3\7\2\0"+
    "\4\7\1\u0221\1\u0222\32\0\26\7\4\0\3\7\2\0"+
    "\5\7\1\u0223\32\0\26\7\4\0\3\7\2\0\6\7"+
    "\32\0\3\7\1\u0224\22\7\4\0\3\7\2\0\6\7"+
    "\32\0\15\7\1\u0225\2\7\1\u0226\5\7\4\0\3\7"+
    "\2\0\6\7\32\0\11\7\1\u0227\14\7\4\0\3\7"+
    "\2\0\6\7\32\0\3\7\1\u0228\22\7\4\0\3\7"+
    "\2\0\6\7\32\0\1\7\1\u0229\24\7\4\0\3\7"+
    "\2\0\6\7\32\0\4\7\1\u022a\21\7\4\0\3\7"+
    "\2\0\1\u022b\5\7\32\0\15\7\1\u022c\10\7\4\0"+
    "\3\7\2\0\1\u022d\5\7\32\0\26\7\4\0\3\7"+
    "\2\0\1\u022e\5\7\32\0\26\7\4\0\3\7\2\0"+
    "\3\7\1\u022f\2\7\32\0\26\7\4\0\3\7\2\0"+
    "\6\7\32\0\11\7\1\u0230\14\7\4\0\3\7\2\0"+
    "\6\7\32\0\3\7\1\u0231\22\7\4\0\3\7\2\0"+
    "\6\7\32\0\5\7\1\u0232\20\7\4\0\3\7\2\0"+
    "\1\u0233\5\7\32\0\26\7\4\0\3\7\2\0\1\u0234"+
    "\5\7\32\0\11\7\1\u0235\14\7\4\0\3\7\2\0"+
    "\1\u0236\5\7\32\0\10\7\1\u0237\15\7\4\0\3\7"+
    "\2\0\1\u0238\5\7\32\0\26\7\4\0\3\7\2\0"+
    "\5\7\1\u0239\32\0\26\7\4\0\3\7\2\0\6\7"+
    "\32\0\2\7\1\u023a\23\7\4\0\3\7\2\0\4\7"+
    "\1\u023b\1\7\32\0\26\7\4\0\3\7\2\0\3\7"+
    "\1\u023c\2\7\32\0\26\7\4\0\3\7\2\0\5\7"+
    "\1\u023d\32\0\26\7\4\0\3\7\2\0\1\u023e\5\7"+
    "\32\0\26\7\4\0\3\7\2\0\1\u023f\5\7\32\0"+
    "\26\7\4\0\3\7\2\0\6\7\32\0\17\7\1\u0240"+
    "\6\7\4\0\3\7\2\0\6\7\32\0\11\7\1\u0241"+
    "\14\7\4\0\3\7\2\0\6\7\32\0\14\7\1\u0242"+
    "\11\7\4\0\3\7\2\0\6\7\32\0\14\7\1\u0243"+
    "\11\7\4\0\3\7\2\0\6\7\32\0\1\u0244\25\7"+
    "\4\0\3\7\2\0\6\7\32\0\17\7\1\u0245\6\7"+
    "\4\0\3\7\2\0\6\7\32\0\7\7\1\u0246\16\7"+
    "\4\0\2\7\1\u0247\2\0\6\7\32\0\26\7\4\0"+
    "\3\7\2\0\5\7\1\u0248\32\0\26\7\4\0\3\7"+
    "\2\0\6\7\32\0\6\7\1\u0249\17\7\4\0\3\7"+
    "\2\0\5\7\1\u024a\32\0\26\7\4\0\3\7\2\0"+
    "\3\7\1\u024b\2\7\32\0\26\7\4\0\3\7\2\0"+
    "\6\7\32\0\2\7\1\u024c\23\7\4\0\3\7\2\0"+
    "\6\7\32\0\6\7\1\u024d\17\7\4\0\3\7\2\0"+
    "\6\7\32\0\5\7\1\u024e\1\u024f\6\7\1\u0250\10\7"+
    "\4\0\3\7\2\0\6\7\32\0\6\7\1\u0251\17\7"+
    "\4\0\3\7\2\0\3\7\1\u0252\2\7\32\0\10\7"+
    "\1\u0253\7\7\1\u0254\1\u0255\4\7\4\0\3\7\2\0"+
    "\6\7\32\0\11\7\1\u0256\14\7\4\0\3\7\2\0"+
    "\6\7\32\0\10\7\1\u0257\15\7\4\0\3\7\2\0"+
    "\6\7\32\0\13\7\1\u0258\12\7\4\0\3\7\2\0"+
    "\3\7\1\u0259\2\7\32\0\26\7\4\0\3\7\2\0"+
    "\4\7\1\u025a\1\7\32\0\26\7\4\0\3\7\2\0"+
    "\6\7\32\0\10\7\1\u025b\15\7\4\0\3\7\2\0"+
    "\6\7\32\0\2\7\1\u025c\23\7\4\0\3\7\2\0"+
    "\6\7\32\0\2\7\1\u025d\23\7\4\0\3\7\2\0"+
    "\3\7\1\u025e\2\7\32\0\3\7\1\u025f\22\7\4\0"+
    "\3\7\2\0\5\7\1\u0260\32\0\26\7\4\0\3\7"+
    "\2\0\6\7\32\0\14\7\1\u0261\11\7\4\0\3\7"+
    "\2\0\6\7\32\0\7\7\1\u0262\16\7\4\0\3\7"+
    "\2\0\6\7\32\0\16\7\1\u0263\7\7\4\0\3\7"+
    "\2\0\6\7\32\0\6\7\1\u0264\17\7\4\0\3\7"+
    "\2\0\6\7\32\0\2\7\1\u0265\23\7\4\0\3\7"+
    "\2\0\4\7\1\u0266\1\7\32\0\26\7\4\0\3\7"+
    "\2\0\4\7\1\u0267\1\7\32\0\26\7\4\0\3\7"+
    "\2\0\6\7\32\0\1\7\1\u0268\24\7\4\0\3\7"+
    "\2\0\4\7\1\u0269\1\7\32\0\26\7\4\0\3\7"+
    "\2\0\6\7\32\0\4\7\1\u026a\1\7\1\u026b\17\7"+
    "\4\0\3\7\2\0\6\7\32\0\17\7\1\u026c\6\7"+
    "\4\0\3\7\2\0\6\7\32\0\6\7\1\u026d\17\7"+
    "\4\0\3\7\2\0\6\7\32\0\6\7\1\u026e\17\7"+
    "\4\0\3\7\2\0\5\7\1\u026f\32\0\26\7\4\0"+
    "\3\7\2\0\6\7\32\0\1\u0270\25\7\4\0\3\7"+
    "\2\0\6\7\32\0\5\7\1\u0271\20\7\4\0\3\7"+
    "\2\0\1\u0272\5\7\32\0\26\7\4\0\3\7\2\0"+
    "\6\7\32\0\20\7\1\u0273\5\7\4\0\3\7\2\0"+
    "\3\7\1\u0274\2\7\32\0\26\7\4\0\3\7\2\0"+
    "\1\u0275\5\7\32\0\2\7\1\u0276\23\7\4\0\3\7"+
    "\2\0\1\u0277\4\7\1\u0278\32\0\26\7\4\0\3\7"+
    "\2\0\6\7\32\0\5\7\1\u0279\20\7\4\0\3\7"+
    "\2\0\3\7\1\u027a\2\7\32\0\26\7\4\0\1\u019b"+
    "\2\0\1\u019b\3\0\1\u019b\67\0\1\u019b\2\0\1\u019b"+
    "\1\u027b\2\0\1\u019b\74\0\1\u027c\71\0\3\7\2\0"+
    "\6\7\32\0\21\7\1\u027d\4\7\4\0\3\7\2\0"+
    "\6\7\32\0\15\7\1\u027e\10\7\4\0\3\7\2\0"+
    "\4\7\1\u027f\1\7\32\0\26\7\4\0\3\7\2\0"+
    "\6\7\32\0\3\7\1\u0280\22\7\4\0\3\7\2\0"+
    "\6\7\32\0\1\u0281\25\7\4\0\3\7\2\0\6\7"+
    "\32\0\15\7\1\u0282\10\7\4\0\3\7\2\0\6\7"+
    "\32\0\2\7\1\u0283\23\7\4\0\3\7\2\0\6\7"+
    "\32\0\11\7\1\u0284\14\7\4\0\3\7\2\0\6\7"+
    "\32\0\3\7\1\u0285\22\7\4\0\3\7\2\0\6\7"+
    "\32\0\3\7\1\u0286\22\7\4\0\3\7\2\0\6\7"+
    "\32\0\10\7\1\u0287\15\7\4\0\3\7\2\0\6\7"+
    "\32\0\5\7\1\u0288\20\7\4\0\3\7\2\0\6\7"+
    "\32\0\3\7\1\u0289\22\7\4\0\3\7\2\0\4\7"+
    "\1\u028a\1\7\32\0\26\7\4\0\3\7\2\0\1\u028b"+
    "\5\7\32\0\26\7\4\0\3\7\2\0\3\7\1\u028c"+
    "\2\7\32\0\26\7\4\0\3\7\2\0\4\7\1\u028d"+
    "\1\7\32\0\26\7\4\0\3\7\2\0\6\7\32\0"+
    "\10\7\1\u028e\15\7\4\0\3\7\2\0\6\7\32\0"+
    "\21\7\1\u028f\4\7\4\0\3\7\2\0\1\u0290\5\7"+
    "\32\0\26\7\4\0\3\7\2\0\6\7\32\0\16\7"+
    "\1\u0291\7\7\4\0\3\7\2\0\6\7\32\0\2\7"+
    "\1\u0292\23\7\4\0\3\7\2\0\6\7\32\0\3\7"+
    "\1\u0293\22\7\4\0\3\7\2\0\6\7\32\0\11\7"+
    "\1\u0294\14\7\4\0\3\7\2\0\5\7\1\u0295\32\0"+
    "\26\7\4\0\3\7\2\0\4\7\1\u0296\1\7\32\0"+
    "\26\7\4\0\3\7\2\0\5\7\1\u0297\32\0\26\7"+
    "\4\0\3\7\2\0\6\7\32\0\3\7\1\u0298\22\7"+
    "\4\0\3\7\2\0\3\7\1\u0299\2\7\32\0\26\7"+
    "\4\0\3\7\2\0\6\7\32\0\10\7\1\u029a\15\7"+
    "\4\0\3\7\2\0\6\7\32\0\6\7\1\u029b\17\7"+
    "\4\0\3\7\2\0\6\7\32\0\3\7\1\u029c\22\7"+
    "\4\0\3\7\2\0\6\7\32\0\3\7\1\u029d\22\7"+
    "\4\0\3\7\2\0\6\7\32\0\10\7\1\u029e\15\7"+
    "\4\0\3\7\2\0\5\7\1\u029f\32\0\26\7\4\0"+
    "\3\7\2\0\6\7\32\0\2\7\1\u02a0\23\7\4\0"+
    "\3\7\2\0\5\7\1\u02a1\32\0\26\7\4\0\3\7"+
    "\2\0\6\7\32\0\3\7\1\u02a2\22\7\4\0\3\7"+
    "\2\0\6\7\32\0\1\u02a3\25\7\4\0\3\7\2\0"+
    "\6\7\32\0\20\7\1\u02a4\5\7\4\0\3\7\2\0"+
    "\6\7\32\0\3\7\1\u02a5\22\7\4\0\3\7\2\0"+
    "\4\7\1\u02a6\1\7\32\0\26\7\4\0\3\7\2\0"+
    "\6\7\32\0\13\7\1\u02a7\12\7\4\0\3\7\2\0"+
    "\5\7\1\u02a8\32\0\26\7\4\0\3\7\2\0\6\7"+
    "\32\0\11\7\1\u02a9\14\7\4\0\3\7\2\0\3\7"+
    "\1\u02aa\2\7\32\0\26\7\4\0\3\7\2\0\6\7"+
    "\32\0\3\7\1\u02ab\5\7\1\u02ac\14\7\4\0\3\7"+
    "\2\0\6\7\32\0\10\7\1\u02ad\15\7\4\0\3\7"+
    "\2\0\6\7\32\0\10\7\1\u02ae\15\7\4\0\3\7"+
    "\2\0\6\7\32\0\5\7\1\u02af\20\7\4\0\3\7"+
    "\2\0\1\u02b0\5\7\32\0\26\7\4\0\3\7\2\0"+
    "\6\7\32\0\6\7\1\u02b1\17\7\4\0\3\7\2\0"+
    "\6\7\32\0\5\7\1\u02b2\20\7\4\0\3\7\2\0"+
    "\5\7\1\u02b3\32\0\26\7\4\0\3\7\2\0\6\7"+
    "\32\0\6\7\1\u02b4\17\7\4\0\3\7\2\0\6\7"+
    "\32\0\16\7\1\u02b5\7\7\4\0\3\7\2\0\4\7"+
    "\1\u02b6\1\7\32\0\26\7\4\0\3\7\2\0\6\7"+
    "\32\0\5\7\1\u02b7\4\7\1\u02b8\13\7\4\0\3\7"+
    "\2\0\6\7\32\0\2\7\1\u02b9\23\7\4\0\3\7"+
    "\2\0\6\7\32\0\2\7\1\u02ba\23\7\4\0\3\7"+
    "\2\0\6\7\32\0\3\7\1\u02bb\22\7\4\0\3\7"+
    "\2\0\6\7\32\0\3\7\1\u02bc\4\7\1\u02bd\15\7"+
    "\4\0\3\7\2\0\3\7\1\u02be\2\7\32\0\26\7"+
    "\4\0\3\7\2\0\6\7\32\0\11\7\1\u02bf\14\7"+
    "\4\0\3\7\2\0\6\7\32\0\3\7\1\u02c0\22\7"+
    "\4\0\3\7\2\0\6\7\32\0\14\7\1\u02c1\11\7"+
    "\4\0\3\7\2\0\6\7\32\0\3\7\1\u02c2\22\7"+
    "\4\0\3\7\2\0\1\u02c3\5\7\32\0\26\7\4\0"+
    "\3\7\2\0\6\7\32\0\13\7\1\u02c4\12\7\4\0"+
    "\3\7\2\0\6\7\32\0\10\7\1\u02c5\15\7\4\0"+
    "\3\7\2\0\4\7\1\u02c6\1\7\32\0\26\7\4\0"+
    "\3\7\2\0\6\7\32\0\2\7\1\u02c7\23\7\4\0"+
    "\3\7\2\0\6\7\32\0\6\7\1\u02c8\17\7\4\0"+
    "\3\7\2\0\6\7\32\0\5\7\1\u02c9\20\7\4\0"+
    "\3\7\2\0\6\7\32\0\11\7\1\u02ca\14\7\4\0"+
    "\3\7\2\0\6\7\32\0\3\7\1\u02cb\22\7\4\0"+
    "\3\7\2\0\6\7\32\0\11\7\1\u02cc\14\7\4\0"+
    "\3\7\2\0\3\7\1\u02cd\2\7\32\0\26\7\4\0"+
    "\3\7\2\0\3\7\1\u02ce\2\7\32\0\26\7\4\0"+
    "\3\7\2\0\6\7\32\0\2\7\1\u02cf\23\7\4\0"+
    "\3\7\2\0\6\7\32\0\11\7\1\u02d0\14\7\4\0"+
    "\3\7\2\0\1\u02d1\5\7\32\0\26\7\4\0\3\7"+
    "\2\0\5\7\1\u02d2\32\0\26\7\4\0\3\7\2\0"+
    "\6\7\32\0\20\7\1\u02d3\5\7\4\0\3\7\2\0"+
    "\6\7\32\0\1\7\1\u02d4\24\7\4\0\3\7\2\0"+
    "\1\u02d5\5\7\32\0\26\7\4\0\3\7\2\0\5\7"+
    "\1\u02d6\32\0\26\7\4\0\3\7\2\0\6\7\32\0"+
    "\3\7\1\u02d7\22\7\4\0\3\7\2\0\6\7\32\0"+
    "\2\7\1\u02d8\23\7\4\0\3\7\2\0\6\7\32\0"+
    "\1\u02d9\7\7\1\u02da\15\7\4\0\3\7\2\0\6\7"+
    "\32\0\1\u02db\25\7\4\0\3\7\2\0\1\u02dc\5\7"+
    "\32\0\26\7\4\0\3\7\2\0\6\7\32\0\10\7"+
    "\1\u02dd\15\7\4\0\3\7\2\0\6\7\32\0\2\7"+
    "\1\u02de\23\7\4\0\3\7\2\0\1\u02df\5\7\32\0"+
    "\26\7\4\0\3\7\2\0\5\7\1\u02e0\32\0\26\7"+
    "\4\0\3\7\2\0\6\7\32\0\1\u02e1\25\7\4\0"+
    "\3\7\2\0\6\7\32\0\2\7\1\u02e2\23\7\4\0"+
    "\3\7\2\0\6\7\32\0\5\7\1\u02e3\20\7\4\0"+
    "\3\7\2\0\6\7\32\0\14\7\1\u02e4\11\7\4\0"+
    "\2\7\1\u02e5\2\0\6\7\32\0\1\u02e6\25\7\4\0"+
    "\3\7\2\0\1\u02e7\5\7\32\0\26\7\4\0\3\7"+
    "\2\0\6\7\32\0\1\u02e8\10\7\1\u02e9\14\7\4\0"+
    "\3\7\2\0\6\7\32\0\2\7\1\u02ea\23\7\4\0"+
    "\3\7\2\0\1\u02eb\5\7\32\0\26\7\4\0\3\7"+
    "\2\0\6\7\32\0\2\7\1\u02ec\23\7\4\0\3\7"+
    "\2\0\6\7\32\0\20\7\1\u02ed\5\7\4\0\3\7"+
    "\2\0\6\7\32\0\1\u02ee\25\7\4\0\3\7\2\0"+
    "\1\u02ef\5\7\32\0\26\7\4\0\3\7\2\0\1\u02f0"+
    "\5\7\32\0\26\7\4\0\3\7\2\0\4\7\1\u02f1"+
    "\1\7\32\0\26\7\4\0\3\7\2\0\6\7\32\0"+
    "\11\7\1\u02f2\14\7\4\0\3\7\2\0\3\7\1\u02f3"+
    "\2\7\32\0\26\7\4\0\3\7\2\0\5\7\1\u02f4"+
    "\32\0\26\7\4\0\3\7\2\0\6\7\32\0\3\7"+
    "\1\u02f5\22\7\4\0\3\7\2\0\4\7\1\u02f6\1\7"+
    "\32\0\26\7\4\0\3\7\2\0\6\7\32\0\3\7"+
    "\1\u02f7\22\7\4\0\3\7\2\0\6\7\32\0\2\7"+
    "\1\u02f8\23\7\4\0\3\7\2\0\6\7\32\0\1\7"+
    "\1\u02f9\21\7\1\u02fa\1\7\1\u02fb\4\0\3\7\2\0"+
    "\6\7\32\0\10\7\1\u02fc\15\7\4\0\3\7\2\0"+
    "\5\7\1\u02fd\32\0\26\7\4\0\3\7\2\0\1\u02fe"+
    "\5\7\32\0\26\7\4\0\3\7\2\0\6\7\32\0"+
    "\3\7\1\u02ff\22\7\4\0\3\7\2\0\6\7\32\0"+
    "\23\7\1\u0300\2\7\4\0\3\7\2\0\6\7\32\0"+
    "\6\7\1\u0301\17\7\4\0\3\7\2\0\6\7\32\0"+
    "\3\7\1\u0302\12\7\1\u0303\7\7\4\0\3\7\2\0"+
    "\3\7\1\u0304\2\7\32\0\3\7\1\u0305\22\7\4\0"+
    "\3\7\2\0\4\7\1\u0306\1\7\32\0\26\7\4\0"+
    "\3\7\2\0\6\7\32\0\11\7\1\u0307\14\7\4\0"+
    "\3\7\2\0\6\7\32\0\2\7\1\u0308\23\7\4\0"+
    "\3\7\2\0\6\7\32\0\2\7\1\u0309\23\7\4\0"+
    "\3\7\2\0\6\7\32\0\1\u030a\25\7\4\0\3\7"+
    "\2\0\6\7\32\0\1\7\1\u030b\24\7\4\0\3\7"+
    "\2\0\1\u030c\5\7\32\0\26\7\4\0\3\7\2\0"+
    "\3\7\1\u030d\2\7\32\0\26\7\4\0\3\7\2\0"+
    "\4\7\1\u030e\1\7\32\0\26\7\4\0\3\7\2\0"+
    "\6\7\32\0\14\7\1\u030f\11\7\4\0\3\7\2\0"+
    "\6\7\32\0\5\7\1\u0310\20\7\4\0\3\7\2\0"+
    "\5\7\1\u0311\32\0\26\7\4\0\3\7\2\0\1\u0312"+
    "\5\7\32\0\26\7\4\0\3\7\2\0\6\7\32\0"+
    "\11\7\1\u0313\14\7\4\0\3\7\2\0\6\7\32\0"+
    "\11\7\1\u0314\14\7\4\0\3\7\2\0\6\7\32\0"+
    "\1\u0315\25\7\4\0\3\7\2\0\1\u0316\5\7\32\0"+
    "\26\7\4\0\3\7\2\0\6\7\32\0\11\7\1\u0317"+
    "\14\7\4\0\3\7\2\0\6\7\32\0\1\u0318\25\7"+
    "\4\0\3\7\2\0\1\u0319\5\7\32\0\26\7\4\0"+
    "\3\7\2\0\6\7\32\0\2\7\1\u031a\23\7\4\0"+
    "\3\7\2\0\6\7\32\0\3\7\1\u031b\22\7\4\0"+
    "\3\7\2\0\6\7\32\0\1\u031c\25\7\4\0\3\7"+
    "\2\0\6\7\32\0\11\7\1\u031d\14\7\4\0\3\7"+
    "\2\0\6\7\32\0\2\7\1\u031e\23\7\4\0\3\7"+
    "\2\0\6\7\32\0\2\7\1\u031f\23\7\4\0\3\7"+
    "\2\0\6\7\32\0\1\u0320\25\7\4\0\3\7\2\0"+
    "\6\7\32\0\2\7\1\u0321\23\7\4\0\3\7\2\0"+
    "\6\7\32\0\15\7\1\u0322\10\7\4\0\3\7\2\0"+
    "\6\7\32\0\22\7\1\u0323\3\7\4\0\3\7\2\0"+
    "\1\u0324\5\7\32\0\26\7\4\0\3\7\2\0\1\u0325"+
    "\5\7\32\0\26\7\4\0\3\7\2\0\1\u0326\5\7"+
    "\32\0\26\7\4\0\3\7\2\0\1\u0327\5\7\32\0"+
    "\26\7\4\0\3\7\2\0\6\7\32\0\11\7\1\u0328"+
    "\14\7\4\0\3\7\2\0\1\u0329\5\7\32\0\26\7"+
    "\4\0\3\7\2\0\6\7\32\0\7\7\1\u032a\16\7"+
    "\4\0\3\7\2\0\6\7\32\0\7\7\1\u032b\16\7"+
    "\4\0\3\7\2\0\5\7\1\u032c\32\0\26\7\4\0"+
    "\3\7\2\0\6\7\32\0\2\7\1\u032d\23\7\4\0"+
    "\3\7\2\0\6\7\32\0\1\u032e\25\7\4\0\3\7"+
    "\2\0\1\u032f\5\7\32\0\26\7\4\0\3\7\2\0"+
    "\6\7\32\0\11\7\1\u0330\14\7\4\0\3\7\2\0"+
    "\6\7\32\0\7\7\1\u0331\16\7\4\0\3\7\2\0"+
    "\6\7\32\0\7\7\1\u0332\16\7\4\0\3\7\2\0"+
    "\6\7\32\0\2\7\1\u0333\23\7\4\0\3\7\2\0"+
    "\6\7\32\0\2\7\1\u0334\23\7\4\0\3\7\2\0"+
    "\6\7\32\0\10\7\1\u0335\15\7\4\0\3\7\2\0"+
    "\6\7\32\0\2\7\1\u0336\23\7\4\0\3\7\2\0"+
    "\6\7\32\0\1\7\1\u0337\24\7\4\0\3\7\2\0"+
    "\6\7\32\0\11\7\1\u0338\14\7\4\0\3\7\2\0"+
    "\6\7\32\0\3\7\1\u0339\22\7\4\0\3\7\2\0"+
    "\6\7\32\0\22\7\1\u033a\3\7\4\0\3\7\2\0"+
    "\6\7\32\0\2\7\1\u033b\23\7\4\0\1\u027b\2\0"+
    "\1\u027b\3\0\1\u027b\157\0\1\u033c\6\0\3\7\2\0"+
    "\5\7\1\u033d\32\0\26\7\4\0\3\7\2\0\1\u033e"+
    "\5\7\32\0\26\7\4\0\3\7\2\0\6\7\32\0"+
    "\2\7\1\u033f\23\7\4\0\3\7\2\0\3\7\1\u0340"+
    "\2\7\32\0\26\7\4\0\3\7\2\0\6\7\32\0"+
    "\6\7\1\u0341\17\7\4\0\3\7\2\0\6\7\32\0"+
    "\2\7\1\u0342\23\7\4\0\3\7\2\0\6\7\32\0"+
    "\5\7\1\u0343\20\7\4\0\3\7\2\0\6\7\32\0"+
    "\22\7\1\u0344\3\7\4\0\3\7\2\0\6\7\32\0"+
    "\11\7\1\u0345\14\7\4\0\3\7\2\0\6\7\32\0"+
    "\1\u0346\25\7\4\0\3\7\2\0\3\7\1\u0347\2\7"+
    "\32\0\26\7\4\0\3\7\2\0\6\7\32\0\5\7"+
    "\1\u0348\20\7\4\0\3\7\2\0\6\7\32\0\6\7"+
    "\1\u0349\17\7\4\0\3\7\2\0\1\u034a\5\7\32\0"+
    "\26\7\4\0\3\7\2\0\6\7\32\0\17\7\1\u034b"+
    "\6\7\4\0\3\7\2\0\6\7\32\0\10\7\1\u034c"+
    "\15\7\4\0\3\7\2\0\1\u034d\5\7\32\0\26\7"+
    "\4\0\3\7\2\0\3\7\1\u034e\2\7\32\0\26\7"+
    "\4\0\3\7\2\0\6\7\32\0\1\u034f\25\7\4\0"+
    "\3\7\2\0\6\7\32\0\10\7\1\u0350\15\7\4\0"+
    "\3\7\2\0\6\7\32\0\3\7\1\u0351\22\7\4\0"+
    "\3\7\2\0\6\7\32\0\1\u0352\25\7\4\0\3\7"+
    "\2\0\6\7\32\0\2\7\1\u0353\23\7\4\0\3\7"+
    "\2\0\3\7\1\u0354\2\7\32\0\26\7\4\0\3\7"+
    "\2\0\4\7\1\u0355\1\7\32\0\26\7\4\0\3\7"+
    "\2\0\1\u0356\5\7\32\0\26\7\4\0\3\7\2\0"+
    "\6\7\32\0\10\7\1\u0357\15\7\4\0\3\7\2\0"+
    "\6\7\32\0\11\7\1\u0358\14\7\4\0\3\7\2\0"+
    "\6\7\32\0\3\7\1\u0359\22\7\4\0\3\7\2\0"+
    "\6\7\32\0\1\u035a\25\7\4\0\3\7\2\0\6\7"+
    "\32\0\3\7\1\u035b\22\7\4\0\3\7\2\0\5\7"+
    "\1\u035c\32\0\26\7\4\0\3\7\2\0\6\7\32\0"+
    "\1\u035d\25\7\4\0\3\7\2\0\1\u035e\5\7\32\0"+
    "\26\7\4\0\3\7\2\0\3\7\1\u035f\2\7\32\0"+
    "\26\7\4\0\3\7\2\0\6\7\32\0\10\7\1\u0360"+
    "\15\7\4\0\3\7\2\0\6\7\32\0\11\7\1\u0361"+
    "\14\7\4\0\3\7\2\0\3\7\1\u0362\2\7\32\0"+
    "\26\7\4\0\3\7\2\0\3\7\1\u0363\2\7\32\0"+
    "\26\7\4\0\3\7\2\0\6\7\32\0\3\7\1\u0364"+
    "\22\7\4\0\3\7\2\0\6\7\32\0\11\7\1\u0365"+
    "\14\7\4\0\3\7\2\0\6\7\32\0\5\7\1\u0366"+
    "\20\7\4\0\3\7\2\0\6\7\32\0\1\u0367\25\7"+
    "\4\0\3\7\2\0\5\7\1\u0368\32\0\1\u0369\25\7"+
    "\4\0\3\7\2\0\6\7\32\0\11\7\1\u036a\14\7"+
    "\4\0\3\7\2\0\6\7\32\0\10\7\1\u036b\15\7"+
    "\4\0\3\7\2\0\1\u036c\5\7\32\0\26\7\4\0"+
    "\3\7\2\0\6\7\32\0\1\u036d\25\7\4\0\3\7"+
    "\2\0\6\7\32\0\2\7\1\u036e\23\7\4\0\3\7"+
    "\2\0\6\7\32\0\10\7\1\u036f\15\7\4\0\3\7"+
    "\2\0\6\7\32\0\11\7\1\u0370\14\7\4\0\3\7"+
    "\2\0\1\u0371\5\7\32\0\26\7\4\0\3\7\2\0"+
    "\3\7\1\u0372\2\7\32\0\26\7\4\0\3\7\2\0"+
    "\6\7\32\0\11\7\1\u0373\14\7\4\0\3\7\2\0"+
    "\6\7\32\0\3\7\1\u0374\22\7\4\0\3\7\2\0"+
    "\6\7\32\0\22\7\1\u0375\3\7\4\0\3\7\2\0"+
    "\6\7\32\0\6\7\1\u0376\17\7\4\0\3\7\2\0"+
    "\6\7\32\0\2\7\1\u0377\23\7\4\0\3\7\2\0"+
    "\1\u0378\5\7\32\0\26\7\4\0\3\7\2\0\1\u0379"+
    "\5\7\32\0\26\7\4\0\3\7\2\0\6\7\32\0"+
    "\3\7\1\u037a\22\7\4\0\3\7\2\0\6\7\32\0"+
    "\1\u037b\25\7\4\0\3\7\2\0\4\7\1\u037c\1\7"+
    "\32\0\26\7\4\0\3\7\2\0\6\7\32\0\11\7"+
    "\1\u037d\14\7\4\0\3\7\2\0\6\7\32\0\2\7"+
    "\1\u037e\23\7\4\0\3\7\2\0\1\u037f\5\7\32\0"+
    "\26\7\4\0\3\7\2\0\6\7\32\0\10\7\1\u0380"+
    "\15\7\4\0\3\7\2\0\6\7\32\0\11\7\1\u0381"+
    "\14\7\4\0\3\7\2\0\6\7\32\0\10\7\1\u0382"+
    "\15\7\4\0\3\7\2\0\6\7\32\0\1\7\1\u0383"+
    "\24\7\4\0\3\7\2\0\6\7\32\0\2\7\1\u0384"+
    "\23\7\4\0\3\7\2\0\6\7\32\0\3\7\1\u0385"+
    "\22\7\4\0\3\7\2\0\6\7\32\0\5\7\1\u0386"+
    "\20\7\4\0\3\7\2\0\6\7\32\0\20\7\1\u0387"+
    "\5\7\4\0\3\7\2\0\5\7\1\u0388\32\0\26\7"+
    "\4\0\3\7\2\0\6\7\32\0\1\u0389\25\7\4\0"+
    "\3\7\2\0\6\7\32\0\10\7\1\u038a\15\7\4\0"+
    "\3\7\2\0\6\7\32\0\11\7\1\u038b\14\7\4\0"+
    "\3\7\2\0\6\7\32\0\3\7\1\u038c\22\7\4\0"+
    "\3\7\2\0\6\7\32\0\1\u038d\25\7\4\0\3\7"+
    "\2\0\6\7\32\0\1\7\1\u038e\24\7\4\0\3\7"+
    "\2\0\6\7\32\0\3\7\1\u038f\22\7\4\0\3\7"+
    "\2\0\3\7\1\u0390\2\7\32\0\26\7\4\0\3\7"+
    "\2\0\6\7\32\0\3\7\1\u0391\22\7\4\0\3\7"+
    "\2\0\1\u0392\5\7\32\0\26\7\4\0\3\7\2\0"+
    "\6\7\32\0\10\7\1\u0393\15\7\4\0\3\7\2\0"+
    "\6\7\32\0\1\7\1\u0394\24\7\4\0\3\7\2\0"+
    "\1\u0395\5\7\32\0\26\7\4\0\3\7\2\0\6\7"+
    "\32\0\15\7\1\u0396\10\7\4\0\3\7\2\0\5\7"+
    "\1\u0397\32\0\26\7\4\0\3\7\2\0\6\7\32\0"+
    "\6\7\1\u0398\17\7\4\0\3\7\2\0\6\7\32\0"+
    "\6\7\1\u0399\17\7\4\0\3\7\2\0\6\7\32\0"+
    "\11\7\1\u039a\14\7\4\0\3\7\2\0\3\7\1\u039b"+
    "\2\7\32\0\26\7\4\0\3\7\2\0\6\7\32\0"+
    "\3\7\1\u039c\22\7\4\0\3\7\2\0\6\7\32\0"+
    "\3\7\1\u039d\22\7\4\0\3\7\2\0\3\7\1\u039e"+
    "\2\7\32\0\26\7\4\0\3\7\2\0\6\7\32\0"+
    "\2\7\1\u039f\23\7\4\0\3\7\2\0\6\7\32\0"+
    "\5\7\1\u03a0\20\7\4\0\3\7\2\0\6\7\32\0"+
    "\5\7\1\u03a1\20\7\4\0\3\7\2\0\6\7\32\0"+
    "\2\7\1\u03a2\23\7\4\0\3\7\2\0\6\7\32\0"+
    "\2\7\1\u03a3\23\7\4\0\3\7\2\0\6\7\32\0"+
    "\16\7\1\u03a4\7\7\4\0\3\7\2\0\6\7\32\0"+
    "\10\7\1\u03a5\15\7\4\0\3\7\2\0\6\7\32\0"+
    "\2\7\1\u03a6\23\7\4\0\2\7\1\u03a7\2\0\6\7"+
    "\32\0\26\7\4\0\3\7\2\0\6\7\32\0\1\u03a8"+
    "\25\7\4\0\3\7\2\0\6\7\32\0\20\7\1\u03a9"+
    "\5\7\4\0\3\7\2\0\4\7\1\u03aa\1\7\32\0"+
    "\26\7\4\0\3\7\2\0\3\7\1\u03ab\2\7\32\0"+
    "\26\7\4\0\3\7\2\0\6\7\32\0\1\u03ac\25\7"+
    "\4\0\3\7\2\0\6\7\32\0\2\7\1\u03ad\23\7"+
    "\4\0\3\7\2\0\6\7\32\0\1\u03ae\25\7\4\0"+
    "\3\7\2\0\6\7\32\0\5\7\1\u03af\13\7\1\u03b0"+
    "\4\7\4\0\3\7\2\0\1\u03b1\5\7\32\0\26\7"+
    "\4\0\3\7\2\0\6\7\32\0\5\7\1\u03b2\20\7"+
    "\4\0\3\7\2\0\6\7\32\0\2\7\1\u03b3\23\7"+
    "\4\0\3\7\2\0\6\7\32\0\1\7\1\u03b4\24\7"+
    "\4\0\3\7\2\0\6\7\32\0\1\u03b5\25\7\4\0"+
    "\3\7\2\0\6\7\32\0\11\7\1\u03b6\14\7\4\0"+
    "\3\7\2\0\6\7\32\0\2\7\1\u03b7\23\7\4\0"+
    "\3\7\2\0\6\7\32\0\11\7\1\u03b8\14\7\4\0"+
    "\3\7\2\0\1\u03b9\5\7\32\0\26\7\4\0\3\7"+
    "\2\0\6\7\32\0\15\7\1\u03ba\10\7\4\0\3\7"+
    "\2\0\1\u03bb\5\7\32\0\26\7\4\0\3\7\2\0"+
    "\1\u03bc\5\7\32\0\26\7\4\0\3\7\2\0\3\7"+
    "\1\u03bd\2\7\32\0\26\7\4\0\3\7\2\0\6\7"+
    "\32\0\6\7\1\u03be\17\7\4\0\3\7\2\0\6\7"+
    "\32\0\1\u03bf\25\7\4\0\3\7\2\0\5\7\1\u03c0"+
    "\32\0\26\7\4\0\3\7\2\0\6\7\32\0\3\7"+
    "\1\u03c1\22\7\4\0\3\7\2\0\6\7\32\0\5\7"+
    "\1\u03c2\20\7\4\0\3\7\2\0\6\7\32\0\3\7"+
    "\1\u03c3\22\7\4\0\3\7\2\0\6\7\32\0\1\7"+
    "\1\u03c4\24\7\4\0\3\7\2\0\6\7\32\0\3\7"+
    "\1\u03c5\22\7\4\0\3\7\2\0\5\7\1\u03c6\32\0"+
    "\26\7\4\0\3\7\2\0\6\7\32\0\11\7\1\u03c7"+
    "\14\7\4\0\3\7\2\0\5\7\1\u03c8\32\0\26\7"+
    "\4\0\3\7\2\0\6\7\32\0\10\7\1\u03c9\15\7"+
    "\4\0\3\7\2\0\6\7\32\0\2\7\1\u03ca\23\7"+
    "\4\0\3\7\2\0\6\7\32\0\21\7\1\u03cb\4\7"+
    "\4\0\3\7\2\0\3\7\1\u03cc\2\7\32\0\26\7"+
    "\4\0\3\7\2\0\1\u03cd\5\7\32\0\26\7\4\0"+
    "\3\7\2\0\1\u03ce\5\7\32\0\26\7\4\0\3\7"+
    "\2\0\6\7\32\0\1\7\1\u03cf\24\7\4\0\3\7"+
    "\2\0\6\7\32\0\5\7\1\u03d0\20\7\4\0\3\7"+
    "\2\0\3\7\1\u03d1\2\7\32\0\26\7\4\0\3\7"+
    "\2\0\6\7\32\0\1\u03d2\25\7\4\0\3\7\2\0"+
    "\6\7\32\0\11\7\1\u03d3\14\7\4\0\3\7\2\0"+
    "\1\u03d4\5\7\32\0\26\7\4\0\3\7\2\0\6\7"+
    "\32\0\16\7\1\u03d5\7\7\4\0\3\7\2\0\6\7"+
    "\32\0\1\u03d6\25\7\4\0\3\7\2\0\6\7\32\0"+
    "\1\u03d7\25\7\11\0\1\u03d8\71\0\3\7\2\0\1\u03d9"+
    "\5\7\32\0\26\7\4\0\3\7\2\0\6\7\32\0"+
    "\1\u03da\25\7\4\0\3\7\2\0\6\7\32\0\2\7"+
    "\1\u03db\23\7\4\0\3\7\2\0\6\7\32\0\11\7"+
    "\1\u03dc\14\7\4\0\3\7\2\0\6\7\32\0\6\7"+
    "\1\u03dd\17\7\4\0\3\7\2\0\5\7\1\u03de\32\0"+
    "\26\7\4\0\3\7\2\0\6\7\32\0\1\u03df\25\7"+
    "\4\0\3\7\2\0\6\7\32\0\2\7\1\u03e0\23\7"+
    "\4\0\3\7\2\0\6\7\32\0\14\7\1\u03e1\11\7"+
    "\4\0\3\7\2\0\3\7\1\u03e2\2\7\32\0\26\7"+
    "\4\0\3\7\2\0\6\7\32\0\2\7\1\u03e3\23\7"+
    "\4\0\3\7\2\0\6\7\32\0\2\7\1\u03e4\23\7"+
    "\4\0\3\7\2\0\6\7\32\0\16\7\1\u03e5\7\7"+
    "\4\0\3\7\2\0\6\7\32\0\16\7\1\u03e6\7\7"+
    "\4\0\3\7\2\0\6\7\32\0\11\7\1\u03e7\14\7"+
    "\4\0\3\7\2\0\6\7\32\0\2\7\1\u03e8\23\7"+
    "\4\0\3\7\2\0\6\7\32\0\11\7\1\u03e9\14\7"+
    "\4\0\3\7\2\0\6\7\32\0\2\7\1\u03ea\23\7"+
    "\4\0\3\7\2\0\6\7\32\0\6\7\1\u03eb\17\7"+
    "\4\0\3\7\2\0\6\7\32\0\13\7\1\u03ec\1\7"+
    "\1\u03ed\10\7\4\0\3\7\2\0\1\u03ee\5\7\32\0"+
    "\26\7\4\0\3\7\2\0\5\7\1\u03ef\32\0\26\7"+
    "\4\0\3\7\2\0\1\u03f0\5\7\32\0\1\u03f1\25\7"+
    "\4\0\3\7\2\0\6\7\32\0\2\7\1\u03f2\23\7"+
    "\4\0\3\7\2\0\6\7\32\0\5\7\1\u03f3\20\7"+
    "\4\0\3\7\2\0\6\7\32\0\5\7\1\u03f4\20\7"+
    "\4\0\3\7\2\0\6\7\32\0\13\7\1\u03f5\12\7"+
    "\4\0\3\7\2\0\6\7\32\0\6\7\1\u03f6\17\7"+
    "\4\0\3\7\2\0\3\7\1\u03f7\2\7\32\0\26\7"+
    "\4\0\3\7\2\0\6\7\32\0\1\u03f8\25\7\4\0"+
    "\3\7\2\0\6\7\32\0\12\7\1\u03f9\13\7\4\0"+
    "\3\7\2\0\6\7\32\0\1\u03fa\25\7\4\0\3\7"+
    "\2\0\6\7\32\0\2\7\1\u03fb\23\7\4\0\3\7"+
    "\2\0\6\7\32\0\1\u03fc\25\7\4\0\3\7\2\0"+
    "\6\7\32\0\6\7\1\u03fd\17\7\4\0\3\7\2\0"+
    "\3\7\1\u03fe\2\7\32\0\26\7\4\0\3\7\2\0"+
    "\3\7\1\u03ff\2\7\32\0\26\7\4\0\3\7\2\0"+
    "\6\7\32\0\3\7\1\u0400\22\7\4\0\3\7\2\0"+
    "\5\7\1\u0401\32\0\26\7\4\0\3\7\2\0\6\7"+
    "\32\0\1\u0402\25\7\4\0\3\7\2\0\3\7\1\u0403"+
    "\2\7\32\0\26\7\4\0\3\7\2\0\6\7\32\0"+
    "\21\7\1\u0404\4\7\4\0\3\7\2\0\6\7\32\0"+
    "\23\7\1\u0405\2\7\4\0\3\7\2\0\6\7\32\0"+
    "\6\7\1\u0406\17\7\4\0\3\7\2\0\1\u0407\5\7"+
    "\32\0\26\7\4\0\3\7\2\0\6\7\32\0\11\7"+
    "\1\u0408\14\7\4\0\3\7\2\0\6\7\32\0\1\u0409"+
    "\25\7\4\0\3\7\2\0\3\7\1\u040a\2\7\32\0"+
    "\26\7\4\0\3\7\2\0\6\7\32\0\3\7\1\u040b"+
    "\22\7\4\0\3\7\2\0\6\7\32\0\6\7\1\u040c"+
    "\17\7\4\0\3\7\2\0\3\7\1\u040d\2\7\32\0"+
    "\26\7\4\0\3\7\2\0\6\7\32\0\1\7\1\u040e"+
    "\24\7\4\0\3\7\2\0\6\7\32\0\3\7\1\u040f"+
    "\22\7\4\0\3\7\2\0\3\7\1\u0410\2\7\32\0"+
    "\26\7\4\0\3\7\2\0\6\7\32\0\2\7\1\u0411"+
    "\23\7\4\0\3\7\2\0\3\7\1\u0412\2\7\32\0"+
    "\26\7\4\0\3\7\2\0\6\7\32\0\11\7\1\u0413"+
    "\14\7\4\0\3\7\2\0\6\7\32\0\11\7\1\u0414"+
    "\14\7\4\0\3\7\2\0\6\7\32\0\2\7\1\u0415"+
    "\23\7\4\0\2\7\1\u0416\2\0\6\7\32\0\26\7"+
    "\4\0\3\7\2\0\6\7\32\0\17\7\1\u0417\6\7"+
    "\4\0\3\7\2\0\3\7\1\u0418\2\7\32\0\26\7"+
    "\4\0\3\7\2\0\6\7\32\0\10\7\1\u0419\15\7"+
    "\4\0\3\7\2\0\6\7\32\0\2\7\1\u041a\23\7"+
    "\4\0\3\7\2\0\1\u041b\5\7\32\0\26\7\4\0"+
    "\3\7\2\0\3\7\1\u041c\2\7\32\0\26\7\4\0"+
    "\3\7\2\0\6\7\32\0\2\7\1\u041d\23\7\4\0"+
    "\3\7\2\0\6\7\32\0\3\7\1\u041e\22\7\4\0"+
    "\3\7\2\0\6\7\32\0\16\7\1\u041f\7\7\4\0"+
    "\3\7\2\0\1\u0420\5\7\32\0\26\7\4\0\3\7"+
    "\2\0\6\7\32\0\10\7\1\u0421\15\7\4\0\3\7"+
    "\2\0\1\u0422\5\7\32\0\26\7\4\0\3\7\2\0"+
    "\6\7\32\0\2\7\1\u0423\23\7\4\0\3\7\2\0"+
    "\6\7\32\0\2\7\1\u0424\23\7\4\0\3\7\2\0"+
    "\3\7\1\u0425\2\7\32\0\26\7\4\0\3\7\2\0"+
    "\4\7\1\u0426\1\7\32\0\26\7\4\0\3\7\2\0"+
    "\6\7\32\0\1\u0427\25\7\4\0\3\7\2\0\6\7"+
    "\32\0\2\7\1\u0428\23\7\4\0\3\7\2\0\1\u0429"+
    "\5\7\32\0\11\7\1\u042a\14\7\4\0\3\7\2\0"+
    "\6\7\32\0\6\7\1\u042b\17\7\4\0\3\7\2\0"+
    "\6\7\32\0\15\7\1\u042c\10\7\4\0\3\7\2\0"+
    "\1\u042d\5\7\32\0\26\7\4\0\3\7\2\0\6\7"+
    "\32\0\6\7\1\u042e\17\7\4\0\3\7\2\0\5\7"+
    "\1\u042f\32\0\26\7\4\0\3\7\2\0\6\7\32\0"+
    "\2\7\1\u0430\23\7\4\0\3\7\2\0\5\7\1\u0431"+
    "\32\0\26\7\4\0\3\7\2\0\1\u0432\5\7\32\0"+
    "\26\7\4\0\3\7\2\0\6\7\32\0\15\7\1\u0433"+
    "\10\7\4\0\3\7\2\0\6\7\32\0\5\7\1\u0434"+
    "\20\7\4\0\3\7\2\0\6\7\32\0\2\7\1\u0435"+
    "\23\7\4\0\3\7\2\0\1\u0436\5\7\32\0\26\7"+
    "\4\0\3\7\2\0\6\7\32\0\1\u0437\25\7\4\0"+
    "\3\7\2\0\6\7\32\0\3\7\1\u0438\22\7\4\0"+
    "\3\7\2\0\6\7\32\0\11\7\1\u0439\14\7\4\0"+
    "\3\7\2\0\1\u043a\5\7\32\0\26\7\4\0\3\7"+
    "\2\0\5\7\1\u043b\32\0\26\7\4\0\3\7\2\0"+
    "\6\7\32\0\2\7\1\u043c\23\7\4\0\3\7\2\0"+
    "\6\7\32\0\11\7\1\u043d\14\7\4\0\3\7\2\0"+
    "\6\7\32\0\1\u043e\25\7\4\0\3\7\2\0\3\7"+
    "\1\u043f\2\7\32\0\26\7\4\0\3\7\2\0\3\7"+
    "\1\u0440\2\7\32\0\26\7\4\0\3\7\2\0\6\7"+
    "\32\0\2\7\1\u0441\23\7\4\0\3\7\2\0\5\7"+
    "\1\u0442\32\0\26\7\4\0\3\7\2\0\6\7\32\0"+
    "\21\7\1\u0443\4\7\4\0\3\7\2\0\6\7\32\0"+
    "\11\7\1\u0444\14\7\4\0\3\7\2\0\1\u0445\5\7"+
    "\32\0\26\7\4\0\3\7\2\0\4\7\1\u0446\1\7"+
    "\32\0\26\7\4\0\3\7\2\0\6\7\32\0\4\7"+
    "\1\u0447\21\7\4\0\3\7\2\0\1\u0448\5\7\32\0"+
    "\26\7\4\0\3\7\2\0\6\7\32\0\10\7\1\u0449"+
    "\15\7\4\0\3\7\2\0\6\7\32\0\3\7\1\u044a"+
    "\22\7\4\0\3\7\2\0\1\u044b\5\7\32\0\26\7"+
    "\4\0\3\7\2\0\1\u044c\5\7\32\0\26\7\4\0"+
    "\3\7\2\0\1\u044d\5\7\32\0\26\7\4\0\3\7"+
    "\2\0\6\7\32\0\16\7\1\u044e\7\7\4\0\3\7"+
    "\2\0\6\7\32\0\3\7\1\u044f\22\7\4\0\3\7"+
    "\2\0\6\7\32\0\10\7\1\u0450\15\7\4\0\3\7"+
    "\2\0\6\7\32\0\23\7\1\u0451\2\7\4\0\3\7"+
    "\2\0\3\7\1\u0452\2\7\32\0\26\7\4\0\3\7"+
    "\2\0\3\7\1\u0453\2\7\32\0\26\7\4\0\3\7"+
    "\2\0\6\7\32\0\6\7\1\u0454\17\7\57\0\1\u0455"+
    "\23\0\3\7\2\0\5\7\1\u0456\32\0\26\7\4\0"+
    "\3\7\2\0\6\7\32\0\10\7\1\u0457\15\7\4\0"+
    "\3\7\2\0\5\7\1\u0458\32\0\26\7\4\0\3\7"+
    "\2\0\1\u0459\5\7\32\0\26\7\4\0\3\7\2\0"+
    "\1\u045a\5\7\32\0\26\7\4\0\3\7\2\0\1\u045b"+
    "\5\7\32\0\26\7\4\0\3\7\2\0\6\7\32\0"+
    "\12\7\1\u045c\13\7\4\0\3\7\2\0\1\u045d\5\7"+
    "\32\0\26\7\4\0\3\7\2\0\6\7\32\0\10\7"+
    "\1\u045e\15\7\4\0\3\7\2\0\1\u045f\5\7\32\0"+
    "\26\7\4\0\3\7\2\0\6\7\32\0\1\u0460\25\7"+
    "\4\0\3\7\2\0\1\u0461\5\7\32\0\26\7\4\0"+
    "\3\7\2\0\6\7\32\0\2\7\1\u0462\23\7\4\0"+
    "\3\7\2\0\6\7\32\0\1\7\1\u0463\24\7\4\0"+
    "\3\7\2\0\6\7\32\0\13\7\1\u0464\12\7\4\0"+
    "\3\7\2\0\1\u0465\5\7\32\0\26\7\4\0\3\7"+
    "\2\0\6\7\32\0\2\7\1\u0466\23\7\4\0\3\7"+
    "\2\0\4\7\1\u0467\1\7\32\0\26\7\4\0\3\7"+
    "\2\0\6\7\32\0\2\7\1\u0468\23\7\4\0\3\7"+
    "\2\0\1\u0469\5\7\32\0\26\7\4\0\3\7\2\0"+
    "\6\7\32\0\3\7\1\u046a\22\7\4\0\3\7\2\0"+
    "\1\u046b\5\7\32\0\26\7\4\0\3\7\2\0\6\7"+
    "\32\0\20\7\1\u046c\5\7\4\0\3\7\2\0\1\u046d"+
    "\5\7\32\0\26\7\4\0\3\7\2\0\6\7\32\0"+
    "\2\7\1\u046e\23\7\4\0\3\7\2\0\6\7\32\0"+
    "\2\7\1\u046f\23\7\4\0\3\7\2\0\6\7\32\0"+
    "\16\7\1\u0470\7\7\4\0\3\7\2\0\6\7\32\0"+
    "\21\7\1\u0471\4\7\4\0\3\7\2\0\6\7\32\0"+
    "\20\7\1\u0472\5\7\4\0\3\7\2\0\1\u0473\5\7"+
    "\32\0\26\7\4\0\3\7\2\0\1\u0474\5\7\32\0"+
    "\26\7\4\0\3\7\2\0\6\7\32\0\2\7\1\u0475"+
    "\23\7\4\0\3\7\2\0\6\7\32\0\2\7\1\u0476"+
    "\23\7\4\0\3\7\2\0\6\7\32\0\16\7\1\u0477"+
    "\7\7\4\0\3\7\2\0\6\7\32\0\2\7\1\u0478"+
    "\23\7\4\0\3\7\2\0\6\7\32\0\6\7\1\u0479"+
    "\17\7\4\0\3\7\2\0\6\7\32\0\10\7\1\u047a"+
    "\15\7\4\0\3\7\2\0\6\7\32\0\14\7\1\u047b"+
    "\11\7\4\0\3\7\2\0\6\7\32\0\2\7\1\u047c"+
    "\23\7\4\0\3\7\2\0\6\7\32\0\6\7\1\u047d"+
    "\17\7\4\0\2\7\1\u047e\2\0\6\7\32\0\26\7"+
    "\4\0\3\7\2\0\6\7\32\0\4\7\1\u047f\21\7"+
    "\4\0\3\7\2\0\6\7\32\0\6\7\1\u0480\17\7"+
    "\4\0\3\7\2\0\3\7\1\u0481\2\7\32\0\26\7"+
    "\4\0\3\7\2\0\6\7\32\0\11\7\1\u0482\14\7"+
    "\4\0\3\7\2\0\4\7\1\u0483\1\7\32\0\26\7"+
    "\4\0\3\7\2\0\3\7\1\u0484\2\7\32\0\26\7"+
    "\4\0\3\7\2\0\6\7\32\0\2\7\1\u0485\23\7"+
    "\4\0\3\7\2\0\6\7\32\0\3\7\1\u0486\22\7"+
    "\4\0\3\7\2\0\1\u0487\5\7\32\0\26\7\4\0"+
    "\3\7\2\0\6\7\32\0\11\7\1\u0488\14\7\4\0"+
    "\2\7\1\u0489\2\0\6\7\32\0\26\7\4\0\3\7"+
    "\2\0\1\u048a\5\7\32\0\26\7\4\0\3\7\2\0"+
    "\6\7\32\0\1\7\1\u048b\24\7\4\0\3\7\2\0"+
    "\6\7\32\0\11\7\1\u048c\14\7\4\0\3\7\2\0"+
    "\3\7\1\u048d\2\7\32\0\26\7\4\0\3\7\2\0"+
    "\1\u048e\5\7\32\0\26\7\4\0\3\7\2\0\6\7"+
    "\32\0\11\7\1\u048f\14\7\4\0\3\7\2\0\6\7"+
    "\32\0\5\7\1\u0490\20\7\4\0\3\7\2\0\1\u0491"+
    "\5\7\32\0\26\7\4\0\3\7\2\0\6\7\32\0"+
    "\11\7\1\u0492\14\7\4\0\3\7\2\0\6\7\32\0"+
    "\10\7\1\u0493\15\7\4\0\3\7\2\0\1\u0494\5\7"+
    "\32\0\26\7\4\0\3\7\2\0\6\7\32\0\10\7"+
    "\1\u0495\15\7\4\0\3\7\2\0\6\7\32\0\14\7"+
    "\1\u0496\11\7\4\0\3\7\2\0\1\u0497\5\7\32\0"+
    "\26\7\4\0\3\7\2\0\6\7\32\0\1\u0498\25\7"+
    "\4\0\3\7\2\0\6\7\32\0\3\7\1\u0499\22\7"+
    "\4\0\3\7\2\0\6\7\32\0\5\7\1\u049a\20\7"+
    "\4\0\3\7\2\0\6\7\32\0\10\7\1\u049b\15\7"+
    "\4\0\3\7\2\0\6\7\32\0\6\7\1\u049c\17\7"+
    "\4\0\3\7\2\0\5\7\1\u049d\32\0\26\7\4\0"+
    "\3\7\2\0\6\7\32\0\2\7\1\u049e\23\7\4\0"+
    "\3\7\2\0\5\7\1\u049f\32\0\26\7\4\0\3\7"+
    "\2\0\6\7\32\0\4\7\1\u04a0\21\7\4\0\3\7"+
    "\2\0\6\7\32\0\10\7\1\u04a1\15\7\4\0\3\7"+
    "\2\0\6\7\32\0\2\7\1\u04a2\23\7\4\0\3\7"+
    "\2\0\6\7\32\0\16\7\1\u04a3\7\7\4\0\3\7"+
    "\2\0\1\u04a4\5\7\32\0\26\7\4\0\3\7\2\0"+
    "\6\7\32\0\10\7\1\u04a5\15\7\4\0\3\7\2\0"+
    "\6\7\32\0\3\7\1\u04a6\22\7\4\0\3\7\2\0"+
    "\6\7\32\0\16\7\1\u04a7\7\7\4\0\3\7\2\0"+
    "\3\7\1\u04a8\2\7\32\0\26\7\4\0\3\7\2\0"+
    "\6\7\32\0\23\7\1\u04a9\2\7\4\0\3\7\2\0"+
    "\6\7\32\0\3\7\1\u04aa\22\7\4\0\3\7\2\0"+
    "\6\7\32\0\3\7\1\u04ab\22\7\4\0\3\7\2\0"+
    "\3\7\1\u04ac\2\7\32\0\26\7\4\0\3\7\2\0"+
    "\6\7\32\0\2\7\1\u04ad\23\7\4\0\3\7\2\0"+
    "\6\7\32\0\2\7\1\u04ae\23\7\4\0\3\7\2\0"+
    "\3\7\1\u04af\2\7\32\0\26\7\4\0\3\7\2\0"+
    "\6\7\32\0\3\7\1\u04b0\22\7\4\0\3\7\2\0"+
    "\6\7\32\0\23\7\1\u04b1\2\7\4\0\3\7\2\0"+
    "\6\7\32\0\1\u04b2\25\7\4\0\3\7\2\0\3\7"+
    "\1\u04b3\2\7\32\0\26\7\4\0\3\7\2\0\6\7"+
    "\32\0\2\7\1\u04b4\23\7\4\0\3\7\2\0\6\7"+
    "\32\0\10\7\1\u04b5\15\7\4\0\3\7\2\0\5\7"+
    "\1\u04b6\32\0\26\7\4\0\3\7\2\0\6\7\32\0"+
    "\11\7\1\u04b7\14\7\4\0\3\7\2\0\6\7\32\0"+
    "\2\7\1\u04b8\23\7\4\0\3\7\2\0\6\7\32\0"+
    "\6\7\1\u04b9\17\7\4\0\3\7\2\0\6\7\32\0"+
    "\4\7\1\u04ba\21\7\4\0\3\7\2\0\6\7\32\0"+
    "\15\7\1\u04bb\10\7\4\0\3\7\2\0\1\u04bc\5\7"+
    "\32\0\11\7\1\u04bd\14\7\4\0\3\7\2\0\6\7"+
    "\32\0\11\7\1\u04be\14\7\4\0\3\7\2\0\1\u04bf"+
    "\5\7\32\0\26\7\4\0\3\7\2\0\6\7\32\0"+
    "\15\7\1\u04c0\10\7\4\0\2\7\1\u04c1\2\0\6\7"+
    "\32\0\26\7\4\0\3\7\2\0\4\7\1\u04c2\1\7"+
    "\32\0\26\7\4\0\3\7\2\0\6\7\32\0\11\7"+
    "\1\u04c3\14\7\4\0\3\7\2\0\1\u04c4\5\7\32\0"+
    "\26\7\4\0\3\7\2\0\6\7\32\0\3\7\1\u04c5"+
    "\22\7\4\0\3\7\2\0\6\7\32\0\10\7\1\u04c6"+
    "\15\7\4\0\3\7\2\0\4\7\1\u04c7\1\7\32\0"+
    "\26\7\4\0\3\7\2\0\6\7\32\0\1\u04c8\25\7"+
    "\4\0\3\7\2\0\6\7\32\0\5\7\1\u04c9\6\7"+
    "\1\u04ca\11\7\4\0\3\7\2\0\6\7\32\0\16\7"+
    "\1\u04cb\7\7\4\0\3\7\2\0\6\7\32\0\6\7"+
    "\1\u04cc\17\7\4\0\3\7\2\0\6\7\32\0\5\7"+
    "\1\u04cd\20\7\4\0\3\7\2\0\3\7\1\u04ce\2\7"+
    "\32\0\26\7\4\0\3\7\2\0\4\7\1\u04cf\1\7"+
    "\32\0\1\7\1\u04d0\1\u04d1\23\7\4\0\3\7\2\0"+
    "\6\7\32\0\1\7\1\u04d2\24\7\4\0\3\7\2\0"+
    "\3\7\1\u04d3\2\7\32\0\26\7\4\0\3\7\2\0"+
    "\6\7\32\0\16\7\1\u04d4\7\7\4\0\3\7\2\0"+
    "\6\7\32\0\3\7\1\u04d5\22\7\4\0\3\7\2\0"+
    "\6\7\32\0\10\7\1\u04d6\15\7\4\0\3\7\2\0"+
    "\6\7\32\0\2\7\1\u04d7\23\7\4\0\3\7\2\0"+
    "\3\7\1\u04d8\2\7\32\0\26\7\4\0\3\7\2\0"+
    "\3\7\1\u04d9\2\7\32\0\26\7\4\0\3\7\2\0"+
    "\3\7\1\u04da\2\7\32\0\26\7\4\0\3\7\2\0"+
    "\3\7\1\u04db\2\7\32\0\26\7\4\0\3\7\2\0"+
    "\6\7\32\0\5\7\1\u04dc\20\7\4\0\3\7\2\0"+
    "\6\7\32\0\4\7\1\u04dd\21\7\4\0\3\7\2\0"+
    "\6\7\32\0\3\7\1\u04de\22\7\4\0\3\7\2\0"+
    "\6\7\32\0\2\7\1\u04df\23\7\4\0\3\7\2\0"+
    "\6\7\32\0\11\7\1\u04e0\14\7\4\0\3\7\2\0"+
    "\6\7\32\0\4\7\1\u04e1\21\7\4\0\2\7\1\u04e2"+
    "\2\0\6\7\32\0\6\7\1\u04e3\17\7\4\0\3\7"+
    "\2\0\3\7\1\u04e4\2\7\32\0\26\7\4\0\3\7"+
    "\2\0\1\u04e5\5\7\32\0\26\7\4\0\3\7\2\0"+
    "\6\7\32\0\2\7\1\u04e6\23\7\4\0\3\7\2\0"+
    "\3\7\1\u04e7\2\7\32\0\26\7\4\0\3\7\2\0"+
    "\1\u04e8\5\7\32\0\26\7\4\0\3\7\2\0\1\u04e9"+
    "\5\7\32\0\26\7\4\0\3\7\2\0\6\7\32\0"+
    "\2\7\1\u04ea\23\7\4\0\3\7\2\0\6\7\32\0"+
    "\10\7\1\u04eb\15\7\4\0\3\7\2\0\6\7\32\0"+
    "\2\7\1\u04ec\23\7\4\0\3\7\2\0\6\7\32\0"+
    "\10\7\1\u04ed\15\7\4\0\3\7\2\0\1\u04ee\5\7"+
    "\32\0\26\7\4\0\3\7\2\0\6\7\32\0\2\7"+
    "\1\u04ef\23\7\4\0\3\7\2\0\6\7\32\0\2\7"+
    "\1\u04f0\23\7\4\0\3\7\2\0\1\u04f1\5\7\32\0"+
    "\26\7\4\0\3\7\2\0\6\7\32\0\3\7\1\u04f2"+
    "\22\7\4\0\3\7\2\0\1\u04f3\5\7\32\0\26\7"+
    "\4\0\3\7\2\0\6\7\32\0\6\7\1\u04f4\17\7"+
    "\4\0\3\7\2\0\1\u04f5\5\7\32\0\26\7\4\0"+
    "\3\7\2\0\6\7\32\0\2\7\1\u04f6\23\7\4\0"+
    "\3\7\2\0\5\7\1\u04f7\32\0\26\7\4\0\3\7"+
    "\2\0\6\7\32\0\10\7\1\u04f8\15\7\4\0\3\7"+
    "\2\0\6\7\32\0\10\7\1\u04f9\15\7\4\0\3\7"+
    "\2\0\6\7\32\0\3\7\1\u04fa\22\7\4\0\3\7"+
    "\2\0\6\7\32\0\7\7\1\u04fb\10\7\1\u04fc\5\7"+
    "\4\0\3\7\2\0\6\7\32\0\3\7\1\u04fd\22\7"+
    "\4\0\3\7\2\0\6\7\32\0\10\7\1\u04fe\15\7"+
    "\4\0\3\7\2\0\6\7\32\0\5\7\1\u04ff\20\7"+
    "\4\0\3\7\2\0\5\7\1\u0500\32\0\26\7\4\0"+
    "\3\7\2\0\6\7\32\0\5\7\1\u0501\20\7\4\0"+
    "\3\7\2\0\4\7\1\u0502\1\7\32\0\26\7\4\0"+
    "\3\7\2\0\6\7\32\0\11\7\1\u0503\14\7\4\0"+
    "\3\7\2\0\1\u0504\5\7\32\0\26\7\4\0\3\7"+
    "\2\0\6\7\32\0\5\7\1\u0505\20\7\4\0\3\7"+
    "\2\0\1\u0506\5\7\32\0\26\7\4\0\3\7\2\0"+
    "\6\7\32\0\16\7\1\u0507\7\7\4\0\3\7\2\0"+
    "\6\7\32\0\5\7\1\u0508\20\7\4\0\3\7\2\0"+
    "\6\7\32\0\1\u0509\25\7\4\0\3\7\2\0\6\7"+
    "\32\0\11\7\1\u050a\14\7\4\0\3\7\2\0\6\7"+
    "\32\0\2\7\1\u050b\23\7\4\0\3\7\2\0\6\7"+
    "\32\0\2\7\1\u050c\23\7\4\0\2\7\1\u050d\2\0"+
    "\6\7\32\0\26\7\4\0\3\7\2\0\3\7\1\u050e"+
    "\2\7\32\0\26\7\4\0\3\7\2\0\6\7\32\0"+
    "\1\u050f\25\7\4\0\3\7\2\0\6\7\32\0\2\7"+
    "\1\u0510\23\7\4\0\3\7\2\0\6\7\32\0\1\7"+
    "\1\u0511\24\7\4\0\3\7\2\0\6\7\32\0\16\7"+
    "\1\u0512\7\7\4\0\3\7\2\0\6\7\32\0\10\7"+
    "\1\u0513\15\7\4\0\3\7\2\0\6\7\32\0\21\7"+
    "\1\u0514\4\7\4\0\3\7\2\0\6\7\32\0\11\7"+
    "\1\u0515\14\7\4\0\3\7\2\0\6\7\32\0\10\7"+
    "\1\u0516\15\7\4\0\3\7\2\0\6\7\32\0\7\7"+
    "\1\u0517\16\7\4\0\3\7\2\0\6\7\32\0\5\7"+
    "\1\u0518\20\7\4\0\3\7\2\0\6\7\32\0\1\u0519"+
    "\25\7\4\0\3\7\2\0\6\7\32\0\3\7\1\u051a"+
    "\22\7\4\0\3\7\2\0\6\7\32\0\1\7\1\u051b"+
    "\24\7\4\0\3\7\2\0\6\7\32\0\11\7\1\u051c"+
    "\14\7\4\0\3\7\2\0\6\7\32\0\5\7\1\u051d"+
    "\20\7\4\0\3\7\2\0\6\7\32\0\1\7\1\u051e"+
    "\24\7\4\0\3\7\2\0\1\u051f\5\7\32\0\26\7"+
    "\4\0\3\7\2\0\3\7\1\u0520\2\7\32\0\26\7"+
    "\4\0\3\7\2\0\3\7\1\u0521\2\7\32\0\26\7"+
    "\4\0\3\7\2\0\6\7\32\0\2\7\1\u0522\23\7"+
    "\4\0\3\7\2\0\6\7\32\0\10\7\1\u0523\15\7"+
    "\4\0\3\7\2\0\6\7\32\0\11\7\1\u0524\14\7"+
    "\4\0\3\7\2\0\1\u0525\5\7\32\0\26\7\4\0"+
    "\3\7\2\0\3\7\1\u0526\2\7\32\0\26\7\4\0"+
    "\3\7\2\0\1\u0527\5\7\32\0\26\7\4\0\3\7"+
    "\2\0\6\7\32\0\1\7\1\u0528\24\7\4\0\3\7"+
    "\2\0\6\7\32\0\20\7\1\u0529\5\7\4\0\3\7"+
    "\2\0\6\7\32\0\4\7\1\u052a\21\7\4\0\3\7"+
    "\2\0\6\7\32\0\3\7\1\u052b\22\7\4\0\3\7"+
    "\2\0\1\u052c\5\7\32\0\26\7\4\0\3\7\2\0"+
    "\6\7\32\0\2\7\1\u052d\23\7\4\0\3\7\2\0"+
    "\6\7\32\0\20\7\1\u052e\5\7\4\0\3\7\2\0"+
    "\6\7\32\0\7\7\1\u052f\16\7\4\0\3\7\2\0"+
    "\5\7\1\u0530\32\0\26\7\4\0\3\7\2\0\6\7"+
    "\32\0\13\7\1\u0531\12\7\4\0\3\7\2\0\6\7"+
    "\32\0\5\7\1\u0532\20\7\4\0\3\7\2\0\6\7"+
    "\32\0\11\7\1\u0533\14\7\4\0\3\7\2\0\6\7"+
    "\32\0\2\7\1\u0534\23\7\4\0\3\7\2\0\4\7"+
    "\1\u0535\1\7\32\0\26\7\4\0\3\7\2\0\1\u0536"+
    "\5\7\32\0\26\7\4\0\3\7\2\0\3\7\1\u0537"+
    "\2\7\32\0\26\7\4\0\3\7\2\0\5\7\1\u0538"+
    "\32\0\26\7\4\0\3\7\2\0\6\7\32\0\13\7"+
    "\1\u0539\12\7\4\0\3\7\2\0\6\7\32\0\10\7"+
    "\1\u053a\15\7\4\0\3\7\2\0\4\7\1\u053b\1\7"+
    "\32\0\26\7\4\0\3\7\2\0\3\7\1\u053c\2\7"+
    "\32\0\26\7\4\0\3\7\2\0\6\7\32\0\3\7"+
    "\1\u053d\22\7\4\0\3\7\2\0\6\7\32\0\11\7"+
    "\1\u053e\14\7\4\0\3\7\2\0\6\7\32\0\11\7"+
    "\1\u053f\14\7\4\0\3\7\2\0\6\7\32\0\15\7"+
    "\1\u0540\10\7\4\0\3\7\2\0\6\7\32\0\3\7"+
    "\1\u0541\22\7\4\0\3\7\2\0\1\u0542\5\7\32\0"+
    "\26\7\4\0\3\7\2\0\1\u0543\5\7\32\0\26\7"+
    "\4\0\3\7\2\0\1\u0544\5\7\32\0\26\7\4\0"+
    "\3\7\2\0\5\7\1\u0545\32\0\26\7\4\0\3\7"+
    "\2\0\3\7\1\u0546\2\7\32\0\26\7\4\0\3\7"+
    "\2\0\6\7\32\0\7\7\1\u0547\16\7\4\0\3\7"+
    "\2\0\6\7\32\0\3\7\1\u0548\22\7\4\0\3\7"+
    "\2\0\6\7\32\0\5\7\1\u0549\20\7\4\0\3\7"+
    "\2\0\5\7\1\u054a\32\0\26\7\4\0\3\7\2\0"+
    "\3\7\1\u054b\2\7\32\0\26\7\4\0\3\7\2\0"+
    "\6\7\32\0\3\7\1\u054c\22\7\4\0\3\7\2\0"+
    "\4\7\1\u054d\1\7\32\0\26\7\4\0\3\7\2\0"+
    "\6\7\32\0\2\7\1\u054e\23\7\4\0\3\7\2\0"+
    "\5\7\1\u054f\32\0\26\7\4\0\3\7\2\0\6\7"+
    "\32\0\7\7\1\u0550\16\7\4\0\3\7\2\0\6\7"+
    "\32\0\5\7\1\u0551\20\7\4\0\3\7\2\0\3\7"+
    "\1\u0552\2\7\32\0\26\7\4\0\3\7\2\0\1\u0553"+
    "\5\7\32\0\26\7\4\0\3\7\2\0\6\7\32\0"+
    "\16\7\1\u0554\7\7\4\0\3\7\2\0\6\7\32\0"+
    "\6\7\1\u0555\17\7\4\0\3\7\2\0\1\u0556\5\7"+
    "\32\0\26\7\4\0\3\7\2\0\1\u0557\5\7\32\0"+
    "\26\7\4\0\3\7\2\0\6\7\32\0\2\7\1\u0558"+
    "\23\7\4\0\3\7\2\0\6\7\32\0\1\u0559\25\7"+
    "\4\0\3\7\2\0\6\7\32\0\3\7\1\u055a\22\7"+
    "\4\0\3\7\2\0\6\7\32\0\2\7\1\u055b\23\7"+
    "\4\0\3\7\2\0\6\7\32\0\16\7\1\u055c\7\7"+
    "\4\0\3\7\2\0\1\u055d\5\7\32\0\26\7\4\0"+
    "\3\7\2\0\6\7\32\0\3\7\1\u055e\22\7\4\0"+
    "\3\7\2\0\1\u055f\5\7\32\0\26\7\4\0\3\7"+
    "\2\0\6\7\32\0\3\7\1\u0560\22\7\4\0\3\7"+
    "\2\0\6\7\32\0\1\u0561\25\7\4\0\3\7\2\0"+
    "\6\7\32\0\1\u0562\25\7\4\0\3\7\2\0\6\7"+
    "\32\0\2\7\1\u0563\23\7\4\0\3\7\2\0\6\7"+
    "\32\0\2\7\1\u0564\23\7\4\0\3\7\2\0\6\7"+
    "\32\0\11\7\1\u0565\14\7\4\0\3\7\2\0\6\7"+
    "\32\0\5\7\1\u0566\20\7\4\0\3\7\2\0\6\7"+
    "\32\0\20\7\1\u0567\5\7\4\0\3\7\2\0\6\7"+
    "\32\0\7\7\1\u0568\16\7\4\0\3\7\2\0\6\7"+
    "\32\0\2\7\1\u0569\23\7\4\0\3\7\2\0\1\u056a"+
    "\5\7\32\0\26\7\4\0\3\7\2\0\6\7\32\0"+
    "\15\7\1\u056b\10\7\4\0\3\7\2\0\6\7\32\0"+
    "\4\7\1\u056c\21\7\4\0\3\7\2\0\6\7\32\0"+
    "\2\7\1\u056d\23\7\4\0\3\7\2\0\6\7\32\0"+
    "\1\7\1\u056e\1\u056f\23\7\4\0\3\7\2\0\6\7"+
    "\32\0\1\u0570\25\7\4\0\3\7\2\0\1\u0571\5\7"+
    "\32\0\26\7\4\0\3\7\2\0\6\7\32\0\1\u0572"+
    "\25\7\4\0\3\7\2\0\6\7\32\0\13\7\1\u0573"+
    "\12\7\4\0\3\7\2\0\6\7\32\0\2\7\1\u0574"+
    "\23\7\4\0\3\7\2\0\6\7\32\0\13\7\1\u0575"+
    "\12\7\4\0\3\7\2\0\5\7\1\u0576\32\0\26\7"+
    "\4\0\3\7\2\0\6\7\32\0\1\u0577\25\7\4\0"+
    "\3\7\2\0\5\7\1\u0578\32\0\26\7\4\0\3\7"+
    "\2\0\1\u0579\5\7\32\0\26\7\4\0\3\7\2\0"+
    "\6\7\32\0\11\7\1\u057a\14\7\4\0\3\7\2\0"+
    "\1\u057b\5\7\32\0\26\7\4\0\3\7\2\0\5\7"+
    "\1\u057c\32\0\26\7\4\0\3\7\2\0\6\7\32\0"+
    "\5\7\1\u057d\20\7\4\0\3\7\2\0\6\7\32\0"+
    "\2\7\1\u057e\23\7\4\0\3\7\2\0\6\7\32\0"+
    "\1\u057f\25\7\4\0\3\7\2\0\6\7\32\0\13\7"+
    "\1\u0580\12\7\4\0\3\7\2\0\5\7\1\u0581\32\0"+
    "\26\7\4\0\3\7\2\0\1\u0582\5\7\32\0\26\7"+
    "\1\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[69615];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\2\0\1\11\4\1\1\11\1\1\1\11\6\1\1\11"+
    "\1\1\1\11\1\1\1\11\6\1\2\11\1\1\1\11"+
    "\1\1\1\11\1\1\2\11\25\1\1\11\13\1\1\0"+
    "\24\1\2\11\1\1\1\0\12\11\147\1\1\0\1\11"+
    "\1\0\43\1\1\11\243\1\1\0\1\1\1\0\337\1"+
    "\1\0\277\1\1\0\233\1\1\0\174\1\1\11\u012d\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[1410];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true iff the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true iff the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
    StringBuffer _cadenaComentario = new StringBuffer();
    private boolean _comentarioActivo = false;

    public boolean comentarioActivo() {
        return this._comentarioActivo;
    }

    public Symbol symbol(int type) {
        return new Symbol(type, yyline, yycolumn);
    }

    private Symbol symbol(int type, Object value) {
        return new Symbol(type, yyline, yycolumn, value);
    }


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public Lexemas(java.io.Reader in) {
  
    this.zzReader = in;
  }



  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() throws java.io.IOException {
    if (!zzEOFDone) {
      zzEOFDone = true;
      yyclose();
    }
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public java_cup.runtime.Symbol next_token() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      yychar+= zzMarkedPosL-zzStartRead;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':  // fall through
        case '\u000C':  // fall through
        case '\u0085':  // fall through
        case '\u2028':  // fall through
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn += zzCharCount;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
            zzDoEOF();
            switch (zzLexicalState) {
            case COMENTARIOMULTI: {
              
            }  // fall though
            case 1411: break;
            default:
          {     return symbol(sym.EOF, new MyToken("FinArchivo", "Fin", "EOF", yyline + 1, yylength() + 1, yycolumn + 1));
 }
        }
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { System.out.print(yytext());
            } 
            // fall through
          case 354: break;
          case 2: 
            { return symbol(sym.Mas, new MyToken("Mas", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 355: break;
          case 3: 
            { return symbol(sym.Menos, new MyToken("Menos", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 356: break;
          case 4: 
            { return symbol(sym.DatoEntero, new MyToken("DatoEntero", yytext(), "Token", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 357: break;
          case 5: 
            { if (yytext().length() <= 31) {
        return symbol(sym.Identificador, new MyToken("Identificador", yytext(), "Token", yyline + 1, yylength() + 1, yycolumn + 1));
    } else {
        
    }
            } 
            // fall through
          case 358: break;
          case 6: 
            { //return symbol(sym.Error, new MyToken("ErrorInesperado", yytext(), "Error", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 359: break;
          case 7: 
            { return symbol(sym.Punto, new MyToken("Punto", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 360: break;
          case 8: 
            { return symbol(sym.DatoBit, new MyToken("DatoBit", yytext(), "Token", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 361: break;
          case 9: 
            { 
            } 
            // fall through
          case 362: break;
          case 10: 
            { return symbol(sym.Multiplicacion, new MyToken("Multiplicacion", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 363: break;
          case 11: 
            { return symbol(sym.Division, new MyToken("Division", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 364: break;
          case 12: 
            { return symbol(sym.Modulo, new MyToken("Modulo", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 365: break;
          case 13: 
            { return symbol(sym.Menor, new MyToken("Menor", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 366: break;
          case 14: 
            { return symbol(sym.Igual, new MyToken("Igual", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 367: break;
          case 15: 
            { return symbol(sym.Mayor, new MyToken("Mayor", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 368: break;
          case 16: 
            { return symbol(sym.Not, new MyToken("Not", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 369: break;
          case 17: 
            { return symbol(sym.PuntoComa, new MyToken("PuntoComa", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 370: break;
          case 18: 
            { return symbol(sym.Coma, new MyToken("Coma", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 371: break;
          case 19: 
            { return symbol(sym.CorcheteAbrir, new MyToken("CorcheteAbrir", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 372: break;
          case 20: 
            { return symbol(sym.CorcheteCerrar, new MyToken("CorcheteAbrir", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 373: break;
          case 21: 
            { return symbol(sym.ParentesisAbrir, new MyToken("ParentesisAbrir", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 374: break;
          case 22: 
            { return symbol(sym.ParentesisCerrar, new MyToken("ParentesisCerrar", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 375: break;
          case 23: 
            { return symbol(sym.LlaveAbrir, new MyToken("LlaveAbrir", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 376: break;
          case 24: 
            { return symbol(sym.LlaveCerrar, new MyToken("LlaveCerrar", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 377: break;
          case 25: 
            { return symbol(sym.Arroba, new MyToken("Arroba", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 378: break;
          case 26: 
            { return symbol(sym.Numeral, new MyToken("Numeral", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 379: break;
          case 27: 
            { _cadenaComentario.append(yytext());
            } 
            // fall through
          case 380: break;
          case 28: 
            { return symbol(sym.DatoFloat, new MyToken("DatoFloat", yytext(), "Token", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 381: break;
          case 29: 
            { return symbol(sym.NO, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 382: break;
          case 30: 
            { return symbol(sym.StringNoCerrado, new MyToken("StringNoCerrado", yytext(), "Error", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 383: break;
          case 31: 
            { return symbol(sym.DatoString, new MyToken("DatoString", yytext(), "Token", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 384: break;
          case 32: 
            { return symbol(sym.MenorIgual, new MyToken("MenorIgual", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 385: break;
          case 33: 
            { return symbol(sym.IgualIgual, new MyToken("IgualIgual", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 386: break;
          case 34: 
            { return symbol(sym.MayorIgual, new MyToken("MayorIgual", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 387: break;
          case 35: 
            { return symbol(sym.Diferente, new MyToken("Diferente", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 388: break;
          case 36: 
            { return symbol(sym.And, new MyToken("And", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 389: break;
          case 37: 
            { return symbol(sym.Or, new MyToken("Or", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 390: break;
          case 38: 
            { return symbol(sym.Corchetes, new MyToken("Corchetes", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 391: break;
          case 39: 
            { return symbol(sym.Parentesis, new MyToken("Parentesis", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 392: break;
          case 40: 
            { return symbol(sym.Llaves, new MyToken("Llaves", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 393: break;
          case 41: 
            { return symbol(sym.DobleNumeral, new MyToken("DobleNumeral", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 394: break;
          case 42: 
            { return symbol(sym.AT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 395: break;
          case 43: 
            { return symbol(sym.AS, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 396: break;
          case 44: 
            { return symbol(sym.TO, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 397: break;
          case 45: 
            { return symbol(sym.ON, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 398: break;
          case 46: 
            { return symbol(sym.OR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 399: break;
          case 47: 
            { return symbol(sym.OF, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 400: break;
          case 48: 
            { return symbol(sym.IN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 401: break;
          case 49: 
            { return symbol(sym.IS, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 402: break;
          case 50: 
            { return symbol(sym.IF, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 403: break;
          case 51: 
            { return symbol(sym.BY, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 404: break;
          case 52: 
            { return symbol(sym.GO, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 405: break;
          case 53: 
            { _cadenaComentario.append(yytext());
        _comentarioActivo = false;
        yybegin(YYINITIAL);
        _cadenaComentario = new StringBuffer();
            } 
            // fall through
          case 406: break;
          case 54: 
            { return symbol(sym.END, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 407: break;
          case 55: 
            { return symbol(sym.NOT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 408: break;
          case 56: 
            { return symbol(sym.USE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 409: break;
          case 57: 
            { _cadenaComentario.append(yytext());
    _comentarioActivo = true;
    yybegin(COMENTARIOMULTI);
            } 
            // fall through
          case 410: break;
          case 58: 
            { return symbol(sym.AND, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 411: break;
          case 59: 
            { return symbol(sym.ANY, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 412: break;
          case 60: 
            { return symbol(sym.ALL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 413: break;
          case 61: 
            { return symbol(sym.ADA, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 414: break;
          case 62: 
            { return symbol(sym.ADD, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 415: break;
          case 63: 
            { return symbol(sym.ARE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 416: break;
          case 64: 
            { return symbol(sym.ASC, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 417: break;
          case 65: 
            { return symbol(sym.AVG, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 418: break;
          case 66: 
            { return symbol(sym.DEC, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 419: break;
          case 67: 
            { return symbol(sym.DAY, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 420: break;
          case 68: 
            { return symbol(sym.TOP, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 421: break;
          case 69: 
            { return symbol(sym.SET, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 422: break;
          case 70: 
            { return symbol(sym.SUM, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 423: break;
          case 71: 
            { return symbol(sym.SQL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 424: break;
          case 72: 
            { return symbol(sym.OFF, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 425: break;
          case 73: 
            { return symbol(sym.INT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 426: break;
          case 74: 
            { return symbol(sym.BIT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 427: break;
          case 75: 
            { return symbol(sym.KEY, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 428: break;
          case 76: 
            { return symbol(sym.PAD, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 429: break;
          case 77: 
            { return symbol(sym.GET, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 430: break;
          case 78: 
            { return symbol(sym.MAX, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 431: break;
          case 79: 
            { return symbol(sym.MIN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 432: break;
          case 80: 
            { return symbol(sym.FOR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 433: break;
          case 81: 
            { return symbol(sym.ELSE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 434: break;
          case 82: 
            { return symbol(sym.EXEC, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 435: break;
          case 83: 
            { return symbol(sym.EXIT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 436: break;
          case 84: 
            { return symbol(sym.NEXT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 437: break;
          case 85: 
            { return symbol(sym.NULL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 438: break;
          case 86: 
            { return symbol(sym.NONE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 439: break;
          case 87: 
            { return symbol(sym.USER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 440: break;
          case 88: 
            { return symbol(sym.LEFT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 441: break;
          case 89: 
            { return symbol(sym.LAST, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 442: break;
          case 90: 
            { return symbol(sym.LOAD, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 443: break;
          case 91: 
            { return symbol(sym.LIKE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 444: break;
          case 92: 
            { return symbol(sym.DENY, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 445: break;
          case 93: 
            { return symbol(sym.DESC, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 446: break;
          case 94: 
            { return symbol(sym.DUMP, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 447: break;
          case 95: 
            { return symbol(sym.DATE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 448: break;
          case 96: 
            { return symbol(sym.DROP, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 449: break;
          case 97: 
            { return symbol(sym.DISK, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 450: break;
          case 98: 
            { return symbol(sym.DBCC, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 451: break;
          case 99: 
            { return symbol(sym.TRAN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 452: break;
          case 100: 
            { return symbol(sym.TRIM, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 453: break;
          case 101: 
            { return symbol(sym.THEN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 454: break;
          case 102: 
            { return symbol(sym.TIME, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 455: break;
          case 103: 
            { return symbol(sym.REAL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 456: break;
          case 104: 
            { return symbol(sym.READ, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 457: break;
          case 105: 
            { return symbol(sym.RULE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 458: break;
          case 106: 
            { return symbol(sym.ROWS, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 459: break;
          case 107: 
            { return symbol(sym.YEAR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 460: break;
          case 108: 
            { return symbol(sym.SAVE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 461: break;
          case 109: 
            { return symbol(sym.SOME, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 462: break;
          case 110: 
            { return symbol(sym.SIZE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 463: break;
          case 111: 
            { return symbol(sym.CASE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 464: break;
          case 112: 
            { return symbol(sym.CAST, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 465: break;
          case 113: 
            { return symbol(sym.CHAR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 466: break;
          case 114: 
            { return symbol(sym.HOUR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 467: break;
          case 115: 
            { return symbol(sym.ONLY, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 468: break;
          case 116: 
            { return symbol(sym.OPEN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 469: break;
          case 117: 
            { return symbol(sym.OVER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 470: break;
          case 118: 
            { return symbol(sym.INTO, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 471: break;
          case 119: 
            { return symbol(sym.ZONE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 472: break;
          case 120: 
            { return symbol(sym.BULK, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 473: break;
          case 121: 
            { return symbol(sym.BOTH, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 474: break;
          case 122: 
            { return symbol(sym.KILL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 475: break;
          case 123: 
            { return symbol(sym.PLAN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 476: break;
          case 124: 
            { return symbol(sym.PROC, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 477: break;
          case 125: 
            { return symbol(sym.GOTO, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 478: break;
          case 126: 
            { return symbol(sym.WHEN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 479: break;
          case 127: 
            { return symbol(sym.WORK, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 480: break;
          case 128: 
            { return symbol(sym.WITH, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 481: break;
          case 129: 
            { return symbol(sym.VIEW, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 482: break;
          case 130: 
            { return symbol(sym.FULL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 483: break;
          case 131: 
            { return symbol(sym.FROM, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 484: break;
          case 132: 
            { return symbol(sym.FILE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 485: break;
          case 133: 
            { return symbol(sym.JOIN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 486: break;
          case 134: 
            { return symbol(sym.NAMES, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 487: break;
          case 135: 
            { return symbol(sym.NCHAR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 488: break;
          case 136: 
            { return symbol(sym.UNION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 489: break;
          case 137: 
            { return symbol(sym.USAGE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 490: break;
          case 138: 
            { return symbol(sym.USING, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 491: break;
          case 139: 
            { return symbol(sym.UPPER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 492: break;
          case 140: 
            { return symbol(sym.LEVEL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 493: break;
          case 141: 
            { return symbol(sym.LOCAL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 494: break;
          case 142: 
            { return symbol(sym.LOWER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 495: break;
          case 143: 
            { return symbol(sym.ALTER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 496: break;
          case 144: 
            { return symbol(sym.TABLE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 497: break;
          case 145: 
            { return symbol(sym.RIGHT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 498: break;
          case 146: 
            { return symbol(sym.SPACE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 499: break;
          case 147: 
            { return symbol(sym.SQLCA, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 500: break;
          case 148: 
            { return symbol(sym.CLOSE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 501: break;
          case 149: 
            { return symbol(sym.CROSS, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 502: break;
          case 150: 
            { return symbol(sym.CHECK, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 503: break;
          case 151: 
            { return symbol(sym.COUNT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 504: break;
          case 152: 
            { return symbol(sym.OUTER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 505: break;
          case 153: 
            { return symbol(sym.ORDER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 506: break;
          case 154: 
            { return symbol(sym.INNER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 507: break;
          case 155: 
            { return symbol(sym.INDEX, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 508: break;
          case 156: 
            { return symbol(sym.INPUT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 509: break;
          case 157: 
            { return symbol(sym.BEGIN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 510: break;
          case 158: 
            { return symbol(sym.BREAK, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 511: break;
          case 159: 
            { return symbol(sym.PRINT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 512: break;
          case 160: 
            { return symbol(sym.PRIOR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 513: break;
          case 161: 
            { return symbol(sym.PIVOT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 514: break;
          case 162: 
            { return symbol(sym.GRANT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 515: break;
          case 163: 
            { return symbol(sym.GROUP, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 516: break;
          case 164: 
            { return symbol(sym.WRITE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 517: break;
          case 165: 
            { return symbol(sym.WHERE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 518: break;
          case 166: 
            { return symbol(sym.WHILE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 519: break;
          case 167: 
            { return symbol(sym.MERGE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 520: break;
          case 168: 
            { return symbol(sym.MATCH, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 521: break;
          case 169: 
            { return symbol(sym.MONTH, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 522: break;
          case 170: 
            { return symbol(sym.VALUE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 523: break;
          case 171: 
            { return symbol(sym.FETCH, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 524: break;
          case 172: 
            { return symbol(sym.FLOAT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 525: break;
          case 173: 
            { return symbol(sym.FALSO, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 526: break;
          case 174: 
            { return symbol(sym.FOUND, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 527: break;
          case 175: 
            { return symbol(sym.FIRST, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 528: break;
          case 176: 
            { return symbol(sym.ERRLVL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 529: break;
          case 177: 
            { return symbol(sym.ESCAPE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 530: break;
          case 178: 
            { return symbol(sym.EXCEPT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 531: break;
          case 179: 
            { return symbol(sym.EXISTS, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 532: break;
          case 180: 
            { return symbol(sym.NULLIF, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 533: break;
          case 181: 
            { return symbol(sym.UNIQUE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 534: break;
          case 182: 
            { return symbol(sym.UPDATE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 535: break;
          case 183: 
            { return symbol(sym.LINENO, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 536: break;
          case 184: 
            { return symbol(sym.ACTION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 537: break;
          case 185: 
            { return symbol(sym.DELETE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 538: break;
          case 186: 
            { return symbol(sym.DOUBLE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 539: break;
          case 187: 
            { return symbol(sym.DOMAIN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 540: break;
          case 188: 
            { return symbol(sym.RETURN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 541: break;
          case 189: 
            { return symbol(sym.REVERT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 542: break;
          case 190: 
            { return symbol(sym.REVOKE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 543: break;
          case 191: 
            { return symbol(sym.SELECT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 544: break;
          case 192: 
            { return symbol(sym.SECOND, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 545: break;
          case 193: 
            { return symbol(sym.SCROLL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 546: break;
          case 194: 
            { return symbol(sym.SCHEMA, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 547: break;
          case 195: 
            { return symbol(sym.CURSOR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 548: break;
          case 196: 
            { return symbol(sym.CREATE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 549: break;
          case 197: 
            { return symbol(sym.COLUMN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 550: break;
          case 198: 
            { return symbol(sym.COMMIT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 551: break;
          case 199: 
            { return symbol(sym.HAVING, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 552: break;
          case 200: 
            { return symbol(sym.OUTPUT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 553: break;
          case 201: 
            { return symbol(sym.OPTION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 554: break;
          case 202: 
            { return symbol(sym.INSERT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 555: break;
          case 203: 
            { return symbol(sym.BACKUP, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 556: break;
          case 204: 
            { return symbol(sym.BROWSE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 557: break;
          case 205: 
            { return symbol(sym.PUBLIC, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 558: break;
          case 206: 
            { return symbol(sym.PASCAL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 559: break;
          case 207: 
            { return symbol(sym.GLOBAL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 560: break;
          case 208: 
            { return symbol(sym.WITHIN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 561: break;
          case 209: 
            { return symbol(sym.MODULE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 562: break;
          case 210: 
            { return symbol(sym.MINUTE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 563: break;
          case 211: 
            { return symbol(sym.VALUES, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 564: break;
          case 212: 
            { return symbol(sym.EXECUTE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 565: break;
          case 213: 
            { return symbol(sym.EXTRACT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 566: break;
          case 214: 
            { return symbol(sym.NUMERIC, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 567: break;
          case 215: 
            { return symbol(sym.NATURAL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 568: break;
          case 216: 
            { return symbol(sym.NOCHECK, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 569: break;
          case 217: 
            { return symbol(sym.UNKNOWN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 570: break;
          case 218: 
            { return symbol(sym.UNPIVOT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 571: break;
          case 219: 
            { return symbol(sym.LEADING, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 572: break;
          case 220: 
            { return symbol(sym.DECLARE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 573: break;
          case 221: 
            { return symbol(sym.DECIMAL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 574: break;
          case 222: 
            { return symbol(sym.DEFAULT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 575: break;
          case 223: 
            { return symbol(sym.TRIGGER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 576: break;
          case 224: 
            { return symbol(sym.TSEQUAL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 577: break;
          case 225: 
            { return symbol(sym.RESTORE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 578: break;
          case 226: 
            { return symbol(sym.SETUSER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 579: break;
          case 227: 
            { return symbol(sym.SESSION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 580: break;
          case 228: 
            { return symbol(sym.SECTION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 581: break;
          case 229: 
            { return symbol(sym.SQLCODE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 582: break;
          case 230: 
            { return symbol(sym.CURRENT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 583: break;
          case 231: 
            { return symbol(sym.CATALOG, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 584: break;
          case 232: 
            { return symbol(sym.CASCADE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 585: break;
          case 233: 
            { return symbol(sym.CONNECT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 586: break;
          case 234: 
            { return symbol(sym.CONVERT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 587: break;
          case 235: 
            { return symbol(sym.COLLATE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 588: break;
          case 236: 
            { return symbol(sym.COMPUTE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 589: break;
          case 237: 
            { return symbol(sym.OPENXML, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 590: break;
          case 238: 
            { return symbol(sym.OFFSETS, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 591: break;
          case 239: 
            { return symbol(sym.INTEGER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 592: break;
          case 240: 
            { return symbol(sym.INCLUDE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 593: break;
          case 241: 
            { return symbol(sym.BETWEEN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 594: break;
          case 242: 
            { return symbol(sym.PERCENT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 595: break;
          case 243: 
            { return symbol(sym.PARTIAL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 596: break;
          case 244: 
            { return symbol(sym.PREPARE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 597: break;
          case 245: 
            { return symbol(sym.PRIMARY, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 598: break;
          case 246: 
            { return symbol(sym.WAITFOR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 599: break;
          case 247: 
            { return symbol(sym.VARYING, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 600: break;
          case 248: 
            { return symbol(sym.VARCHAR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 601: break;
          case 249: 
            { return symbol(sym.FOREIGN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 602: break;
          case 250: 
            { return symbol(sym.FORTRAN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 603: break;
          case 251: 
            { return symbol(sym.ENDEXEC, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 604: break;
          case 252: 
            { return symbol(sym.EXTERNAL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 605: break;
          case 253: 
            { return symbol(sym.NATIONAL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 606: break;
          case 254: 
            { return symbol(sym.LANGUAGE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 607: break;
          case 255: 
            { return symbol(sym.ALLOCATE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 608: break;
          case 256: 
            { return symbol(sym.ABSOLUTE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 609: break;
          case 257: 
            { return symbol(sym.DESCRIBE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 610: break;
          case 258: 
            { return symbol(sym.DEFERRED, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 611: break;
          case 259: 
            { return symbol(sym.DATABASE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 612: break;
          case 260: 
            { return symbol(sym.DISTINCT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 613: break;
          case 261: 
            { return symbol(sym.TEXTSIZE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 614: break;
          case 262: 
            { return symbol(sym.TRUNCATE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 615: break;
          case 263: 
            { return symbol(sym.TRAILING, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 616: break;
          case 264: 
            { return symbol(sym.RELATIVE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 617: break;
          case 265: 
            { return symbol(sym.READTEXT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 618: break;
          case 266: 
            { return symbol(sym.RESTRICT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 619: break;
          case 267: 
            { return symbol(sym.ROLLBACK, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 620: break;
          case 268: 
            { return symbol(sym.ROWCOUNT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 621: break;
          case 269: 
            { return symbol(sym.SHUTDOWN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 622: break;
          case 270: 
            { return symbol(sym.SMALLINT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 623: break;
          case 271: 
            { return symbol(sym.SQLERROR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 624: break;
          case 272: 
            { return symbol(sym.SQLSTATE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 625: break;
          case 273: 
            { return symbol(sym.CASCADED, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 626: break;
          case 274: 
            { return symbol(sym.CONTAINS, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 627: break;
          case 275: 
            { return symbol(sym.CONTINUE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 628: break;
          case 276: 
            { return symbol(sym.COALESCE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 629: break;
          case 277: 
            { return symbol(sym.HOLDLOCK, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 630: break;
          case 278: 
            { return symbol(sym.OVERLAPS, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 631: break;
          case 279: 
            { return symbol(sym.INTERVAL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 632: break;
          case 280: 
            { return symbol(sym.IDENTITY, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 633: break;
          case 281: 
            { return symbol(sym.PRESERVE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 634: break;
          case 282: 
            { return symbol(sym.POSITION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 635: break;
          case 283: 
            { return symbol(sym.WHENEVER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 636: break;
          case 284: 
            { return symbol(sym.FUNCTION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 637: break;
          case 285: 
            { return symbol(sym.FREETEXT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 638: break;
          case 286: 
            { return symbol(sym.EXCEPTION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 639: break;
          case 287: 
            { return symbol(sym.ASSERTION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 640: break;
          case 288: 
            { return symbol(sym.TEMPORARY, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 641: break;
          case 289: 
            { return symbol(sym.TRANSLATE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 642: break;
          case 290: 
            { return symbol(sym.TIMESTAMP, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 643: break;
          case 291: 
            { return symbol(sym.RAISERROR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 644: break;
          case 292: 
            { return symbol(sym.SUBSTRING, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 645: break;
          case 293: 
            { return symbol(sym.CLUSTERED, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 646: break;
          case 294: 
            { return symbol(sym.CHARACTER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 647: break;
          case 295: 
            { return symbol(sym.COLLATION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 648: break;
          case 296: 
            { return symbol(sym.OPENQUERY, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 649: break;
          case 297: 
            { return symbol(sym.INDICATOR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 650: break;
          case 298: 
            { return symbol(sym.INTERSECT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 651: break;
          case 299: 
            { return symbol(sym.INITIALLY, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 652: break;
          case 300: 
            { return symbol(sym.ISOLATION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 653: break;
          case 301: 
            { return symbol(sym.IMMEDIATE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 654: break;
          case 302: 
            { return symbol(sym.PRECISION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 655: break;
          case 303: 
            { return symbol(sym.PROCEDURE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 656: break;
          case 304: 
            { return symbol(sym.WRITETEXT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 657: break;
          case 305: 
            { return symbol(sym.VERDADERO, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 658: break;
          case 306: 
            { return symbol(sym.UPDATETEXT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 659: break;
          case 307: 
            { return symbol(sym.DEALLOCATE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 660: break;
          case 308: 
            { return symbol(sym.DESCRIPTOR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 661: break;
          case 309: 
            { return symbol(sym.DEFERRABLE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 662: break;
          case 310: 
            { return symbol(sym.DISCONNECT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 663: break;
          case 311: 
            { return symbol(sym.REFERENCES, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 664: break;
          case 312: 
            { return symbol(sym.ROWGUIDCOL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 665: break;
          case 313: 
            { return symbol(sym.STATISTICS, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 666: break;
          case 314: 
            { return symbol(sym.SQLWARNING, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 667: break;
          case 315: 
            { return symbol(sym.CHECKPOINT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 668: break;
          case 316: 
            { return symbol(sym.CONNECTION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 669: break;
          case 317: 
            { return symbol(sym.CONSTRAINT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 670: break;
          case 318: 
            { return symbol(sym.BIT_LENGTH, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 671: break;
          case 319: 
            { return symbol(sym.PRIVILEGES, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 672: break;
          case 320: 
            { return symbol(sym.FILLFACTOR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 673: break;
          case 321: 
            { return symbol(sym.NOCLUSTERED, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 674: break;
          case 322: 
            { return symbol(sym.DIAGNOSTICS, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 675: break;
          case 323: 
            { return symbol(sym.DISTRIBUTED, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 676: break;
          case 324: 
            { return symbol(sym.TABLESAMPLE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 677: break;
          case 325: 
            { return symbol(sym.TRANSLATION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 678: break;
          case 326: 
            { return symbol(sym.TRANSACTION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 679: break;
          case 327: 
            { return symbol(sym.TRY_CONVERT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 680: break;
          case 328: 
            { return symbol(sym.RECONFIGURE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 681: break;
          case 329: 
            { return symbol(sym.REPLICATION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 682: break;
          case 330: 
            { return symbol(sym.SYSTEM_USER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 683: break;
          case 331: 
            { return symbol(sym.CHAR_LENGTH, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 684: break;
          case 332: 
            { return symbol(sym.CONSTRAINTS, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 685: break;
          case 333: 
            { return symbol(sym.INSENSITIVE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 686: break;
          case 334: 
            { return symbol(sym.IDENTITYCOL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 687: break;
          case 335: 
            { return symbol(sym.SESSION_USER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 688: break;
          case 336: 
            { return symbol(sym.CURRENT_USER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 689: break;
          case 337: 
            { return symbol(sym.CURRENT_DATE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 690: break;
          case 338: 
            { return symbol(sym.CURRENT_TIME, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 691: break;
          case 339: 
            { return symbol(sym.OCTET_LENGTH, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 692: break;
          case 340: 
            { return symbol(sym.AUTHORIZATION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 693: break;
          case 341: 
            { return symbol(sym.TIMEZONE_HOUR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 694: break;
          case 342: 
            { return symbol(sym.SECURITYAUDIT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 695: break;
          case 343: 
            { return symbol(sym.CONTAINSTABLE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 696: break;
          case 344: 
            { return symbol(sym.CORRESPONDING, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 697: break;
          case 345: 
            { return symbol(sym.FREETEXTTABLE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 698: break;
          case 346: 
            { return symbol(sym.OPENDATASOURCE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 699: break;
          case 347: 
            { return symbol(sym.TIMEZONE_MINUTE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 700: break;
          case 348: 
            { return symbol(sym.IDENTITY_INSERT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 701: break;
          case 349: 
            { return symbol(sym.CHARACTER_LENGTH, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 702: break;
          case 350: 
            { return symbol(sym.CURRENT_TIMESTAMP, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 703: break;
          case 351: 
            { return symbol(sym.SEMANTICKEYPHRASETABLE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 704: break;
          case 352: 
            { return symbol(sym.SEMANTICSIMILARITYTABLE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 705: break;
          case 353: 
            { return symbol(sym.SEMANTICSIMILARITYDETAILSTABLE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 706: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }

  /**
   * Runs the scanner on input files.
   *
   * This is a standalone scanner, it will print any unmatched
   * text to System.out unchanged.
   *
   * @param argv   the command line, contains the filenames to run
   *               the scanner on.
   */
  public static void main(String argv[]) {
    if (argv.length == 0) {
      System.out.println("Usage : java Lexemas [ --encoding <name> ] <inputfile(s)>");
    }
    else {
      int firstFilePos = 0;
      String encodingName = "UTF-8";
      if (argv[0].equals("--encoding")) {
        firstFilePos = 2;
        encodingName = argv[1];
        try {
          java.nio.charset.Charset.forName(encodingName); // Side-effect: is encodingName valid? 
        } catch (Exception e) {
          System.out.println("Invalid encoding '" + encodingName + "'");
          return;
        }
      }
      for (int i = firstFilePos; i < argv.length; i++) {
        Lexemas scanner = null;
        try {
          java.io.FileInputStream stream = new java.io.FileInputStream(argv[i]);
          java.io.Reader reader = new java.io.InputStreamReader(stream, encodingName);
          scanner = new Lexemas(reader);
          while ( !scanner.zzAtEOF ) scanner.next_token();
        }
        catch (java.io.FileNotFoundException e) {
          System.out.println("File not found : \""+argv[i]+"\"");
        }
        catch (java.io.IOException e) {
          System.out.println("IO error scanning file \""+argv[i]+"\"");
          System.out.println(e);
        }
        catch (Exception e) {
          System.out.println("Unexpected exception:");
          e.printStackTrace();
        }
      }
    }
  }


}
