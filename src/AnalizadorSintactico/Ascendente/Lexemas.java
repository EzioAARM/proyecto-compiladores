/* The following code was generated by JFlex 1.7.0 */

package AnalizadorSintactico.Ascendente;
import java_cup.runtime.*;
import java.io.*;
import java.io.FileReader;
import AnalizadorLexico.MyToken;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>Lexemas.flex</tt>
 */
public class Lexemas implements java_cup.runtime.Scanner {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;
  public static final int COMENTARIOMULTI = 2;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0,  0,  1, 1
  };

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = {
    61, 61, 61, 61, 61, 61, 61, 61, 61, 16, 14, 18, 18, 17, 61, 61, 
    61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 
    16, 26, 61, 38, 61, 22, 27, 13, 33, 34, 20,  1, 30,  2,  7, 21, 
     3,  3,  3,  3,  3,  3,  3,  3,  3,  3, 61, 29, 23, 24, 25, 61, 
    37, 39, 50, 45, 40,  8, 57, 53, 46, 48, 59, 51, 12, 55, 10, 47, 
    52, 60, 42, 44, 41, 11, 56, 54, 58, 43, 49, 31, 61, 32, 61,  5, 
    61,  4,  4,  4,  4,  9,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4, 
     4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4, 35, 28, 36, 61, 61, 
    61, 61, 61, 61, 61, 18, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 
    61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 
    61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 
    61, 61, 61, 61, 15, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 
    61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 
    61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 
    61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 
    61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61
  };

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\2\0\1\1\1\2\1\3\1\4\1\5\1\6\1\1"+
    "\1\7\4\5\1\6\1\10\1\6\1\11\1\12\1\13"+
    "\1\14\1\15\1\16\1\17\2\6\1\20\1\21\1\22"+
    "\1\23\1\24\1\25\1\26\1\27\1\30\1\31\24\5"+
    "\14\32\1\0\1\10\1\33\11\5\1\34\7\5\1\35"+
    "\1\36\2\35\1\0\1\37\1\40\1\41\1\42\1\43"+
    "\1\44\1\45\1\46\1\47\1\50\4\5\1\51\1\5"+
    "\1\52\17\5\1\53\33\5\1\54\1\5\1\55\3\5"+
    "\1\56\1\57\1\5\1\60\1\5\1\61\5\5\1\62"+
    "\16\5\1\63\24\5\1\0\1\64\1\0\1\65\16\5"+
    "\1\66\4\5\1\67\16\5\2\70\1\71\1\72\1\5"+
    "\1\73\1\5\1\74\1\75\1\76\1\5\1\77\2\5"+
    "\1\100\4\5\1\101\3\5\1\102\17\5\1\103\20\5"+
    "\1\104\4\5\1\105\12\5\1\106\31\5\1\107\2\5"+
    "\1\110\17\5\1\111\1\112\4\5\1\113\7\5\1\114"+
    "\14\5\1\115\2\5\1\116\14\5\1\117\3\5\1\0"+
    "\1\33\1\0\1\120\2\5\1\121\3\5\1\122\1\5"+
    "\1\123\1\124\5\5\1\125\6\5\1\126\6\5\1\127"+
    "\1\5\1\130\1\131\3\5\1\132\6\5\1\133\2\5"+
    "\1\134\4\5\1\135\1\136\1\5\1\137\5\5\1\140"+
    "\1\141\4\5\1\142\3\5\1\143\1\5\1\144\1\145"+
    "\1\5\1\146\1\147\7\5\1\150\2\5\1\151\3\5"+
    "\1\152\10\5\1\153\5\5\1\154\1\155\13\5\1\156"+
    "\1\157\4\5\1\160\14\5\1\161\1\5\1\162\4\5"+
    "\1\163\1\5\1\164\5\5\1\165\7\5\1\166\2\5"+
    "\1\167\3\5\1\170\1\5\1\171\2\5\1\172\5\5"+
    "\1\173\11\5\1\174\2\5\1\175\2\5\1\176\1\177"+
    "\11\5\1\200\2\5\1\201\3\5\1\202\3\5\1\203"+
    "\2\5\1\204\1\33\1\0\13\5\1\205\1\206\2\5"+
    "\1\207\3\5\1\210\1\211\1\5\1\212\1\5\1\213"+
    "\1\5\1\214\1\215\3\5\1\216\23\5\1\217\26\5"+
    "\1\220\15\5\1\221\3\5\1\222\5\5\1\223\3\5"+
    "\1\224\1\225\7\5\1\226\10\5\1\227\1\5\1\230"+
    "\7\5\1\231\1\232\7\5\1\233\4\5\1\234\1\5"+
    "\1\235\12\5\1\236\1\237\3\5\1\240\1\5\1\241"+
    "\1\242\1\5\1\243\1\5\1\244\1\245\1\5\1\246"+
    "\1\247\1\250\3\5\1\251\2\5\1\252\1\5\1\253"+
    "\1\254\1\5\1\255\3\5\1\256\1\0\1\257\1\260"+
    "\3\5\1\261\1\262\1\263\5\5\1\264\2\5\1\265"+
    "\2\5\1\266\3\5\1\267\1\5\1\270\7\5\1\271"+
    "\1\272\22\5\1\273\4\5\1\274\1\275\5\5\1\276"+
    "\4\5\1\277\4\5\1\300\1\301\7\5\1\302\3\5"+
    "\1\303\10\5\1\304\4\5\1\305\1\306\1\5\1\307"+
    "\4\5\1\310\7\5\1\311\6\5\1\312\1\313\2\5"+
    "\1\314\1\5\1\315\7\5\1\316\3\5\1\317\1\320"+
    "\1\321\1\5\1\322\7\5\1\0\1\323\1\5\1\324"+
    "\1\5\1\325\1\326\2\5\1\327\1\330\1\331\1\5"+
    "\1\332\10\5\1\333\1\334\2\5\1\335\15\5\1\336"+
    "\1\337\4\5\1\340\1\5\1\341\7\5\1\342\1\343"+
    "\1\5\1\344\10\5\1\345\1\5\1\346\1\5\1\347"+
    "\1\350\3\5\1\351\3\5\1\352\1\353\3\5\1\354"+
    "\3\5\1\355\2\5\1\356\3\5\1\357\1\5\1\360"+
    "\4\5\1\361\1\5\1\362\1\363\2\5\1\364\1\5"+
    "\1\365\2\5\1\366\3\5\1\367\1\370\2\5\1\371"+
    "\1\372\1\5\1\373\1\374\1\5\1\375\2\5\1\376"+
    "\1\5\1\377\1\5\1\u0100\1\5\1\u0101\1\5\1\u0102"+
    "\1\5\1\u0103\2\5\1\u0104\2\5\1\u0105\1\5\1\u0106"+
    "\2\5\1\u0107\3\5\1\u0108\1\u0109\1\u010a\4\5\1\u010b"+
    "\1\u010c\7\5\1\u010d\1\u010e\1\u010f\1\u0110\3\5\1\u0111"+
    "\4\5\1\u0112\1\u0113\2\5\1\u0114\1\5\1\u0115\3\5"+
    "\1\u0116\2\5\1\u0117\2\5\1\u0118\3\5\1\u0119\3\5"+
    "\1\u011a\1\5\1\u011b\1\5\1\u011c\1\u011d\1\5\1\u011e"+
    "\3\5\1\u011f\6\5\1\u0120\1\5\1\u0121\3\5\1\u0122"+
    "\4\5\1\u0123\5\5\1\u0124\6\5\1\u0125\2\5\1\u0126"+
    "\3\5\1\u0127\3\5\1\u0128\1\u0129\1\u012a\1\5\1\u012b"+
    "\2\5\1\u012c\1\u012d\1\5\1\u012e\1\u012f\1\5\1\u0130"+
    "\1\u0131\3\5\1\u0132\1\5\1\u0133\1\u0134\1\u0135\2\5"+
    "\1\u0136\10\5\1\u0137\1\u0138\4\5\1\u0139\1\5\1\u013a"+
    "\3\5\1\u013b\2\5\1\u013c\1\5\1\u013d\6\5\1\u013e"+
    "\1\u013f\1\5\1\u0140\1\u0141\1\5\1\u0142\1\u0143\1\u0144"+
    "\1\u0145\1\u0146\1\u0147\2\5\1\u0148\1\u0149\4\5\1\u014a"+
    "\3\5\1\u014b\2\5\1\u014c\3\5\1\u014d\1\5\1\u014e"+
    "\4\5\1\u014f\3\5\1\u0150\1\u0151\1\u0152\3\5\1\u0153"+
    "\3\5\1\u0154\1\u0155\1\5\1\u0156\4\5\1\u0157\1\u0158"+
    "\2\5\1\u0159\5\5\1\u015a\1\5\1\u015b\4\5\1\u015c"+
    "\3\5\1\u015d\2\5\1\u015e\15\5\1\u015f\1\5\1\u0160"+
    "\6\5\1\u0161";

  private static int [] zzUnpackAction() {
    int [] result = new int[1410];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\76\0\174\0\272\0\370\0\u0136\0\u0174\0\174"+
    "\0\u01b2\0\174\0\u01f0\0\u022e\0\u026c\0\u02aa\0\u02e8\0\174"+
    "\0\u0326\0\174\0\u0364\0\174\0\u03a2\0\u03e0\0\u041e\0\u045c"+
    "\0\u049a\0\u04d8\0\174\0\174\0\u0516\0\174\0\u0554\0\174"+
    "\0\u0592\0\174\0\174\0\u05d0\0\u060e\0\u064c\0\u068a\0\u06c8"+
    "\0\u0706\0\u0744\0\u0782\0\u07c0\0\u07fe\0\u083c\0\u087a\0\u08b8"+
    "\0\u08f6\0\u0934\0\u0972\0\u09b0\0\u09ee\0\u0a2c\0\u0a6a\0\u0aa8"+
    "\0\174\0\u0ae6\0\u03a2\0\u03e0\0\u041e\0\u045c\0\u049a\0\u04d8"+
    "\0\u0516\0\u0554\0\u0592\0\u05d0\0\u01b2\0\u0b24\0\u0b62\0\u0ba0"+
    "\0\u0bde\0\u0c1c\0\u0c5a\0\u0c98\0\u0cd6\0\u0d14\0\u0d52\0\u0d90"+
    "\0\u0dce\0\u0e0c\0\u0e4a\0\u0e88\0\u0ec6\0\u0f04\0\u0f42\0\u0f80"+
    "\0\u02e8\0\174\0\174\0\u0326\0\u0fbe\0\174\0\174\0\174"+
    "\0\174\0\174\0\174\0\174\0\174\0\174\0\174\0\u0ffc"+
    "\0\u103a\0\u1078\0\u10b6\0\u0174\0\u10f4\0\u1132\0\u1170\0\u11ae"+
    "\0\u11ec\0\u122a\0\u1268\0\u12a6\0\u12e4\0\u1322\0\u1360\0\u139e"+
    "\0\u13dc\0\u141a\0\u1458\0\u1496\0\u14d4\0\u1512\0\u1550\0\u158e"+
    "\0\u15cc\0\u160a\0\u1648\0\u1686\0\u16c4\0\u1702\0\u1740\0\u177e"+
    "\0\u17bc\0\u17fa\0\u1838\0\u1876\0\u18b4\0\u18f2\0\u1930\0\u196e"+
    "\0\u19ac\0\u19ea\0\u1a28\0\u1a66\0\u1aa4\0\u1ae2\0\u1b20\0\u1b5e"+
    "\0\u1b9c\0\u1bda\0\u1c18\0\u1c56\0\u1c94\0\u1cd2\0\u1d10\0\u1d4e"+
    "\0\u1d8c\0\u1dca\0\u1e08\0\u1e46\0\u0174\0\u1e84\0\u1ec2\0\u1f00"+
    "\0\u1f3e\0\u1f7c\0\u0174\0\u1fba\0\u1ff8\0\u2036\0\u2074\0\u20b2"+
    "\0\u20f0\0\u212e\0\u216c\0\u21aa\0\u21e8\0\u2226\0\u2264\0\u22a2"+
    "\0\u22e0\0\u231e\0\u235c\0\u239a\0\u23d8\0\u2416\0\u2454\0\u2492"+
    "\0\u24d0\0\u250e\0\u254c\0\u258a\0\u25c8\0\u2606\0\u2644\0\u2682"+
    "\0\u26c0\0\u26fe\0\u273c\0\u277a\0\u27b8\0\u27f6\0\u0ae6\0\174"+
    "\0\u2834\0\u2872\0\u28b0\0\u28ee\0\u292c\0\u296a\0\u29a8\0\u29e6"+
    "\0\u2a24\0\u2a62\0\u2aa0\0\u2ade\0\u2b1c\0\u2b5a\0\u2b98\0\u2bd6"+
    "\0\u0174\0\u2c14\0\u2c52\0\u2c90\0\u2cce\0\u2d0c\0\u2d4a\0\u2d88"+
    "\0\u2dc6\0\u2e04\0\u2e42\0\u2e80\0\u2ebe\0\u2efc\0\u2f3a\0\u2f78"+
    "\0\u2fb6\0\u2ff4\0\u3032\0\u3070\0\174\0\u0fbe\0\u0174\0\u0174"+
    "\0\u30ae\0\u30ec\0\u312a\0\u0174\0\u0174\0\u0174\0\u3168\0\u0174"+
    "\0\u31a6\0\u31e4\0\u0174\0\u3222\0\u3260\0\u329e\0\u32dc\0\u331a"+
    "\0\u3358\0\u3396\0\u33d4\0\u0174\0\u3412\0\u3450\0\u348e\0\u34cc"+
    "\0\u350a\0\u3548\0\u3586\0\u35c4\0\u3602\0\u3640\0\u367e\0\u36bc"+
    "\0\u36fa\0\u3738\0\u3776\0\u0174\0\u37b4\0\u37f2\0\u3830\0\u386e"+
    "\0\u38ac\0\u38ea\0\u3928\0\u3966\0\u39a4\0\u39e2\0\u3a20\0\u3a5e"+
    "\0\u3a9c\0\u3ada\0\u3b18\0\u3b56\0\u3b94\0\u3bd2\0\u3c10\0\u3c4e"+
    "\0\u3c8c\0\u0174\0\u3cca\0\u3d08\0\u3d46\0\u3d84\0\u3dc2\0\u3e00"+
    "\0\u3e3e\0\u3e7c\0\u3eba\0\u3ef8\0\u3f36\0\u3f74\0\u3fb2\0\u3ff0"+
    "\0\u402e\0\u406c\0\u40aa\0\u40e8\0\u4126\0\u4164\0\u41a2\0\u41e0"+
    "\0\u421e\0\u425c\0\u429a\0\u42d8\0\u4316\0\u4354\0\u4392\0\u43d0"+
    "\0\u440e\0\u444c\0\u448a\0\u44c8\0\u4506\0\u4544\0\u4582\0\u45c0"+
    "\0\u45fe\0\u463c\0\u467a\0\u46b8\0\u46f6\0\u4734\0\u4772\0\u47b0"+
    "\0\u47ee\0\u482c\0\u486a\0\u48a8\0\u48e6\0\u4924\0\u4962\0\u49a0"+
    "\0\u49de\0\u4a1c\0\u0174\0\u4a5a\0\u4a98\0\u4ad6\0\u4b14\0\u0174"+
    "\0\u4b52\0\u4b90\0\u4bce\0\u4c0c\0\u4c4a\0\u4c88\0\u4cc6\0\u0174"+
    "\0\u4d04\0\u4d42\0\u4d80\0\u4dbe\0\u4dfc\0\u4e3a\0\u4e78\0\u4eb6"+
    "\0\u4ef4\0\u4f32\0\u4f70\0\u4fae\0\u0174\0\u4fec\0\u502a\0\u5068"+
    "\0\u50a6\0\u50e4\0\u5122\0\u5160\0\u519e\0\u51dc\0\u521a\0\u5258"+
    "\0\u5296\0\u52d4\0\u5312\0\u5350\0\u538e\0\u53cc\0\u540a\0\u5448"+
    "\0\u5486\0\u54c4\0\u5502\0\u0174\0\u5540\0\u557e\0\u55bc\0\u55fa"+
    "\0\u5638\0\u5676\0\u0174\0\u56b4\0\u0174\0\u56f2\0\u5730\0\u576e"+
    "\0\u57ac\0\u57ea\0\u5828\0\u0174\0\u5866\0\u58a4\0\u58e2\0\u5920"+
    "\0\u595e\0\u599c\0\u0174\0\u59da\0\u5a18\0\u5a56\0\u5a94\0\u5ad2"+
    "\0\u5b10\0\u0174\0\u5b4e\0\u0174\0\u0174\0\u5b8c\0\u5bca\0\u5c08"+
    "\0\u0174\0\u5c46\0\u5c84\0\u5cc2\0\u5d00\0\u5d3e\0\u5d7c\0\u0174"+
    "\0\u5dba\0\u5df8\0\u5e36\0\u5e74\0\u5eb2\0\u5ef0\0\u5f2e\0\u0174"+
    "\0\u0174\0\u5f6c\0\u0174\0\u5faa\0\u5fe8\0\u6026\0\u6064\0\u60a2"+
    "\0\u0174\0\u0174\0\u60e0\0\u611e\0\u615c\0\u619a\0\u61d8\0\u6216"+
    "\0\u6254\0\u6292\0\u0174\0\u62d0\0\u0174\0\u630e\0\u634c\0\u0174"+
    "\0\u638a\0\u63c8\0\u6406\0\u6444\0\u6482\0\u64c0\0\u64fe\0\u653c"+
    "\0\u0174\0\u657a\0\u65b8\0\u0174\0\u65f6\0\u6634\0\u6672\0\u0174"+
    "\0\u66b0\0\u66ee\0\u672c\0\u676a\0\u67a8\0\u67e6\0\u6824\0\u6862"+
    "\0\u0174\0\u68a0\0\u68de\0\u691c\0\u695a\0\u6998\0\u0174\0\u0174"+
    "\0\u69d6\0\u6a14\0\u6a52\0\u6a90\0\u6ace\0\u6b0c\0\u6b4a\0\u6b88"+
    "\0\u6bc6\0\u6c04\0\u6c42\0\u0174\0\u0174\0\u6c80\0\u6cbe\0\u6cfc"+
    "\0\u6d3a\0\u6d78\0\u6db6\0\u6df4\0\u6e32\0\u6e70\0\u6eae\0\u6eec"+
    "\0\u6f2a\0\u6f68\0\u6fa6\0\u6fe4\0\u7022\0\u7060\0\u0174\0\u709e"+
    "\0\u0174\0\u70dc\0\u711a\0\u7158\0\u7196\0\u71d4\0\u7212\0\u7250"+
    "\0\u728e\0\u72cc\0\u730a\0\u7348\0\u7386\0\u0174\0\u73c4\0\u7402"+
    "\0\u7440\0\u747e\0\u74bc\0\u74fa\0\u7538\0\u0174\0\u7576\0\u75b4"+
    "\0\u0174\0\u75f2\0\u7630\0\u766e\0\u0174\0\u76ac\0\u0174\0\u76ea"+
    "\0\u7728\0\u0174\0\u7766\0\u77a4\0\u77e2\0\u7820\0\u785e\0\u789c"+
    "\0\u78da\0\u7918\0\u7956\0\u7994\0\u79d2\0\u7a10\0\u7a4e\0\u7a8c"+
    "\0\u7aca\0\u0174\0\u7b08\0\u7b46\0\u7b84\0\u7bc2\0\u7c00\0\u0174"+
    "\0\u7c3e\0\u7c7c\0\u7cba\0\u7cf8\0\u7d36\0\u7d74\0\u7db2\0\u7df0"+
    "\0\u7e2e\0\u7e6c\0\u0174\0\u7eaa\0\u7ee8\0\u0174\0\u7f26\0\u7f64"+
    "\0\u7fa2\0\u0174\0\u7fe0\0\u801e\0\u805c\0\u0174\0\u809a\0\u80d8"+
    "\0\u0174\0\u8116\0\u8154\0\u8192\0\u81d0\0\u820e\0\u824c\0\u828a"+
    "\0\u82c8\0\u8306\0\u8344\0\u8382\0\u83c0\0\u83fe\0\u0174\0\u0174"+
    "\0\u843c\0\u847a\0\u0174\0\u84b8\0\u84f6\0\u8534\0\u0174\0\u0174"+
    "\0\u8572\0\u0174\0\u85b0\0\u0174\0\u85ee\0\u0174\0\u0174\0\u862c"+
    "\0\u866a\0\u86a8\0\u0174\0\u86e6\0\u8724\0\u8762\0\u87a0\0\u87de"+
    "\0\u881c\0\u885a\0\u8898\0\u88d6\0\u8914\0\u8952\0\u8990\0\u89ce"+
    "\0\u8a0c\0\u8a4a\0\u8a88\0\u8ac6\0\u8b04\0\u8b42\0\u8b80\0\u8bbe"+
    "\0\u8bfc\0\u8c3a\0\u8c78\0\u8cb6\0\u8cf4\0\u8d32\0\u8d70\0\u8dae"+
    "\0\u8dec\0\u8e2a\0\u8e68\0\u8ea6\0\u8ee4\0\u8f22\0\u8f60\0\u8f9e"+
    "\0\u8fdc\0\u901a\0\u9058\0\u9096\0\u90d4\0\u0174\0\u9112\0\u9150"+
    "\0\u918e\0\u91cc\0\u920a\0\u9248\0\u9286\0\u92c4\0\u9302\0\u9340"+
    "\0\u937e\0\u93bc\0\u93fa\0\u0174\0\u9438\0\u9476\0\u94b4\0\u0174"+
    "\0\u94f2\0\u9530\0\u956e\0\u95ac\0\u95ea\0\u0174\0\u9628\0\u9666"+
    "\0\u96a4\0\u0174\0\u96e2\0\u9720\0\u975e\0\u979c\0\u97da\0\u9818"+
    "\0\u9856\0\u9894\0\u0174\0\u98d2\0\u9910\0\u994e\0\u998c\0\u99ca"+
    "\0\u9a08\0\u9a46\0\u9a84\0\u0174\0\u9ac2\0\u0174\0\u9b00\0\u9b3e"+
    "\0\u9b7c\0\u9bba\0\u9bf8\0\u9c36\0\u9c74\0\u0174\0\u0174\0\u9cb2"+
    "\0\u9cf0\0\u9d2e\0\u9d6c\0\u9daa\0\u9de8\0\u9e26\0\u0174\0\u9e64"+
    "\0\u9ea2\0\u9ee0\0\u9f1e\0\u0174\0\u9f5c\0\u0174\0\u9f9a\0\u9fd8"+
    "\0\ua016\0\ua054\0\ua092\0\ua0d0\0\ua10e\0\ua14c\0\ua18a\0\ua1c8"+
    "\0\u0174\0\u0174\0\ua206\0\ua244\0\ua282\0\u0174\0\ua2c0\0\u0174"+
    "\0\u0174\0\ua2fe\0\ua33c\0\ua37a\0\u0174\0\u0174\0\ua3b8\0\u0174"+
    "\0\u0174\0\u0174\0\ua3f6\0\ua434\0\ua472\0\ua4b0\0\ua4ee\0\ua52c"+
    "\0\u0174\0\ua56a\0\u0174\0\u0174\0\ua5a8\0\u0174\0\ua5e6\0\ua624"+
    "\0\ua662\0\u0174\0\ua6a0\0\u0174\0\u0174\0\ua6de\0\ua71c\0\ua75a"+
    "\0\ua798\0\u0174\0\u0174\0\ua7d6\0\ua814\0\ua852\0\ua890\0\ua8ce"+
    "\0\u0174\0\ua90c\0\ua94a\0\ua988\0\ua9c6\0\uaa04\0\u0174\0\uaa42"+
    "\0\uaa80\0\uaabe\0\u0174\0\uaafc\0\u0174\0\uab3a\0\uab78\0\uabb6"+
    "\0\uabf4\0\uac32\0\uac70\0\uacae\0\u0174\0\u0174\0\uacec\0\uad2a"+
    "\0\uad68\0\uada6\0\uade4\0\uae22\0\uae60\0\uae9e\0\uaedc\0\uaf1a"+
    "\0\uaf58\0\uaf96\0\uafd4\0\ub012\0\ub050\0\ub08e\0\ub0cc\0\ub10a"+
    "\0\ub148\0\ub186\0\ub1c4\0\ub202\0\ub240\0\u0174\0\u0174\0\ub27e"+
    "\0\ub2bc\0\ub2fa\0\ub338\0\ub376\0\u0174\0\ub3b4\0\ub3f2\0\ub430"+
    "\0\ub46e\0\u0174\0\ub4ac\0\ub4ea\0\ub528\0\ub566\0\u0174\0\u0174"+
    "\0\ub5a4\0\ub5e2\0\ub620\0\ub65e\0\ub69c\0\ub6da\0\ub718\0\u0174"+
    "\0\ub756\0\ub794\0\ub7d2\0\u0174\0\ub810\0\ub84e\0\ub88c\0\ub8ca"+
    "\0\ub908\0\ub946\0\ub984\0\ub9c2\0\u0174\0\uba00\0\uba3e\0\uba7c"+
    "\0\ubaba\0\u0174\0\u0174\0\ubaf8\0\u0174\0\ubb36\0\ubb74\0\ubbb2"+
    "\0\ubbf0\0\u0174\0\ubc2e\0\ubc6c\0\ubcaa\0\ubce8\0\ubd26\0\ubd64"+
    "\0\ubda2\0\u0174\0\ubde0\0\ube1e\0\ube5c\0\ube9a\0\ubed8\0\ubf16"+
    "\0\u0174\0\u0174\0\ubf54\0\ubf92\0\u0174\0\ubfd0\0\u0174\0\uc00e"+
    "\0\uc04c\0\uc08a\0\uc0c8\0\uc106\0\uc144\0\uc182\0\u0174\0\uc1c0"+
    "\0\uc1fe\0\uc23c\0\u0174\0\u0174\0\u0174\0\uc27a\0\u0174\0\uc2b8"+
    "\0\uc2f6\0\uc334\0\uc372\0\uc3b0\0\uc3ee\0\uc42c\0\uc46a\0\u0174"+
    "\0\uc4a8\0\u0174\0\uc4e6\0\u0174\0\u0174\0\uc524\0\uc562\0\u0174"+
    "\0\u0174\0\u0174\0\uc5a0\0\u0174\0\uc5de\0\uc61c\0\uc65a\0\uc698"+
    "\0\uc6d6\0\uc714\0\uc752\0\uc790\0\u0174\0\u0174\0\uc7ce\0\uc80c"+
    "\0\u0174\0\uc84a\0\uc888\0\uc8c6\0\uc904\0\uc942\0\uc980\0\uc9be"+
    "\0\uc9fc\0\uca3a\0\uca78\0\ucab6\0\ucaf4\0\ucb32\0\u0174\0\u0174"+
    "\0\ucb70\0\ucbae\0\ucbec\0\ucc2a\0\u0174\0\ucc68\0\u0174\0\ucca6"+
    "\0\ucce4\0\ucd22\0\ucd60\0\ucd9e\0\ucddc\0\uce1a\0\u0174\0\uce58"+
    "\0\uce96\0\u0174\0\uced4\0\ucf12\0\ucf50\0\ucf8e\0\ucfcc\0\ud00a"+
    "\0\ud048\0\ud086\0\u0174\0\ud0c4\0\ud102\0\ud140\0\u0174\0\ud17e"+
    "\0\ud1bc\0\ud1fa\0\ud238\0\ud276\0\ud2b4\0\ud2f2\0\ud330\0\u0174"+
    "\0\u0174\0\ud36e\0\ud3ac\0\ud3ea\0\u0174\0\ud428\0\ud466\0\ud4a4"+
    "\0\u0174\0\ud4e2\0\ud520\0\u0174\0\ud55e\0\ud59c\0\ud5da\0\u0174"+
    "\0\ud618\0\u0174\0\ud656\0\ud694\0\ud6d2\0\ud710\0\u0174\0\ud74e"+
    "\0\u0174\0\u0174\0\ud78c\0\ud7ca\0\u0174\0\ud808\0\u0174\0\ud846"+
    "\0\ud884\0\u0174\0\ud8c2\0\ud900\0\ud93e\0\u0174\0\u0174\0\ud97c"+
    "\0\ud9ba\0\u0174\0\u0174\0\ud9f8\0\174\0\u0174\0\uda36\0\u0174"+
    "\0\uda74\0\udab2\0\u0174\0\udaf0\0\u0174\0\udb2e\0\u0174\0\udb6c"+
    "\0\u0174\0\udbaa\0\u0174\0\udbe8\0\u0174\0\udc26\0\udc64\0\u0174"+
    "\0\udca2\0\udce0\0\u0174\0\udd1e\0\u0174\0\udd5c\0\udd9a\0\u0174"+
    "\0\uddd8\0\ude16\0\ude54\0\u0174\0\u0174\0\u0174\0\ude92\0\uded0"+
    "\0\udf0e\0\udf4c\0\u0174\0\u0174\0\udf8a\0\udfc8\0\ue006\0\ue044"+
    "\0\ue082\0\ue0c0\0\ue0fe\0\u0174\0\u0174\0\u0174\0\u0174\0\ue13c"+
    "\0\ue17a\0\ue1b8\0\u0174\0\ue1f6\0\ue234\0\ue272\0\ue2b0\0\ue2ee"+
    "\0\u0174\0\ue32c\0\ue36a\0\u0174\0\ue3a8\0\u0174\0\ue3e6\0\ue424"+
    "\0\ue462\0\u0174\0\ue4a0\0\ue4de\0\u0174\0\ue51c\0\ue55a\0\ue598"+
    "\0\ue5d6\0\ue614\0\ue652\0\u0174\0\ue690\0\ue6ce\0\ue70c\0\u0174"+
    "\0\ue74a\0\u0174\0\ue788\0\u0174\0\ue7c6\0\ue804\0\u0174\0\ue842"+
    "\0\ue880\0\ue8be\0\u0174\0\ue8fc\0\ue93a\0\ue978\0\ue9b6\0\ue9f4"+
    "\0\uea32\0\u0174\0\uea70\0\u0174\0\ueaae\0\ueaec\0\ueb2a\0\u0174"+
    "\0\ueb68\0\ueba6\0\uebe4\0\uec22\0\u0174\0\uec60\0\uec9e\0\uecdc"+
    "\0\ued1a\0\ued58\0\u0174\0\ued96\0\uedd4\0\uee12\0\uee50\0\uee8e"+
    "\0\ueecc\0\u0174\0\uef0a\0\uef48\0\uef86\0\uefc4\0\uf002\0\uf040"+
    "\0\u0174\0\uf07e\0\uf0bc\0\uf0fa\0\u0174\0\u0174\0\u0174\0\uf138"+
    "\0\u0174\0\uf176\0\uf1b4\0\u0174\0\u0174\0\uf1f2\0\u0174\0\u0174"+
    "\0\uf230\0\u0174\0\u0174\0\uf26e\0\uf2ac\0\uf2ea\0\u0174\0\uf328"+
    "\0\u0174\0\u0174\0\u0174\0\uf366\0\uf3a4\0\u0174\0\uf3e2\0\uf420"+
    "\0\uf45e\0\uf49c\0\uf4da\0\uf518\0\uf556\0\uf594\0\u0174\0\u0174"+
    "\0\uf5d2\0\uf610\0\uf64e\0\uf68c\0\u0174\0\uf6ca\0\u0174\0\uf708"+
    "\0\uf746\0\uf784\0\u0174\0\uf7c2\0\uf800\0\u0174\0\uf83e\0\uf87c"+
    "\0\uf8ba\0\uf8f8\0\uf936\0\uf974\0\uf9b2\0\uf9f0\0\u0174\0\u0174"+
    "\0\ufa2e\0\u0174\0\u0174\0\ufa6c\0\u0174\0\u0174\0\u0174\0\u0174"+
    "\0\u0174\0\u0174\0\ufaaa\0\ufae8\0\u0174\0\u0174\0\ufb26\0\ufb64"+
    "\0\ufba2\0\ufbe0\0\u0174\0\ufc1e\0\ufc5c\0\ufc9a\0\u0174\0\ufcd8"+
    "\0\ufd16\0\u0174\0\ufd54\0\ufd92\0\ufdd0\0\u0174\0\ufe0e\0\u0174"+
    "\0\ufe4c\0\ufe8a\0\ufec8\0\uff06\0\u0174\0\uff44\0\uff82\0\uffc0"+
    "\0\u0174\0\u0174\0\ufffe\1\74\1\172\1\270\0\u0174\1\366"+
    "\1\u0134\1\u0172\0\u0174\0\u0174\1\u01b0\0\u0174\1\u01ee\1\u022c"+
    "\1\u026a\1\u02a8\0\u0174\0\u0174\1\u02e6\1\u0324\0\u0174\1\u0362"+
    "\1\u03a0\1\u03de\1\u041c\1\u045a\0\u0174\1\u0498\0\u0174\1\u04d6"+
    "\1\u0514\1\u0552\1\u0590\0\u0174\1\u05ce\1\u060c\1\u064a\0\u0174"+
    "\1\u0688\1\u06c6\0\u0174\1\u0704\1\u0742\1\u0780\1\u07be\1\u07fc"+
    "\1\u083a\1\u0878\1\u08b6\1\u08f4\1\u0932\1\u0970\1\u09ae\1\u09ec"+
    "\0\u0174\1\u0a2a\0\u0174\1\u0a68\1\u0aa6\1\u0ae4\1\u0b22\1\u0b60"+
    "\1\u0b9e\0\u0174";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[1410];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12"+
    "\1\13\1\7\1\14\1\15\1\16\1\17\1\20\1\21"+
    "\2\20\1\10\1\3\1\22\1\23\1\24\1\25\1\26"+
    "\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36"+
    "\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46"+
    "\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56"+
    "\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66"+
    "\1\67\1\7\1\70\1\7\1\10\21\71\2\10\1\3"+
    "\1\72\2\71\1\73\1\74\1\75\1\76\1\77\1\100"+
    "\2\71\1\101\1\71\1\102\1\71\1\103\2\71\1\104"+
    "\27\71\101\0\1\6\2\0\1\105\71\0\1\106\1\6"+
    "\2\0\1\105\72\0\1\6\2\0\1\105\1\107\71\0"+
    "\3\7\2\0\5\7\32\0\26\7\4\0\1\105\2\0"+
    "\1\105\1\107\71\0\3\7\2\0\2\7\1\110\1\7"+
    "\1\111\32\0\3\7\1\112\1\7\1\113\15\7\1\114"+
    "\2\7\4\0\3\7\2\0\1\115\2\7\1\116\1\7"+
    "\32\0\1\117\5\7\1\120\1\7\1\121\15\7\4\0"+
    "\3\7\2\0\2\7\1\122\2\7\32\0\5\7\1\123"+
    "\7\7\1\124\10\7\4\0\3\7\2\0\1\125\4\7"+
    "\32\0\1\126\7\7\1\127\1\130\14\7\1\0\15\131"+
    "\1\132\1\133\57\131\16\134\1\133\1\132\56\134\24\0"+
    "\1\135\101\0\1\136\75\0\1\137\75\0\1\140\75\0"+
    "\1\141\100\0\1\142\76\0\1\143\101\0\1\144\77\0"+
    "\1\145\77\0\1\146\77\0\1\147\32\0\3\7\2\0"+
    "\2\7\1\150\1\151\1\152\32\0\1\7\1\153\1\154"+
    "\1\155\1\7\1\156\1\157\4\7\1\160\5\7\1\161"+
    "\4\7\4\0\3\7\2\0\1\162\2\7\1\163\1\7"+
    "\32\0\1\164\2\7\1\165\4\7\1\166\1\167\1\7"+
    "\1\170\12\7\4\0\3\7\2\0\1\171\4\7\32\0"+
    "\1\172\2\7\1\173\1\7\1\174\1\7\1\175\1\176"+
    "\1\177\14\7\4\0\3\7\2\0\1\200\2\7\1\201"+
    "\1\7\32\0\1\202\7\7\1\203\1\204\14\7\4\0"+
    "\3\7\2\0\1\205\4\7\32\0\26\7\4\0\3\7"+
    "\2\0\1\206\2\7\1\207\1\7\32\0\1\210\1\7"+
    "\1\211\1\7\1\212\1\7\1\213\1\214\1\215\1\216"+
    "\3\7\1\217\2\7\1\220\4\7\1\221\4\0\3\7"+
    "\2\0\3\7\1\222\1\223\32\0\1\224\2\7\1\225"+
    "\3\7\1\226\1\227\15\7\4\0\3\7\2\0\5\7"+
    "\32\0\1\230\7\7\1\231\15\7\4\0\3\7\2\0"+
    "\2\7\1\232\1\233\1\7\32\0\3\7\1\234\2\7"+
    "\1\235\6\7\1\236\3\7\1\237\1\240\3\7\4\0"+
    "\3\7\2\0\2\7\1\241\2\7\32\0\1\7\1\242"+
    "\3\7\1\243\12\7\1\244\1\7\1\245\3\7\4\0"+
    "\3\7\2\0\5\7\32\0\10\7\1\246\15\7\4\0"+
    "\3\7\2\0\1\247\2\7\1\250\1\7\32\0\1\251"+
    "\2\7\1\252\1\253\3\7\1\254\1\255\14\7\4\0"+
    "\3\7\2\0\1\256\4\7\32\0\11\7\1\257\14\7"+
    "\4\0\3\7\2\0\1\260\2\7\1\261\1\262\32\0"+
    "\1\263\2\7\1\264\4\7\1\265\1\266\14\7\4\0"+
    "\3\7\2\0\1\267\3\7\1\270\32\0\3\7\1\271"+
    "\4\7\1\272\15\7\4\0\3\7\2\0\5\7\32\0"+
    "\1\273\2\7\1\274\3\7\1\275\1\276\1\277\14\7"+
    "\4\0\3\7\2\0\1\300\4\7\32\0\1\301\7\7"+
    "\1\302\1\303\14\7\4\0\3\7\2\0\1\304\4\7"+
    "\32\0\1\305\10\7\1\306\14\7\4\0\3\7\2\0"+
    "\1\307\2\7\1\310\1\311\32\0\1\312\2\7\1\313"+
    "\4\7\1\314\1\315\14\7\4\0\3\7\2\0\5\7"+
    "\32\0\10\7\1\316\15\7\25\0\1\317\1\320\50\0"+
    "\16\106\1\0\2\106\3\0\52\106\3\0\1\107\2\0"+
    "\1\107\1\0\2\321\67\0\3\7\2\0\5\7\32\0"+
    "\1\7\1\322\24\7\4\0\3\7\2\0\5\7\32\0"+
    "\5\7\1\323\20\7\4\0\3\7\2\0\5\7\32\0"+
    "\3\7\1\324\22\7\4\0\3\7\2\0\5\7\32\0"+
    "\6\7\1\325\17\7\4\0\3\7\2\0\1\326\4\7"+
    "\32\0\2\7\1\327\3\7\1\330\2\7\1\331\14\7"+
    "\4\0\3\7\2\0\5\7\32\0\23\7\1\332\2\7"+
    "\4\0\3\7\2\0\4\7\1\333\32\0\20\7\1\334"+
    "\5\7\4\0\3\7\2\0\5\7\32\0\2\7\1\335"+
    "\15\7\1\336\5\7\4\0\3\7\2\0\5\7\32\0"+
    "\7\7\1\337\16\7\4\0\3\7\2\0\2\7\1\340"+
    "\2\7\32\0\2\7\1\341\3\7\1\342\17\7\4\0"+
    "\3\7\2\0\5\7\32\0\11\7\1\343\2\7\1\344"+
    "\1\345\10\7\4\0\3\7\2\0\1\346\4\7\32\0"+
    "\1\347\10\7\1\350\14\7\4\0\3\7\2\0\5\7"+
    "\32\0\1\7\1\351\13\7\1\352\10\7\4\0\3\7"+
    "\2\0\5\7\32\0\1\353\20\7\1\354\1\355\3\7"+
    "\4\0\3\7\2\0\2\7\1\356\2\7\32\0\5\7"+
    "\1\357\20\7\4\0\3\7\2\0\5\7\32\0\1\360"+
    "\5\7\1\361\10\7\1\362\6\7\4\0\3\7\2\0"+
    "\2\7\1\363\2\7\32\0\14\7\1\364\11\7\1\0"+
    "\16\365\1\0\2\365\3\0\1\366\51\365\3\0\3\7"+
    "\2\0\5\7\32\0\1\7\1\367\2\7\1\370\21\7"+
    "\4\0\3\7\2\0\5\7\32\0\2\7\1\371\23\7"+
    "\4\0\3\7\2\0\4\7\1\372\32\0\2\7\1\373"+
    "\23\7\4\0\3\7\2\0\5\7\32\0\1\374\1\375"+
    "\24\7\4\0\3\7\2\0\1\376\4\7\32\0\26\7"+
    "\4\0\3\7\2\0\5\7\32\0\5\7\1\377\1\u0100"+
    "\17\7\4\0\3\7\2\0\5\7\32\0\2\7\1\u0101"+
    "\23\7\4\0\3\7\2\0\5\7\32\0\5\7\1\u0102"+
    "\20\7\4\0\3\7\2\0\5\7\32\0\16\7\1\u0103"+
    "\7\7\4\0\3\7\2\0\2\7\1\u0104\1\7\1\u0105"+
    "\32\0\1\u0106\4\7\1\u0107\1\u0108\13\7\1\u0109\3\7"+
    "\4\0\3\7\2\0\5\7\32\0\20\7\1\u010a\5\7"+
    "\4\0\3\7\2\0\5\7\32\0\2\7\1\u010b\1\7"+
    "\1\u010c\21\7\4\0\3\7\2\0\5\7\32\0\10\7"+
    "\1\u010d\15\7\4\0\3\7\2\0\3\7\1\u010e\1\7"+
    "\32\0\20\7\1\u010f\5\7\4\0\3\7\2\0\5\7"+
    "\32\0\1\u0110\4\7\1\u0111\20\7\4\0\3\7\2\0"+
    "\5\7\32\0\6\7\1\u0112\17\7\4\0\3\7\2\0"+
    "\5\7\32\0\20\7\1\u0113\2\7\1\u0114\2\7\4\0"+
    "\3\7\2\0\5\7\32\0\13\7\1\u0115\12\7\4\0"+
    "\3\7\2\0\3\7\1\u0116\1\7\32\0\1\u0117\3\7"+
    "\1\u0118\4\7\1\u0119\14\7\4\0\3\7\2\0\1\u011a"+
    "\4\7\32\0\26\7\4\0\3\7\2\0\1\u011b\4\7"+
    "\32\0\26\7\4\0\3\7\2\0\5\7\32\0\15\7"+
    "\1\u011c\10\7\4\0\3\7\2\0\5\7\32\0\20\7"+
    "\1\u011d\5\7\4\0\3\7\2\0\4\7\1\u011e\32\0"+
    "\1\u011f\1\7\1\u0120\2\7\1\u0121\1\u0122\6\7\1\u0123"+
    "\3\7\1\u0124\1\u0125\3\7\4\0\3\7\2\0\4\7"+
    "\1\u0126\32\0\26\7\4\0\3\7\2\0\5\7\32\0"+
    "\11\7\1\u0127\14\7\4\0\3\7\2\0\4\7\1\u0128"+
    "\32\0\17\7\1\u0129\6\7\4\0\3\7\2\0\5\7"+
    "\32\0\16\7\1\u012a\7\7\4\0\3\7\2\0\5\7"+
    "\32\0\1\u012b\25\7\4\0\3\7\2\0\4\7\1\u012c"+
    "\32\0\2\7\1\u012d\2\7\1\u012e\1\u012f\11\7\1\u0130"+
    "\5\7\4\0\3\7\2\0\5\7\32\0\13\7\1\u0131"+
    "\4\7\1\u0132\5\7\4\0\3\7\2\0\5\7\32\0"+
    "\21\7\1\u0133\4\7\4\0\3\7\2\0\5\7\32\0"+
    "\1\u0134\25\7\4\0\3\7\2\0\5\7\32\0\5\7"+
    "\1\u0135\20\7\4\0\3\7\2\0\5\7\32\0\3\7"+
    "\1\u0136\3\7\1\u0137\16\7\4\0\3\7\2\0\3\7"+
    "\1\u0138\1\7\32\0\26\7\4\0\3\7\2\0\5\7"+
    "\32\0\20\7\1\u0139\5\7\4\0\3\7\2\0\5\7"+
    "\32\0\12\7\1\u013a\13\7\4\0\3\7\2\0\5\7"+
    "\32\0\1\u013b\25\7\4\0\3\7\2\0\5\7\32\0"+
    "\1\u013c\25\7\4\0\3\7\2\0\4\7\1\u013d\32\0"+
    "\26\7\4\0\3\7\2\0\5\7\32\0\3\7\1\u013e"+
    "\22\7\4\0\3\7\2\0\3\7\1\u013f\1\7\32\0"+
    "\10\7\1\u0140\15\7\4\0\3\7\2\0\5\7\32\0"+
    "\2\7\1\u0141\2\7\1\u0142\20\7\4\0\3\7\2\0"+
    "\1\u0143\4\7\32\0\10\7\1\u0144\15\7\4\0\3\7"+
    "\2\0\1\u0145\4\7\32\0\1\u0146\25\7\4\0\3\7"+
    "\2\0\2\7\1\u0147\1\u0148\1\u0149\32\0\1\u014a\2\7"+
    "\1\u014b\14\7\1\u014c\5\7\4\0\3\7\2\0\5\7"+
    "\32\0\21\7\1\u014d\4\7\4\0\3\7\2\0\3\7"+
    "\1\u014e\1\u014f\32\0\26\7\4\0\3\7\2\0\4\7"+
    "\1\u0150\32\0\26\7\4\0\3\7\2\0\5\7\32\0"+
    "\2\7\1\u0151\23\7\4\0\3\7\2\0\5\7\32\0"+
    "\1\7\1\u0152\24\7\4\0\3\7\2\0\5\7\32\0"+
    "\2\7\1\u0153\23\7\4\0\3\7\2\0\1\u0154\4\7"+
    "\32\0\2\7\1\u0155\23\7\4\0\3\7\2\0\1\u0156"+
    "\4\7\32\0\26\7\4\0\3\7\2\0\5\7\32\0"+
    "\22\7\1\u0157\3\7\4\0\3\7\2\0\2\7\1\u0158"+
    "\2\7\32\0\1\7\1\u0159\1\u015a\2\7\1\u015b\1\u015c"+
    "\2\7\1\u015d\3\7\1\u015e\10\7\4\0\3\7\2\0"+
    "\1\u015f\4\7\32\0\26\7\4\0\3\7\2\0\5\7"+
    "\32\0\10\7\1\u0160\15\7\4\0\3\7\2\0\5\7"+
    "\32\0\20\7\1\u0161\5\7\4\0\3\7\2\0\2\7"+
    "\1\u0162\2\7\32\0\26\7\4\0\3\7\2\0\5\7"+
    "\32\0\2\7\1\u0163\13\7\1\u0164\7\7\4\0\3\7"+
    "\2\0\4\7\1\u0165\32\0\26\7\4\0\3\7\2\0"+
    "\5\7\32\0\6\7\1\u0166\17\7\4\0\3\7\2\0"+
    "\1\u0167\4\7\32\0\10\7\1\u0168\15\7\4\0\3\7"+
    "\2\0\5\7\32\0\2\7\1\u0169\23\7\4\0\3\7"+
    "\2\0\5\7\32\0\2\7\1\u016a\23\7\4\0\3\7"+
    "\2\0\5\7\32\0\4\7\1\u016b\21\7\4\0\3\7"+
    "\2\0\4\7\1\u016c\32\0\26\7\4\0\3\7\2\0"+
    "\5\7\32\0\3\7\1\u016d\22\7\4\0\3\7\2\0"+
    "\5\7\32\0\13\7\1\u016e\12\7\4\0\3\7\2\0"+
    "\5\7\32\0\1\u016f\25\7\4\0\3\7\2\0\5\7"+
    "\32\0\1\7\1\u0170\1\7\1\u0171\1\7\1\u0172\20\7"+
    "\4\0\3\7\2\0\1\u0173\4\7\32\0\10\7\1\u0174"+
    "\1\u0175\14\7\4\0\3\7\2\0\5\7\32\0\5\7"+
    "\1\u0176\20\7\4\0\3\7\2\0\5\7\32\0\21\7"+
    "\1\u0177\4\7\4\0\3\7\2\0\5\7\32\0\2\7"+
    "\1\u0178\23\7\4\0\3\7\2\0\5\7\32\0\10\7"+
    "\1\u0179\15\7\4\0\3\7\2\0\5\7\32\0\1\u017a"+
    "\7\7\1\u017b\15\7\4\0\3\7\2\0\5\7\32\0"+
    "\2\7\1\u017c\23\7\4\0\3\7\2\0\5\7\32\0"+
    "\11\7\1\u017d\14\7\4\0\3\7\2\0\5\7\32\0"+
    "\11\7\1\u017e\14\7\4\0\3\7\2\0\1\u017f\4\7"+
    "\32\0\11\7\1\u0180\14\7\4\0\3\7\2\0\5\7"+
    "\32\0\3\7\1\u0181\22\7\4\0\3\7\2\0\5\7"+
    "\32\0\2\7\1\u0182\23\7\4\0\3\7\2\0\5\7"+
    "\32\0\3\7\1\u0183\22\7\4\0\3\7\2\0\5\7"+
    "\32\0\2\7\1\u0184\20\7\1\u0185\2\7\4\0\3\7"+
    "\2\0\2\7\1\u0186\2\7\32\0\1\7\1\u0187\24\7"+
    "\4\0\3\7\2\0\2\7\1\u0188\2\7\32\0\26\7"+
    "\4\0\3\7\2\0\5\7\32\0\3\7\1\u0189\22\7"+
    "\4\0\3\7\2\0\4\7\1\u018a\32\0\3\7\1\u018b"+
    "\22\7\4\0\3\7\2\0\1\u018c\4\7\32\0\26\7"+
    "\4\0\3\7\2\0\5\7\32\0\2\7\1\u018d\23\7"+
    "\4\0\3\7\2\0\2\7\1\u018e\1\7\1\u018f\32\0"+
    "\26\7\4\0\3\7\2\0\5\7\32\0\10\7\1\u0190"+
    "\15\7\4\0\3\7\2\0\4\7\1\u0191\32\0\26\7"+
    "\4\0\3\7\2\0\1\u0192\4\7\32\0\10\7\1\u0193"+
    "\15\7\4\0\3\7\2\0\3\7\1\u0194\1\7\32\0"+
    "\3\7\1\u0195\22\7\4\0\3\7\2\0\4\7\1\u0196"+
    "\32\0\3\7\1\u0197\22\7\4\0\3\7\2\0\5\7"+
    "\32\0\11\7\1\u0198\14\7\2\0\2\u0199\1\u019a\2\0"+
    "\1\u019a\71\0\1\u019b\3\7\2\0\5\7\32\0\26\7"+
    "\4\0\3\7\2\0\1\u019c\4\7\32\0\26\7\4\0"+
    "\3\7\2\0\4\7\1\u019d\32\0\26\7\4\0\3\7"+
    "\2\0\5\7\32\0\1\u019e\25\7\4\0\3\7\2\0"+
    "\5\7\32\0\6\7\1\u019f\17\7\4\0\3\7\2\0"+
    "\1\u01a0\4\7\32\0\3\7\1\u01a1\22\7\4\0\3\7"+
    "\2\0\1\u01a2\4\7\32\0\26\7\4\0\3\7\2\0"+
    "\5\7\32\0\2\7\1\u01a3\2\7\1\u01a4\20\7\4\0"+
    "\3\7\2\0\5\7\32\0\2\7\1\u01a5\23\7\4\0"+
    "\3\7\2\0\4\7\1\u01a6\32\0\26\7\4\0\3\7"+
    "\2\0\1\u01a7\4\7\32\0\26\7\4\0\3\7\2\0"+
    "\3\7\1\u01a8\1\7\32\0\11\7\1\u01a9\14\7\4\0"+
    "\3\7\2\0\1\u01aa\4\7\32\0\26\7\4\0\3\7"+
    "\2\0\5\7\32\0\1\u01ab\25\7\4\0\3\7\2\0"+
    "\1\u01ac\4\7\32\0\26\7\4\0\3\7\2\0\4\7"+
    "\1\u01ad\32\0\7\7\1\u01ae\16\7\4\0\3\7\2\0"+
    "\5\7\32\0\10\7\1\u01af\14\7\1\u01b0\4\0\3\7"+
    "\2\0\2\7\1\u01b1\2\7\32\0\26\7\4\0\3\7"+
    "\2\0\5\7\32\0\11\7\1\u01b2\14\7\4\0\3\7"+
    "\2\0\5\7\32\0\3\7\1\u01b3\22\7\4\0\3\7"+
    "\2\0\5\7\32\0\16\7\1\u01b4\7\7\4\0\3\7"+
    "\2\0\2\7\1\u01b5\2\7\32\0\26\7\4\0\3\7"+
    "\2\0\5\7\32\0\1\u01b6\25\7\4\0\3\7\2\0"+
    "\1\u01b7\4\7\32\0\26\7\4\0\3\7\2\0\5\7"+
    "\32\0\1\7\1\u01b8\24\7\4\0\3\7\2\0\1\u01b9"+
    "\4\7\32\0\26\7\4\0\3\7\2\0\5\7\32\0"+
    "\2\7\1\u01ba\23\7\4\0\3\7\2\0\5\7\32\0"+
    "\16\7\1\u01bb\7\7\4\0\3\7\2\0\5\7\32\0"+
    "\2\7\1\u01bc\23\7\4\0\3\7\2\0\5\7\32\0"+
    "\1\7\1\u01bd\24\7\4\0\3\7\2\0\5\7\32\0"+
    "\1\u01be\25\7\4\0\3\7\2\0\1\u01bf\4\7\32\0"+
    "\26\7\4\0\3\7\2\0\1\u01c0\4\7\32\0\26\7"+
    "\4\0\3\7\2\0\1\u01c1\4\7\32\0\26\7\4\0"+
    "\3\7\2\0\5\7\32\0\7\7\1\u01c2\16\7\4\0"+
    "\3\7\2\0\5\7\32\0\10\7\1\u01c3\15\7\4\0"+
    "\3\7\2\0\1\u01c4\4\7\32\0\26\7\4\0\3\7"+
    "\2\0\1\u01c5\4\7\32\0\26\7\4\0\3\7\2\0"+
    "\5\7\32\0\11\7\1\u01c6\14\7\4\0\3\7\2\0"+
    "\5\7\32\0\10\7\1\u01c7\15\7\4\0\3\7\2\0"+
    "\5\7\32\0\4\7\1\u01c8\21\7\4\0\3\7\2\0"+
    "\1\u01c9\4\7\32\0\26\7\4\0\3\7\2\0\4\7"+
    "\1\u01ca\32\0\26\7\4\0\3\7\2\0\5\7\32\0"+
    "\6\7\1\u01cb\17\7\4\0\3\7\2\0\4\7\1\u01cc"+
    "\32\0\11\7\1\u01cd\14\7\4\0\3\7\2\0\1\u01ce"+
    "\4\7\32\0\1\u01cf\25\7\4\0\3\7\2\0\5\7"+
    "\32\0\15\7\1\u01d0\10\7\4\0\3\7\2\0\1\u01d1"+
    "\4\7\32\0\1\u01d2\25\7\4\0\3\7\2\0\5\7"+
    "\32\0\15\7\1\u01d3\10\7\4\0\3\7\2\0\5\7"+
    "\32\0\13\7\1\u01d4\12\7\4\0\3\7\2\0\5\7"+
    "\32\0\1\u01d5\25\7\4\0\3\7\2\0\5\7\32\0"+
    "\16\7\1\u01d6\7\7\4\0\3\7\2\0\5\7\32\0"+
    "\2\7\1\u01d7\3\7\1\u01d8\5\7\1\u01d9\11\7\4\0"+
    "\3\7\2\0\5\7\32\0\6\7\1\u01da\17\7\4\0"+
    "\3\7\2\0\5\7\32\0\15\7\1\u01db\10\7\4\0"+
    "\3\7\2\0\5\7\32\0\2\7\1\u01dc\23\7\4\0"+
    "\3\7\2\0\4\7\1\u01dd\32\0\26\7\4\0\3\7"+
    "\2\0\2\7\1\u01de\2\7\32\0\26\7\4\0\3\7"+
    "\2\0\2\7\1\u01df\2\7\32\0\11\7\1\u01e0\14\7"+
    "\4\0\2\7\1\u01e1\2\0\5\7\32\0\26\7\4\0"+
    "\3\7\2\0\5\7\32\0\16\7\1\u01e2\1\7\1\u01e3"+
    "\5\7\4\0\3\7\2\0\5\7\32\0\25\7\1\u01e4"+
    "\4\0\3\7\2\0\2\7\1\u01e5\2\7\32\0\26\7"+
    "\4\0\3\7\2\0\1\u01e6\4\7\32\0\26\7\4\0"+
    "\3\7\2\0\5\7\32\0\1\u01e7\25\7\4\0\3\7"+
    "\2\0\4\7\1\u01e8\32\0\1\7\1\u01e9\24\7\4\0"+
    "\3\7\2\0\3\7\1\u01ea\1\7\32\0\26\7\4\0"+
    "\3\7\2\0\5\7\32\0\2\7\1\u01eb\23\7\4\0"+
    "\3\7\2\0\5\7\32\0\10\7\1\u01ec\15\7\4\0"+
    "\3\7\2\0\4\7\1\u01ed\32\0\26\7\4\0\3\7"+
    "\2\0\1\u01ee\4\7\32\0\10\7\1\u01ef\15\7\4\0"+
    "\3\7\2\0\1\u01f0\4\7\32\0\26\7\4\0\3\7"+
    "\2\0\1\u01f1\4\7\32\0\26\7\4\0\3\7\2\0"+
    "\5\7\32\0\5\7\1\u01f2\20\7\4\0\3\7\2\0"+
    "\4\7\1\u01f3\32\0\26\7\4\0\3\7\2\0\5\7"+
    "\32\0\5\7\1\u01f4\1\u01f5\7\7\1\u01f6\7\7\4\0"+
    "\3\7\2\0\5\7\32\0\7\7\1\u01f7\16\7\4\0"+
    "\3\7\2\0\5\7\32\0\3\7\1\u01f8\22\7\4\0"+
    "\3\7\2\0\1\u01f9\4\7\32\0\26\7\4\0\3\7"+
    "\2\0\3\7\1\u01fa\1\7\32\0\26\7\4\0\3\7"+
    "\2\0\5\7\32\0\5\7\1\u01fb\20\7\4\0\3\7"+
    "\2\0\3\7\1\u01fc\1\7\32\0\2\7\1\u01fd\5\7"+
    "\1\u01fe\15\7\4\0\3\7\2\0\5\7\32\0\1\u01ff"+
    "\25\7\4\0\3\7\2\0\5\7\32\0\5\7\1\u0200"+
    "\20\7\4\0\3\7\2\0\1\u0201\4\7\32\0\26\7"+
    "\4\0\3\7\2\0\5\7\32\0\2\7\1\u0202\23\7"+
    "\4\0\3\7\2\0\5\7\32\0\2\7\1\u0203\23\7"+
    "\4\0\3\7\2\0\5\7\32\0\10\7\1\u0204\15\7"+
    "\4\0\3\7\2\0\1\u0205\4\7\32\0\26\7\4\0"+
    "\3\7\2\0\5\7\32\0\2\7\1\u0206\23\7\4\0"+
    "\3\7\2\0\1\u0207\4\7\32\0\26\7\4\0\3\7"+
    "\2\0\1\u0208\4\7\32\0\26\7\4\0\3\7\2\0"+
    "\5\7\32\0\6\7\1\u0209\17\7\4\0\3\7\2\0"+
    "\4\7\1\u020a\32\0\26\7\4\0\3\7\2\0\1\u020b"+
    "\4\7\32\0\5\7\1\u020c\1\u020d\10\7\1\u020e\6\7"+
    "\4\0\3\7\2\0\5\7\32\0\3\7\1\u020f\1\7"+
    "\1\u0210\20\7\4\0\3\7\2\0\5\7\32\0\5\7"+
    "\1\u0211\20\7\4\0\3\7\2\0\5\7\32\0\5\7"+
    "\1\u0212\20\7\4\0\3\7\2\0\5\7\32\0\1\u0213"+
    "\25\7\4\0\3\7\2\0\1\u0214\4\7\32\0\2\7"+
    "\1\u0215\3\7\1\u0216\17\7\4\0\3\7\2\0\5\7"+
    "\32\0\1\u0217\25\7\4\0\3\7\2\0\5\7\32\0"+
    "\5\7\1\u0218\20\7\4\0\3\7\2\0\5\7\32\0"+
    "\6\7\1\u0219\17\7\4\0\3\7\2\0\5\7\32\0"+
    "\3\7\1\u021a\22\7\4\0\3\7\2\0\2\7\1\u021b"+
    "\2\7\32\0\2\7\1\u021c\2\7\1\u021d\13\7\1\u021e"+
    "\4\7\4\0\3\7\2\0\2\7\1\u021f\2\7\32\0"+
    "\26\7\4\0\3\7\2\0\3\7\1\u0220\1\u0221\32\0"+
    "\26\7\4\0\3\7\2\0\4\7\1\u0222\32\0\26\7"+
    "\4\0\3\7\2\0\5\7\32\0\3\7\1\u0223\22\7"+
    "\4\0\3\7\2\0\5\7\32\0\15\7\1\u0224\2\7"+
    "\1\u0225\5\7\4\0\3\7\2\0\5\7\32\0\11\7"+
    "\1\u0226\14\7\4\0\3\7\2\0\5\7\32\0\3\7"+
    "\1\u0227\22\7\4\0\3\7\2\0\5\7\32\0\1\7"+
    "\1\u0228\24\7\4\0\3\7\2\0\5\7\32\0\4\7"+
    "\1\u0229\21\7\4\0\3\7\2\0\1\u022a\4\7\32\0"+
    "\15\7\1\u022b\10\7\4\0\3\7\2\0\1\u022c\4\7"+
    "\32\0\26\7\4\0\3\7\2\0\1\u022d\4\7\32\0"+
    "\26\7\4\0\3\7\2\0\2\7\1\u022e\2\7\32\0"+
    "\26\7\4\0\3\7\2\0\5\7\32\0\11\7\1\u022f"+
    "\14\7\4\0\3\7\2\0\5\7\32\0\3\7\1\u0230"+
    "\22\7\4\0\3\7\2\0\5\7\32\0\5\7\1\u0231"+
    "\20\7\4\0\3\7\2\0\1\u0232\4\7\32\0\26\7"+
    "\4\0\3\7\2\0\1\u0233\4\7\32\0\11\7\1\u0234"+
    "\14\7\4\0\3\7\2\0\1\u0235\4\7\32\0\10\7"+
    "\1\u0236\15\7\4\0\3\7\2\0\1\u0237\4\7\32\0"+
    "\26\7\4\0\3\7\2\0\4\7\1\u0238\32\0\26\7"+
    "\4\0\3\7\2\0\5\7\32\0\2\7\1\u0239\23\7"+
    "\4\0\3\7\2\0\3\7\1\u023a\1\7\32\0\26\7"+
    "\4\0\3\7\2\0\2\7\1\u023b\2\7\32\0\26\7"+
    "\4\0\3\7\2\0\4\7\1\u023c\32\0\26\7\4\0"+
    "\3\7\2\0\1\u023d\4\7\32\0\26\7\4\0\3\7"+
    "\2\0\1\u023e\4\7\32\0\26\7\4\0\3\7\2\0"+
    "\5\7\32\0\17\7\1\u023f\6\7\4\0\3\7\2\0"+
    "\5\7\32\0\11\7\1\u0240\14\7\4\0\3\7\2\0"+
    "\5\7\32\0\14\7\1\u0241\11\7\4\0\3\7\2\0"+
    "\5\7\32\0\14\7\1\u0242\11\7\4\0\3\7\2\0"+
    "\5\7\32\0\1\u0243\25\7\4\0\3\7\2\0\5\7"+
    "\32\0\17\7\1\u0244\6\7\4\0\3\7\2\0\5\7"+
    "\32\0\7\7\1\u0245\16\7\4\0\2\7\1\u0246\2\0"+
    "\5\7\32\0\26\7\4\0\3\7\2\0\4\7\1\u0247"+
    "\32\0\26\7\4\0\3\7\2\0\5\7\32\0\6\7"+
    "\1\u0248\17\7\4\0\3\7\2\0\4\7\1\u0249\32\0"+
    "\26\7\4\0\3\7\2\0\2\7\1\u024a\2\7\32\0"+
    "\26\7\4\0\3\7\2\0\5\7\32\0\2\7\1\u024b"+
    "\23\7\4\0\3\7\2\0\5\7\32\0\6\7\1\u024c"+
    "\17\7\4\0\3\7\2\0\5\7\32\0\5\7\1\u024d"+
    "\1\u024e\6\7\1\u024f\10\7\4\0\3\7\2\0\5\7"+
    "\32\0\6\7\1\u0250\17\7\4\0\3\7\2\0\2\7"+
    "\1\u0251\2\7\32\0\10\7\1\u0252\7\7\1\u0253\1\u0254"+
    "\4\7\4\0\3\7\2\0\5\7\32\0\11\7\1\u0255"+
    "\14\7\4\0\3\7\2\0\5\7\32\0\10\7\1\u0256"+
    "\15\7\4\0\3\7\2\0\5\7\32\0\13\7\1\u0257"+
    "\12\7\4\0\3\7\2\0\2\7\1\u0258\2\7\32\0"+
    "\26\7\4\0\3\7\2\0\3\7\1\u0259\1\7\32\0"+
    "\26\7\4\0\3\7\2\0\5\7\32\0\10\7\1\u025a"+
    "\15\7\4\0\3\7\2\0\5\7\32\0\2\7\1\u025b"+
    "\23\7\4\0\3\7\2\0\5\7\32\0\2\7\1\u025c"+
    "\23\7\4\0\3\7\2\0\2\7\1\u025d\2\7\32\0"+
    "\3\7\1\u025e\22\7\4\0\3\7\2\0\4\7\1\u025f"+
    "\32\0\26\7\4\0\3\7\2\0\5\7\32\0\14\7"+
    "\1\u0260\11\7\4\0\3\7\2\0\5\7\32\0\7\7"+
    "\1\u0261\16\7\4\0\3\7\2\0\5\7\32\0\16\7"+
    "\1\u0262\7\7\4\0\3\7\2\0\5\7\32\0\6\7"+
    "\1\u0263\17\7\4\0\3\7\2\0\5\7\32\0\2\7"+
    "\1\u0264\23\7\4\0\3\7\2\0\3\7\1\u0265\1\7"+
    "\32\0\26\7\4\0\3\7\2\0\3\7\1\u0266\1\7"+
    "\32\0\26\7\4\0\3\7\2\0\5\7\32\0\1\7"+
    "\1\u0267\24\7\4\0\3\7\2\0\3\7\1\u0268\1\7"+
    "\32\0\26\7\4\0\3\7\2\0\5\7\32\0\4\7"+
    "\1\u0269\1\7\1\u026a\17\7\4\0\3\7\2\0\5\7"+
    "\32\0\17\7\1\u026b\6\7\4\0\3\7\2\0\5\7"+
    "\32\0\6\7\1\u026c\17\7\4\0\3\7\2\0\5\7"+
    "\32\0\6\7\1\u026d\17\7\4\0\3\7\2\0\4\7"+
    "\1\u026e\32\0\26\7\4\0\3\7\2\0\5\7\32\0"+
    "\1\u026f\25\7\4\0\3\7\2\0\5\7\32\0\5\7"+
    "\1\u0270\20\7\4\0\3\7\2\0\1\u0271\4\7\32\0"+
    "\26\7\4\0\3\7\2\0\5\7\32\0\20\7\1\u0272"+
    "\5\7\4\0\3\7\2\0\2\7\1\u0273\2\7\32\0"+
    "\26\7\4\0\3\7\2\0\1\u0274\4\7\32\0\2\7"+
    "\1\u0275\23\7\4\0\3\7\2\0\1\u0276\3\7\1\u0277"+
    "\32\0\26\7\4\0\3\7\2\0\5\7\32\0\5\7"+
    "\1\u0278\20\7\4\0\3\7\2\0\2\7\1\u0279\2\7"+
    "\32\0\26\7\4\0\1\u019a\2\0\1\u019a\72\0\1\u019a"+
    "\2\0\1\u019a\1\u027a\76\0\1\u027b\70\0\3\7\2\0"+
    "\5\7\32\0\21\7\1\u027c\4\7\4\0\3\7\2\0"+
    "\5\7\32\0\15\7\1\u027d\10\7\4\0\3\7\2\0"+
    "\3\7\1\u027e\1\7\32\0\26\7\4\0\3\7\2\0"+
    "\5\7\32\0\3\7\1\u027f\22\7\4\0\3\7\2\0"+
    "\5\7\32\0\1\u0280\25\7\4\0\3\7\2\0\5\7"+
    "\32\0\15\7\1\u0281\10\7\4\0\3\7\2\0\5\7"+
    "\32\0\2\7\1\u0282\23\7\4\0\3\7\2\0\5\7"+
    "\32\0\11\7\1\u0283\14\7\4\0\3\7\2\0\5\7"+
    "\32\0\3\7\1\u0284\22\7\4\0\3\7\2\0\5\7"+
    "\32\0\3\7\1\u0285\22\7\4\0\3\7\2\0\5\7"+
    "\32\0\10\7\1\u0286\15\7\4\0\3\7\2\0\5\7"+
    "\32\0\5\7\1\u0287\20\7\4\0\3\7\2\0\5\7"+
    "\32\0\3\7\1\u0288\22\7\4\0\3\7\2\0\3\7"+
    "\1\u0289\1\7\32\0\26\7\4\0\3\7\2\0\1\u028a"+
    "\4\7\32\0\26\7\4\0\3\7\2\0\2\7\1\u028b"+
    "\2\7\32\0\26\7\4\0\3\7\2\0\3\7\1\u028c"+
    "\1\7\32\0\26\7\4\0\3\7\2\0\5\7\32\0"+
    "\10\7\1\u028d\15\7\4\0\3\7\2\0\5\7\32\0"+
    "\21\7\1\u028e\4\7\4\0\3\7\2\0\1\u028f\4\7"+
    "\32\0\26\7\4\0\3\7\2\0\5\7\32\0\16\7"+
    "\1\u0290\7\7\4\0\3\7\2\0\5\7\32\0\2\7"+
    "\1\u0291\23\7\4\0\3\7\2\0\5\7\32\0\3\7"+
    "\1\u0292\22\7\4\0\3\7\2\0\5\7\32\0\11\7"+
    "\1\u0293\14\7\4\0\3\7\2\0\4\7\1\u0294\32\0"+
    "\26\7\4\0\3\7\2\0\3\7\1\u0295\1\7\32\0"+
    "\26\7\4\0\3\7\2\0\4\7\1\u0296\32\0\26\7"+
    "\4\0\3\7\2\0\5\7\32\0\3\7\1\u0297\22\7"+
    "\4\0\3\7\2\0\2\7\1\u0298\2\7\32\0\26\7"+
    "\4\0\3\7\2\0\5\7\32\0\10\7\1\u0299\15\7"+
    "\4\0\3\7\2\0\5\7\32\0\6\7\1\u029a\17\7"+
    "\4\0\3\7\2\0\5\7\32\0\3\7\1\u029b\22\7"+
    "\4\0\3\7\2\0\5\7\32\0\3\7\1\u029c\22\7"+
    "\4\0\3\7\2\0\5\7\32\0\10\7\1\u029d\15\7"+
    "\4\0\3\7\2\0\4\7\1\u029e\32\0\26\7\4\0"+
    "\3\7\2\0\5\7\32\0\2\7\1\u029f\23\7\4\0"+
    "\3\7\2\0\4\7\1\u02a0\32\0\26\7\4\0\3\7"+
    "\2\0\5\7\32\0\3\7\1\u02a1\22\7\4\0\3\7"+
    "\2\0\5\7\32\0\1\u02a2\25\7\4\0\3\7\2\0"+
    "\5\7\32\0\20\7\1\u02a3\5\7\4\0\3\7\2\0"+
    "\5\7\32\0\3\7\1\u02a4\22\7\4\0\3\7\2\0"+
    "\3\7\1\u02a5\1\7\32\0\26\7\4\0\3\7\2\0"+
    "\5\7\32\0\13\7\1\u02a6\12\7\4\0\3\7\2\0"+
    "\4\7\1\u02a7\32\0\26\7\4\0\3\7\2\0\5\7"+
    "\32\0\11\7\1\u02a8\14\7\4\0\3\7\2\0\2\7"+
    "\1\u02a9\2\7\32\0\26\7\4\0\3\7\2\0\5\7"+
    "\32\0\3\7\1\u02aa\5\7\1\u02ab\14\7\4\0\3\7"+
    "\2\0\5\7\32\0\10\7\1\u02ac\15\7\4\0\3\7"+
    "\2\0\5\7\32\0\10\7\1\u02ad\15\7\4\0\3\7"+
    "\2\0\5\7\32\0\5\7\1\u02ae\20\7\4\0\3\7"+
    "\2\0\1\u02af\4\7\32\0\26\7\4\0\3\7\2\0"+
    "\5\7\32\0\6\7\1\u02b0\17\7\4\0\3\7\2\0"+
    "\5\7\32\0\5\7\1\u02b1\20\7\4\0\3\7\2\0"+
    "\4\7\1\u02b2\32\0\26\7\4\0\3\7\2\0\5\7"+
    "\32\0\6\7\1\u02b3\17\7\4\0\3\7\2\0\5\7"+
    "\32\0\16\7\1\u02b4\7\7\4\0\3\7\2\0\3\7"+
    "\1\u02b5\1\7\32\0\26\7\4\0\3\7\2\0\5\7"+
    "\32\0\5\7\1\u02b6\4\7\1\u02b7\13\7\4\0\3\7"+
    "\2\0\5\7\32\0\2\7\1\u02b8\23\7\4\0\3\7"+
    "\2\0\5\7\32\0\2\7\1\u02b9\23\7\4\0\3\7"+
    "\2\0\5\7\32\0\3\7\1\u02ba\22\7\4\0\3\7"+
    "\2\0\5\7\32\0\3\7\1\u02bb\4\7\1\u02bc\15\7"+
    "\4\0\3\7\2\0\2\7\1\u02bd\2\7\32\0\26\7"+
    "\4\0\3\7\2\0\5\7\32\0\11\7\1\u02be\14\7"+
    "\4\0\3\7\2\0\5\7\32\0\3\7\1\u02bf\22\7"+
    "\4\0\3\7\2\0\5\7\32\0\14\7\1\u02c0\11\7"+
    "\4\0\3\7\2\0\5\7\32\0\3\7\1\u02c1\22\7"+
    "\4\0\3\7\2\0\1\u02c2\4\7\32\0\26\7\4\0"+
    "\3\7\2\0\5\7\32\0\13\7\1\u02c3\12\7\4\0"+
    "\3\7\2\0\5\7\32\0\10\7\1\u02c4\15\7\4\0"+
    "\3\7\2\0\3\7\1\u02c5\1\7\32\0\26\7\4\0"+
    "\3\7\2\0\5\7\32\0\2\7\1\u02c6\23\7\4\0"+
    "\3\7\2\0\5\7\32\0\6\7\1\u02c7\17\7\4\0"+
    "\3\7\2\0\5\7\32\0\5\7\1\u02c8\20\7\4\0"+
    "\3\7\2\0\5\7\32\0\11\7\1\u02c9\14\7\4\0"+
    "\3\7\2\0\5\7\32\0\3\7\1\u02ca\22\7\4\0"+
    "\3\7\2\0\5\7\32\0\11\7\1\u02cb\14\7\4\0"+
    "\3\7\2\0\2\7\1\u02cc\2\7\32\0\26\7\4\0"+
    "\3\7\2\0\2\7\1\u02cd\2\7\32\0\26\7\4\0"+
    "\3\7\2\0\5\7\32\0\2\7\1\u02ce\23\7\4\0"+
    "\3\7\2\0\5\7\32\0\11\7\1\u02cf\14\7\4\0"+
    "\3\7\2\0\1\u02d0\4\7\32\0\26\7\4\0\3\7"+
    "\2\0\4\7\1\u02d1\32\0\26\7\4\0\3\7\2\0"+
    "\5\7\32\0\20\7\1\u02d2\5\7\4\0\3\7\2\0"+
    "\5\7\32\0\1\7\1\u02d3\24\7\4\0\3\7\2\0"+
    "\1\u02d4\4\7\32\0\26\7\4\0\3\7\2\0\4\7"+
    "\1\u02d5\32\0\26\7\4\0\3\7\2\0\5\7\32\0"+
    "\3\7\1\u02d6\22\7\4\0\3\7\2\0\5\7\32\0"+
    "\2\7\1\u02d7\23\7\4\0\3\7\2\0\5\7\32\0"+
    "\1\u02d8\7\7\1\u02d9\15\7\4\0\3\7\2\0\5\7"+
    "\32\0\1\u02da\25\7\4\0\3\7\2\0\1\u02db\4\7"+
    "\32\0\26\7\4\0\3\7\2\0\5\7\32\0\10\7"+
    "\1\u02dc\15\7\4\0\3\7\2\0\5\7\32\0\2\7"+
    "\1\u02dd\23\7\4\0\3\7\2\0\1\u02de\4\7\32\0"+
    "\26\7\4\0\3\7\2\0\4\7\1\u02df\32\0\26\7"+
    "\4\0\3\7\2\0\5\7\32\0\1\u02e0\25\7\4\0"+
    "\3\7\2\0\5\7\32\0\2\7\1\u02e1\23\7\4\0"+
    "\3\7\2\0\5\7\32\0\5\7\1\u02e2\20\7\4\0"+
    "\3\7\2\0\5\7\32\0\14\7\1\u02e3\11\7\4\0"+
    "\2\7\1\u02e4\2\0\5\7\32\0\1\u02e5\25\7\4\0"+
    "\3\7\2\0\1\u02e6\4\7\32\0\26\7\4\0\3\7"+
    "\2\0\5\7\32\0\1\u02e7\10\7\1\u02e8\14\7\4\0"+
    "\3\7\2\0\5\7\32\0\2\7\1\u02e9\23\7\4\0"+
    "\3\7\2\0\1\u02ea\4\7\32\0\26\7\4\0\3\7"+
    "\2\0\5\7\32\0\2\7\1\u02eb\23\7\4\0\3\7"+
    "\2\0\5\7\32\0\20\7\1\u02ec\5\7\4\0\3\7"+
    "\2\0\5\7\32\0\1\u02ed\25\7\4\0\3\7\2\0"+
    "\1\u02ee\4\7\32\0\26\7\4\0\3\7\2\0\1\u02ef"+
    "\4\7\32\0\26\7\4\0\3\7\2\0\3\7\1\u02f0"+
    "\1\7\32\0\26\7\4\0\3\7\2\0\5\7\32\0"+
    "\11\7\1\u02f1\14\7\4\0\3\7\2\0\2\7\1\u02f2"+
    "\2\7\32\0\26\7\4\0\3\7\2\0\4\7\1\u02f3"+
    "\32\0\26\7\4\0\3\7\2\0\5\7\32\0\3\7"+
    "\1\u02f4\22\7\4\0\3\7\2\0\3\7\1\u02f5\1\7"+
    "\32\0\26\7\4\0\3\7\2\0\5\7\32\0\3\7"+
    "\1\u02f6\22\7\4\0\3\7\2\0\5\7\32\0\2\7"+
    "\1\u02f7\23\7\4\0\3\7\2\0\5\7\32\0\1\7"+
    "\1\u02f8\21\7\1\u02f9\1\7\1\u02fa\4\0\3\7\2\0"+
    "\5\7\32\0\10\7\1\u02fb\15\7\4\0\3\7\2\0"+
    "\4\7\1\u02fc\32\0\26\7\4\0\3\7\2\0\1\u02fd"+
    "\4\7\32\0\26\7\4\0\3\7\2\0\5\7\32\0"+
    "\3\7\1\u02fe\22\7\4\0\3\7\2\0\5\7\32\0"+
    "\23\7\1\u02ff\2\7\4\0\3\7\2\0\5\7\32\0"+
    "\6\7\1\u0300\17\7\4\0\3\7\2\0\5\7\32\0"+
    "\3\7\1\u0301\12\7\1\u0302\7\7\4\0\3\7\2\0"+
    "\2\7\1\u0303\2\7\32\0\3\7\1\u0304\22\7\4\0"+
    "\3\7\2\0\3\7\1\u0305\1\7\32\0\26\7\4\0"+
    "\3\7\2\0\5\7\32\0\11\7\1\u0306\14\7\4\0"+
    "\3\7\2\0\5\7\32\0\2\7\1\u0307\23\7\4\0"+
    "\3\7\2\0\5\7\32\0\2\7\1\u0308\23\7\4\0"+
    "\3\7\2\0\5\7\32\0\1\u0309\25\7\4\0\3\7"+
    "\2\0\5\7\32\0\1\7\1\u030a\24\7\4\0\3\7"+
    "\2\0\1\u030b\4\7\32\0\26\7\4\0\3\7\2\0"+
    "\2\7\1\u030c\2\7\32\0\26\7\4\0\3\7\2\0"+
    "\3\7\1\u030d\1\7\32\0\26\7\4\0\3\7\2\0"+
    "\5\7\32\0\14\7\1\u030e\11\7\4\0\3\7\2\0"+
    "\5\7\32\0\5\7\1\u030f\20\7\4\0\3\7\2\0"+
    "\4\7\1\u0310\32\0\26\7\4\0\3\7\2\0\1\u0311"+
    "\4\7\32\0\26\7\4\0\3\7\2\0\5\7\32\0"+
    "\11\7\1\u0312\14\7\4\0\3\7\2\0\5\7\32\0"+
    "\11\7\1\u0313\14\7\4\0\3\7\2\0\5\7\32\0"+
    "\1\u0314\25\7\4\0\3\7\2\0\1\u0315\4\7\32\0"+
    "\26\7\4\0\3\7\2\0\5\7\32\0\11\7\1\u0316"+
    "\14\7\4\0\3\7\2\0\5\7\32\0\1\u0317\25\7"+
    "\4\0\3\7\2\0\1\u0318\4\7\32\0\26\7\4\0"+
    "\3\7\2\0\5\7\32\0\2\7\1\u0319\23\7\4\0"+
    "\3\7\2\0\5\7\32\0\3\7\1\u031a\22\7\4\0"+
    "\3\7\2\0\5\7\32\0\1\u031b\25\7\4\0\3\7"+
    "\2\0\5\7\32\0\11\7\1\u031c\14\7\4\0\3\7"+
    "\2\0\5\7\32\0\2\7\1\u031d\23\7\4\0\3\7"+
    "\2\0\5\7\32\0\2\7\1\u031e\23\7\4\0\3\7"+
    "\2\0\5\7\32\0\1\u031f\25\7\4\0\3\7\2\0"+
    "\5\7\32\0\2\7\1\u0320\23\7\4\0\3\7\2\0"+
    "\5\7\32\0\15\7\1\u0321\10\7\4\0\3\7\2\0"+
    "\5\7\32\0\22\7\1\u0322\3\7\4\0\3\7\2\0"+
    "\1\u0323\4\7\32\0\26\7\4\0\3\7\2\0\1\u0324"+
    "\4\7\32\0\26\7\4\0\3\7\2\0\1\u0325\4\7"+
    "\32\0\26\7\4\0\3\7\2\0\1\u0326\4\7\32\0"+
    "\26\7\4\0\3\7\2\0\5\7\32\0\11\7\1\u0327"+
    "\14\7\4\0\3\7\2\0\1\u0328\4\7\32\0\26\7"+
    "\4\0\3\7\2\0\5\7\32\0\7\7\1\u0329\16\7"+
    "\4\0\3\7\2\0\5\7\32\0\7\7\1\u032a\16\7"+
    "\4\0\3\7\2\0\4\7\1\u032b\32\0\26\7\4\0"+
    "\3\7\2\0\5\7\32\0\2\7\1\u032c\23\7\4\0"+
    "\3\7\2\0\5\7\32\0\1\u032d\25\7\4\0\3\7"+
    "\2\0\1\u032e\4\7\32\0\26\7\4\0\3\7\2\0"+
    "\5\7\32\0\11\7\1\u032f\14\7\4\0\3\7\2\0"+
    "\5\7\32\0\7\7\1\u0330\16\7\4\0\3\7\2\0"+
    "\5\7\32\0\7\7\1\u0331\16\7\4\0\3\7\2\0"+
    "\5\7\32\0\2\7\1\u0332\23\7\4\0\3\7\2\0"+
    "\5\7\32\0\2\7\1\u0333\23\7\4\0\3\7\2\0"+
    "\5\7\32\0\10\7\1\u0334\15\7\4\0\3\7\2\0"+
    "\5\7\32\0\2\7\1\u0335\23\7\4\0\3\7\2\0"+
    "\5\7\32\0\1\7\1\u0336\24\7\4\0\3\7\2\0"+
    "\5\7\32\0\11\7\1\u0337\14\7\4\0\3\7\2\0"+
    "\5\7\32\0\3\7\1\u0338\22\7\4\0\3\7\2\0"+
    "\5\7\32\0\22\7\1\u0339\3\7\4\0\3\7\2\0"+
    "\5\7\32\0\2\7\1\u033a\23\7\4\0\1\u027a\2\0"+
    "\1\u027a\161\0\1\u033b\6\0\3\7\2\0\4\7\1\u033c"+
    "\32\0\26\7\4\0\3\7\2\0\1\u033d\4\7\32\0"+
    "\26\7\4\0\3\7\2\0\5\7\32\0\2\7\1\u033e"+
    "\23\7\4\0\3\7\2\0\2\7\1\u033f\2\7\32\0"+
    "\26\7\4\0\3\7\2\0\5\7\32\0\6\7\1\u0340"+
    "\17\7\4\0\3\7\2\0\5\7\32\0\2\7\1\u0341"+
    "\23\7\4\0\3\7\2\0\5\7\32\0\5\7\1\u0342"+
    "\20\7\4\0\3\7\2\0\5\7\32\0\22\7\1\u0343"+
    "\3\7\4\0\3\7\2\0\5\7\32\0\11\7\1\u0344"+
    "\14\7\4\0\3\7\2\0\5\7\32\0\1\u0345\25\7"+
    "\4\0\3\7\2\0\2\7\1\u0346\2\7\32\0\26\7"+
    "\4\0\3\7\2\0\5\7\32\0\5\7\1\u0347\20\7"+
    "\4\0\3\7\2\0\5\7\32\0\6\7\1\u0348\17\7"+
    "\4\0\3\7\2\0\1\u0349\4\7\32\0\26\7\4\0"+
    "\3\7\2\0\5\7\32\0\17\7\1\u034a\6\7\4\0"+
    "\3\7\2\0\5\7\32\0\10\7\1\u034b\15\7\4\0"+
    "\3\7\2\0\1\u034c\4\7\32\0\26\7\4\0\3\7"+
    "\2\0\2\7\1\u034d\2\7\32\0\26\7\4\0\3\7"+
    "\2\0\5\7\32\0\1\u034e\25\7\4\0\3\7\2\0"+
    "\5\7\32\0\10\7\1\u034f\15\7\4\0\3\7\2\0"+
    "\5\7\32\0\3\7\1\u0350\22\7\4\0\3\7\2\0"+
    "\5\7\32\0\1\u0351\25\7\4\0\3\7\2\0\5\7"+
    "\32\0\2\7\1\u0352\23\7\4\0\3\7\2\0\2\7"+
    "\1\u0353\2\7\32\0\26\7\4\0\3\7\2\0\3\7"+
    "\1\u0354\1\7\32\0\26\7\4\0\3\7\2\0\1\u0355"+
    "\4\7\32\0\26\7\4\0\3\7\2\0\5\7\32\0"+
    "\10\7\1\u0356\15\7\4\0\3\7\2\0\5\7\32\0"+
    "\11\7\1\u0357\14\7\4\0\3\7\2\0\5\7\32\0"+
    "\3\7\1\u0358\22\7\4\0\3\7\2\0\5\7\32\0"+
    "\1\u0359\25\7\4\0\3\7\2\0\5\7\32\0\3\7"+
    "\1\u035a\22\7\4\0\3\7\2\0\4\7\1\u035b\32\0"+
    "\26\7\4\0\3\7\2\0\5\7\32\0\1\u035c\25\7"+
    "\4\0\3\7\2\0\1\u035d\4\7\32\0\26\7\4\0"+
    "\3\7\2\0\2\7\1\u035e\2\7\32\0\26\7\4\0"+
    "\3\7\2\0\5\7\32\0\10\7\1\u035f\15\7\4\0"+
    "\3\7\2\0\5\7\32\0\11\7\1\u0360\14\7\4\0"+
    "\3\7\2\0\2\7\1\u0361\2\7\32\0\26\7\4\0"+
    "\3\7\2\0\2\7\1\u0362\2\7\32\0\26\7\4\0"+
    "\3\7\2\0\5\7\32\0\3\7\1\u0363\22\7\4\0"+
    "\3\7\2\0\5\7\32\0\11\7\1\u0364\14\7\4\0"+
    "\3\7\2\0\5\7\32\0\5\7\1\u0365\20\7\4\0"+
    "\3\7\2\0\5\7\32\0\1\u0366\25\7\4\0\3\7"+
    "\2\0\4\7\1\u0367\32\0\1\u0368\25\7\4\0\3\7"+
    "\2\0\5\7\32\0\11\7\1\u0369\14\7\4\0\3\7"+
    "\2\0\5\7\32\0\10\7\1\u036a\15\7\4\0\3\7"+
    "\2\0\1\u036b\4\7\32\0\26\7\4\0\3\7\2\0"+
    "\5\7\32\0\1\u036c\25\7\4\0\3\7\2\0\5\7"+
    "\32\0\2\7\1\u036d\23\7\4\0\3\7\2\0\5\7"+
    "\32\0\10\7\1\u036e\15\7\4\0\3\7\2\0\5\7"+
    "\32\0\11\7\1\u036f\14\7\4\0\3\7\2\0\1\u0370"+
    "\4\7\32\0\26\7\4\0\3\7\2\0\2\7\1\u0371"+
    "\2\7\32\0\26\7\4\0\3\7\2\0\5\7\32\0"+
    "\11\7\1\u0372\14\7\4\0\3\7\2\0\5\7\32\0"+
    "\3\7\1\u0373\22\7\4\0\3\7\2\0\5\7\32\0"+
    "\22\7\1\u0374\3\7\4\0\3\7\2\0\5\7\32\0"+
    "\6\7\1\u0375\17\7\4\0\3\7\2\0\5\7\32\0"+
    "\2\7\1\u0376\23\7\4\0\3\7\2\0\1\u0377\4\7"+
    "\32\0\26\7\4\0\3\7\2\0\1\u0378\4\7\32\0"+
    "\26\7\4\0\3\7\2\0\5\7\32\0\3\7\1\u0379"+
    "\22\7\4\0\3\7\2\0\5\7\32\0\1\u037a\25\7"+
    "\4\0\3\7\2\0\3\7\1\u037b\1\7\32\0\26\7"+
    "\4\0\3\7\2\0\5\7\32\0\11\7\1\u037c\14\7"+
    "\4\0\3\7\2\0\5\7\32\0\2\7\1\u037d\23\7"+
    "\4\0\3\7\2\0\1\u037e\4\7\32\0\26\7\4\0"+
    "\3\7\2\0\5\7\32\0\10\7\1\u037f\15\7\4\0"+
    "\3\7\2\0\5\7\32\0\11\7\1\u0380\14\7\4\0"+
    "\3\7\2\0\5\7\32\0\10\7\1\u0381\15\7\4\0"+
    "\3\7\2\0\5\7\32\0\1\7\1\u0382\24\7\4\0"+
    "\3\7\2\0\5\7\32\0\2\7\1\u0383\23\7\4\0"+
    "\3\7\2\0\5\7\32\0\3\7\1\u0384\22\7\4\0"+
    "\3\7\2\0\5\7\32\0\5\7\1\u0385\20\7\4\0"+
    "\3\7\2\0\5\7\32\0\20\7\1\u0386\5\7\4\0"+
    "\3\7\2\0\4\7\1\u0387\32\0\26\7\4\0\3\7"+
    "\2\0\5\7\32\0\1\u0388\25\7\4\0\3\7\2\0"+
    "\5\7\32\0\10\7\1\u0389\15\7\4\0\3\7\2\0"+
    "\5\7\32\0\11\7\1\u038a\14\7\4\0\3\7\2\0"+
    "\5\7\32\0\3\7\1\u038b\22\7\4\0\3\7\2\0"+
    "\5\7\32\0\1\u038c\25\7\4\0\3\7\2\0\5\7"+
    "\32\0\1\7\1\u038d\24\7\4\0\3\7\2\0\5\7"+
    "\32\0\3\7\1\u038e\22\7\4\0\3\7\2\0\2\7"+
    "\1\u038f\2\7\32\0\26\7\4\0\3\7\2\0\5\7"+
    "\32\0\3\7\1\u0390\22\7\4\0\3\7\2\0\1\u0391"+
    "\4\7\32\0\26\7\4\0\3\7\2\0\5\7\32\0"+
    "\10\7\1\u0392\15\7\4\0\3\7\2\0\5\7\32\0"+
    "\1\7\1\u0393\24\7\4\0\3\7\2\0\1\u0394\4\7"+
    "\32\0\26\7\4\0\3\7\2\0\5\7\32\0\15\7"+
    "\1\u0395\10\7\4\0\3\7\2\0\4\7\1\u0396\32\0"+
    "\26\7\4\0\3\7\2\0\5\7\32\0\6\7\1\u0397"+
    "\17\7\4\0\3\7\2\0\5\7\32\0\6\7\1\u0398"+
    "\17\7\4\0\3\7\2\0\5\7\32\0\11\7\1\u0399"+
    "\14\7\4\0\3\7\2\0\2\7\1\u039a\2\7\32\0"+
    "\26\7\4\0\3\7\2\0\5\7\32\0\3\7\1\u039b"+
    "\22\7\4\0\3\7\2\0\5\7\32\0\3\7\1\u039c"+
    "\22\7\4\0\3\7\2\0\2\7\1\u039d\2\7\32\0"+
    "\26\7\4\0\3\7\2\0\5\7\32\0\2\7\1\u039e"+
    "\23\7\4\0\3\7\2\0\5\7\32\0\5\7\1\u039f"+
    "\20\7\4\0\3\7\2\0\5\7\32\0\5\7\1\u03a0"+
    "\20\7\4\0\3\7\2\0\5\7\32\0\2\7\1\u03a1"+
    "\23\7\4\0\3\7\2\0\5\7\32\0\2\7\1\u03a2"+
    "\23\7\4\0\3\7\2\0\5\7\32\0\16\7\1\u03a3"+
    "\7\7\4\0\3\7\2\0\5\7\32\0\10\7\1\u03a4"+
    "\15\7\4\0\3\7\2\0\5\7\32\0\2\7\1\u03a5"+
    "\23\7\4\0\2\7\1\u03a6\2\0\5\7\32\0\26\7"+
    "\4\0\3\7\2\0\5\7\32\0\1\u03a7\25\7\4\0"+
    "\3\7\2\0\5\7\32\0\20\7\1\u03a8\5\7\4\0"+
    "\3\7\2\0\3\7\1\u03a9\1\7\32\0\26\7\4\0"+
    "\3\7\2\0\2\7\1\u03aa\2\7\32\0\26\7\4\0"+
    "\3\7\2\0\5\7\32\0\1\u03ab\25\7\4\0\3\7"+
    "\2\0\5\7\32\0\2\7\1\u03ac\23\7\4\0\3\7"+
    "\2\0\5\7\32\0\1\u03ad\25\7\4\0\3\7\2\0"+
    "\5\7\32\0\5\7\1\u03ae\13\7\1\u03af\4\7\4\0"+
    "\3\7\2\0\1\u03b0\4\7\32\0\26\7\4\0\3\7"+
    "\2\0\5\7\32\0\5\7\1\u03b1\20\7\4\0\3\7"+
    "\2\0\5\7\32\0\2\7\1\u03b2\23\7\4\0\3\7"+
    "\2\0\5\7\32\0\1\7\1\u03b3\24\7\4\0\3\7"+
    "\2\0\5\7\32\0\1\u03b4\25\7\4\0\3\7\2\0"+
    "\5\7\32\0\11\7\1\u03b5\14\7\4\0\3\7\2\0"+
    "\5\7\32\0\2\7\1\u03b6\23\7\4\0\3\7\2\0"+
    "\5\7\32\0\11\7\1\u03b7\14\7\4\0\3\7\2\0"+
    "\1\u03b8\4\7\32\0\26\7\4\0\3\7\2\0\5\7"+
    "\32\0\15\7\1\u03b9\10\7\4\0\3\7\2\0\1\u03ba"+
    "\4\7\32\0\26\7\4\0\3\7\2\0\1\u03bb\4\7"+
    "\32\0\26\7\4\0\3\7\2\0\2\7\1\u03bc\2\7"+
    "\32\0\26\7\4\0\3\7\2\0\5\7\32\0\6\7"+
    "\1\u03bd\17\7\4\0\3\7\2\0\5\7\32\0\1\u03be"+
    "\25\7\4\0\3\7\2\0\4\7\1\u03bf\32\0\26\7"+
    "\4\0\3\7\2\0\5\7\32\0\3\7\1\u03c0\22\7"+
    "\4\0\3\7\2\0\5\7\32\0\5\7\1\u03c1\20\7"+
    "\4\0\3\7\2\0\5\7\32\0\3\7\1\u03c2\22\7"+
    "\4\0\3\7\2\0\5\7\32\0\1\7\1\u03c3\24\7"+
    "\4\0\3\7\2\0\5\7\32\0\3\7\1\u03c4\22\7"+
    "\4\0\3\7\2\0\4\7\1\u03c5\32\0\26\7\4\0"+
    "\3\7\2\0\5\7\32\0\11\7\1\u03c6\14\7\4\0"+
    "\3\7\2\0\4\7\1\u03c7\32\0\26\7\4\0\3\7"+
    "\2\0\5\7\32\0\10\7\1\u03c8\15\7\4\0\3\7"+
    "\2\0\5\7\32\0\2\7\1\u03c9\23\7\4\0\3\7"+
    "\2\0\5\7\32\0\21\7\1\u03ca\4\7\4\0\3\7"+
    "\2\0\2\7\1\u03cb\2\7\32\0\26\7\4\0\3\7"+
    "\2\0\1\u03cc\4\7\32\0\26\7\4\0\3\7\2\0"+
    "\1\u03cd\4\7\32\0\26\7\4\0\3\7\2\0\5\7"+
    "\32\0\1\7\1\u03ce\24\7\4\0\3\7\2\0\5\7"+
    "\32\0\5\7\1\u03cf\20\7\4\0\3\7\2\0\2\7"+
    "\1\u03d0\2\7\32\0\26\7\4\0\3\7\2\0\5\7"+
    "\32\0\1\u03d1\25\7\4\0\3\7\2\0\5\7\32\0"+
    "\11\7\1\u03d2\14\7\4\0\3\7\2\0\1\u03d3\4\7"+
    "\32\0\26\7\4\0\3\7\2\0\5\7\32\0\16\7"+
    "\1\u03d4\7\7\4\0\3\7\2\0\5\7\32\0\1\u03d5"+
    "\25\7\4\0\3\7\2\0\5\7\32\0\1\u03d6\25\7"+
    "\11\0\1\u03d7\70\0\3\7\2\0\1\u03d8\4\7\32\0"+
    "\26\7\4\0\3\7\2\0\5\7\32\0\1\u03d9\25\7"+
    "\4\0\3\7\2\0\5\7\32\0\2\7\1\u03da\23\7"+
    "\4\0\3\7\2\0\5\7\32\0\11\7\1\u03db\14\7"+
    "\4\0\3\7\2\0\5\7\32\0\6\7\1\u03dc\17\7"+
    "\4\0\3\7\2\0\4\7\1\u03dd\32\0\26\7\4\0"+
    "\3\7\2\0\5\7\32\0\1\u03de\25\7\4\0\3\7"+
    "\2\0\5\7\32\0\2\7\1\u03df\23\7\4\0\3\7"+
    "\2\0\5\7\32\0\14\7\1\u03e0\11\7\4\0\3\7"+
    "\2\0\2\7\1\u03e1\2\7\32\0\26\7\4\0\3\7"+
    "\2\0\5\7\32\0\2\7\1\u03e2\23\7\4\0\3\7"+
    "\2\0\5\7\32\0\2\7\1\u03e3\23\7\4\0\3\7"+
    "\2\0\5\7\32\0\16\7\1\u03e4\7\7\4\0\3\7"+
    "\2\0\5\7\32\0\16\7\1\u03e5\7\7\4\0\3\7"+
    "\2\0\5\7\32\0\11\7\1\u03e6\14\7\4\0\3\7"+
    "\2\0\5\7\32\0\2\7\1\u03e7\23\7\4\0\3\7"+
    "\2\0\5\7\32\0\11\7\1\u03e8\14\7\4\0\3\7"+
    "\2\0\5\7\32\0\2\7\1\u03e9\23\7\4\0\3\7"+
    "\2\0\5\7\32\0\6\7\1\u03ea\17\7\4\0\3\7"+
    "\2\0\5\7\32\0\13\7\1\u03eb\1\7\1\u03ec\10\7"+
    "\4\0\3\7\2\0\1\u03ed\4\7\32\0\26\7\4\0"+
    "\3\7\2\0\4\7\1\u03ee\32\0\26\7\4\0\3\7"+
    "\2\0\1\u03ef\4\7\32\0\1\u03f0\25\7\4\0\3\7"+
    "\2\0\5\7\32\0\2\7\1\u03f1\23\7\4\0\3\7"+
    "\2\0\5\7\32\0\5\7\1\u03f2\20\7\4\0\3\7"+
    "\2\0\5\7\32\0\5\7\1\u03f3\20\7\4\0\3\7"+
    "\2\0\5\7\32\0\13\7\1\u03f4\12\7\4\0\3\7"+
    "\2\0\5\7\32\0\6\7\1\u03f5\17\7\4\0\3\7"+
    "\2\0\2\7\1\u03f6\2\7\32\0\26\7\4\0\3\7"+
    "\2\0\5\7\32\0\1\u03f7\25\7\4\0\3\7\2\0"+
    "\5\7\32\0\12\7\1\u03f8\13\7\4\0\3\7\2\0"+
    "\5\7\32\0\1\u03f9\25\7\4\0\3\7\2\0\5\7"+
    "\32\0\2\7\1\u03fa\23\7\4\0\3\7\2\0\5\7"+
    "\32\0\1\u03fb\25\7\4\0\3\7\2\0\5\7\32\0"+
    "\6\7\1\u03fc\17\7\4\0\3\7\2\0\2\7\1\u03fd"+
    "\2\7\32\0\26\7\4\0\3\7\2\0\2\7\1\u03fe"+
    "\2\7\32\0\26\7\4\0\3\7\2\0\5\7\32\0"+
    "\3\7\1\u03ff\22\7\4\0\3\7\2\0\4\7\1\u0400"+
    "\32\0\26\7\4\0\3\7\2\0\5\7\32\0\1\u0401"+
    "\25\7\4\0\3\7\2\0\2\7\1\u0402\2\7\32\0"+
    "\26\7\4\0\3\7\2\0\5\7\32\0\21\7\1\u0403"+
    "\4\7\4\0\3\7\2\0\5\7\32\0\23\7\1\u0404"+
    "\2\7\4\0\3\7\2\0\5\7\32\0\5\7\1\u0405"+
    "\20\7\4\0\3\7\2\0\5\7\32\0\6\7\1\u0406"+
    "\17\7\4\0\3\7\2\0\1\u0407\4\7\32\0\26\7"+
    "\4\0\3\7\2\0\5\7\32\0\11\7\1\u0408\14\7"+
    "\4\0\3\7\2\0\5\7\32\0\1\u0409\25\7\4\0"+
    "\3\7\2\0\2\7\1\u040a\2\7\32\0\26\7\4\0"+
    "\3\7\2\0\5\7\32\0\3\7\1\u040b\22\7\4\0"+
    "\3\7\2\0\5\7\32\0\6\7\1\u040c\17\7\4\0"+
    "\3\7\2\0\2\7\1\u040d\2\7\32\0\26\7\4\0"+
    "\3\7\2\0\5\7\32\0\1\7\1\u040e\24\7\4\0"+
    "\3\7\2\0\5\7\32\0\3\7\1\u040f\22\7\4\0"+
    "\3\7\2\0\2\7\1\u0410\2\7\32\0\26\7\4\0"+
    "\3\7\2\0\5\7\32\0\2\7\1\u0411\23\7\4\0"+
    "\3\7\2\0\2\7\1\u0412\2\7\32\0\26\7\4\0"+
    "\3\7\2\0\5\7\32\0\11\7\1\u0413\14\7\4\0"+
    "\3\7\2\0\5\7\32\0\11\7\1\u0414\14\7\4\0"+
    "\3\7\2\0\5\7\32\0\2\7\1\u0415\23\7\4\0"+
    "\2\7\1\u0416\2\0\5\7\32\0\26\7\4\0\3\7"+
    "\2\0\5\7\32\0\17\7\1\u0417\6\7\4\0\3\7"+
    "\2\0\2\7\1\u0418\2\7\32\0\26\7\4\0\3\7"+
    "\2\0\5\7\32\0\10\7\1\u0419\15\7\4\0\3\7"+
    "\2\0\5\7\32\0\2\7\1\u041a\23\7\4\0\3\7"+
    "\2\0\1\u041b\4\7\32\0\26\7\4\0\3\7\2\0"+
    "\2\7\1\u041c\2\7\32\0\26\7\4\0\3\7\2\0"+
    "\5\7\32\0\2\7\1\u041d\23\7\4\0\3\7\2\0"+
    "\5\7\32\0\3\7\1\u041e\22\7\4\0\3\7\2\0"+
    "\5\7\32\0\16\7\1\u041f\7\7\4\0\3\7\2\0"+
    "\1\u0420\4\7\32\0\26\7\4\0\3\7\2\0\5\7"+
    "\32\0\10\7\1\u0421\15\7\4\0\3\7\2\0\1\u0422"+
    "\4\7\32\0\26\7\4\0\3\7\2\0\5\7\32\0"+
    "\2\7\1\u0423\23\7\4\0\3\7\2\0\5\7\32\0"+
    "\2\7\1\u0424\23\7\4\0\3\7\2\0\2\7\1\u0425"+
    "\2\7\32\0\26\7\4\0\3\7\2\0\3\7\1\u0426"+
    "\1\7\32\0\26\7\4\0\3\7\2\0\5\7\32\0"+
    "\1\u0427\25\7\4\0\3\7\2\0\5\7\32\0\2\7"+
    "\1\u0428\23\7\4\0\3\7\2\0\1\u0429\4\7\32\0"+
    "\11\7\1\u042a\14\7\4\0\3\7\2\0\5\7\32\0"+
    "\6\7\1\u042b\17\7\4\0\3\7\2\0\5\7\32\0"+
    "\15\7\1\u042c\10\7\4\0\3\7\2\0\1\u042d\4\7"+
    "\32\0\26\7\4\0\3\7\2\0\5\7\32\0\6\7"+
    "\1\u042e\17\7\4\0\3\7\2\0\4\7\1\u042f\32\0"+
    "\26\7\4\0\3\7\2\0\5\7\32\0\2\7\1\u0430"+
    "\23\7\4\0\3\7\2\0\4\7\1\u0431\32\0\26\7"+
    "\4\0\3\7\2\0\1\u0432\4\7\32\0\26\7\4\0"+
    "\3\7\2\0\5\7\32\0\15\7\1\u0433\10\7\4\0"+
    "\3\7\2\0\5\7\32\0\5\7\1\u0434\20\7\4\0"+
    "\3\7\2\0\5\7\32\0\2\7\1\u0435\23\7\4\0"+
    "\3\7\2\0\1\u0436\4\7\32\0\26\7\4\0\3\7"+
    "\2\0\5\7\32\0\1\u0437\25\7\4\0\3\7\2\0"+
    "\5\7\32\0\3\7\1\u0438\22\7\4\0\3\7\2\0"+
    "\5\7\32\0\11\7\1\u0439\14\7\4\0\3\7\2\0"+
    "\1\u043a\4\7\32\0\26\7\4\0\3\7\2\0\4\7"+
    "\1\u043b\32\0\26\7\4\0\3\7\2\0\5\7\32\0"+
    "\2\7\1\u043c\23\7\4\0\3\7\2\0\5\7\32\0"+
    "\11\7\1\u043d\14\7\4\0\3\7\2\0\5\7\32\0"+
    "\1\u043e\25\7\4\0\3\7\2\0\2\7\1\u043f\2\7"+
    "\32\0\26\7\4\0\3\7\2\0\2\7\1\u0440\2\7"+
    "\32\0\26\7\4\0\3\7\2\0\5\7\32\0\2\7"+
    "\1\u0441\23\7\4\0\3\7\2\0\4\7\1\u0442\32\0"+
    "\26\7\4\0\3\7\2\0\5\7\32\0\21\7\1\u0443"+
    "\4\7\4\0\3\7\2\0\5\7\32\0\11\7\1\u0444"+
    "\14\7\4\0\3\7\2\0\1\u0445\4\7\32\0\26\7"+
    "\4\0\3\7\2\0\3\7\1\u0446\1\7\32\0\26\7"+
    "\4\0\3\7\2\0\5\7\32\0\4\7\1\u0447\21\7"+
    "\4\0\3\7\2\0\1\u0448\4\7\32\0\26\7\4\0"+
    "\3\7\2\0\5\7\32\0\10\7\1\u0449\15\7\4\0"+
    "\3\7\2\0\5\7\32\0\3\7\1\u044a\22\7\4\0"+
    "\3\7\2\0\1\u044b\4\7\32\0\26\7\4\0\3\7"+
    "\2\0\1\u044c\4\7\32\0\26\7\4\0\3\7\2\0"+
    "\1\u044d\4\7\32\0\26\7\4\0\3\7\2\0\5\7"+
    "\32\0\16\7\1\u044e\7\7\4\0\3\7\2\0\5\7"+
    "\32\0\3\7\1\u044f\22\7\4\0\3\7\2\0\5\7"+
    "\32\0\10\7\1\u0450\15\7\4\0\3\7\2\0\5\7"+
    "\32\0\23\7\1\u0451\2\7\4\0\3\7\2\0\2\7"+
    "\1\u0452\2\7\32\0\26\7\4\0\3\7\2\0\2\7"+
    "\1\u0453\2\7\32\0\26\7\4\0\3\7\2\0\5\7"+
    "\32\0\6\7\1\u0454\17\7\56\0\1\u0455\23\0\3\7"+
    "\2\0\4\7\1\u0456\32\0\26\7\4\0\3\7\2\0"+
    "\5\7\32\0\10\7\1\u0457\15\7\4\0\3\7\2\0"+
    "\4\7\1\u0458\32\0\26\7\4\0\3\7\2\0\1\u0459"+
    "\4\7\32\0\26\7\4\0\3\7\2\0\1\u045a\4\7"+
    "\32\0\26\7\4\0\3\7\2\0\1\u045b\4\7\32\0"+
    "\26\7\4\0\3\7\2\0\5\7\32\0\12\7\1\u045c"+
    "\13\7\4\0\3\7\2\0\1\u045d\4\7\32\0\26\7"+
    "\4\0\3\7\2\0\5\7\32\0\10\7\1\u045e\15\7"+
    "\4\0\3\7\2\0\1\u045f\4\7\32\0\26\7\4\0"+
    "\3\7\2\0\5\7\32\0\1\u0460\25\7\4\0\3\7"+
    "\2\0\1\u0461\4\7\32\0\26\7\4\0\3\7\2\0"+
    "\5\7\32\0\2\7\1\u0462\23\7\4\0\3\7\2\0"+
    "\5\7\32\0\1\7\1\u0463\24\7\4\0\3\7\2\0"+
    "\5\7\32\0\13\7\1\u0464\12\7\4\0\3\7\2\0"+
    "\1\u0465\4\7\32\0\26\7\4\0\3\7\2\0\5\7"+
    "\32\0\2\7\1\u0466\23\7\4\0\3\7\2\0\3\7"+
    "\1\u0467\1\7\32\0\26\7\4\0\3\7\2\0\5\7"+
    "\32\0\2\7\1\u0468\23\7\4\0\3\7\2\0\1\u0469"+
    "\4\7\32\0\26\7\4\0\3\7\2\0\5\7\32\0"+
    "\3\7\1\u046a\22\7\4\0\3\7\2\0\1\u046b\4\7"+
    "\32\0\26\7\4\0\3\7\2\0\5\7\32\0\20\7"+
    "\1\u046c\5\7\4\0\3\7\2\0\1\u046d\4\7\32\0"+
    "\26\7\4\0\3\7\2\0\5\7\32\0\2\7\1\u046e"+
    "\23\7\4\0\3\7\2\0\5\7\32\0\2\7\1\u046f"+
    "\23\7\4\0\3\7\2\0\5\7\32\0\16\7\1\u0470"+
    "\7\7\4\0\3\7\2\0\5\7\32\0\21\7\1\u0471"+
    "\4\7\4\0\3\7\2\0\5\7\32\0\20\7\1\u0472"+
    "\5\7\4\0\3\7\2\0\1\u0473\4\7\32\0\26\7"+
    "\4\0\3\7\2\0\1\u0474\4\7\32\0\26\7\4\0"+
    "\3\7\2\0\5\7\32\0\2\7\1\u0475\23\7\4\0"+
    "\3\7\2\0\5\7\32\0\2\7\1\u0476\23\7\4\0"+
    "\3\7\2\0\5\7\32\0\16\7\1\u0477\7\7\4\0"+
    "\3\7\2\0\5\7\32\0\2\7\1\u0478\23\7\4\0"+
    "\3\7\2\0\5\7\32\0\6\7\1\u0479\17\7\4\0"+
    "\3\7\2\0\5\7\32\0\10\7\1\u047a\15\7\4\0"+
    "\3\7\2\0\5\7\32\0\14\7\1\u047b\11\7\4\0"+
    "\3\7\2\0\5\7\32\0\2\7\1\u047c\23\7\4\0"+
    "\3\7\2\0\5\7\32\0\6\7\1\u047d\17\7\4\0"+
    "\2\7\1\u047e\2\0\5\7\32\0\26\7\4\0\3\7"+
    "\2\0\5\7\32\0\4\7\1\u047f\21\7\4\0\3\7"+
    "\2\0\5\7\32\0\6\7\1\u0480\17\7\4\0\3\7"+
    "\2\0\2\7\1\u0481\2\7\32\0\26\7\4\0\3\7"+
    "\2\0\5\7\32\0\11\7\1\u0482\14\7\4\0\3\7"+
    "\2\0\3\7\1\u0483\1\7\32\0\26\7\4\0\3\7"+
    "\2\0\2\7\1\u0484\2\7\32\0\26\7\4\0\3\7"+
    "\2\0\5\7\32\0\2\7\1\u0485\23\7\4\0\3\7"+
    "\2\0\5\7\32\0\3\7\1\u0486\22\7\4\0\3\7"+
    "\2\0\1\u0487\4\7\32\0\26\7\4\0\3\7\2\0"+
    "\5\7\32\0\11\7\1\u0488\14\7\4\0\2\7\1\u0489"+
    "\2\0\5\7\32\0\26\7\4\0\3\7\2\0\1\u048a"+
    "\4\7\32\0\26\7\4\0\3\7\2\0\5\7\32\0"+
    "\1\7\1\u048b\24\7\4\0\3\7\2\0\5\7\32\0"+
    "\11\7\1\u048c\14\7\4\0\3\7\2\0\2\7\1\u048d"+
    "\2\7\32\0\26\7\4\0\3\7\2\0\1\u048e\4\7"+
    "\32\0\26\7\4\0\3\7\2\0\5\7\32\0\11\7"+
    "\1\u048f\14\7\4\0\3\7\2\0\5\7\32\0\5\7"+
    "\1\u0490\20\7\4\0\3\7\2\0\1\u0491\4\7\32\0"+
    "\26\7\4\0\3\7\2\0\5\7\32\0\11\7\1\u0492"+
    "\14\7\4\0\3\7\2\0\5\7\32\0\10\7\1\u0493"+
    "\15\7\4\0\3\7\2\0\1\u0494\4\7\32\0\26\7"+
    "\4\0\3\7\2\0\5\7\32\0\10\7\1\u0495\15\7"+
    "\4\0\3\7\2\0\5\7\32\0\14\7\1\u0496\11\7"+
    "\4\0\3\7\2\0\1\u0497\4\7\32\0\26\7\4\0"+
    "\3\7\2\0\5\7\32\0\1\u0498\25\7\4\0\3\7"+
    "\2\0\5\7\32\0\3\7\1\u0499\22\7\4\0\3\7"+
    "\2\0\5\7\32\0\5\7\1\u049a\20\7\4\0\3\7"+
    "\2\0\5\7\32\0\10\7\1\u049b\15\7\4\0\3\7"+
    "\2\0\5\7\32\0\6\7\1\u049c\17\7\4\0\3\7"+
    "\2\0\4\7\1\u049d\32\0\26\7\4\0\3\7\2\0"+
    "\5\7\32\0\2\7\1\u049e\23\7\4\0\3\7\2\0"+
    "\4\7\1\u049f\32\0\26\7\4\0\3\7\2\0\5\7"+
    "\32\0\4\7\1\u04a0\21\7\4\0\3\7\2\0\5\7"+
    "\32\0\10\7\1\u04a1\15\7\4\0\3\7\2\0\5\7"+
    "\32\0\2\7\1\u04a2\23\7\4\0\3\7\2\0\5\7"+
    "\32\0\16\7\1\u04a3\7\7\4\0\3\7\2\0\1\u04a4"+
    "\4\7\32\0\26\7\4\0\3\7\2\0\5\7\32\0"+
    "\10\7\1\u04a5\15\7\4\0\3\7\2\0\5\7\32\0"+
    "\3\7\1\u04a6\22\7\4\0\3\7\2\0\5\7\32\0"+
    "\16\7\1\u04a7\7\7\4\0\3\7\2\0\2\7\1\u04a8"+
    "\2\7\32\0\26\7\4\0\3\7\2\0\5\7\32\0"+
    "\23\7\1\u04a9\2\7\4\0\3\7\2\0\5\7\32\0"+
    "\3\7\1\u04aa\22\7\4\0\3\7\2\0\5\7\32\0"+
    "\3\7\1\u04ab\22\7\4\0\3\7\2\0\2\7\1\u04ac"+
    "\2\7\32\0\26\7\4\0\3\7\2\0\5\7\32\0"+
    "\2\7\1\u04ad\23\7\4\0\3\7\2\0\5\7\32\0"+
    "\2\7\1\u04ae\23\7\4\0\3\7\2\0\2\7\1\u04af"+
    "\2\7\32\0\26\7\4\0\3\7\2\0\5\7\32\0"+
    "\3\7\1\u04b0\22\7\4\0\3\7\2\0\5\7\32\0"+
    "\23\7\1\u04b1\2\7\4\0\3\7\2\0\5\7\32\0"+
    "\1\u04b2\25\7\4\0\3\7\2\0\2\7\1\u04b3\2\7"+
    "\32\0\26\7\4\0\3\7\2\0\5\7\32\0\2\7"+
    "\1\u04b4\23\7\4\0\3\7\2\0\5\7\32\0\10\7"+
    "\1\u04b5\15\7\4\0\3\7\2\0\4\7\1\u04b6\32\0"+
    "\26\7\4\0\3\7\2\0\5\7\32\0\11\7\1\u04b7"+
    "\14\7\4\0\3\7\2\0\5\7\32\0\2\7\1\u04b8"+
    "\23\7\4\0\3\7\2\0\5\7\32\0\6\7\1\u04b9"+
    "\17\7\4\0\3\7\2\0\5\7\32\0\4\7\1\u04ba"+
    "\21\7\4\0\3\7\2\0\5\7\32\0\15\7\1\u04bb"+
    "\10\7\4\0\3\7\2\0\1\u04bc\4\7\32\0\11\7"+
    "\1\u04bd\14\7\4\0\3\7\2\0\5\7\32\0\11\7"+
    "\1\u04be\14\7\4\0\3\7\2\0\1\u04bf\4\7\32\0"+
    "\26\7\4\0\3\7\2\0\5\7\32\0\15\7\1\u04c0"+
    "\10\7\4\0\2\7\1\u04c1\2\0\5\7\32\0\26\7"+
    "\4\0\3\7\2\0\3\7\1\u04c2\1\7\32\0\26\7"+
    "\4\0\3\7\2\0\5\7\32\0\11\7\1\u04c3\14\7"+
    "\4\0\3\7\2\0\1\u04c4\4\7\32\0\26\7\4\0"+
    "\3\7\2\0\5\7\32\0\3\7\1\u04c5\22\7\4\0"+
    "\3\7\2\0\5\7\32\0\10\7\1\u04c6\15\7\4\0"+
    "\3\7\2\0\3\7\1\u04c7\1\7\32\0\26\7\4\0"+
    "\3\7\2\0\5\7\32\0\1\u04c8\25\7\4\0\3\7"+
    "\2\0\5\7\32\0\5\7\1\u04c9\6\7\1\u04ca\11\7"+
    "\4\0\3\7\2\0\5\7\32\0\16\7\1\u04cb\7\7"+
    "\4\0\3\7\2\0\5\7\32\0\6\7\1\u04cc\17\7"+
    "\4\0\3\7\2\0\5\7\32\0\5\7\1\u04cd\20\7"+
    "\4\0\3\7\2\0\2\7\1\u04ce\2\7\32\0\26\7"+
    "\4\0\3\7\2\0\3\7\1\u04cf\1\7\32\0\1\7"+
    "\1\u04d0\1\u04d1\23\7\4\0\3\7\2\0\5\7\32\0"+
    "\1\7\1\u04d2\24\7\4\0\3\7\2\0\2\7\1\u04d3"+
    "\2\7\32\0\26\7\4\0\3\7\2\0\5\7\32\0"+
    "\16\7\1\u04d4\7\7\4\0\3\7\2\0\5\7\32\0"+
    "\3\7\1\u04d5\22\7\4\0\3\7\2\0\5\7\32\0"+
    "\10\7\1\u04d6\15\7\4\0\3\7\2\0\5\7\32\0"+
    "\2\7\1\u04d7\23\7\4\0\3\7\2\0\2\7\1\u04d8"+
    "\2\7\32\0\26\7\4\0\3\7\2\0\2\7\1\u04d9"+
    "\2\7\32\0\26\7\4\0\3\7\2\0\2\7\1\u04da"+
    "\2\7\32\0\26\7\4\0\3\7\2\0\2\7\1\u04db"+
    "\2\7\32\0\26\7\4\0\3\7\2\0\5\7\32\0"+
    "\5\7\1\u04dc\20\7\4\0\3\7\2\0\5\7\32\0"+
    "\4\7\1\u04dd\21\7\4\0\3\7\2\0\5\7\32\0"+
    "\3\7\1\u04de\22\7\4\0\3\7\2\0\5\7\32\0"+
    "\2\7\1\u04df\23\7\4\0\3\7\2\0\5\7\32\0"+
    "\11\7\1\u04e0\14\7\4\0\3\7\2\0\5\7\32\0"+
    "\4\7\1\u04e1\21\7\4\0\2\7\1\u04e2\2\0\5\7"+
    "\32\0\6\7\1\u04e3\17\7\4\0\3\7\2\0\2\7"+
    "\1\u04e4\2\7\32\0\26\7\4\0\3\7\2\0\1\u04e5"+
    "\4\7\32\0\26\7\4\0\3\7\2\0\5\7\32\0"+
    "\2\7\1\u04e6\23\7\4\0\3\7\2\0\2\7\1\u04e7"+
    "\2\7\32\0\26\7\4\0\3\7\2\0\1\u04e8\4\7"+
    "\32\0\26\7\4\0\3\7\2\0\1\u04e9\4\7\32\0"+
    "\26\7\4\0\3\7\2\0\5\7\32\0\2\7\1\u04ea"+
    "\23\7\4\0\3\7\2\0\5\7\32\0\10\7\1\u04eb"+
    "\15\7\4\0\3\7\2\0\5\7\32\0\2\7\1\u04ec"+
    "\23\7\4\0\3\7\2\0\5\7\32\0\10\7\1\u04ed"+
    "\15\7\4\0\3\7\2\0\1\u04ee\4\7\32\0\26\7"+
    "\4\0\3\7\2\0\5\7\32\0\2\7\1\u04ef\23\7"+
    "\4\0\3\7\2\0\5\7\32\0\2\7\1\u04f0\23\7"+
    "\4\0\3\7\2\0\1\u04f1\4\7\32\0\26\7\4\0"+
    "\3\7\2\0\5\7\32\0\3\7\1\u04f2\22\7\4\0"+
    "\3\7\2\0\1\u04f3\4\7\32\0\26\7\4\0\3\7"+
    "\2\0\5\7\32\0\6\7\1\u04f4\17\7\4\0\3\7"+
    "\2\0\1\u04f5\4\7\32\0\26\7\4\0\3\7\2\0"+
    "\5\7\32\0\2\7\1\u04f6\23\7\4\0\3\7\2\0"+
    "\4\7\1\u04f7\32\0\26\7\4\0\3\7\2\0\5\7"+
    "\32\0\10\7\1\u04f8\15\7\4\0\3\7\2\0\5\7"+
    "\32\0\10\7\1\u04f9\15\7\4\0\3\7\2\0\5\7"+
    "\32\0\3\7\1\u04fa\22\7\4\0\3\7\2\0\5\7"+
    "\32\0\7\7\1\u04fb\10\7\1\u04fc\5\7\4\0\3\7"+
    "\2\0\5\7\32\0\3\7\1\u04fd\22\7\4\0\3\7"+
    "\2\0\5\7\32\0\10\7\1\u04fe\15\7\4\0\3\7"+
    "\2\0\5\7\32\0\5\7\1\u04ff\20\7\4\0\3\7"+
    "\2\0\4\7\1\u0500\32\0\26\7\4\0\3\7\2\0"+
    "\5\7\32\0\5\7\1\u0501\20\7\4\0\3\7\2\0"+
    "\3\7\1\u0502\1\7\32\0\26\7\4\0\3\7\2\0"+
    "\5\7\32\0\11\7\1\u0503\14\7\4\0\3\7\2\0"+
    "\1\u0504\4\7\32\0\26\7\4\0\3\7\2\0\5\7"+
    "\32\0\5\7\1\u0505\20\7\4\0\3\7\2\0\1\u0506"+
    "\4\7\32\0\26\7\4\0\3\7\2\0\5\7\32\0"+
    "\16\7\1\u0507\7\7\4\0\3\7\2\0\5\7\32\0"+
    "\5\7\1\u0508\20\7\4\0\3\7\2\0\5\7\32\0"+
    "\1\u0509\25\7\4\0\3\7\2\0\5\7\32\0\11\7"+
    "\1\u050a\14\7\4\0\3\7\2\0\5\7\32\0\2\7"+
    "\1\u050b\23\7\4\0\3\7\2\0\5\7\32\0\2\7"+
    "\1\u050c\23\7\4\0\2\7\1\u050d\2\0\5\7\32\0"+
    "\26\7\4\0\3\7\2\0\2\7\1\u050e\2\7\32\0"+
    "\26\7\4\0\3\7\2\0\5\7\32\0\1\u050f\25\7"+
    "\4\0\3\7\2\0\5\7\32\0\2\7\1\u0510\23\7"+
    "\4\0\3\7\2\0\5\7\32\0\1\7\1\u0511\24\7"+
    "\4\0\3\7\2\0\5\7\32\0\16\7\1\u0512\7\7"+
    "\4\0\3\7\2\0\5\7\32\0\10\7\1\u0513\15\7"+
    "\4\0\3\7\2\0\5\7\32\0\21\7\1\u0514\4\7"+
    "\4\0\3\7\2\0\5\7\32\0\11\7\1\u0515\14\7"+
    "\4\0\3\7\2\0\5\7\32\0\10\7\1\u0516\15\7"+
    "\4\0\3\7\2\0\5\7\32\0\7\7\1\u0517\16\7"+
    "\4\0\3\7\2\0\5\7\32\0\5\7\1\u0518\20\7"+
    "\4\0\3\7\2\0\5\7\32\0\1\u0519\25\7\4\0"+
    "\3\7\2\0\5\7\32\0\3\7\1\u051a\22\7\4\0"+
    "\3\7\2\0\5\7\32\0\1\7\1\u051b\24\7\4\0"+
    "\3\7\2\0\5\7\32\0\11\7\1\u051c\14\7\4\0"+
    "\3\7\2\0\5\7\32\0\5\7\1\u051d\20\7\4\0"+
    "\3\7\2\0\5\7\32\0\1\7\1\u051e\24\7\4\0"+
    "\3\7\2\0\1\u051f\4\7\32\0\26\7\4\0\3\7"+
    "\2\0\2\7\1\u0520\2\7\32\0\26\7\4\0\3\7"+
    "\2\0\2\7\1\u0521\2\7\32\0\26\7\4\0\3\7"+
    "\2\0\5\7\32\0\2\7\1\u0522\23\7\4\0\3\7"+
    "\2\0\5\7\32\0\10\7\1\u0523\15\7\4\0\3\7"+
    "\2\0\5\7\32\0\11\7\1\u0524\14\7\4\0\3\7"+
    "\2\0\1\u0525\4\7\32\0\26\7\4\0\3\7\2\0"+
    "\2\7\1\u0526\2\7\32\0\26\7\4\0\3\7\2\0"+
    "\1\u0527\4\7\32\0\26\7\4\0\3\7\2\0\5\7"+
    "\32\0\1\7\1\u0528\24\7\4\0\3\7\2\0\5\7"+
    "\32\0\20\7\1\u0529\5\7\4\0\3\7\2\0\5\7"+
    "\32\0\4\7\1\u052a\21\7\4\0\3\7\2\0\5\7"+
    "\32\0\3\7\1\u052b\22\7\4\0\3\7\2\0\1\u052c"+
    "\4\7\32\0\26\7\4\0\3\7\2\0\5\7\32\0"+
    "\2\7\1\u052d\23\7\4\0\3\7\2\0\5\7\32\0"+
    "\20\7\1\u052e\5\7\4\0\3\7\2\0\5\7\32\0"+
    "\7\7\1\u052f\16\7\4\0\3\7\2\0\4\7\1\u0530"+
    "\32\0\26\7\4\0\3\7\2\0\5\7\32\0\13\7"+
    "\1\u0531\12\7\4\0\3\7\2\0\5\7\32\0\5\7"+
    "\1\u0532\20\7\4\0\3\7\2\0\5\7\32\0\11\7"+
    "\1\u0533\14\7\4\0\3\7\2\0\5\7\32\0\2\7"+
    "\1\u0534\23\7\4\0\3\7\2\0\3\7\1\u0535\1\7"+
    "\32\0\26\7\4\0\3\7\2\0\1\u0536\4\7\32\0"+
    "\26\7\4\0\3\7\2\0\2\7\1\u0537\2\7\32\0"+
    "\26\7\4\0\3\7\2\0\4\7\1\u0538\32\0\26\7"+
    "\4\0\3\7\2\0\5\7\32\0\13\7\1\u0539\12\7"+
    "\4\0\3\7\2\0\5\7\32\0\10\7\1\u053a\15\7"+
    "\4\0\3\7\2\0\3\7\1\u053b\1\7\32\0\26\7"+
    "\4\0\3\7\2\0\2\7\1\u053c\2\7\32\0\26\7"+
    "\4\0\3\7\2\0\5\7\32\0\3\7\1\u053d\22\7"+
    "\4\0\3\7\2\0\5\7\32\0\11\7\1\u053e\14\7"+
    "\4\0\3\7\2\0\5\7\32\0\11\7\1\u053f\14\7"+
    "\4\0\3\7\2\0\5\7\32\0\15\7\1\u0540\10\7"+
    "\4\0\3\7\2\0\5\7\32\0\3\7\1\u0541\22\7"+
    "\4\0\3\7\2\0\1\u0542\4\7\32\0\26\7\4\0"+
    "\3\7\2\0\1\u0543\4\7\32\0\26\7\4\0\3\7"+
    "\2\0\1\u0544\4\7\32\0\26\7\4\0\3\7\2\0"+
    "\4\7\1\u0545\32\0\26\7\4\0\3\7\2\0\2\7"+
    "\1\u0546\2\7\32\0\26\7\4\0\3\7\2\0\5\7"+
    "\32\0\7\7\1\u0547\16\7\4\0\3\7\2\0\5\7"+
    "\32\0\3\7\1\u0548\22\7\4\0\3\7\2\0\5\7"+
    "\32\0\5\7\1\u0549\20\7\4\0\3\7\2\0\4\7"+
    "\1\u054a\32\0\26\7\4\0\3\7\2\0\2\7\1\u054b"+
    "\2\7\32\0\26\7\4\0\3\7\2\0\5\7\32\0"+
    "\3\7\1\u054c\22\7\4\0\3\7\2\0\3\7\1\u054d"+
    "\1\7\32\0\26\7\4\0\3\7\2\0\5\7\32\0"+
    "\2\7\1\u054e\23\7\4\0\3\7\2\0\4\7\1\u054f"+
    "\32\0\26\7\4\0\3\7\2\0\5\7\32\0\7\7"+
    "\1\u0550\16\7\4\0\3\7\2\0\5\7\32\0\5\7"+
    "\1\u0551\20\7\4\0\3\7\2\0\2\7\1\u0552\2\7"+
    "\32\0\26\7\4\0\3\7\2\0\1\u0553\4\7\32\0"+
    "\26\7\4\0\3\7\2\0\5\7\32\0\16\7\1\u0554"+
    "\7\7\4\0\3\7\2\0\5\7\32\0\6\7\1\u0555"+
    "\17\7\4\0\3\7\2\0\1\u0556\4\7\32\0\26\7"+
    "\4\0\3\7\2\0\1\u0557\4\7\32\0\26\7\4\0"+
    "\3\7\2\0\5\7\32\0\2\7\1\u0558\23\7\4\0"+
    "\3\7\2\0\5\7\32\0\1\u0559\25\7\4\0\3\7"+
    "\2\0\5\7\32\0\3\7\1\u055a\22\7\4\0\3\7"+
    "\2\0\5\7\32\0\2\7\1\u055b\23\7\4\0\3\7"+
    "\2\0\5\7\32\0\16\7\1\u055c\7\7\4\0\3\7"+
    "\2\0\1\u055d\4\7\32\0\26\7\4\0\3\7\2\0"+
    "\5\7\32\0\3\7\1\u055e\22\7\4\0\3\7\2\0"+
    "\1\u055f\4\7\32\0\26\7\4\0\3\7\2\0\5\7"+
    "\32\0\3\7\1\u0560\22\7\4\0\3\7\2\0\5\7"+
    "\32\0\1\u0561\25\7\4\0\3\7\2\0\5\7\32\0"+
    "\1\u0562\25\7\4\0\3\7\2\0\5\7\32\0\2\7"+
    "\1\u0563\23\7\4\0\3\7\2\0\5\7\32\0\2\7"+
    "\1\u0564\23\7\4\0\3\7\2\0\5\7\32\0\11\7"+
    "\1\u0565\14\7\4\0\3\7\2\0\5\7\32\0\5\7"+
    "\1\u0566\20\7\4\0\3\7\2\0\5\7\32\0\20\7"+
    "\1\u0567\5\7\4\0\3\7\2\0\5\7\32\0\7\7"+
    "\1\u0568\16\7\4\0\3\7\2\0\5\7\32\0\2\7"+
    "\1\u0569\23\7\4\0\3\7\2\0\1\u056a\4\7\32\0"+
    "\26\7\4\0\3\7\2\0\5\7\32\0\15\7\1\u056b"+
    "\10\7\4\0\3\7\2\0\5\7\32\0\4\7\1\u056c"+
    "\21\7\4\0\3\7\2\0\5\7\32\0\2\7\1\u056d"+
    "\23\7\4\0\3\7\2\0\5\7\32\0\1\7\1\u056e"+
    "\1\u056f\23\7\4\0\3\7\2\0\5\7\32\0\1\u0570"+
    "\25\7\4\0\3\7\2\0\1\u0571\4\7\32\0\26\7"+
    "\4\0\3\7\2\0\5\7\32\0\1\u0572\25\7\4\0"+
    "\3\7\2\0\5\7\32\0\13\7\1\u0573\12\7\4\0"+
    "\3\7\2\0\5\7\32\0\2\7\1\u0574\23\7\4\0"+
    "\3\7\2\0\5\7\32\0\13\7\1\u0575\12\7\4\0"+
    "\3\7\2\0\4\7\1\u0576\32\0\26\7\4\0\3\7"+
    "\2\0\5\7\32\0\1\u0577\25\7\4\0\3\7\2\0"+
    "\4\7\1\u0578\32\0\26\7\4\0\3\7\2\0\1\u0579"+
    "\4\7\32\0\26\7\4\0\3\7\2\0\5\7\32\0"+
    "\11\7\1\u057a\14\7\4\0\3\7\2\0\1\u057b\4\7"+
    "\32\0\26\7\4\0\3\7\2\0\4\7\1\u057c\32\0"+
    "\26\7\4\0\3\7\2\0\5\7\32\0\5\7\1\u057d"+
    "\20\7\4\0\3\7\2\0\5\7\32\0\2\7\1\u057e"+
    "\23\7\4\0\3\7\2\0\5\7\32\0\1\u057f\25\7"+
    "\4\0\3\7\2\0\5\7\32\0\13\7\1\u0580\12\7"+
    "\4\0\3\7\2\0\4\7\1\u0581\32\0\26\7\4\0"+
    "\3\7\2\0\1\u0582\4\7\32\0\26\7\1\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[68572];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\2\0\1\11\4\1\1\11\1\1\1\11\5\1\1\11"+
    "\1\1\1\11\1\1\1\11\6\1\2\11\1\1\1\11"+
    "\1\1\1\11\1\1\2\11\25\1\1\11\13\1\1\0"+
    "\24\1\2\11\1\1\1\0\12\11\147\1\1\0\1\11"+
    "\1\0\43\1\1\11\243\1\1\0\1\1\1\0\337\1"+
    "\1\0\277\1\1\0\233\1\1\0\175\1\1\11\u012d\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[1410];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true iff the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true iff the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
    StringBuffer _cadenaComentario = new StringBuffer();
    private boolean _comentarioActivo = false;

    public boolean comentarioActivo() {
        return this._comentarioActivo;
    }

    public Symbol symbol(int type) {
        return new Symbol(type, yyline, yycolumn);
    }

    private Symbol symbol(int type, Object value) {
        return new Symbol(type, yyline, yycolumn, value);
    }


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public Lexemas(java.io.Reader in) {
  
    this.zzReader = in;
  }



  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() throws java.io.IOException {
    if (!zzEOFDone) {
      zzEOFDone = true;
      yyclose();
    }
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public java_cup.runtime.Symbol next_token() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      yychar+= zzMarkedPosL-zzStartRead;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':  // fall through
        case '\u000C':  // fall through
        case '\u0085':  // fall through
        case '\u2028':  // fall through
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn += zzCharCount;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
            zzDoEOF();
            switch (zzLexicalState) {
            case COMENTARIOMULTI: {
              
            }  // fall though
            case 1411: break;
            default:
          {     return symbol(sym.EOF, new MyToken("FinArchivo", "Fin", "EOF", yyline + 1, yylength() + 1, yycolumn + 1));
 }
        }
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { System.out.print(yytext());
            } 
            // fall through
          case 354: break;
          case 2: 
            { return symbol(sym.Mas, new MyToken("Mas", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 355: break;
          case 3: 
            { return symbol(sym.Menos, new MyToken("Menos", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 356: break;
          case 4: 
            { return symbol(sym.DatoEntero, new MyToken("DatoEntero", yytext(), "Token", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 357: break;
          case 5: 
            { if (yytext().length() <= 31) {
        return symbol(sym.Identificador, new MyToken("Identificador", yytext(), "Token", yyline + 1, yylength() + 1, yycolumn + 1));
    } else {
        
    }
            } 
            // fall through
          case 358: break;
          case 6: 
            { //return symbol(sym.Error, new MyToken("ErrorInesperado", yytext(), "Error", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 359: break;
          case 7: 
            { return symbol(sym.Punto, new MyToken("Punto", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 360: break;
          case 8: 
            { 
            } 
            // fall through
          case 361: break;
          case 9: 
            { return symbol(sym.Multiplicacion, new MyToken("Multiplicacion", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 362: break;
          case 10: 
            { return symbol(sym.Division, new MyToken("Division", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 363: break;
          case 11: 
            { return symbol(sym.Modulo, new MyToken("Modulo", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 364: break;
          case 12: 
            { return symbol(sym.Menor, new MyToken("Menor", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 365: break;
          case 13: 
            { return symbol(sym.Igual, new MyToken("Igual", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 366: break;
          case 14: 
            { return symbol(sym.Mayor, new MyToken("Mayor", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 367: break;
          case 15: 
            { return symbol(sym.Not, new MyToken("Not", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 368: break;
          case 16: 
            { return symbol(sym.PuntoComa, new MyToken("PuntoComa", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 369: break;
          case 17: 
            { return symbol(sym.Coma, new MyToken("Coma", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 370: break;
          case 18: 
            { return symbol(sym.CorcheteAbrir, new MyToken("CorcheteAbrir", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 371: break;
          case 19: 
            { return symbol(sym.CorcheteCerrar, new MyToken("CorcheteAbrir", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 372: break;
          case 20: 
            { return symbol(sym.ParentesisAbrir, new MyToken("ParentesisAbrir", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 373: break;
          case 21: 
            { return symbol(sym.ParentesisCerrar, new MyToken("ParentesisCerrar", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 374: break;
          case 22: 
            { return symbol(sym.LlaveAbrir, new MyToken("LlaveAbrir", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 375: break;
          case 23: 
            { return symbol(sym.LlaveCerrar, new MyToken("LlaveCerrar", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 376: break;
          case 24: 
            { return symbol(sym.Arroba, new MyToken("Arroba", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 377: break;
          case 25: 
            { return symbol(sym.Numeral, new MyToken("Numeral", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 378: break;
          case 26: 
            { _cadenaComentario.append(yytext());
            } 
            // fall through
          case 379: break;
          case 27: 
            { return symbol(sym.DatoFloat, new MyToken("DatoFloat", yytext(), "Token", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 380: break;
          case 28: 
            { return symbol(sym.NO, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 381: break;
          case 29: 
            { return symbol(sym.StringNoCerrado, new MyToken("StringNoCerrado", yytext(), "Error", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 382: break;
          case 30: 
            { return symbol(sym.DatoString, new MyToken("DatoString", yytext(), "Token", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 383: break;
          case 31: 
            { return symbol(sym.MenorIgual, new MyToken("MenorIgual", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 384: break;
          case 32: 
            { return symbol(sym.IgualIgual, new MyToken("IgualIgual", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 385: break;
          case 33: 
            { return symbol(sym.MayorIgual, new MyToken("MayorIgual", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 386: break;
          case 34: 
            { return symbol(sym.Diferente, new MyToken("Diferente", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 387: break;
          case 35: 
            { return symbol(sym.And, new MyToken("And", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 388: break;
          case 36: 
            { return symbol(sym.Or, new MyToken("Or", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 389: break;
          case 37: 
            { return symbol(sym.Corchetes, new MyToken("Corchetes", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 390: break;
          case 38: 
            { return symbol(sym.Parentesis, new MyToken("Parentesis", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 391: break;
          case 39: 
            { return symbol(sym.Llaves, new MyToken("Llaves", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 392: break;
          case 40: 
            { return symbol(sym.DobleNumeral, new MyToken("DobleNumeral", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 393: break;
          case 41: 
            { return symbol(sym.AT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 394: break;
          case 42: 
            { return symbol(sym.AS, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 395: break;
          case 43: 
            { return symbol(sym.TO, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 396: break;
          case 44: 
            { return symbol(sym.ON, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 397: break;
          case 45: 
            { return symbol(sym.OR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 398: break;
          case 46: 
            { return symbol(sym.OF, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 399: break;
          case 47: 
            { return symbol(sym.IN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 400: break;
          case 48: 
            { return symbol(sym.IS, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 401: break;
          case 49: 
            { return symbol(sym.IF, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 402: break;
          case 50: 
            { return symbol(sym.BY, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 403: break;
          case 51: 
            { return symbol(sym.GO, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 404: break;
          case 52: 
            { _cadenaComentario.append(yytext());
        _comentarioActivo = false;
        yybegin(YYINITIAL);
        _cadenaComentario = new StringBuffer();
            } 
            // fall through
          case 405: break;
          case 53: 
            { return symbol(sym.END, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 406: break;
          case 54: 
            { return symbol(sym.NOT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 407: break;
          case 55: 
            { return symbol(sym.USE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 408: break;
          case 56: 
            { _cadenaComentario.append(yytext());
    _comentarioActivo = true;
    yybegin(COMENTARIOMULTI);
            } 
            // fall through
          case 409: break;
          case 57: 
            { return symbol(sym.AND, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 410: break;
          case 58: 
            { return symbol(sym.ANY, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 411: break;
          case 59: 
            { return symbol(sym.ALL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 412: break;
          case 60: 
            { return symbol(sym.ADA, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 413: break;
          case 61: 
            { return symbol(sym.ADD, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 414: break;
          case 62: 
            { return symbol(sym.ARE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 415: break;
          case 63: 
            { return symbol(sym.ASC, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 416: break;
          case 64: 
            { return symbol(sym.AVG, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 417: break;
          case 65: 
            { return symbol(sym.DEC, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 418: break;
          case 66: 
            { return symbol(sym.DAY, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 419: break;
          case 67: 
            { return symbol(sym.TOP, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 420: break;
          case 68: 
            { return symbol(sym.SET, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 421: break;
          case 69: 
            { return symbol(sym.SUM, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 422: break;
          case 70: 
            { return symbol(sym.SQL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 423: break;
          case 71: 
            { return symbol(sym.OFF, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 424: break;
          case 72: 
            { return symbol(sym.INT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 425: break;
          case 73: 
            { return symbol(sym.BIT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 426: break;
          case 74: 
            { return symbol(sym.KEY, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 427: break;
          case 75: 
            { return symbol(sym.PAD, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 428: break;
          case 76: 
            { return symbol(sym.GET, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 429: break;
          case 77: 
            { return symbol(sym.MAX, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 430: break;
          case 78: 
            { return symbol(sym.MIN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 431: break;
          case 79: 
            { return symbol(sym.FOR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 432: break;
          case 80: 
            { return symbol(sym.ELSE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 433: break;
          case 81: 
            { return symbol(sym.EXEC, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 434: break;
          case 82: 
            { return symbol(sym.EXIT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 435: break;
          case 83: 
            { return symbol(sym.NEXT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 436: break;
          case 84: 
            { return symbol(sym.NULL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 437: break;
          case 85: 
            { return symbol(sym.NONE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 438: break;
          case 86: 
            { return symbol(sym.USER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 439: break;
          case 87: 
            { return symbol(sym.LEFT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 440: break;
          case 88: 
            { return symbol(sym.LAST, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 441: break;
          case 89: 
            { return symbol(sym.LOAD, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 442: break;
          case 90: 
            { return symbol(sym.LIKE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 443: break;
          case 91: 
            { return symbol(sym.DENY, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 444: break;
          case 92: 
            { return symbol(sym.DESC, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 445: break;
          case 93: 
            { return symbol(sym.DUMP, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 446: break;
          case 94: 
            { return symbol(sym.DATE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 447: break;
          case 95: 
            { return symbol(sym.DROP, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 448: break;
          case 96: 
            { return symbol(sym.DISK, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 449: break;
          case 97: 
            { return symbol(sym.DBCC, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 450: break;
          case 98: 
            { return symbol(sym.TRAN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 451: break;
          case 99: 
            { return symbol(sym.TRIM, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 452: break;
          case 100: 
            { return symbol(sym.THEN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 453: break;
          case 101: 
            { return symbol(sym.TIME, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 454: break;
          case 102: 
            { return symbol(sym.REAL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 455: break;
          case 103: 
            { return symbol(sym.READ, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 456: break;
          case 104: 
            { return symbol(sym.RULE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 457: break;
          case 105: 
            { return symbol(sym.ROWS, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 458: break;
          case 106: 
            { return symbol(sym.YEAR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 459: break;
          case 107: 
            { return symbol(sym.SAVE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 460: break;
          case 108: 
            { return symbol(sym.SOME, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 461: break;
          case 109: 
            { return symbol(sym.SIZE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 462: break;
          case 110: 
            { return symbol(sym.CASE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 463: break;
          case 111: 
            { return symbol(sym.CAST, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 464: break;
          case 112: 
            { return symbol(sym.CHAR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 465: break;
          case 113: 
            { return symbol(sym.HOUR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 466: break;
          case 114: 
            { return symbol(sym.ONLY, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 467: break;
          case 115: 
            { return symbol(sym.OPEN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 468: break;
          case 116: 
            { return symbol(sym.OVER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 469: break;
          case 117: 
            { return symbol(sym.INTO, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 470: break;
          case 118: 
            { return symbol(sym.ZONE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 471: break;
          case 119: 
            { return symbol(sym.BULK, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 472: break;
          case 120: 
            { return symbol(sym.BOTH, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 473: break;
          case 121: 
            { return symbol(sym.KILL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 474: break;
          case 122: 
            { return symbol(sym.PLAN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 475: break;
          case 123: 
            { return symbol(sym.PROC, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 476: break;
          case 124: 
            { return symbol(sym.GOTO, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 477: break;
          case 125: 
            { return symbol(sym.WHEN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 478: break;
          case 126: 
            { return symbol(sym.WORK, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 479: break;
          case 127: 
            { return symbol(sym.WITH, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 480: break;
          case 128: 
            { return symbol(sym.VIEW, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 481: break;
          case 129: 
            { return symbol(sym.FULL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 482: break;
          case 130: 
            { return symbol(sym.FROM, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 483: break;
          case 131: 
            { return symbol(sym.FILE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 484: break;
          case 132: 
            { return symbol(sym.JOIN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 485: break;
          case 133: 
            { return symbol(sym.NAMES, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 486: break;
          case 134: 
            { return symbol(sym.NCHAR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 487: break;
          case 135: 
            { return symbol(sym.UNION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 488: break;
          case 136: 
            { return symbol(sym.USAGE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 489: break;
          case 137: 
            { return symbol(sym.USING, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 490: break;
          case 138: 
            { return symbol(sym.UPPER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 491: break;
          case 139: 
            { return symbol(sym.LEVEL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 492: break;
          case 140: 
            { return symbol(sym.LOCAL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 493: break;
          case 141: 
            { return symbol(sym.LOWER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 494: break;
          case 142: 
            { return symbol(sym.ALTER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 495: break;
          case 143: 
            { return symbol(sym.TABLE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 496: break;
          case 144: 
            { return symbol(sym.RIGHT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 497: break;
          case 145: 
            { return symbol(sym.SPACE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 498: break;
          case 146: 
            { return symbol(sym.SQLCA, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 499: break;
          case 147: 
            { return symbol(sym.CLOSE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 500: break;
          case 148: 
            { return symbol(sym.CROSS, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 501: break;
          case 149: 
            { return symbol(sym.CHECK, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 502: break;
          case 150: 
            { return symbol(sym.COUNT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 503: break;
          case 151: 
            { return symbol(sym.OUTER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 504: break;
          case 152: 
            { return symbol(sym.ORDER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 505: break;
          case 153: 
            { return symbol(sym.INNER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 506: break;
          case 154: 
            { return symbol(sym.INDEX, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 507: break;
          case 155: 
            { return symbol(sym.INPUT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 508: break;
          case 156: 
            { return symbol(sym.BEGIN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 509: break;
          case 157: 
            { return symbol(sym.BREAK, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 510: break;
          case 158: 
            { return symbol(sym.PRINT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 511: break;
          case 159: 
            { return symbol(sym.PRIOR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 512: break;
          case 160: 
            { return symbol(sym.PIVOT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 513: break;
          case 161: 
            { return symbol(sym.GRANT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 514: break;
          case 162: 
            { return symbol(sym.GROUP, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 515: break;
          case 163: 
            { return symbol(sym.WRITE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 516: break;
          case 164: 
            { return symbol(sym.WHERE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 517: break;
          case 165: 
            { return symbol(sym.WHILE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 518: break;
          case 166: 
            { return symbol(sym.MERGE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 519: break;
          case 167: 
            { return symbol(sym.MATCH, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 520: break;
          case 168: 
            { return symbol(sym.MONTH, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 521: break;
          case 169: 
            { return symbol(sym.VALUE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 522: break;
          case 170: 
            { return symbol(sym.FETCH, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 523: break;
          case 171: 
            { return symbol(sym.FLOAT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 524: break;
          case 172: 
            { return symbol(sym.FALSO, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 525: break;
          case 173: 
            { return symbol(sym.FOUND, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 526: break;
          case 174: 
            { return symbol(sym.FIRST, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 527: break;
          case 175: 
            { return symbol(sym.ERRLVL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 528: break;
          case 176: 
            { return symbol(sym.ESCAPE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 529: break;
          case 177: 
            { return symbol(sym.EXCEPT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 530: break;
          case 178: 
            { return symbol(sym.EXISTS, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 531: break;
          case 179: 
            { return symbol(sym.NULLIF, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 532: break;
          case 180: 
            { return symbol(sym.UNIQUE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 533: break;
          case 181: 
            { return symbol(sym.UPDATE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 534: break;
          case 182: 
            { return symbol(sym.LINENO, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 535: break;
          case 183: 
            { return symbol(sym.ACTION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 536: break;
          case 184: 
            { return symbol(sym.DELETE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 537: break;
          case 185: 
            { return symbol(sym.DOUBLE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 538: break;
          case 186: 
            { return symbol(sym.DOMAIN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 539: break;
          case 187: 
            { return symbol(sym.RETURN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 540: break;
          case 188: 
            { return symbol(sym.REVERT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 541: break;
          case 189: 
            { return symbol(sym.REVOKE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 542: break;
          case 190: 
            { return symbol(sym.SELECT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 543: break;
          case 191: 
            { return symbol(sym.SECOND, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 544: break;
          case 192: 
            { return symbol(sym.SCROLL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 545: break;
          case 193: 
            { return symbol(sym.SCHEMA, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 546: break;
          case 194: 
            { return symbol(sym.CURSOR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 547: break;
          case 195: 
            { return symbol(sym.CREATE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 548: break;
          case 196: 
            { return symbol(sym.COLUMN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 549: break;
          case 197: 
            { return symbol(sym.COMMIT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 550: break;
          case 198: 
            { return symbol(sym.HAVING, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 551: break;
          case 199: 
            { return symbol(sym.OUTPUT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 552: break;
          case 200: 
            { return symbol(sym.OPTION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 553: break;
          case 201: 
            { return symbol(sym.INSERT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 554: break;
          case 202: 
            { return symbol(sym.BACKUP, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 555: break;
          case 203: 
            { return symbol(sym.BROWSE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 556: break;
          case 204: 
            { return symbol(sym.PUBLIC, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 557: break;
          case 205: 
            { return symbol(sym.PASCAL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 558: break;
          case 206: 
            { return symbol(sym.GLOBAL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 559: break;
          case 207: 
            { return symbol(sym.WITHIN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 560: break;
          case 208: 
            { return symbol(sym.MODULE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 561: break;
          case 209: 
            { return symbol(sym.MINUTE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 562: break;
          case 210: 
            { return symbol(sym.VALUES, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 563: break;
          case 211: 
            { return symbol(sym.EXECUTE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 564: break;
          case 212: 
            { return symbol(sym.EXTRACT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 565: break;
          case 213: 
            { return symbol(sym.NUMERIC, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 566: break;
          case 214: 
            { return symbol(sym.NATURAL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 567: break;
          case 215: 
            { return symbol(sym.NOCHECK, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 568: break;
          case 216: 
            { return symbol(sym.UNKNOWN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 569: break;
          case 217: 
            { return symbol(sym.UNPIVOT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 570: break;
          case 218: 
            { return symbol(sym.LEADING, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 571: break;
          case 219: 
            { return symbol(sym.DECLARE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 572: break;
          case 220: 
            { return symbol(sym.DECIMAL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 573: break;
          case 221: 
            { return symbol(sym.DEFAULT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 574: break;
          case 222: 
            { return symbol(sym.TRIGGER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 575: break;
          case 223: 
            { return symbol(sym.TSEQUAL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 576: break;
          case 224: 
            { return symbol(sym.RETURNS, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 577: break;
          case 225: 
            { return symbol(sym.RESTORE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 578: break;
          case 226: 
            { return symbol(sym.SETUSER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 579: break;
          case 227: 
            { return symbol(sym.SESSION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 580: break;
          case 228: 
            { return symbol(sym.SECTION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 581: break;
          case 229: 
            { return symbol(sym.SQLCODE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 582: break;
          case 230: 
            { return symbol(sym.CURRENT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 583: break;
          case 231: 
            { return symbol(sym.CATALOG, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 584: break;
          case 232: 
            { return symbol(sym.CASCADE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 585: break;
          case 233: 
            { return symbol(sym.CONNECT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 586: break;
          case 234: 
            { return symbol(sym.CONVERT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 587: break;
          case 235: 
            { return symbol(sym.COLLATE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 588: break;
          case 236: 
            { return symbol(sym.COMPUTE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 589: break;
          case 237: 
            { return symbol(sym.OPENXML, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 590: break;
          case 238: 
            { return symbol(sym.OFFSETS, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 591: break;
          case 239: 
            { return symbol(sym.INTEGER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 592: break;
          case 240: 
            { return symbol(sym.INCLUDE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 593: break;
          case 241: 
            { return symbol(sym.BETWEEN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 594: break;
          case 242: 
            { return symbol(sym.PERCENT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 595: break;
          case 243: 
            { return symbol(sym.PARTIAL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 596: break;
          case 244: 
            { return symbol(sym.PREPARE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 597: break;
          case 245: 
            { return symbol(sym.PRIMARY, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 598: break;
          case 246: 
            { return symbol(sym.WAITFOR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 599: break;
          case 247: 
            { return symbol(sym.VARYING, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 600: break;
          case 248: 
            { return symbol(sym.VARCHAR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 601: break;
          case 249: 
            { return symbol(sym.FOREIGN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 602: break;
          case 250: 
            { return symbol(sym.FORTRAN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 603: break;
          case 251: 
            { return symbol(sym.ENDEXEC, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 604: break;
          case 252: 
            { return symbol(sym.EXTERNAL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 605: break;
          case 253: 
            { return symbol(sym.NATIONAL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 606: break;
          case 254: 
            { return symbol(sym.LANGUAGE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 607: break;
          case 255: 
            { return symbol(sym.ALLOCATE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 608: break;
          case 256: 
            { return symbol(sym.ABSOLUTE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 609: break;
          case 257: 
            { return symbol(sym.DESCRIBE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 610: break;
          case 258: 
            { return symbol(sym.DEFERRED, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 611: break;
          case 259: 
            { return symbol(sym.DATABASE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 612: break;
          case 260: 
            { return symbol(sym.DISTINCT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 613: break;
          case 261: 
            { return symbol(sym.TEXTSIZE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 614: break;
          case 262: 
            { return symbol(sym.TRUNCATE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 615: break;
          case 263: 
            { return symbol(sym.TRAILING, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 616: break;
          case 264: 
            { return symbol(sym.RELATIVE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 617: break;
          case 265: 
            { return symbol(sym.READTEXT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 618: break;
          case 266: 
            { return symbol(sym.RESTRICT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 619: break;
          case 267: 
            { return symbol(sym.ROLLBACK, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 620: break;
          case 268: 
            { return symbol(sym.ROWCOUNT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 621: break;
          case 269: 
            { return symbol(sym.SHUTDOWN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 622: break;
          case 270: 
            { return symbol(sym.SMALLINT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 623: break;
          case 271: 
            { return symbol(sym.SQLERROR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 624: break;
          case 272: 
            { return symbol(sym.SQLSTATE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 625: break;
          case 273: 
            { return symbol(sym.CASCADED, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 626: break;
          case 274: 
            { return symbol(sym.CONTAINS, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 627: break;
          case 275: 
            { return symbol(sym.CONTINUE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 628: break;
          case 276: 
            { return symbol(sym.COALESCE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 629: break;
          case 277: 
            { return symbol(sym.HOLDLOCK, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 630: break;
          case 278: 
            { return symbol(sym.OVERLAPS, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 631: break;
          case 279: 
            { return symbol(sym.INTERVAL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 632: break;
          case 280: 
            { return symbol(sym.IDENTITY, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 633: break;
          case 281: 
            { return symbol(sym.PRESERVE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 634: break;
          case 282: 
            { return symbol(sym.POSITION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 635: break;
          case 283: 
            { return symbol(sym.WHENEVER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 636: break;
          case 284: 
            { return symbol(sym.FUNCTION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 637: break;
          case 285: 
            { return symbol(sym.FREETEXT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 638: break;
          case 286: 
            { return symbol(sym.EXCEPTION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 639: break;
          case 287: 
            { return symbol(sym.ASSERTION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 640: break;
          case 288: 
            { return symbol(sym.TEMPORARY, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 641: break;
          case 289: 
            { return symbol(sym.TRANSLATE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 642: break;
          case 290: 
            { return symbol(sym.TIMESTAMP, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 643: break;
          case 291: 
            { return symbol(sym.RAISERROR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 644: break;
          case 292: 
            { return symbol(sym.SUBSTRING, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 645: break;
          case 293: 
            { return symbol(sym.CLUSTERED, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 646: break;
          case 294: 
            { return symbol(sym.CHARACTER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 647: break;
          case 295: 
            { return symbol(sym.COLLATION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 648: break;
          case 296: 
            { return symbol(sym.OPENQUERY, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 649: break;
          case 297: 
            { return symbol(sym.INDICATOR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 650: break;
          case 298: 
            { return symbol(sym.INTERSECT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 651: break;
          case 299: 
            { return symbol(sym.INITIALLY, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 652: break;
          case 300: 
            { return symbol(sym.ISOLATION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 653: break;
          case 301: 
            { return symbol(sym.IMMEDIATE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 654: break;
          case 302: 
            { return symbol(sym.PRECISION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 655: break;
          case 303: 
            { return symbol(sym.PROCEDURE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 656: break;
          case 304: 
            { return symbol(sym.WRITETEXT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 657: break;
          case 305: 
            { return symbol(sym.VERDADERO, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 658: break;
          case 306: 
            { return symbol(sym.UPDATETEXT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 659: break;
          case 307: 
            { return symbol(sym.DEALLOCATE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 660: break;
          case 308: 
            { return symbol(sym.DESCRIPTOR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 661: break;
          case 309: 
            { return symbol(sym.DEFERRABLE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 662: break;
          case 310: 
            { return symbol(sym.DISCONNECT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 663: break;
          case 311: 
            { return symbol(sym.REFERENCES, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 664: break;
          case 312: 
            { return symbol(sym.ROWGUIDCOL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 665: break;
          case 313: 
            { return symbol(sym.STATISTICS, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 666: break;
          case 314: 
            { return symbol(sym.SQLWARNING, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 667: break;
          case 315: 
            { return symbol(sym.CHECKPOINT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 668: break;
          case 316: 
            { return symbol(sym.CONNECTION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 669: break;
          case 317: 
            { return symbol(sym.CONSTRAINT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 670: break;
          case 318: 
            { return symbol(sym.BIT_LENGTH, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 671: break;
          case 319: 
            { return symbol(sym.PRIVILEGES, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 672: break;
          case 320: 
            { return symbol(sym.FILLFACTOR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 673: break;
          case 321: 
            { return symbol(sym.NOCLUSTERED, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 674: break;
          case 322: 
            { return symbol(sym.DIAGNOSTICS, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 675: break;
          case 323: 
            { return symbol(sym.DISTRIBUTED, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 676: break;
          case 324: 
            { return symbol(sym.TABLESAMPLE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 677: break;
          case 325: 
            { return symbol(sym.TRANSLATION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 678: break;
          case 326: 
            { return symbol(sym.TRANSACTION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 679: break;
          case 327: 
            { return symbol(sym.TRY_CONVERT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 680: break;
          case 328: 
            { return symbol(sym.RECONFIGURE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 681: break;
          case 329: 
            { return symbol(sym.REPLICATION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 682: break;
          case 330: 
            { return symbol(sym.SYSTEM_USER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 683: break;
          case 331: 
            { return symbol(sym.CHAR_LENGTH, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 684: break;
          case 332: 
            { return symbol(sym.CONSTRAINTS, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 685: break;
          case 333: 
            { return symbol(sym.INSENSITIVE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 686: break;
          case 334: 
            { return symbol(sym.IDENTITYCOL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 687: break;
          case 335: 
            { return symbol(sym.SESSION_USER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 688: break;
          case 336: 
            { return symbol(sym.CURRENT_USER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 689: break;
          case 337: 
            { return symbol(sym.CURRENT_DATE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 690: break;
          case 338: 
            { return symbol(sym.CURRENT_TIME, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 691: break;
          case 339: 
            { return symbol(sym.OCTET_LENGTH, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 692: break;
          case 340: 
            { return symbol(sym.AUTHORIZATION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 693: break;
          case 341: 
            { return symbol(sym.TIMEZONE_HOUR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 694: break;
          case 342: 
            { return symbol(sym.SECURITYAUDIT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 695: break;
          case 343: 
            { return symbol(sym.CONTAINSTABLE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 696: break;
          case 344: 
            { return symbol(sym.CORRESPONDING, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 697: break;
          case 345: 
            { return symbol(sym.FREETEXTTABLE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 698: break;
          case 346: 
            { return symbol(sym.OPENDATASOURCE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 699: break;
          case 347: 
            { return symbol(sym.TIMEZONE_MINUTE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 700: break;
          case 348: 
            { return symbol(sym.IDENTITY_INSERT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 701: break;
          case 349: 
            { return symbol(sym.CHARACTER_LENGTH, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 702: break;
          case 350: 
            { return symbol(sym.CURRENT_TIMESTAMP, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 703: break;
          case 351: 
            { return symbol(sym.SEMANTICKEYPHRASETABLE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 704: break;
          case 352: 
            { return symbol(sym.SEMANTICSIMILARITYTABLE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 705: break;
          case 353: 
            { return symbol(sym.SEMANTICSIMILARITYDETAILSTABLE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 706: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }

  /**
   * Runs the scanner on input files.
   *
   * This is a standalone scanner, it will print any unmatched
   * text to System.out unchanged.
   *
   * @param argv   the command line, contains the filenames to run
   *               the scanner on.
   */
  public static void main(String argv[]) {
    if (argv.length == 0) {
      System.out.println("Usage : java Lexemas [ --encoding <name> ] <inputfile(s)>");
    }
    else {
      int firstFilePos = 0;
      String encodingName = "UTF-8";
      if (argv[0].equals("--encoding")) {
        firstFilePos = 2;
        encodingName = argv[1];
        try {
          java.nio.charset.Charset.forName(encodingName); // Side-effect: is encodingName valid? 
        } catch (Exception e) {
          System.out.println("Invalid encoding '" + encodingName + "'");
          return;
        }
      }
      for (int i = firstFilePos; i < argv.length; i++) {
        Lexemas scanner = null;
        try {
          java.io.FileInputStream stream = new java.io.FileInputStream(argv[i]);
          java.io.Reader reader = new java.io.InputStreamReader(stream, encodingName);
          scanner = new Lexemas(reader);
          while ( !scanner.zzAtEOF ) scanner.next_token();
        }
        catch (java.io.FileNotFoundException e) {
          System.out.println("File not found : \""+argv[i]+"\"");
        }
        catch (java.io.IOException e) {
          System.out.println("IO error scanning file \""+argv[i]+"\"");
          System.out.println(e);
        }
        catch (Exception e) {
          System.out.println("Unexpected exception:");
          e.printStackTrace();
        }
      }
    }
  }


}
