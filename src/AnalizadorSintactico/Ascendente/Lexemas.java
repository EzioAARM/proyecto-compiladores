/* The following code was generated by JFlex 1.7.0 */

package AnalizadorSintactico.Ascendente;
import java_cup.runtime.*;
import java.io.*;
import java.io.FileReader;
import AnalizadorLexico.MyToken;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>Lexemas.flex</tt>
 */
public class Lexemas implements java_cup.runtime.Scanner {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;
  public static final int COMENTARIOMULTI = 2;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0,  0,  1, 1
  };

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = {
    17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 15, 18, 18, 18, 17, 17, 
    17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 
    17, 26, 17, 38, 17, 22, 27, 14, 33, 34, 20,  1, 30,  2,  7, 21, 
    10, 10,  3,  3,  3,  3,  3,  3,  3,  3, 17, 29, 23, 24, 25, 17, 
    37, 39, 50, 45, 40,  8, 57, 53, 46, 48, 59, 51, 13, 55, 11, 47, 
    52, 60, 42, 44, 41, 12, 56, 54, 58, 43, 49, 31, 17, 32, 17,  5, 
    17,  4,  4,  4,  4,  9,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4, 
     4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4, 35, 28, 36, 17, 17, 
    17, 17, 17, 17, 17, 18, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 
    17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 
    17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 
    17, 17, 17, 17, 16, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 
    17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 
    17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 
    17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 
    17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17, 17
  };

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\2\0\1\1\1\2\1\3\1\4\1\5\1\6\1\1"+
    "\1\7\1\5\1\10\3\5\2\6\1\11\1\12\1\13"+
    "\1\14\1\15\1\16\1\17\2\6\1\20\1\21\1\22"+
    "\1\23\1\24\1\25\1\26\1\27\1\30\1\31\24\5"+
    "\14\32\1\0\1\6\1\33\11\5\1\34\7\5\1\35"+
    "\1\36\2\35\1\0\1\37\1\40\1\41\1\42\1\43"+
    "\1\44\1\45\1\46\1\47\1\50\4\5\1\51\1\5"+
    "\1\52\17\5\1\53\33\5\1\54\1\5\1\55\3\5"+
    "\1\56\1\57\1\5\1\60\1\5\1\61\5\5\1\62"+
    "\16\5\1\63\24\5\1\0\1\64\1\0\1\65\16\5"+
    "\1\66\4\5\1\67\16\5\2\70\1\71\1\72\1\5"+
    "\1\73\1\5\1\74\1\75\1\76\1\5\1\77\2\5"+
    "\1\100\4\5\1\101\3\5\1\102\17\5\1\103\20\5"+
    "\1\104\4\5\1\105\12\5\1\106\31\5\1\107\2\5"+
    "\1\110\17\5\1\111\1\112\4\5\1\113\7\5\1\114"+
    "\14\5\1\115\2\5\1\116\14\5\1\117\3\5\1\0"+
    "\1\33\1\0\1\120\2\5\1\121\3\5\1\122\1\5"+
    "\1\123\1\124\5\5\1\125\6\5\1\126\6\5\1\127"+
    "\1\5\1\130\1\131\3\5\1\132\6\5\1\133\2\5"+
    "\1\134\4\5\1\135\1\136\1\5\1\137\5\5\1\140"+
    "\1\141\4\5\1\142\3\5\1\143\1\5\1\144\1\145"+
    "\1\5\1\146\1\147\7\5\1\150\2\5\1\151\3\5"+
    "\1\152\10\5\1\153\5\5\1\154\1\155\13\5\1\156"+
    "\1\157\4\5\1\160\14\5\1\161\1\5\1\162\4\5"+
    "\1\163\1\5\1\164\5\5\1\165\7\5\1\166\2\5"+
    "\1\167\3\5\1\170\1\5\1\171\2\5\1\172\5\5"+
    "\1\173\11\5\1\174\2\5\1\175\2\5\1\176\1\177"+
    "\11\5\1\200\2\5\1\201\3\5\1\202\3\5\1\203"+
    "\2\5\1\204\1\33\1\0\13\5\1\205\1\206\2\5"+
    "\1\207\3\5\1\210\1\211\1\5\1\212\1\5\1\213"+
    "\1\5\1\214\1\215\3\5\1\216\23\5\1\217\26\5"+
    "\1\220\15\5\1\221\3\5\1\222\5\5\1\223\3\5"+
    "\1\224\1\225\7\5\1\226\10\5\1\227\1\5\1\230"+
    "\7\5\1\231\1\232\7\5\1\233\4\5\1\234\1\5"+
    "\1\235\12\5\1\236\1\237\3\5\1\240\1\5\1\241"+
    "\1\242\1\5\1\243\1\5\1\244\1\245\1\5\1\246"+
    "\1\247\1\250\3\5\1\251\2\5\1\252\1\5\1\253"+
    "\1\254\1\5\1\255\3\5\1\256\1\0\1\257\1\260"+
    "\3\5\1\261\1\262\1\263\5\5\1\264\2\5\1\265"+
    "\2\5\1\266\3\5\1\267\1\5\1\270\7\5\1\271"+
    "\1\272\22\5\1\273\4\5\1\274\1\275\5\5\1\276"+
    "\4\5\1\277\4\5\1\300\1\301\7\5\1\302\3\5"+
    "\1\303\10\5\1\304\4\5\1\305\1\306\1\5\1\307"+
    "\4\5\1\310\7\5\1\311\6\5\1\312\1\313\2\5"+
    "\1\314\1\5\1\315\7\5\1\316\3\5\1\317\1\320"+
    "\1\321\1\5\1\322\7\5\1\0\1\323\1\5\1\324"+
    "\1\5\1\325\1\326\2\5\1\327\1\330\1\331\1\5"+
    "\1\332\10\5\1\333\1\334\2\5\1\335\15\5\1\336"+
    "\1\337\5\5\1\340\7\5\1\341\1\342\1\5\1\343"+
    "\10\5\1\344\1\5\1\345\1\5\1\346\1\347\3\5"+
    "\1\350\3\5\1\351\1\352\3\5\1\353\3\5\1\354"+
    "\2\5\1\355\3\5\1\356\1\5\1\357\4\5\1\360"+
    "\1\5\1\361\1\362\2\5\1\363\1\5\1\364\2\5"+
    "\1\365\3\5\1\366\1\367\2\5\1\370\1\371\1\5"+
    "\1\372\1\373\1\5\1\374\2\5\1\375\1\5\1\376"+
    "\1\5\1\377\1\5\1\u0100\1\5\1\u0101\1\5\1\u0102"+
    "\2\5\1\u0103\2\5\1\u0104\1\5\1\u0105\2\5\1\u0106"+
    "\3\5\1\u0107\1\u0108\1\u0109\4\5\1\u010a\1\u010b\7\5"+
    "\1\u010c\1\u010d\1\u010e\1\u010f\3\5\1\u0110\4\5\1\u0111"+
    "\1\u0112\2\5\1\u0113\1\5\1\u0114\3\5\1\u0115\2\5"+
    "\1\u0116\2\5\1\u0117\3\5\1\u0118\3\5\1\u0119\1\5"+
    "\1\u011a\1\5\1\u011b\1\u011c\1\5\1\u011d\3\5\1\u011e"+
    "\6\5\1\u011f\1\5\1\u0120\3\5\1\u0121\4\5\1\u0122"+
    "\5\5\1\u0123\6\5\1\u0124\2\5\1\u0125\3\5\1\u0126"+
    "\3\5\1\u0127\1\u0128\1\u0129\1\5\1\u012a\2\5\1\u012b"+
    "\1\u012c\1\5\1\u012d\1\u012e\1\5\1\u012f\1\u0130\3\5"+
    "\1\u0131\1\5\1\u0132\1\u0133\1\u0134\2\5\1\u0135\10\5"+
    "\1\u0136\1\u0137\4\5\1\u0138\1\5\1\u0139\3\5\1\u013a"+
    "\2\5\1\u013b\1\5\1\u013c\6\5\1\u013d\1\u013e\1\5"+
    "\1\u013f\1\u0140\1\5\1\u0141\1\u0142\1\u0143\1\u0144\1\u0145"+
    "\1\u0146\2\5\1\u0147\1\u0148\4\5\1\u0149\3\5\1\u014a"+
    "\2\5\1\u014b\3\5\1\u014c\1\5\1\u014d\4\5\1\u014e"+
    "\3\5\1\u014f\1\u0150\1\u0151\3\5\1\u0152\3\5\1\u0153"+
    "\1\u0154\1\5\1\u0155\4\5\1\u0156\1\u0157\2\5\1\u0158"+
    "\5\5\1\u0159\1\5\1\u015a\4\5\1\u015b\3\5\1\u015c"+
    "\2\5\1\u015d\15\5\1\u015e\1\5\1\u015f\6\5\1\u0160";

  private static int [] zzUnpackAction() {
    int [] result = new int[1409];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\75\0\172\0\267\0\364\0\u0131\0\u016e\0\172"+
    "\0\u01ab\0\172\0\u01e8\0\u0131\0\u0225\0\u0262\0\u029f\0\u02dc"+
    "\0\u0319\0\172\0\u0356\0\172\0\u0393\0\u03d0\0\u040d\0\u044a"+
    "\0\u0487\0\u04c4\0\172\0\172\0\u0501\0\172\0\u053e\0\172"+
    "\0\u057b\0\172\0\172\0\u05b8\0\u05f5\0\u0632\0\u066f\0\u06ac"+
    "\0\u06e9\0\u0726\0\u0763\0\u07a0\0\u07dd\0\u081a\0\u0857\0\u0894"+
    "\0\u08d1\0\u090e\0\u094b\0\u0988\0\u09c5\0\u0a02\0\u0a3f\0\u0a7c"+
    "\0\172\0\u0ab9\0\u0393\0\u03d0\0\u040d\0\u044a\0\u0487\0\u04c4"+
    "\0\u0501\0\u053e\0\u057b\0\u05b8\0\u01ab\0\u0af6\0\u0b33\0\u0b70"+
    "\0\u0bad\0\u0bea\0\u0c27\0\u0c64\0\u0ca1\0\u0cde\0\u0d1b\0\u0d58"+
    "\0\u0d95\0\u0dd2\0\u0e0f\0\u0e4c\0\u0e89\0\u0ec6\0\u0f03\0\u0f40"+
    "\0\u02dc\0\172\0\172\0\u0319\0\u0f7d\0\172\0\172\0\172"+
    "\0\172\0\172\0\172\0\172\0\172\0\172\0\172\0\u0fba"+
    "\0\u0ff7\0\u1034\0\u1071\0\u016e\0\u10ae\0\u10eb\0\u1128\0\u1165"+
    "\0\u11a2\0\u11df\0\u121c\0\u1259\0\u1296\0\u12d3\0\u1310\0\u134d"+
    "\0\u138a\0\u13c7\0\u1404\0\u1441\0\u147e\0\u14bb\0\u14f8\0\u1535"+
    "\0\u1572\0\u15af\0\u15ec\0\u1629\0\u1666\0\u16a3\0\u16e0\0\u171d"+
    "\0\u175a\0\u1797\0\u17d4\0\u1811\0\u184e\0\u188b\0\u18c8\0\u1905"+
    "\0\u1942\0\u197f\0\u19bc\0\u19f9\0\u1a36\0\u1a73\0\u1ab0\0\u1aed"+
    "\0\u1b2a\0\u1b67\0\u1ba4\0\u1be1\0\u1c1e\0\u1c5b\0\u1c98\0\u1cd5"+
    "\0\u1d12\0\u1d4f\0\u1d8c\0\u1dc9\0\u016e\0\u1e06\0\u1e43\0\u1e80"+
    "\0\u1ebd\0\u1efa\0\u016e\0\u1f37\0\u1f74\0\u1fb1\0\u1fee\0\u202b"+
    "\0\u2068\0\u20a5\0\u20e2\0\u211f\0\u215c\0\u2199\0\u21d6\0\u2213"+
    "\0\u2250\0\u228d\0\u22ca\0\u2307\0\u2344\0\u2381\0\u23be\0\u23fb"+
    "\0\u2438\0\u2475\0\u24b2\0\u24ef\0\u252c\0\u2569\0\u25a6\0\u25e3"+
    "\0\u2620\0\u265d\0\u269a\0\u26d7\0\u2714\0\u2751\0\u0ab9\0\172"+
    "\0\u278e\0\u27cb\0\u2808\0\u2845\0\u2882\0\u28bf\0\u28fc\0\u2939"+
    "\0\u2976\0\u29b3\0\u29f0\0\u2a2d\0\u2a6a\0\u2aa7\0\u2ae4\0\u2b21"+
    "\0\u016e\0\u2b5e\0\u2b9b\0\u2bd8\0\u2c15\0\u2c52\0\u2c8f\0\u2ccc"+
    "\0\u2d09\0\u2d46\0\u2d83\0\u2dc0\0\u2dfd\0\u2e3a\0\u2e77\0\u2eb4"+
    "\0\u2ef1\0\u2f2e\0\u2f6b\0\u2fa8\0\172\0\u0f7d\0\u016e\0\u016e"+
    "\0\u2fe5\0\u3022\0\u305f\0\u016e\0\u016e\0\u016e\0\u309c\0\u016e"+
    "\0\u30d9\0\u3116\0\u016e\0\u3153\0\u3190\0\u31cd\0\u320a\0\u3247"+
    "\0\u3284\0\u32c1\0\u32fe\0\u016e\0\u333b\0\u3378\0\u33b5\0\u33f2"+
    "\0\u342f\0\u346c\0\u34a9\0\u34e6\0\u3523\0\u3560\0\u359d\0\u35da"+
    "\0\u3617\0\u3654\0\u3691\0\u016e\0\u36ce\0\u370b\0\u3748\0\u3785"+
    "\0\u37c2\0\u37ff\0\u383c\0\u3879\0\u38b6\0\u38f3\0\u3930\0\u396d"+
    "\0\u39aa\0\u39e7\0\u3a24\0\u3a61\0\u3a9e\0\u3adb\0\u3b18\0\u3b55"+
    "\0\u3b92\0\u016e\0\u3bcf\0\u3c0c\0\u3c49\0\u3c86\0\u3cc3\0\u3d00"+
    "\0\u3d3d\0\u3d7a\0\u3db7\0\u3df4\0\u3e31\0\u3e6e\0\u3eab\0\u3ee8"+
    "\0\u3f25\0\u3f62\0\u3f9f\0\u3fdc\0\u4019\0\u4056\0\u4093\0\u40d0"+
    "\0\u410d\0\u414a\0\u4187\0\u41c4\0\u4201\0\u423e\0\u427b\0\u42b8"+
    "\0\u42f5\0\u4332\0\u436f\0\u43ac\0\u43e9\0\u4426\0\u4463\0\u44a0"+
    "\0\u44dd\0\u451a\0\u4557\0\u4594\0\u45d1\0\u460e\0\u464b\0\u4688"+
    "\0\u46c5\0\u4702\0\u473f\0\u477c\0\u47b9\0\u47f6\0\u4833\0\u4870"+
    "\0\u48ad\0\u48ea\0\u016e\0\u4927\0\u4964\0\u49a1\0\u49de\0\u016e"+
    "\0\u4a1b\0\u4a58\0\u4a95\0\u4ad2\0\u4b0f\0\u4b4c\0\u4b89\0\u016e"+
    "\0\u4bc6\0\u4c03\0\u4c40\0\u4c7d\0\u4cba\0\u4cf7\0\u4d34\0\u4d71"+
    "\0\u4dae\0\u4deb\0\u4e28\0\u4e65\0\u016e\0\u4ea2\0\u4edf\0\u4f1c"+
    "\0\u4f59\0\u4f96\0\u4fd3\0\u5010\0\u504d\0\u508a\0\u50c7\0\u5104"+
    "\0\u5141\0\u517e\0\u51bb\0\u51f8\0\u5235\0\u5272\0\u52af\0\u52ec"+
    "\0\u5329\0\u5366\0\u53a3\0\u016e\0\u53e0\0\u541d\0\u545a\0\u5497"+
    "\0\u54d4\0\u5511\0\u016e\0\u554e\0\u016e\0\u558b\0\u55c8\0\u5605"+
    "\0\u5642\0\u567f\0\u56bc\0\u016e\0\u56f9\0\u5736\0\u5773\0\u57b0"+
    "\0\u57ed\0\u582a\0\u016e\0\u5867\0\u58a4\0\u58e1\0\u591e\0\u595b"+
    "\0\u5998\0\u016e\0\u59d5\0\u016e\0\u016e\0\u5a12\0\u5a4f\0\u5a8c"+
    "\0\u016e\0\u5ac9\0\u5b06\0\u5b43\0\u5b80\0\u5bbd\0\u5bfa\0\u016e"+
    "\0\u5c37\0\u5c74\0\u5cb1\0\u5cee\0\u5d2b\0\u5d68\0\u5da5\0\u016e"+
    "\0\u016e\0\u5de2\0\u016e\0\u5e1f\0\u5e5c\0\u5e99\0\u5ed6\0\u5f13"+
    "\0\u016e\0\u016e\0\u5f50\0\u5f8d\0\u5fca\0\u6007\0\u6044\0\u6081"+
    "\0\u60be\0\u60fb\0\u016e\0\u6138\0\u016e\0\u6175\0\u61b2\0\u016e"+
    "\0\u61ef\0\u622c\0\u6269\0\u62a6\0\u62e3\0\u6320\0\u635d\0\u639a"+
    "\0\u016e\0\u63d7\0\u6414\0\u016e\0\u6451\0\u648e\0\u64cb\0\u016e"+
    "\0\u6508\0\u6545\0\u6582\0\u65bf\0\u65fc\0\u6639\0\u6676\0\u66b3"+
    "\0\u016e\0\u66f0\0\u672d\0\u676a\0\u67a7\0\u67e4\0\u016e\0\u016e"+
    "\0\u6821\0\u685e\0\u689b\0\u68d8\0\u6915\0\u6952\0\u698f\0\u69cc"+
    "\0\u6a09\0\u6a46\0\u6a83\0\u016e\0\u016e\0\u6ac0\0\u6afd\0\u6b3a"+
    "\0\u6b77\0\u6bb4\0\u6bf1\0\u6c2e\0\u6c6b\0\u6ca8\0\u6ce5\0\u6d22"+
    "\0\u6d5f\0\u6d9c\0\u6dd9\0\u6e16\0\u6e53\0\u6e90\0\u016e\0\u6ecd"+
    "\0\u016e\0\u6f0a\0\u6f47\0\u6f84\0\u6fc1\0\u6ffe\0\u703b\0\u7078"+
    "\0\u70b5\0\u70f2\0\u712f\0\u716c\0\u71a9\0\u016e\0\u71e6\0\u7223"+
    "\0\u7260\0\u729d\0\u72da\0\u7317\0\u7354\0\u016e\0\u7391\0\u73ce"+
    "\0\u016e\0\u740b\0\u7448\0\u7485\0\u016e\0\u74c2\0\u016e\0\u74ff"+
    "\0\u753c\0\u016e\0\u7579\0\u75b6\0\u75f3\0\u7630\0\u766d\0\u76aa"+
    "\0\u76e7\0\u7724\0\u7761\0\u779e\0\u77db\0\u7818\0\u7855\0\u7892"+
    "\0\u78cf\0\u016e\0\u790c\0\u7949\0\u7986\0\u79c3\0\u7a00\0\u016e"+
    "\0\u7a3d\0\u7a7a\0\u7ab7\0\u7af4\0\u7b31\0\u7b6e\0\u7bab\0\u7be8"+
    "\0\u7c25\0\u7c62\0\u016e\0\u7c9f\0\u7cdc\0\u016e\0\u7d19\0\u7d56"+
    "\0\u7d93\0\u016e\0\u7dd0\0\u7e0d\0\u7e4a\0\u016e\0\u7e87\0\u7ec4"+
    "\0\u016e\0\u7f01\0\u7f3e\0\u7f7b\0\u7fb8\0\u7ff5\0\u8032\0\u806f"+
    "\0\u80ac\0\u80e9\0\u8126\0\u8163\0\u81a0\0\u81dd\0\u016e\0\u016e"+
    "\0\u821a\0\u8257\0\u016e\0\u8294\0\u82d1\0\u830e\0\u016e\0\u016e"+
    "\0\u834b\0\u016e\0\u8388\0\u016e\0\u83c5\0\u016e\0\u016e\0\u8402"+
    "\0\u843f\0\u847c\0\u016e\0\u84b9\0\u84f6\0\u8533\0\u8570\0\u85ad"+
    "\0\u85ea\0\u8627\0\u8664\0\u86a1\0\u86de\0\u871b\0\u8758\0\u8795"+
    "\0\u87d2\0\u880f\0\u884c\0\u8889\0\u88c6\0\u8903\0\u8940\0\u897d"+
    "\0\u89ba\0\u89f7\0\u8a34\0\u8a71\0\u8aae\0\u8aeb\0\u8b28\0\u8b65"+
    "\0\u8ba2\0\u8bdf\0\u8c1c\0\u8c59\0\u8c96\0\u8cd3\0\u8d10\0\u8d4d"+
    "\0\u8d8a\0\u8dc7\0\u8e04\0\u8e41\0\u8e7e\0\u016e\0\u8ebb\0\u8ef8"+
    "\0\u8f35\0\u8f72\0\u8faf\0\u8fec\0\u9029\0\u9066\0\u90a3\0\u90e0"+
    "\0\u911d\0\u915a\0\u9197\0\u016e\0\u91d4\0\u9211\0\u924e\0\u016e"+
    "\0\u928b\0\u92c8\0\u9305\0\u9342\0\u937f\0\u016e\0\u93bc\0\u93f9"+
    "\0\u9436\0\u016e\0\u9473\0\u94b0\0\u94ed\0\u952a\0\u9567\0\u95a4"+
    "\0\u95e1\0\u961e\0\u016e\0\u965b\0\u9698\0\u96d5\0\u9712\0\u974f"+
    "\0\u978c\0\u97c9\0\u9806\0\u016e\0\u9843\0\u016e\0\u9880\0\u98bd"+
    "\0\u98fa\0\u9937\0\u9974\0\u99b1\0\u99ee\0\u016e\0\u016e\0\u9a2b"+
    "\0\u9a68\0\u9aa5\0\u9ae2\0\u9b1f\0\u9b5c\0\u9b99\0\u016e\0\u9bd6"+
    "\0\u9c13\0\u9c50\0\u9c8d\0\u016e\0\u9cca\0\u016e\0\u9d07\0\u9d44"+
    "\0\u9d81\0\u9dbe\0\u9dfb\0\u9e38\0\u9e75\0\u9eb2\0\u9eef\0\u9f2c"+
    "\0\u016e\0\u016e\0\u9f69\0\u9fa6\0\u9fe3\0\u016e\0\ua020\0\u016e"+
    "\0\u016e\0\ua05d\0\ua09a\0\ua0d7\0\u016e\0\u016e\0\ua114\0\u016e"+
    "\0\u016e\0\u016e\0\ua151\0\ua18e\0\ua1cb\0\ua208\0\ua245\0\ua282"+
    "\0\u016e\0\ua2bf\0\u016e\0\u016e\0\ua2fc\0\u016e\0\ua339\0\ua376"+
    "\0\ua3b3\0\u016e\0\ua3f0\0\u016e\0\u016e\0\ua42d\0\ua46a\0\ua4a7"+
    "\0\ua4e4\0\u016e\0\u016e\0\ua521\0\ua55e\0\ua59b\0\ua5d8\0\ua615"+
    "\0\u016e\0\ua652\0\ua68f\0\ua6cc\0\ua709\0\ua746\0\u016e\0\ua783"+
    "\0\ua7c0\0\ua7fd\0\u016e\0\ua83a\0\u016e\0\ua877\0\ua8b4\0\ua8f1"+
    "\0\ua92e\0\ua96b\0\ua9a8\0\ua9e5\0\u016e\0\u016e\0\uaa22\0\uaa5f"+
    "\0\uaa9c\0\uaad9\0\uab16\0\uab53\0\uab90\0\uabcd\0\uac0a\0\uac47"+
    "\0\uac84\0\uacc1\0\uacfe\0\uad3b\0\uad78\0\uadb5\0\uadf2\0\uae2f"+
    "\0\u016e\0\uae6c\0\uaea9\0\uaee6\0\uaf23\0\u016e\0\u016e\0\uaf60"+
    "\0\uaf9d\0\uafda\0\ub017\0\ub054\0\u016e\0\ub091\0\ub0ce\0\ub10b"+
    "\0\ub148\0\u016e\0\ub185\0\ub1c2\0\ub1ff\0\ub23c\0\u016e\0\u016e"+
    "\0\ub279\0\ub2b6\0\ub2f3\0\ub330\0\ub36d\0\ub3aa\0\ub3e7\0\u016e"+
    "\0\ub424\0\ub461\0\ub49e\0\u016e\0\ub4db\0\ub518\0\ub555\0\ub592"+
    "\0\ub5cf\0\ub60c\0\ub649\0\ub686\0\u016e\0\ub6c3\0\ub700\0\ub73d"+
    "\0\ub77a\0\u016e\0\u016e\0\ub7b7\0\u016e\0\ub7f4\0\ub831\0\ub86e"+
    "\0\ub8ab\0\u016e\0\ub8e8\0\ub925\0\ub962\0\ub99f\0\ub9dc\0\uba19"+
    "\0\uba56\0\u016e\0\uba93\0\ubad0\0\ubb0d\0\ubb4a\0\ubb87\0\ubbc4"+
    "\0\u016e\0\u016e\0\ubc01\0\ubc3e\0\u016e\0\ubc7b\0\u016e\0\ubcb8"+
    "\0\ubcf5\0\ubd32\0\ubd6f\0\ubdac\0\ubde9\0\ube26\0\u016e\0\ube63"+
    "\0\ubea0\0\ubedd\0\u016e\0\u016e\0\u016e\0\ubf1a\0\u016e\0\ubf57"+
    "\0\ubf94\0\ubfd1\0\uc00e\0\uc04b\0\uc088\0\uc0c5\0\uc102\0\u016e"+
    "\0\uc13f\0\u016e\0\uc17c\0\u016e\0\u016e\0\uc1b9\0\uc1f6\0\u016e"+
    "\0\u016e\0\u016e\0\uc233\0\u016e\0\uc270\0\uc2ad\0\uc2ea\0\uc327"+
    "\0\uc364\0\uc3a1\0\uc3de\0\uc41b\0\u016e\0\u016e\0\uc458\0\uc495"+
    "\0\u016e\0\uc4d2\0\uc50f\0\uc54c\0\uc589\0\uc5c6\0\uc603\0\uc640"+
    "\0\uc67d\0\uc6ba\0\uc6f7\0\uc734\0\uc771\0\uc7ae\0\u016e\0\u016e"+
    "\0\uc7eb\0\uc828\0\uc865\0\uc8a2\0\uc8df\0\u016e\0\uc91c\0\uc959"+
    "\0\uc996\0\uc9d3\0\uca10\0\uca4d\0\uca8a\0\u016e\0\ucac7\0\ucb04"+
    "\0\u016e\0\ucb41\0\ucb7e\0\ucbbb\0\ucbf8\0\ucc35\0\ucc72\0\uccaf"+
    "\0\uccec\0\u016e\0\ucd29\0\ucd66\0\ucda3\0\u016e\0\ucde0\0\uce1d"+
    "\0\uce5a\0\uce97\0\uced4\0\ucf11\0\ucf4e\0\ucf8b\0\u016e\0\u016e"+
    "\0\ucfc8\0\ud005\0\ud042\0\u016e\0\ud07f\0\ud0bc\0\ud0f9\0\u016e"+
    "\0\ud136\0\ud173\0\u016e\0\ud1b0\0\ud1ed\0\ud22a\0\u016e\0\ud267"+
    "\0\u016e\0\ud2a4\0\ud2e1\0\ud31e\0\ud35b\0\u016e\0\ud398\0\u016e"+
    "\0\u016e\0\ud3d5\0\ud412\0\u016e\0\ud44f\0\u016e\0\ud48c\0\ud4c9"+
    "\0\u016e\0\ud506\0\ud543\0\ud580\0\u016e\0\u016e\0\ud5bd\0\ud5fa"+
    "\0\u016e\0\u016e\0\ud637\0\172\0\u016e\0\ud674\0\u016e\0\ud6b1"+
    "\0\ud6ee\0\u016e\0\ud72b\0\u016e\0\ud768\0\u016e\0\ud7a5\0\u016e"+
    "\0\ud7e2\0\u016e\0\ud81f\0\u016e\0\ud85c\0\ud899\0\u016e\0\ud8d6"+
    "\0\ud913\0\u016e\0\ud950\0\u016e\0\ud98d\0\ud9ca\0\u016e\0\uda07"+
    "\0\uda44\0\uda81\0\u016e\0\u016e\0\u016e\0\udabe\0\udafb\0\udb38"+
    "\0\udb75\0\u016e\0\u016e\0\udbb2\0\udbef\0\udc2c\0\udc69\0\udca6"+
    "\0\udce3\0\udd20\0\u016e\0\u016e\0\u016e\0\u016e\0\udd5d\0\udd9a"+
    "\0\uddd7\0\u016e\0\ude14\0\ude51\0\ude8e\0\udecb\0\udf08\0\u016e"+
    "\0\udf45\0\udf82\0\u016e\0\udfbf\0\u016e\0\udffc\0\ue039\0\ue076"+
    "\0\u016e\0\ue0b3\0\ue0f0\0\u016e\0\ue12d\0\ue16a\0\ue1a7\0\ue1e4"+
    "\0\ue221\0\ue25e\0\u016e\0\ue29b\0\ue2d8\0\ue315\0\u016e\0\ue352"+
    "\0\u016e\0\ue38f\0\u016e\0\ue3cc\0\ue409\0\u016e\0\ue446\0\ue483"+
    "\0\ue4c0\0\u016e\0\ue4fd\0\ue53a\0\ue577\0\ue5b4\0\ue5f1\0\ue62e"+
    "\0\u016e\0\ue66b\0\u016e\0\ue6a8\0\ue6e5\0\ue722\0\u016e\0\ue75f"+
    "\0\ue79c\0\ue7d9\0\ue816\0\u016e\0\ue853\0\ue890\0\ue8cd\0\ue90a"+
    "\0\ue947\0\u016e\0\ue984\0\ue9c1\0\ue9fe\0\uea3b\0\uea78\0\ueab5"+
    "\0\u016e\0\ueaf2\0\ueb2f\0\ueb6c\0\ueba9\0\uebe6\0\uec23\0\u016e"+
    "\0\uec60\0\uec9d\0\uecda\0\u016e\0\u016e\0\u016e\0\ued17\0\u016e"+
    "\0\ued54\0\ued91\0\u016e\0\u016e\0\uedce\0\u016e\0\u016e\0\uee0b"+
    "\0\u016e\0\u016e\0\uee48\0\uee85\0\ueec2\0\u016e\0\ueeff\0\u016e"+
    "\0\u016e\0\u016e\0\uef3c\0\uef79\0\u016e\0\uefb6\0\ueff3\0\uf030"+
    "\0\uf06d\0\uf0aa\0\uf0e7\0\uf124\0\uf161\0\u016e\0\u016e\0\uf19e"+
    "\0\uf1db\0\uf218\0\uf255\0\u016e\0\uf292\0\u016e\0\uf2cf\0\uf30c"+
    "\0\uf349\0\u016e\0\uf386\0\uf3c3\0\u016e\0\uf400\0\uf43d\0\uf47a"+
    "\0\uf4b7\0\uf4f4\0\uf531\0\uf56e\0\uf5ab\0\u016e\0\u016e\0\uf5e8"+
    "\0\u016e\0\u016e\0\uf625\0\u016e\0\u016e\0\u016e\0\u016e\0\u016e"+
    "\0\u016e\0\uf662\0\uf69f\0\u016e\0\u016e\0\uf6dc\0\uf719\0\uf756"+
    "\0\uf793\0\u016e\0\uf7d0\0\uf80d\0\uf84a\0\u016e\0\uf887\0\uf8c4"+
    "\0\u016e\0\uf901\0\uf93e\0\uf97b\0\u016e\0\uf9b8\0\u016e\0\uf9f5"+
    "\0\ufa32\0\ufa6f\0\ufaac\0\u016e\0\ufae9\0\ufb26\0\ufb63\0\u016e"+
    "\0\u016e\0\ufba0\0\ufbdd\0\ufc1a\0\ufc57\0\u016e\0\ufc94\0\ufcd1"+
    "\0\ufd0e\0\u016e\0\u016e\0\ufd4b\0\u016e\0\ufd88\0\ufdc5\0\ufe02"+
    "\0\ufe3f\0\u016e\0\u016e\0\ufe7c\0\ufeb9\0\u016e\0\ufef6\0\uff33"+
    "\0\uff70\0\uffad\0\uffea\0\u016e\1\47\0\u016e\1\144\1\241"+
    "\1\336\1\u011b\0\u016e\1\u0158\1\u0195\1\u01d2\0\u016e\1\u020f"+
    "\1\u024c\0\u016e\1\u0289\1\u02c6\1\u0303\1\u0340\1\u037d\1\u03ba"+
    "\1\u03f7\1\u0434\1\u0471\1\u04ae\1\u04eb\1\u0528\1\u0565\0\u016e"+
    "\1\u05a2\0\u016e\1\u05df\1\u061c\1\u0659\1\u0696\1\u06d3\1\u0710"+
    "\0\u016e";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[1409];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12"+
    "\1\13\1\7\1\14\1\15\1\16\1\17\1\20\1\10"+
    "\1\21\2\10\1\3\1\22\1\23\1\24\1\25\1\26"+
    "\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36"+
    "\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46"+
    "\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56"+
    "\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66"+
    "\1\67\1\7\1\70\1\7\22\71\1\10\1\3\1\72"+
    "\2\71\1\73\1\74\1\75\1\76\1\77\1\100\2\71"+
    "\1\101\1\71\1\102\1\71\1\103\2\71\1\104\26\71"+
    "\100\0\1\6\2\0\1\105\3\0\1\6\64\0\1\106"+
    "\1\6\2\0\1\105\3\0\1\6\65\0\1\6\2\0"+
    "\1\105\1\107\2\0\1\6\65\0\3\7\2\0\6\7"+
    "\31\0\26\7\3\0\1\105\2\0\1\105\1\107\2\0"+
    "\1\105\65\0\3\7\2\0\3\7\1\110\1\7\1\111"+
    "\31\0\3\7\1\112\1\7\1\113\15\7\1\114\2\7"+
    "\3\0\3\7\2\0\1\115\3\7\1\116\1\7\31\0"+
    "\1\117\5\7\1\120\1\7\1\121\15\7\3\0\3\7"+
    "\2\0\3\7\1\122\2\7\31\0\5\7\1\123\7\7"+
    "\1\124\10\7\3\0\3\7\2\0\1\125\5\7\31\0"+
    "\1\126\7\7\1\127\1\130\14\7\16\131\1\132\1\133"+
    "\55\131\17\134\1\133\1\132\54\134\24\0\1\135\100\0"+
    "\1\136\74\0\1\137\74\0\1\140\74\0\1\141\77\0"+
    "\1\142\75\0\1\143\100\0\1\144\76\0\1\145\76\0"+
    "\1\146\76\0\1\147\31\0\3\7\2\0\3\7\1\150"+
    "\1\151\1\152\31\0\1\7\1\153\1\154\1\155\1\7"+
    "\1\156\1\157\4\7\1\160\5\7\1\161\4\7\3\0"+
    "\3\7\2\0\1\162\3\7\1\163\1\7\31\0\1\164"+
    "\2\7\1\165\4\7\1\166\1\167\1\7\1\170\12\7"+
    "\3\0\3\7\2\0\1\171\5\7\31\0\1\172\2\7"+
    "\1\173\1\7\1\174\1\7\1\175\1\176\1\177\14\7"+
    "\3\0\3\7\2\0\1\200\3\7\1\201\1\7\31\0"+
    "\1\202\7\7\1\203\1\204\14\7\3\0\3\7\2\0"+
    "\1\205\5\7\31\0\26\7\3\0\3\7\2\0\1\206"+
    "\3\7\1\207\1\7\31\0\1\210\1\7\1\211\1\7"+
    "\1\212\1\7\1\213\1\214\1\215\1\216\3\7\1\217"+
    "\2\7\1\220\4\7\1\221\3\0\3\7\2\0\4\7"+
    "\1\222\1\223\31\0\1\224\2\7\1\225\3\7\1\226"+
    "\1\227\15\7\3\0\3\7\2\0\6\7\31\0\1\230"+
    "\7\7\1\231\15\7\3\0\3\7\2\0\3\7\1\232"+
    "\1\233\1\7\31\0\3\7\1\234\2\7\1\235\6\7"+
    "\1\236\3\7\1\237\1\240\3\7\3\0\3\7\2\0"+
    "\3\7\1\241\2\7\31\0\1\7\1\242\3\7\1\243"+
    "\12\7\1\244\1\7\1\245\3\7\3\0\3\7\2\0"+
    "\6\7\31\0\10\7\1\246\15\7\3\0\3\7\2\0"+
    "\1\247\3\7\1\250\1\7\31\0\1\251\2\7\1\252"+
    "\1\253\3\7\1\254\1\255\14\7\3\0\3\7\2\0"+
    "\1\256\5\7\31\0\11\7\1\257\14\7\3\0\3\7"+
    "\2\0\1\260\3\7\1\261\1\262\31\0\1\263\2\7"+
    "\1\264\4\7\1\265\1\266\14\7\3\0\3\7\2\0"+
    "\1\267\4\7\1\270\31\0\3\7\1\271\4\7\1\272"+
    "\15\7\3\0\3\7\2\0\6\7\31\0\1\273\2\7"+
    "\1\274\3\7\1\275\1\276\1\277\14\7\3\0\3\7"+
    "\2\0\1\300\5\7\31\0\1\301\7\7\1\302\1\303"+
    "\14\7\3\0\3\7\2\0\1\304\5\7\31\0\1\305"+
    "\10\7\1\306\14\7\3\0\3\7\2\0\1\307\3\7"+
    "\1\310\1\311\31\0\1\312\2\7\1\313\4\7\1\314"+
    "\1\315\14\7\3\0\3\7\2\0\6\7\31\0\10\7"+
    "\1\316\15\7\24\0\1\317\1\320\47\0\17\106\1\0"+
    "\2\106\2\0\51\106\3\0\1\107\2\0\1\107\1\0"+
    "\2\321\1\107\65\0\3\7\2\0\6\7\31\0\1\7"+
    "\1\322\24\7\3\0\3\7\2\0\6\7\31\0\5\7"+
    "\1\323\20\7\3\0\3\7\2\0\6\7\31\0\3\7"+
    "\1\324\22\7\3\0\3\7\2\0\6\7\31\0\6\7"+
    "\1\325\17\7\3\0\3\7\2\0\1\326\5\7\31\0"+
    "\2\7\1\327\3\7\1\330\2\7\1\331\14\7\3\0"+
    "\3\7\2\0\6\7\31\0\23\7\1\332\2\7\3\0"+
    "\3\7\2\0\5\7\1\333\31\0\20\7\1\334\5\7"+
    "\3\0\3\7\2\0\6\7\31\0\2\7\1\335\15\7"+
    "\1\336\5\7\3\0\3\7\2\0\6\7\31\0\7\7"+
    "\1\337\16\7\3\0\3\7\2\0\3\7\1\340\2\7"+
    "\31\0\2\7\1\341\3\7\1\342\17\7\3\0\3\7"+
    "\2\0\6\7\31\0\11\7\1\343\2\7\1\344\1\345"+
    "\10\7\3\0\3\7\2\0\1\346\5\7\31\0\1\347"+
    "\10\7\1\350\14\7\3\0\3\7\2\0\6\7\31\0"+
    "\1\7\1\351\13\7\1\352\10\7\3\0\3\7\2\0"+
    "\6\7\31\0\1\353\20\7\1\354\1\355\3\7\3\0"+
    "\3\7\2\0\3\7\1\356\2\7\31\0\5\7\1\357"+
    "\20\7\3\0\3\7\2\0\6\7\31\0\1\360\5\7"+
    "\1\361\10\7\1\362\6\7\3\0\3\7\2\0\3\7"+
    "\1\363\2\7\31\0\14\7\1\364\11\7\17\365\1\0"+
    "\2\365\2\0\1\366\50\365\3\0\3\7\2\0\6\7"+
    "\31\0\1\7\1\367\2\7\1\370\21\7\3\0\3\7"+
    "\2\0\6\7\31\0\2\7\1\371\23\7\3\0\3\7"+
    "\2\0\5\7\1\372\31\0\2\7\1\373\23\7\3\0"+
    "\3\7\2\0\6\7\31\0\1\374\1\375\24\7\3\0"+
    "\3\7\2\0\1\376\5\7\31\0\26\7\3\0\3\7"+
    "\2\0\6\7\31\0\5\7\1\377\1\u0100\17\7\3\0"+
    "\3\7\2\0\6\7\31\0\2\7\1\u0101\23\7\3\0"+
    "\3\7\2\0\6\7\31\0\5\7\1\u0102\20\7\3\0"+
    "\3\7\2\0\6\7\31\0\16\7\1\u0103\7\7\3\0"+
    "\3\7\2\0\3\7\1\u0104\1\7\1\u0105\31\0\1\u0106"+
    "\4\7\1\u0107\1\u0108\13\7\1\u0109\3\7\3\0\3\7"+
    "\2\0\6\7\31\0\20\7\1\u010a\5\7\3\0\3\7"+
    "\2\0\6\7\31\0\2\7\1\u010b\1\7\1\u010c\21\7"+
    "\3\0\3\7\2\0\6\7\31\0\10\7\1\u010d\15\7"+
    "\3\0\3\7\2\0\4\7\1\u010e\1\7\31\0\20\7"+
    "\1\u010f\5\7\3\0\3\7\2\0\6\7\31\0\1\u0110"+
    "\4\7\1\u0111\20\7\3\0\3\7\2\0\6\7\31\0"+
    "\6\7\1\u0112\17\7\3\0\3\7\2\0\6\7\31\0"+
    "\20\7\1\u0113\2\7\1\u0114\2\7\3\0\3\7\2\0"+
    "\6\7\31\0\13\7\1\u0115\12\7\3\0\3\7\2\0"+
    "\4\7\1\u0116\1\7\31\0\1\u0117\3\7\1\u0118\4\7"+
    "\1\u0119\14\7\3\0\3\7\2\0\1\u011a\5\7\31\0"+
    "\26\7\3\0\3\7\2\0\1\u011b\5\7\31\0\26\7"+
    "\3\0\3\7\2\0\6\7\31\0\15\7\1\u011c\10\7"+
    "\3\0\3\7\2\0\6\7\31\0\20\7\1\u011d\5\7"+
    "\3\0\3\7\2\0\5\7\1\u011e\31\0\1\u011f\1\7"+
    "\1\u0120\2\7\1\u0121\1\u0122\6\7\1\u0123\3\7\1\u0124"+
    "\1\u0125\3\7\3\0\3\7\2\0\5\7\1\u0126\31\0"+
    "\26\7\3\0\3\7\2\0\6\7\31\0\11\7\1\u0127"+
    "\14\7\3\0\3\7\2\0\5\7\1\u0128\31\0\17\7"+
    "\1\u0129\6\7\3\0\3\7\2\0\6\7\31\0\16\7"+
    "\1\u012a\7\7\3\0\3\7\2\0\6\7\31\0\1\u012b"+
    "\25\7\3\0\3\7\2\0\5\7\1\u012c\31\0\2\7"+
    "\1\u012d\2\7\1\u012e\1\u012f\11\7\1\u0130\5\7\3\0"+
    "\3\7\2\0\6\7\31\0\13\7\1\u0131\4\7\1\u0132"+
    "\5\7\3\0\3\7\2\0\6\7\31\0\21\7\1\u0133"+
    "\4\7\3\0\3\7\2\0\6\7\31\0\1\u0134\25\7"+
    "\3\0\3\7\2\0\6\7\31\0\5\7\1\u0135\20\7"+
    "\3\0\3\7\2\0\6\7\31\0\3\7\1\u0136\3\7"+
    "\1\u0137\16\7\3\0\3\7\2\0\4\7\1\u0138\1\7"+
    "\31\0\26\7\3\0\3\7\2\0\6\7\31\0\20\7"+
    "\1\u0139\5\7\3\0\3\7\2\0\6\7\31\0\12\7"+
    "\1\u013a\13\7\3\0\3\7\2\0\6\7\31\0\1\u013b"+
    "\25\7\3\0\3\7\2\0\6\7\31\0\1\u013c\25\7"+
    "\3\0\3\7\2\0\5\7\1\u013d\31\0\26\7\3\0"+
    "\3\7\2\0\6\7\31\0\3\7\1\u013e\22\7\3\0"+
    "\3\7\2\0\4\7\1\u013f\1\7\31\0\10\7\1\u0140"+
    "\15\7\3\0\3\7\2\0\6\7\31\0\2\7\1\u0141"+
    "\2\7\1\u0142\20\7\3\0\3\7\2\0\1\u0143\5\7"+
    "\31\0\10\7\1\u0144\15\7\3\0\3\7\2\0\1\u0145"+
    "\5\7\31\0\1\u0146\25\7\3\0\3\7\2\0\3\7"+
    "\1\u0147\1\u0148\1\u0149\31\0\1\u014a\2\7\1\u014b\14\7"+
    "\1\u014c\5\7\3\0\3\7\2\0\6\7\31\0\21\7"+
    "\1\u014d\4\7\3\0\3\7\2\0\4\7\1\u014e\1\u014f"+
    "\31\0\26\7\3\0\3\7\2\0\5\7\1\u0150\31\0"+
    "\26\7\3\0\3\7\2\0\6\7\31\0\2\7\1\u0151"+
    "\23\7\3\0\3\7\2\0\6\7\31\0\1\7\1\u0152"+
    "\24\7\3\0\3\7\2\0\6\7\31\0\2\7\1\u0153"+
    "\23\7\3\0\3\7\2\0\1\u0154\5\7\31\0\2\7"+
    "\1\u0155\23\7\3\0\3\7\2\0\1\u0156\5\7\31\0"+
    "\26\7\3\0\3\7\2\0\6\7\31\0\22\7\1\u0157"+
    "\3\7\3\0\3\7\2\0\3\7\1\u0158\2\7\31\0"+
    "\1\7\1\u0159\1\u015a\2\7\1\u015b\1\u015c\2\7\1\u015d"+
    "\3\7\1\u015e\10\7\3\0\3\7\2\0\1\u015f\5\7"+
    "\31\0\26\7\3\0\3\7\2\0\6\7\31\0\10\7"+
    "\1\u0160\15\7\3\0\3\7\2\0\6\7\31\0\20\7"+
    "\1\u0161\5\7\3\0\3\7\2\0\3\7\1\u0162\2\7"+
    "\31\0\26\7\3\0\3\7\2\0\6\7\31\0\2\7"+
    "\1\u0163\13\7\1\u0164\7\7\3\0\3\7\2\0\5\7"+
    "\1\u0165\31\0\26\7\3\0\3\7\2\0\6\7\31\0"+
    "\6\7\1\u0166\17\7\3\0\3\7\2\0\1\u0167\5\7"+
    "\31\0\10\7\1\u0168\15\7\3\0\3\7\2\0\6\7"+
    "\31\0\2\7\1\u0169\23\7\3\0\3\7\2\0\6\7"+
    "\31\0\2\7\1\u016a\23\7\3\0\3\7\2\0\6\7"+
    "\31\0\4\7\1\u016b\21\7\3\0\3\7\2\0\5\7"+
    "\1\u016c\31\0\26\7\3\0\3\7\2\0\6\7\31\0"+
    "\3\7\1\u016d\22\7\3\0\3\7\2\0\6\7\31\0"+
    "\13\7\1\u016e\12\7\3\0\3\7\2\0\6\7\31\0"+
    "\1\u016f\25\7\3\0\3\7\2\0\6\7\31\0\1\7"+
    "\1\u0170\1\7\1\u0171\1\7\1\u0172\20\7\3\0\3\7"+
    "\2\0\1\u0173\5\7\31\0\10\7\1\u0174\1\u0175\14\7"+
    "\3\0\3\7\2\0\6\7\31\0\5\7\1\u0176\20\7"+
    "\3\0\3\7\2\0\6\7\31\0\21\7\1\u0177\4\7"+
    "\3\0\3\7\2\0\6\7\31\0\2\7\1\u0178\23\7"+
    "\3\0\3\7\2\0\6\7\31\0\10\7\1\u0179\15\7"+
    "\3\0\3\7\2\0\6\7\31\0\1\u017a\7\7\1\u017b"+
    "\15\7\3\0\3\7\2\0\6\7\31\0\2\7\1\u017c"+
    "\23\7\3\0\3\7\2\0\6\7\31\0\11\7\1\u017d"+
    "\14\7\3\0\3\7\2\0\6\7\31\0\11\7\1\u017e"+
    "\14\7\3\0\3\7\2\0\1\u017f\5\7\31\0\11\7"+
    "\1\u0180\14\7\3\0\3\7\2\0\6\7\31\0\3\7"+
    "\1\u0181\22\7\3\0\3\7\2\0\6\7\31\0\2\7"+
    "\1\u0182\23\7\3\0\3\7\2\0\6\7\31\0\3\7"+
    "\1\u0183\22\7\3\0\3\7\2\0\6\7\31\0\2\7"+
    "\1\u0184\20\7\1\u0185\2\7\3\0\3\7\2\0\3\7"+
    "\1\u0186\2\7\31\0\1\7\1\u0187\24\7\3\0\3\7"+
    "\2\0\3\7\1\u0188\2\7\31\0\26\7\3\0\3\7"+
    "\2\0\6\7\31\0\3\7\1\u0189\22\7\3\0\3\7"+
    "\2\0\5\7\1\u018a\31\0\3\7\1\u018b\22\7\3\0"+
    "\3\7\2\0\1\u018c\5\7\31\0\26\7\3\0\3\7"+
    "\2\0\6\7\31\0\2\7\1\u018d\23\7\3\0\3\7"+
    "\2\0\3\7\1\u018e\1\7\1\u018f\31\0\26\7\3\0"+
    "\3\7\2\0\6\7\31\0\10\7\1\u0190\15\7\3\0"+
    "\3\7\2\0\5\7\1\u0191\31\0\26\7\3\0\3\7"+
    "\2\0\1\u0192\5\7\31\0\10\7\1\u0193\15\7\3\0"+
    "\3\7\2\0\4\7\1\u0194\1\7\31\0\3\7\1\u0195"+
    "\22\7\3\0\3\7\2\0\5\7\1\u0196\31\0\3\7"+
    "\1\u0197\22\7\3\0\3\7\2\0\6\7\31\0\11\7"+
    "\1\u0198\14\7\1\0\2\u0199\1\u019a\2\0\1\u019a\3\0"+
    "\1\u019a\64\0\1\u019b\3\7\2\0\6\7\31\0\26\7"+
    "\3\0\3\7\2\0\1\u019c\5\7\31\0\26\7\3\0"+
    "\3\7\2\0\5\7\1\u019d\31\0\26\7\3\0\3\7"+
    "\2\0\6\7\31\0\1\u019e\25\7\3\0\3\7\2\0"+
    "\6\7\31\0\6\7\1\u019f\17\7\3\0\3\7\2\0"+
    "\1\u01a0\5\7\31\0\3\7\1\u01a1\22\7\3\0\3\7"+
    "\2\0\1\u01a2\5\7\31\0\26\7\3\0\3\7\2\0"+
    "\6\7\31\0\2\7\1\u01a3\2\7\1\u01a4\20\7\3\0"+
    "\3\7\2\0\6\7\31\0\2\7\1\u01a5\23\7\3\0"+
    "\3\7\2\0\5\7\1\u01a6\31\0\26\7\3\0\3\7"+
    "\2\0\1\u01a7\5\7\31\0\26\7\3\0\3\7\2\0"+
    "\4\7\1\u01a8\1\7\31\0\11\7\1\u01a9\14\7\3\0"+
    "\3\7\2\0\1\u01aa\5\7\31\0\26\7\3\0\3\7"+
    "\2\0\6\7\31\0\1\u01ab\25\7\3\0\3\7\2\0"+
    "\1\u01ac\5\7\31\0\26\7\3\0\3\7\2\0\5\7"+
    "\1\u01ad\31\0\7\7\1\u01ae\16\7\3\0\3\7\2\0"+
    "\6\7\31\0\10\7\1\u01af\14\7\1\u01b0\3\0\3\7"+
    "\2\0\3\7\1\u01b1\2\7\31\0\26\7\3\0\3\7"+
    "\2\0\6\7\31\0\11\7\1\u01b2\14\7\3\0\3\7"+
    "\2\0\6\7\31\0\3\7\1\u01b3\22\7\3\0\3\7"+
    "\2\0\6\7\31\0\16\7\1\u01b4\7\7\3\0\3\7"+
    "\2\0\3\7\1\u01b5\2\7\31\0\26\7\3\0\3\7"+
    "\2\0\6\7\31\0\1\u01b6\25\7\3\0\3\7\2\0"+
    "\1\u01b7\5\7\31\0\26\7\3\0\3\7\2\0\6\7"+
    "\31\0\1\7\1\u01b8\24\7\3\0\3\7\2\0\1\u01b9"+
    "\5\7\31\0\26\7\3\0\3\7\2\0\6\7\31\0"+
    "\2\7\1\u01ba\23\7\3\0\3\7\2\0\6\7\31\0"+
    "\16\7\1\u01bb\7\7\3\0\3\7\2\0\6\7\31\0"+
    "\2\7\1\u01bc\23\7\3\0\3\7\2\0\6\7\31\0"+
    "\1\7\1\u01bd\24\7\3\0\3\7\2\0\6\7\31\0"+
    "\1\u01be\25\7\3\0\3\7\2\0\1\u01bf\5\7\31\0"+
    "\26\7\3\0\3\7\2\0\1\u01c0\5\7\31\0\26\7"+
    "\3\0\3\7\2\0\1\u01c1\5\7\31\0\26\7\3\0"+
    "\3\7\2\0\6\7\31\0\7\7\1\u01c2\16\7\3\0"+
    "\3\7\2\0\6\7\31\0\10\7\1\u01c3\15\7\3\0"+
    "\3\7\2\0\1\u01c4\5\7\31\0\26\7\3\0\3\7"+
    "\2\0\1\u01c5\5\7\31\0\26\7\3\0\3\7\2\0"+
    "\6\7\31\0\11\7\1\u01c6\14\7\3\0\3\7\2\0"+
    "\6\7\31\0\10\7\1\u01c7\15\7\3\0\3\7\2\0"+
    "\6\7\31\0\4\7\1\u01c8\21\7\3\0\3\7\2\0"+
    "\1\u01c9\5\7\31\0\26\7\3\0\3\7\2\0\5\7"+
    "\1\u01ca\31\0\26\7\3\0\3\7\2\0\6\7\31\0"+
    "\6\7\1\u01cb\17\7\3\0\3\7\2\0\5\7\1\u01cc"+
    "\31\0\11\7\1\u01cd\14\7\3\0\3\7\2\0\1\u01ce"+
    "\5\7\31\0\1\u01cf\25\7\3\0\3\7\2\0\6\7"+
    "\31\0\15\7\1\u01d0\10\7\3\0\3\7\2\0\1\u01d1"+
    "\5\7\31\0\1\u01d2\25\7\3\0\3\7\2\0\6\7"+
    "\31\0\15\7\1\u01d3\10\7\3\0\3\7\2\0\6\7"+
    "\31\0\13\7\1\u01d4\12\7\3\0\3\7\2\0\6\7"+
    "\31\0\1\u01d5\25\7\3\0\3\7\2\0\6\7\31\0"+
    "\16\7\1\u01d6\7\7\3\0\3\7\2\0\6\7\31\0"+
    "\2\7\1\u01d7\3\7\1\u01d8\5\7\1\u01d9\11\7\3\0"+
    "\3\7\2\0\6\7\31\0\6\7\1\u01da\17\7\3\0"+
    "\3\7\2\0\6\7\31\0\15\7\1\u01db\10\7\3\0"+
    "\3\7\2\0\6\7\31\0\2\7\1\u01dc\23\7\3\0"+
    "\3\7\2\0\5\7\1\u01dd\31\0\26\7\3\0\3\7"+
    "\2\0\3\7\1\u01de\2\7\31\0\26\7\3\0\3\7"+
    "\2\0\3\7\1\u01df\2\7\31\0\11\7\1\u01e0\14\7"+
    "\3\0\2\7\1\u01e1\2\0\6\7\31\0\26\7\3\0"+
    "\3\7\2\0\6\7\31\0\16\7\1\u01e2\1\7\1\u01e3"+
    "\5\7\3\0\3\7\2\0\6\7\31\0\25\7\1\u01e4"+
    "\3\0\3\7\2\0\3\7\1\u01e5\2\7\31\0\26\7"+
    "\3\0\3\7\2\0\1\u01e6\5\7\31\0\26\7\3\0"+
    "\3\7\2\0\6\7\31\0\1\u01e7\25\7\3\0\3\7"+
    "\2\0\5\7\1\u01e8\31\0\1\7\1\u01e9\24\7\3\0"+
    "\3\7\2\0\4\7\1\u01ea\1\7\31\0\26\7\3\0"+
    "\3\7\2\0\6\7\31\0\2\7\1\u01eb\23\7\3\0"+
    "\3\7\2\0\6\7\31\0\10\7\1\u01ec\15\7\3\0"+
    "\3\7\2\0\5\7\1\u01ed\31\0\26\7\3\0\3\7"+
    "\2\0\1\u01ee\5\7\31\0\10\7\1\u01ef\15\7\3\0"+
    "\3\7\2\0\1\u01f0\5\7\31\0\26\7\3\0\3\7"+
    "\2\0\1\u01f1\5\7\31\0\26\7\3\0\3\7\2\0"+
    "\6\7\31\0\5\7\1\u01f2\20\7\3\0\3\7\2\0"+
    "\5\7\1\u01f3\31\0\26\7\3\0\3\7\2\0\6\7"+
    "\31\0\5\7\1\u01f4\1\u01f5\7\7\1\u01f6\7\7\3\0"+
    "\3\7\2\0\6\7\31\0\7\7\1\u01f7\16\7\3\0"+
    "\3\7\2\0\6\7\31\0\3\7\1\u01f8\22\7\3\0"+
    "\3\7\2\0\1\u01f9\5\7\31\0\26\7\3\0\3\7"+
    "\2\0\4\7\1\u01fa\1\7\31\0\26\7\3\0\3\7"+
    "\2\0\6\7\31\0\5\7\1\u01fb\20\7\3\0\3\7"+
    "\2\0\4\7\1\u01fc\1\7\31\0\2\7\1\u01fd\5\7"+
    "\1\u01fe\15\7\3\0\3\7\2\0\6\7\31\0\1\u01ff"+
    "\25\7\3\0\3\7\2\0\6\7\31\0\5\7\1\u0200"+
    "\20\7\3\0\3\7\2\0\1\u0201\5\7\31\0\26\7"+
    "\3\0\3\7\2\0\6\7\31\0\2\7\1\u0202\23\7"+
    "\3\0\3\7\2\0\6\7\31\0\2\7\1\u0203\23\7"+
    "\3\0\3\7\2\0\6\7\31\0\10\7\1\u0204\15\7"+
    "\3\0\3\7\2\0\1\u0205\5\7\31\0\26\7\3\0"+
    "\3\7\2\0\6\7\31\0\2\7\1\u0206\23\7\3\0"+
    "\3\7\2\0\1\u0207\5\7\31\0\26\7\3\0\3\7"+
    "\2\0\1\u0208\5\7\31\0\26\7\3\0\3\7\2\0"+
    "\6\7\31\0\6\7\1\u0209\17\7\3\0\3\7\2\0"+
    "\5\7\1\u020a\31\0\26\7\3\0\3\7\2\0\1\u020b"+
    "\5\7\31\0\5\7\1\u020c\1\u020d\10\7\1\u020e\6\7"+
    "\3\0\3\7\2\0\6\7\31\0\3\7\1\u020f\1\7"+
    "\1\u0210\20\7\3\0\3\7\2\0\6\7\31\0\5\7"+
    "\1\u0211\20\7\3\0\3\7\2\0\6\7\31\0\5\7"+
    "\1\u0212\20\7\3\0\3\7\2\0\6\7\31\0\1\u0213"+
    "\25\7\3\0\3\7\2\0\1\u0214\5\7\31\0\2\7"+
    "\1\u0215\3\7\1\u0216\17\7\3\0\3\7\2\0\6\7"+
    "\31\0\1\u0217\25\7\3\0\3\7\2\0\6\7\31\0"+
    "\5\7\1\u0218\20\7\3\0\3\7\2\0\6\7\31\0"+
    "\6\7\1\u0219\17\7\3\0\3\7\2\0\6\7\31\0"+
    "\3\7\1\u021a\22\7\3\0\3\7\2\0\3\7\1\u021b"+
    "\2\7\31\0\2\7\1\u021c\2\7\1\u021d\13\7\1\u021e"+
    "\4\7\3\0\3\7\2\0\3\7\1\u021f\2\7\31\0"+
    "\26\7\3\0\3\7\2\0\4\7\1\u0220\1\u0221\31\0"+
    "\26\7\3\0\3\7\2\0\5\7\1\u0222\31\0\26\7"+
    "\3\0\3\7\2\0\6\7\31\0\3\7\1\u0223\22\7"+
    "\3\0\3\7\2\0\6\7\31\0\15\7\1\u0224\2\7"+
    "\1\u0225\5\7\3\0\3\7\2\0\6\7\31\0\11\7"+
    "\1\u0226\14\7\3\0\3\7\2\0\6\7\31\0\3\7"+
    "\1\u0227\22\7\3\0\3\7\2\0\6\7\31\0\1\7"+
    "\1\u0228\24\7\3\0\3\7\2\0\6\7\31\0\4\7"+
    "\1\u0229\21\7\3\0\3\7\2\0\1\u022a\5\7\31\0"+
    "\15\7\1\u022b\10\7\3\0\3\7\2\0\1\u022c\5\7"+
    "\31\0\26\7\3\0\3\7\2\0\1\u022d\5\7\31\0"+
    "\26\7\3\0\3\7\2\0\3\7\1\u022e\2\7\31\0"+
    "\26\7\3\0\3\7\2\0\6\7\31\0\11\7\1\u022f"+
    "\14\7\3\0\3\7\2\0\6\7\31\0\3\7\1\u0230"+
    "\22\7\3\0\3\7\2\0\6\7\31\0\5\7\1\u0231"+
    "\20\7\3\0\3\7\2\0\1\u0232\5\7\31\0\26\7"+
    "\3\0\3\7\2\0\1\u0233\5\7\31\0\11\7\1\u0234"+
    "\14\7\3\0\3\7\2\0\1\u0235\5\7\31\0\10\7"+
    "\1\u0236\15\7\3\0\3\7\2\0\1\u0237\5\7\31\0"+
    "\26\7\3\0\3\7\2\0\5\7\1\u0238\31\0\26\7"+
    "\3\0\3\7\2\0\6\7\31\0\2\7\1\u0239\23\7"+
    "\3\0\3\7\2\0\4\7\1\u023a\1\7\31\0\26\7"+
    "\3\0\3\7\2\0\3\7\1\u023b\2\7\31\0\26\7"+
    "\3\0\3\7\2\0\5\7\1\u023c\31\0\26\7\3\0"+
    "\3\7\2\0\1\u023d\5\7\31\0\26\7\3\0\3\7"+
    "\2\0\1\u023e\5\7\31\0\26\7\3\0\3\7\2\0"+
    "\6\7\31\0\17\7\1\u023f\6\7\3\0\3\7\2\0"+
    "\6\7\31\0\11\7\1\u0240\14\7\3\0\3\7\2\0"+
    "\6\7\31\0\14\7\1\u0241\11\7\3\0\3\7\2\0"+
    "\6\7\31\0\14\7\1\u0242\11\7\3\0\3\7\2\0"+
    "\6\7\31\0\1\u0243\25\7\3\0\3\7\2\0\6\7"+
    "\31\0\17\7\1\u0244\6\7\3\0\3\7\2\0\6\7"+
    "\31\0\7\7\1\u0245\16\7\3\0\2\7\1\u0246\2\0"+
    "\6\7\31\0\26\7\3\0\3\7\2\0\5\7\1\u0247"+
    "\31\0\26\7\3\0\3\7\2\0\6\7\31\0\6\7"+
    "\1\u0248\17\7\3\0\3\7\2\0\5\7\1\u0249\31\0"+
    "\26\7\3\0\3\7\2\0\3\7\1\u024a\2\7\31\0"+
    "\26\7\3\0\3\7\2\0\6\7\31\0\2\7\1\u024b"+
    "\23\7\3\0\3\7\2\0\6\7\31\0\6\7\1\u024c"+
    "\17\7\3\0\3\7\2\0\6\7\31\0\5\7\1\u024d"+
    "\1\u024e\6\7\1\u024f\10\7\3\0\3\7\2\0\6\7"+
    "\31\0\6\7\1\u0250\17\7\3\0\3\7\2\0\3\7"+
    "\1\u0251\2\7\31\0\10\7\1\u0252\7\7\1\u0253\1\u0254"+
    "\4\7\3\0\3\7\2\0\6\7\31\0\11\7\1\u0255"+
    "\14\7\3\0\3\7\2\0\6\7\31\0\10\7\1\u0256"+
    "\15\7\3\0\3\7\2\0\6\7\31\0\13\7\1\u0257"+
    "\12\7\3\0\3\7\2\0\3\7\1\u0258\2\7\31\0"+
    "\26\7\3\0\3\7\2\0\4\7\1\u0259\1\7\31\0"+
    "\26\7\3\0\3\7\2\0\6\7\31\0\10\7\1\u025a"+
    "\15\7\3\0\3\7\2\0\6\7\31\0\2\7\1\u025b"+
    "\23\7\3\0\3\7\2\0\6\7\31\0\2\7\1\u025c"+
    "\23\7\3\0\3\7\2\0\3\7\1\u025d\2\7\31\0"+
    "\3\7\1\u025e\22\7\3\0\3\7\2\0\5\7\1\u025f"+
    "\31\0\26\7\3\0\3\7\2\0\6\7\31\0\14\7"+
    "\1\u0260\11\7\3\0\3\7\2\0\6\7\31\0\7\7"+
    "\1\u0261\16\7\3\0\3\7\2\0\6\7\31\0\16\7"+
    "\1\u0262\7\7\3\0\3\7\2\0\6\7\31\0\6\7"+
    "\1\u0263\17\7\3\0\3\7\2\0\6\7\31\0\2\7"+
    "\1\u0264\23\7\3\0\3\7\2\0\4\7\1\u0265\1\7"+
    "\31\0\26\7\3\0\3\7\2\0\4\7\1\u0266\1\7"+
    "\31\0\26\7\3\0\3\7\2\0\6\7\31\0\1\7"+
    "\1\u0267\24\7\3\0\3\7\2\0\4\7\1\u0268\1\7"+
    "\31\0\26\7\3\0\3\7\2\0\6\7\31\0\4\7"+
    "\1\u0269\1\7\1\u026a\17\7\3\0\3\7\2\0\6\7"+
    "\31\0\17\7\1\u026b\6\7\3\0\3\7\2\0\6\7"+
    "\31\0\6\7\1\u026c\17\7\3\0\3\7\2\0\6\7"+
    "\31\0\6\7\1\u026d\17\7\3\0\3\7\2\0\5\7"+
    "\1\u026e\31\0\26\7\3\0\3\7\2\0\6\7\31\0"+
    "\1\u026f\25\7\3\0\3\7\2\0\6\7\31\0\5\7"+
    "\1\u0270\20\7\3\0\3\7\2\0\1\u0271\5\7\31\0"+
    "\26\7\3\0\3\7\2\0\6\7\31\0\20\7\1\u0272"+
    "\5\7\3\0\3\7\2\0\3\7\1\u0273\2\7\31\0"+
    "\26\7\3\0\3\7\2\0\1\u0274\5\7\31\0\2\7"+
    "\1\u0275\23\7\3\0\3\7\2\0\1\u0276\4\7\1\u0277"+
    "\31\0\26\7\3\0\3\7\2\0\6\7\31\0\5\7"+
    "\1\u0278\20\7\3\0\3\7\2\0\3\7\1\u0279\2\7"+
    "\31\0\26\7\3\0\1\u019a\2\0\1\u019a\3\0\1\u019a"+
    "\65\0\1\u019a\2\0\1\u019a\1\u027a\2\0\1\u019a\72\0"+
    "\1\u027b\67\0\3\7\2\0\6\7\31\0\21\7\1\u027c"+
    "\4\7\3\0\3\7\2\0\6\7\31\0\15\7\1\u027d"+
    "\10\7\3\0\3\7\2\0\4\7\1\u027e\1\7\31\0"+
    "\26\7\3\0\3\7\2\0\6\7\31\0\3\7\1\u027f"+
    "\22\7\3\0\3\7\2\0\6\7\31\0\1\u0280\25\7"+
    "\3\0\3\7\2\0\6\7\31\0\15\7\1\u0281\10\7"+
    "\3\0\3\7\2\0\6\7\31\0\2\7\1\u0282\23\7"+
    "\3\0\3\7\2\0\6\7\31\0\11\7\1\u0283\14\7"+
    "\3\0\3\7\2\0\6\7\31\0\3\7\1\u0284\22\7"+
    "\3\0\3\7\2\0\6\7\31\0\3\7\1\u0285\22\7"+
    "\3\0\3\7\2\0\6\7\31\0\10\7\1\u0286\15\7"+
    "\3\0\3\7\2\0\6\7\31\0\5\7\1\u0287\20\7"+
    "\3\0\3\7\2\0\6\7\31\0\3\7\1\u0288\22\7"+
    "\3\0\3\7\2\0\4\7\1\u0289\1\7\31\0\26\7"+
    "\3\0\3\7\2\0\1\u028a\5\7\31\0\26\7\3\0"+
    "\3\7\2\0\3\7\1\u028b\2\7\31\0\26\7\3\0"+
    "\3\7\2\0\4\7\1\u028c\1\7\31\0\26\7\3\0"+
    "\3\7\2\0\6\7\31\0\10\7\1\u028d\15\7\3\0"+
    "\3\7\2\0\6\7\31\0\21\7\1\u028e\4\7\3\0"+
    "\3\7\2\0\1\u028f\5\7\31\0\26\7\3\0\3\7"+
    "\2\0\6\7\31\0\16\7\1\u0290\7\7\3\0\3\7"+
    "\2\0\6\7\31\0\2\7\1\u0291\23\7\3\0\3\7"+
    "\2\0\6\7\31\0\3\7\1\u0292\22\7\3\0\3\7"+
    "\2\0\6\7\31\0\11\7\1\u0293\14\7\3\0\3\7"+
    "\2\0\5\7\1\u0294\31\0\26\7\3\0\3\7\2\0"+
    "\4\7\1\u0295\1\7\31\0\26\7\3\0\3\7\2\0"+
    "\5\7\1\u0296\31\0\26\7\3\0\3\7\2\0\6\7"+
    "\31\0\3\7\1\u0297\22\7\3\0\3\7\2\0\3\7"+
    "\1\u0298\2\7\31\0\26\7\3\0\3\7\2\0\6\7"+
    "\31\0\10\7\1\u0299\15\7\3\0\3\7\2\0\6\7"+
    "\31\0\6\7\1\u029a\17\7\3\0\3\7\2\0\6\7"+
    "\31\0\3\7\1\u029b\22\7\3\0\3\7\2\0\6\7"+
    "\31\0\3\7\1\u029c\22\7\3\0\3\7\2\0\6\7"+
    "\31\0\10\7\1\u029d\15\7\3\0\3\7\2\0\5\7"+
    "\1\u029e\31\0\26\7\3\0\3\7\2\0\6\7\31\0"+
    "\2\7\1\u029f\23\7\3\0\3\7\2\0\5\7\1\u02a0"+
    "\31\0\26\7\3\0\3\7\2\0\6\7\31\0\3\7"+
    "\1\u02a1\22\7\3\0\3\7\2\0\6\7\31\0\1\u02a2"+
    "\25\7\3\0\3\7\2\0\6\7\31\0\20\7\1\u02a3"+
    "\5\7\3\0\3\7\2\0\6\7\31\0\3\7\1\u02a4"+
    "\22\7\3\0\3\7\2\0\4\7\1\u02a5\1\7\31\0"+
    "\26\7\3\0\3\7\2\0\6\7\31\0\13\7\1\u02a6"+
    "\12\7\3\0\3\7\2\0\5\7\1\u02a7\31\0\26\7"+
    "\3\0\3\7\2\0\6\7\31\0\11\7\1\u02a8\14\7"+
    "\3\0\3\7\2\0\3\7\1\u02a9\2\7\31\0\26\7"+
    "\3\0\3\7\2\0\6\7\31\0\3\7\1\u02aa\5\7"+
    "\1\u02ab\14\7\3\0\3\7\2\0\6\7\31\0\10\7"+
    "\1\u02ac\15\7\3\0\3\7\2\0\6\7\31\0\10\7"+
    "\1\u02ad\15\7\3\0\3\7\2\0\6\7\31\0\5\7"+
    "\1\u02ae\20\7\3\0\3\7\2\0\1\u02af\5\7\31\0"+
    "\26\7\3\0\3\7\2\0\6\7\31\0\6\7\1\u02b0"+
    "\17\7\3\0\3\7\2\0\6\7\31\0\5\7\1\u02b1"+
    "\20\7\3\0\3\7\2\0\5\7\1\u02b2\31\0\26\7"+
    "\3\0\3\7\2\0\6\7\31\0\6\7\1\u02b3\17\7"+
    "\3\0\3\7\2\0\6\7\31\0\16\7\1\u02b4\7\7"+
    "\3\0\3\7\2\0\4\7\1\u02b5\1\7\31\0\26\7"+
    "\3\0\3\7\2\0\6\7\31\0\5\7\1\u02b6\4\7"+
    "\1\u02b7\13\7\3\0\3\7\2\0\6\7\31\0\2\7"+
    "\1\u02b8\23\7\3\0\3\7\2\0\6\7\31\0\2\7"+
    "\1\u02b9\23\7\3\0\3\7\2\0\6\7\31\0\3\7"+
    "\1\u02ba\22\7\3\0\3\7\2\0\6\7\31\0\3\7"+
    "\1\u02bb\4\7\1\u02bc\15\7\3\0\3\7\2\0\3\7"+
    "\1\u02bd\2\7\31\0\26\7\3\0\3\7\2\0\6\7"+
    "\31\0\11\7\1\u02be\14\7\3\0\3\7\2\0\6\7"+
    "\31\0\3\7\1\u02bf\22\7\3\0\3\7\2\0\6\7"+
    "\31\0\14\7\1\u02c0\11\7\3\0\3\7\2\0\6\7"+
    "\31\0\3\7\1\u02c1\22\7\3\0\3\7\2\0\1\u02c2"+
    "\5\7\31\0\26\7\3\0\3\7\2\0\6\7\31\0"+
    "\13\7\1\u02c3\12\7\3\0\3\7\2\0\6\7\31\0"+
    "\10\7\1\u02c4\15\7\3\0\3\7\2\0\4\7\1\u02c5"+
    "\1\7\31\0\26\7\3\0\3\7\2\0\6\7\31\0"+
    "\2\7\1\u02c6\23\7\3\0\3\7\2\0\6\7\31\0"+
    "\6\7\1\u02c7\17\7\3\0\3\7\2\0\6\7\31\0"+
    "\5\7\1\u02c8\20\7\3\0\3\7\2\0\6\7\31\0"+
    "\11\7\1\u02c9\14\7\3\0\3\7\2\0\6\7\31\0"+
    "\3\7\1\u02ca\22\7\3\0\3\7\2\0\6\7\31\0"+
    "\11\7\1\u02cb\14\7\3\0\3\7\2\0\3\7\1\u02cc"+
    "\2\7\31\0\26\7\3\0\3\7\2\0\3\7\1\u02cd"+
    "\2\7\31\0\26\7\3\0\3\7\2\0\6\7\31\0"+
    "\2\7\1\u02ce\23\7\3\0\3\7\2\0\6\7\31\0"+
    "\11\7\1\u02cf\14\7\3\0\3\7\2\0\1\u02d0\5\7"+
    "\31\0\26\7\3\0\3\7\2\0\5\7\1\u02d1\31\0"+
    "\26\7\3\0\3\7\2\0\6\7\31\0\20\7\1\u02d2"+
    "\5\7\3\0\3\7\2\0\6\7\31\0\1\7\1\u02d3"+
    "\24\7\3\0\3\7\2\0\1\u02d4\5\7\31\0\26\7"+
    "\3\0\3\7\2\0\5\7\1\u02d5\31\0\26\7\3\0"+
    "\3\7\2\0\6\7\31\0\3\7\1\u02d6\22\7\3\0"+
    "\3\7\2\0\6\7\31\0\2\7\1\u02d7\23\7\3\0"+
    "\3\7\2\0\6\7\31\0\1\u02d8\7\7\1\u02d9\15\7"+
    "\3\0\3\7\2\0\6\7\31\0\1\u02da\25\7\3\0"+
    "\3\7\2\0\1\u02db\5\7\31\0\26\7\3\0\3\7"+
    "\2\0\6\7\31\0\10\7\1\u02dc\15\7\3\0\3\7"+
    "\2\0\6\7\31\0\2\7\1\u02dd\23\7\3\0\3\7"+
    "\2\0\1\u02de\5\7\31\0\26\7\3\0\3\7\2\0"+
    "\5\7\1\u02df\31\0\26\7\3\0\3\7\2\0\6\7"+
    "\31\0\1\u02e0\25\7\3\0\3\7\2\0\6\7\31\0"+
    "\2\7\1\u02e1\23\7\3\0\3\7\2\0\6\7\31\0"+
    "\5\7\1\u02e2\20\7\3\0\3\7\2\0\6\7\31\0"+
    "\14\7\1\u02e3\11\7\3\0\2\7\1\u02e4\2\0\6\7"+
    "\31\0\1\u02e5\25\7\3\0\3\7\2\0\1\u02e6\5\7"+
    "\31\0\26\7\3\0\3\7\2\0\6\7\31\0\1\u02e7"+
    "\10\7\1\u02e8\14\7\3\0\3\7\2\0\6\7\31\0"+
    "\2\7\1\u02e9\23\7\3\0\3\7\2\0\1\u02ea\5\7"+
    "\31\0\26\7\3\0\3\7\2\0\6\7\31\0\2\7"+
    "\1\u02eb\23\7\3\0\3\7\2\0\6\7\31\0\20\7"+
    "\1\u02ec\5\7\3\0\3\7\2\0\6\7\31\0\1\u02ed"+
    "\25\7\3\0\3\7\2\0\1\u02ee\5\7\31\0\26\7"+
    "\3\0\3\7\2\0\1\u02ef\5\7\31\0\26\7\3\0"+
    "\3\7\2\0\4\7\1\u02f0\1\7\31\0\26\7\3\0"+
    "\3\7\2\0\6\7\31\0\11\7\1\u02f1\14\7\3\0"+
    "\3\7\2\0\3\7\1\u02f2\2\7\31\0\26\7\3\0"+
    "\3\7\2\0\5\7\1\u02f3\31\0\26\7\3\0\3\7"+
    "\2\0\6\7\31\0\3\7\1\u02f4\22\7\3\0\3\7"+
    "\2\0\4\7\1\u02f5\1\7\31\0\26\7\3\0\3\7"+
    "\2\0\6\7\31\0\3\7\1\u02f6\22\7\3\0\3\7"+
    "\2\0\6\7\31\0\2\7\1\u02f7\23\7\3\0\3\7"+
    "\2\0\6\7\31\0\1\7\1\u02f8\21\7\1\u02f9\1\7"+
    "\1\u02fa\3\0\3\7\2\0\6\7\31\0\10\7\1\u02fb"+
    "\15\7\3\0\3\7\2\0\5\7\1\u02fc\31\0\26\7"+
    "\3\0\3\7\2\0\1\u02fd\5\7\31\0\26\7\3\0"+
    "\3\7\2\0\6\7\31\0\3\7\1\u02fe\22\7\3\0"+
    "\3\7\2\0\6\7\31\0\23\7\1\u02ff\2\7\3\0"+
    "\3\7\2\0\6\7\31\0\6\7\1\u0300\17\7\3\0"+
    "\3\7\2\0\6\7\31\0\3\7\1\u0301\12\7\1\u0302"+
    "\7\7\3\0\3\7\2\0\3\7\1\u0303\2\7\31\0"+
    "\3\7\1\u0304\22\7\3\0\3\7\2\0\4\7\1\u0305"+
    "\1\7\31\0\26\7\3\0\3\7\2\0\6\7\31\0"+
    "\11\7\1\u0306\14\7\3\0\3\7\2\0\6\7\31\0"+
    "\2\7\1\u0307\23\7\3\0\3\7\2\0\6\7\31\0"+
    "\2\7\1\u0308\23\7\3\0\3\7\2\0\6\7\31\0"+
    "\1\u0309\25\7\3\0\3\7\2\0\6\7\31\0\1\7"+
    "\1\u030a\24\7\3\0\3\7\2\0\1\u030b\5\7\31\0"+
    "\26\7\3\0\3\7\2\0\3\7\1\u030c\2\7\31\0"+
    "\26\7\3\0\3\7\2\0\4\7\1\u030d\1\7\31\0"+
    "\26\7\3\0\3\7\2\0\6\7\31\0\14\7\1\u030e"+
    "\11\7\3\0\3\7\2\0\6\7\31\0\5\7\1\u030f"+
    "\20\7\3\0\3\7\2\0\5\7\1\u0310\31\0\26\7"+
    "\3\0\3\7\2\0\1\u0311\5\7\31\0\26\7\3\0"+
    "\3\7\2\0\6\7\31\0\11\7\1\u0312\14\7\3\0"+
    "\3\7\2\0\6\7\31\0\11\7\1\u0313\14\7\3\0"+
    "\3\7\2\0\6\7\31\0\1\u0314\25\7\3\0\3\7"+
    "\2\0\1\u0315\5\7\31\0\26\7\3\0\3\7\2\0"+
    "\6\7\31\0\11\7\1\u0316\14\7\3\0\3\7\2\0"+
    "\6\7\31\0\1\u0317\25\7\3\0\3\7\2\0\1\u0318"+
    "\5\7\31\0\26\7\3\0\3\7\2\0\6\7\31\0"+
    "\2\7\1\u0319\23\7\3\0\3\7\2\0\6\7\31\0"+
    "\3\7\1\u031a\22\7\3\0\3\7\2\0\6\7\31\0"+
    "\1\u031b\25\7\3\0\3\7\2\0\6\7\31\0\11\7"+
    "\1\u031c\14\7\3\0\3\7\2\0\6\7\31\0\2\7"+
    "\1\u031d\23\7\3\0\3\7\2\0\6\7\31\0\2\7"+
    "\1\u031e\23\7\3\0\3\7\2\0\6\7\31\0\1\u031f"+
    "\25\7\3\0\3\7\2\0\6\7\31\0\2\7\1\u0320"+
    "\23\7\3\0\3\7\2\0\6\7\31\0\15\7\1\u0321"+
    "\10\7\3\0\3\7\2\0\6\7\31\0\22\7\1\u0322"+
    "\3\7\3\0\3\7\2\0\1\u0323\5\7\31\0\26\7"+
    "\3\0\3\7\2\0\1\u0324\5\7\31\0\26\7\3\0"+
    "\3\7\2\0\1\u0325\5\7\31\0\26\7\3\0\3\7"+
    "\2\0\1\u0326\5\7\31\0\26\7\3\0\3\7\2\0"+
    "\6\7\31\0\11\7\1\u0327\14\7\3\0\3\7\2\0"+
    "\1\u0328\5\7\31\0\26\7\3\0\3\7\2\0\6\7"+
    "\31\0\7\7\1\u0329\16\7\3\0\3\7\2\0\6\7"+
    "\31\0\7\7\1\u032a\16\7\3\0\3\7\2\0\5\7"+
    "\1\u032b\31\0\26\7\3\0\3\7\2\0\6\7\31\0"+
    "\2\7\1\u032c\23\7\3\0\3\7\2\0\6\7\31\0"+
    "\1\u032d\25\7\3\0\3\7\2\0\1\u032e\5\7\31\0"+
    "\26\7\3\0\3\7\2\0\6\7\31\0\11\7\1\u032f"+
    "\14\7\3\0\3\7\2\0\6\7\31\0\7\7\1\u0330"+
    "\16\7\3\0\3\7\2\0\6\7\31\0\7\7\1\u0331"+
    "\16\7\3\0\3\7\2\0\6\7\31\0\2\7\1\u0332"+
    "\23\7\3\0\3\7\2\0\6\7\31\0\2\7\1\u0333"+
    "\23\7\3\0\3\7\2\0\6\7\31\0\10\7\1\u0334"+
    "\15\7\3\0\3\7\2\0\6\7\31\0\2\7\1\u0335"+
    "\23\7\3\0\3\7\2\0\6\7\31\0\1\7\1\u0336"+
    "\24\7\3\0\3\7\2\0\6\7\31\0\11\7\1\u0337"+
    "\14\7\3\0\3\7\2\0\6\7\31\0\3\7\1\u0338"+
    "\22\7\3\0\3\7\2\0\6\7\31\0\22\7\1\u0339"+
    "\3\7\3\0\3\7\2\0\6\7\31\0\2\7\1\u033a"+
    "\23\7\3\0\1\u027a\2\0\1\u027a\3\0\1\u027a\154\0"+
    "\1\u033b\5\0\3\7\2\0\5\7\1\u033c\31\0\26\7"+
    "\3\0\3\7\2\0\1\u033d\5\7\31\0\26\7\3\0"+
    "\3\7\2\0\6\7\31\0\2\7\1\u033e\23\7\3\0"+
    "\3\7\2\0\3\7\1\u033f\2\7\31\0\26\7\3\0"+
    "\3\7\2\0\6\7\31\0\6\7\1\u0340\17\7\3\0"+
    "\3\7\2\0\6\7\31\0\2\7\1\u0341\23\7\3\0"+
    "\3\7\2\0\6\7\31\0\5\7\1\u0342\20\7\3\0"+
    "\3\7\2\0\6\7\31\0\22\7\1\u0343\3\7\3\0"+
    "\3\7\2\0\6\7\31\0\11\7\1\u0344\14\7\3\0"+
    "\3\7\2\0\6\7\31\0\1\u0345\25\7\3\0\3\7"+
    "\2\0\3\7\1\u0346\2\7\31\0\26\7\3\0\3\7"+
    "\2\0\6\7\31\0\5\7\1\u0347\20\7\3\0\3\7"+
    "\2\0\6\7\31\0\6\7\1\u0348\17\7\3\0\3\7"+
    "\2\0\1\u0349\5\7\31\0\26\7\3\0\3\7\2\0"+
    "\6\7\31\0\17\7\1\u034a\6\7\3\0\3\7\2\0"+
    "\6\7\31\0\10\7\1\u034b\15\7\3\0\3\7\2\0"+
    "\1\u034c\5\7\31\0\26\7\3\0\3\7\2\0\3\7"+
    "\1\u034d\2\7\31\0\26\7\3\0\3\7\2\0\6\7"+
    "\31\0\1\u034e\25\7\3\0\3\7\2\0\6\7\31\0"+
    "\10\7\1\u034f\15\7\3\0\3\7\2\0\6\7\31\0"+
    "\3\7\1\u0350\22\7\3\0\3\7\2\0\6\7\31\0"+
    "\1\u0351\25\7\3\0\3\7\2\0\6\7\31\0\2\7"+
    "\1\u0352\23\7\3\0\3\7\2\0\3\7\1\u0353\2\7"+
    "\31\0\26\7\3\0\3\7\2\0\4\7\1\u0354\1\7"+
    "\31\0\26\7\3\0\3\7\2\0\1\u0355\5\7\31\0"+
    "\26\7\3\0\3\7\2\0\6\7\31\0\10\7\1\u0356"+
    "\15\7\3\0\3\7\2\0\6\7\31\0\11\7\1\u0357"+
    "\14\7\3\0\3\7\2\0\6\7\31\0\3\7\1\u0358"+
    "\22\7\3\0\3\7\2\0\6\7\31\0\1\u0359\25\7"+
    "\3\0\3\7\2\0\6\7\31\0\3\7\1\u035a\22\7"+
    "\3\0\3\7\2\0\5\7\1\u035b\31\0\26\7\3\0"+
    "\3\7\2\0\6\7\31\0\1\u035c\25\7\3\0\3\7"+
    "\2\0\1\u035d\5\7\31\0\26\7\3\0\3\7\2\0"+
    "\3\7\1\u035e\2\7\31\0\26\7\3\0\3\7\2\0"+
    "\6\7\31\0\10\7\1\u035f\15\7\3\0\3\7\2\0"+
    "\6\7\31\0\11\7\1\u0360\14\7\3\0\3\7\2\0"+
    "\3\7\1\u0361\2\7\31\0\26\7\3\0\3\7\2\0"+
    "\3\7\1\u0362\2\7\31\0\26\7\3\0\3\7\2\0"+
    "\6\7\31\0\3\7\1\u0363\22\7\3\0\3\7\2\0"+
    "\6\7\31\0\11\7\1\u0364\14\7\3\0\3\7\2\0"+
    "\6\7\31\0\5\7\1\u0365\20\7\3\0\3\7\2\0"+
    "\6\7\31\0\1\u0366\25\7\3\0\3\7\2\0\5\7"+
    "\1\u0367\31\0\1\u0368\25\7\3\0\3\7\2\0\6\7"+
    "\31\0\11\7\1\u0369\14\7\3\0\3\7\2\0\6\7"+
    "\31\0\10\7\1\u036a\15\7\3\0\3\7\2\0\1\u036b"+
    "\5\7\31\0\26\7\3\0\3\7\2\0\6\7\31\0"+
    "\1\u036c\25\7\3\0\3\7\2\0\6\7\31\0\2\7"+
    "\1\u036d\23\7\3\0\3\7\2\0\6\7\31\0\10\7"+
    "\1\u036e\15\7\3\0\3\7\2\0\6\7\31\0\11\7"+
    "\1\u036f\14\7\3\0\3\7\2\0\1\u0370\5\7\31\0"+
    "\26\7\3\0\3\7\2\0\3\7\1\u0371\2\7\31\0"+
    "\26\7\3\0\3\7\2\0\6\7\31\0\11\7\1\u0372"+
    "\14\7\3\0\3\7\2\0\6\7\31\0\3\7\1\u0373"+
    "\22\7\3\0\3\7\2\0\6\7\31\0\22\7\1\u0374"+
    "\3\7\3\0\3\7\2\0\6\7\31\0\6\7\1\u0375"+
    "\17\7\3\0\3\7\2\0\6\7\31\0\2\7\1\u0376"+
    "\23\7\3\0\3\7\2\0\1\u0377\5\7\31\0\26\7"+
    "\3\0\3\7\2\0\1\u0378\5\7\31\0\26\7\3\0"+
    "\3\7\2\0\6\7\31\0\3\7\1\u0379\22\7\3\0"+
    "\3\7\2\0\6\7\31\0\1\u037a\25\7\3\0\3\7"+
    "\2\0\4\7\1\u037b\1\7\31\0\26\7\3\0\3\7"+
    "\2\0\6\7\31\0\11\7\1\u037c\14\7\3\0\3\7"+
    "\2\0\6\7\31\0\2\7\1\u037d\23\7\3\0\3\7"+
    "\2\0\1\u037e\5\7\31\0\26\7\3\0\3\7\2\0"+
    "\6\7\31\0\10\7\1\u037f\15\7\3\0\3\7\2\0"+
    "\6\7\31\0\11\7\1\u0380\14\7\3\0\3\7\2\0"+
    "\6\7\31\0\10\7\1\u0381\15\7\3\0\3\7\2\0"+
    "\6\7\31\0\1\7\1\u0382\24\7\3\0\3\7\2\0"+
    "\6\7\31\0\2\7\1\u0383\23\7\3\0\3\7\2\0"+
    "\6\7\31\0\3\7\1\u0384\22\7\3\0\3\7\2\0"+
    "\6\7\31\0\5\7\1\u0385\20\7\3\0\3\7\2\0"+
    "\6\7\31\0\20\7\1\u0386\5\7\3\0\3\7\2\0"+
    "\5\7\1\u0387\31\0\26\7\3\0\3\7\2\0\6\7"+
    "\31\0\1\u0388\25\7\3\0\3\7\2\0\6\7\31\0"+
    "\10\7\1\u0389\15\7\3\0\3\7\2\0\6\7\31\0"+
    "\11\7\1\u038a\14\7\3\0\3\7\2\0\6\7\31\0"+
    "\3\7\1\u038b\22\7\3\0\3\7\2\0\6\7\31\0"+
    "\1\u038c\25\7\3\0\3\7\2\0\6\7\31\0\1\7"+
    "\1\u038d\24\7\3\0\3\7\2\0\6\7\31\0\3\7"+
    "\1\u038e\22\7\3\0\3\7\2\0\3\7\1\u038f\2\7"+
    "\31\0\26\7\3\0\3\7\2\0\6\7\31\0\3\7"+
    "\1\u0390\22\7\3\0\3\7\2\0\1\u0391\5\7\31\0"+
    "\26\7\3\0\3\7\2\0\6\7\31\0\10\7\1\u0392"+
    "\15\7\3\0\3\7\2\0\6\7\31\0\1\7\1\u0393"+
    "\24\7\3\0\3\7\2\0\1\u0394\5\7\31\0\26\7"+
    "\3\0\3\7\2\0\6\7\31\0\15\7\1\u0395\10\7"+
    "\3\0\3\7\2\0\5\7\1\u0396\31\0\26\7\3\0"+
    "\3\7\2\0\6\7\31\0\6\7\1\u0397\17\7\3\0"+
    "\3\7\2\0\6\7\31\0\6\7\1\u0398\17\7\3\0"+
    "\3\7\2\0\6\7\31\0\11\7\1\u0399\14\7\3\0"+
    "\3\7\2\0\3\7\1\u039a\2\7\31\0\26\7\3\0"+
    "\3\7\2\0\6\7\31\0\3\7\1\u039b\22\7\3\0"+
    "\3\7\2\0\6\7\31\0\3\7\1\u039c\22\7\3\0"+
    "\3\7\2\0\3\7\1\u039d\2\7\31\0\26\7\3\0"+
    "\3\7\2\0\6\7\31\0\2\7\1\u039e\23\7\3\0"+
    "\3\7\2\0\6\7\31\0\5\7\1\u039f\20\7\3\0"+
    "\3\7\2\0\6\7\31\0\5\7\1\u03a0\20\7\3\0"+
    "\3\7\2\0\6\7\31\0\2\7\1\u03a1\23\7\3\0"+
    "\3\7\2\0\6\7\31\0\2\7\1\u03a2\23\7\3\0"+
    "\3\7\2\0\6\7\31\0\16\7\1\u03a3\7\7\3\0"+
    "\3\7\2\0\6\7\31\0\10\7\1\u03a4\15\7\3\0"+
    "\3\7\2\0\6\7\31\0\2\7\1\u03a5\23\7\3\0"+
    "\2\7\1\u03a6\2\0\6\7\31\0\26\7\3\0\3\7"+
    "\2\0\6\7\31\0\1\u03a7\25\7\3\0\3\7\2\0"+
    "\6\7\31\0\20\7\1\u03a8\5\7\3\0\3\7\2\0"+
    "\4\7\1\u03a9\1\7\31\0\26\7\3\0\3\7\2\0"+
    "\3\7\1\u03aa\2\7\31\0\26\7\3\0\3\7\2\0"+
    "\6\7\31\0\1\u03ab\25\7\3\0\3\7\2\0\6\7"+
    "\31\0\2\7\1\u03ac\23\7\3\0\3\7\2\0\6\7"+
    "\31\0\1\u03ad\25\7\3\0\3\7\2\0\6\7\31\0"+
    "\5\7\1\u03ae\13\7\1\u03af\4\7\3\0\3\7\2\0"+
    "\1\u03b0\5\7\31\0\26\7\3\0\3\7\2\0\6\7"+
    "\31\0\5\7\1\u03b1\20\7\3\0\3\7\2\0\6\7"+
    "\31\0\2\7\1\u03b2\23\7\3\0\3\7\2\0\6\7"+
    "\31\0\1\7\1\u03b3\24\7\3\0\3\7\2\0\6\7"+
    "\31\0\1\u03b4\25\7\3\0\3\7\2\0\6\7\31\0"+
    "\11\7\1\u03b5\14\7\3\0\3\7\2\0\6\7\31\0"+
    "\2\7\1\u03b6\23\7\3\0\3\7\2\0\6\7\31\0"+
    "\11\7\1\u03b7\14\7\3\0\3\7\2\0\1\u03b8\5\7"+
    "\31\0\26\7\3\0\3\7\2\0\6\7\31\0\15\7"+
    "\1\u03b9\10\7\3\0\3\7\2\0\1\u03ba\5\7\31\0"+
    "\26\7\3\0\3\7\2\0\1\u03bb\5\7\31\0\26\7"+
    "\3\0\3\7\2\0\3\7\1\u03bc\2\7\31\0\26\7"+
    "\3\0\3\7\2\0\6\7\31\0\6\7\1\u03bd\17\7"+
    "\3\0\3\7\2\0\6\7\31\0\1\u03be\25\7\3\0"+
    "\3\7\2\0\5\7\1\u03bf\31\0\26\7\3\0\3\7"+
    "\2\0\6\7\31\0\3\7\1\u03c0\22\7\3\0\3\7"+
    "\2\0\6\7\31\0\5\7\1\u03c1\20\7\3\0\3\7"+
    "\2\0\6\7\31\0\3\7\1\u03c2\22\7\3\0\3\7"+
    "\2\0\6\7\31\0\1\7\1\u03c3\24\7\3\0\3\7"+
    "\2\0\6\7\31\0\3\7\1\u03c4\22\7\3\0\3\7"+
    "\2\0\5\7\1\u03c5\31\0\26\7\3\0\3\7\2\0"+
    "\6\7\31\0\11\7\1\u03c6\14\7\3\0\3\7\2\0"+
    "\5\7\1\u03c7\31\0\26\7\3\0\3\7\2\0\6\7"+
    "\31\0\10\7\1\u03c8\15\7\3\0\3\7\2\0\6\7"+
    "\31\0\2\7\1\u03c9\23\7\3\0\3\7\2\0\6\7"+
    "\31\0\21\7\1\u03ca\4\7\3\0\3\7\2\0\3\7"+
    "\1\u03cb\2\7\31\0\26\7\3\0\3\7\2\0\1\u03cc"+
    "\5\7\31\0\26\7\3\0\3\7\2\0\1\u03cd\5\7"+
    "\31\0\26\7\3\0\3\7\2\0\6\7\31\0\1\7"+
    "\1\u03ce\24\7\3\0\3\7\2\0\6\7\31\0\5\7"+
    "\1\u03cf\20\7\3\0\3\7\2\0\3\7\1\u03d0\2\7"+
    "\31\0\26\7\3\0\3\7\2\0\6\7\31\0\1\u03d1"+
    "\25\7\3\0\3\7\2\0\6\7\31\0\11\7\1\u03d2"+
    "\14\7\3\0\3\7\2\0\1\u03d3\5\7\31\0\26\7"+
    "\3\0\3\7\2\0\6\7\31\0\16\7\1\u03d4\7\7"+
    "\3\0\3\7\2\0\6\7\31\0\1\u03d5\25\7\3\0"+
    "\3\7\2\0\6\7\31\0\1\u03d6\25\7\10\0\1\u03d7"+
    "\67\0\3\7\2\0\1\u03d8\5\7\31\0\26\7\3\0"+
    "\3\7\2\0\6\7\31\0\1\u03d9\25\7\3\0\3\7"+
    "\2\0\6\7\31\0\2\7\1\u03da\23\7\3\0\3\7"+
    "\2\0\6\7\31\0\11\7\1\u03db\14\7\3\0\3\7"+
    "\2\0\6\7\31\0\6\7\1\u03dc\17\7\3\0\3\7"+
    "\2\0\5\7\1\u03dd\31\0\26\7\3\0\3\7\2\0"+
    "\6\7\31\0\1\u03de\25\7\3\0\3\7\2\0\6\7"+
    "\31\0\2\7\1\u03df\23\7\3\0\3\7\2\0\6\7"+
    "\31\0\14\7\1\u03e0\11\7\3\0\3\7\2\0\3\7"+
    "\1\u03e1\2\7\31\0\26\7\3\0\3\7\2\0\6\7"+
    "\31\0\2\7\1\u03e2\23\7\3\0\3\7\2\0\6\7"+
    "\31\0\2\7\1\u03e3\23\7\3\0\3\7\2\0\6\7"+
    "\31\0\16\7\1\u03e4\7\7\3\0\3\7\2\0\6\7"+
    "\31\0\16\7\1\u03e5\7\7\3\0\3\7\2\0\6\7"+
    "\31\0\11\7\1\u03e6\14\7\3\0\3\7\2\0\6\7"+
    "\31\0\2\7\1\u03e7\23\7\3\0\3\7\2\0\6\7"+
    "\31\0\11\7\1\u03e8\14\7\3\0\3\7\2\0\6\7"+
    "\31\0\2\7\1\u03e9\23\7\3\0\3\7\2\0\6\7"+
    "\31\0\6\7\1\u03ea\17\7\3\0\3\7\2\0\6\7"+
    "\31\0\13\7\1\u03eb\1\7\1\u03ec\10\7\3\0\3\7"+
    "\2\0\1\u03ed\5\7\31\0\26\7\3\0\3\7\2\0"+
    "\5\7\1\u03ee\31\0\26\7\3\0\3\7\2\0\1\u03ef"+
    "\5\7\31\0\1\u03f0\25\7\3\0\3\7\2\0\6\7"+
    "\31\0\2\7\1\u03f1\23\7\3\0\3\7\2\0\6\7"+
    "\31\0\5\7\1\u03f2\20\7\3\0\3\7\2\0\6\7"+
    "\31\0\5\7\1\u03f3\20\7\3\0\3\7\2\0\6\7"+
    "\31\0\13\7\1\u03f4\12\7\3\0\3\7\2\0\6\7"+
    "\31\0\6\7\1\u03f5\17\7\3\0\3\7\2\0\3\7"+
    "\1\u03f6\2\7\31\0\26\7\3\0\3\7\2\0\6\7"+
    "\31\0\1\u03f7\25\7\3\0\3\7\2\0\6\7\31\0"+
    "\12\7\1\u03f8\13\7\3\0\3\7\2\0\6\7\31\0"+
    "\1\u03f9\25\7\3\0\3\7\2\0\6\7\31\0\2\7"+
    "\1\u03fa\23\7\3\0\3\7\2\0\6\7\31\0\1\u03fb"+
    "\25\7\3\0\3\7\2\0\6\7\31\0\6\7\1\u03fc"+
    "\17\7\3\0\3\7\2\0\3\7\1\u03fd\2\7\31\0"+
    "\26\7\3\0\3\7\2\0\3\7\1\u03fe\2\7\31\0"+
    "\26\7\3\0\3\7\2\0\6\7\31\0\3\7\1\u03ff"+
    "\22\7\3\0\3\7\2\0\5\7\1\u0400\31\0\26\7"+
    "\3\0\3\7\2\0\6\7\31\0\1\u0401\25\7\3\0"+
    "\3\7\2\0\3\7\1\u0402\2\7\31\0\26\7\3\0"+
    "\3\7\2\0\6\7\31\0\21\7\1\u0403\4\7\3\0"+
    "\3\7\2\0\6\7\31\0\23\7\1\u0404\2\7\3\0"+
    "\3\7\2\0\6\7\31\0\6\7\1\u0405\17\7\3\0"+
    "\3\7\2\0\1\u0406\5\7\31\0\26\7\3\0\3\7"+
    "\2\0\6\7\31\0\11\7\1\u0407\14\7\3\0\3\7"+
    "\2\0\6\7\31\0\1\u0408\25\7\3\0\3\7\2\0"+
    "\3\7\1\u0409\2\7\31\0\26\7\3\0\3\7\2\0"+
    "\6\7\31\0\3\7\1\u040a\22\7\3\0\3\7\2\0"+
    "\6\7\31\0\6\7\1\u040b\17\7\3\0\3\7\2\0"+
    "\3\7\1\u040c\2\7\31\0\26\7\3\0\3\7\2\0"+
    "\6\7\31\0\1\7\1\u040d\24\7\3\0\3\7\2\0"+
    "\6\7\31\0\3\7\1\u040e\22\7\3\0\3\7\2\0"+
    "\3\7\1\u040f\2\7\31\0\26\7\3\0\3\7\2\0"+
    "\6\7\31\0\2\7\1\u0410\23\7\3\0\3\7\2\0"+
    "\3\7\1\u0411\2\7\31\0\26\7\3\0\3\7\2\0"+
    "\6\7\31\0\11\7\1\u0412\14\7\3\0\3\7\2\0"+
    "\6\7\31\0\11\7\1\u0413\14\7\3\0\3\7\2\0"+
    "\6\7\31\0\2\7\1\u0414\23\7\3\0\2\7\1\u0415"+
    "\2\0\6\7\31\0\26\7\3\0\3\7\2\0\6\7"+
    "\31\0\17\7\1\u0416\6\7\3\0\3\7\2\0\3\7"+
    "\1\u0417\2\7\31\0\26\7\3\0\3\7\2\0\6\7"+
    "\31\0\10\7\1\u0418\15\7\3\0\3\7\2\0\6\7"+
    "\31\0\2\7\1\u0419\23\7\3\0\3\7\2\0\1\u041a"+
    "\5\7\31\0\26\7\3\0\3\7\2\0\3\7\1\u041b"+
    "\2\7\31\0\26\7\3\0\3\7\2\0\6\7\31\0"+
    "\2\7\1\u041c\23\7\3\0\3\7\2\0\6\7\31\0"+
    "\3\7\1\u041d\22\7\3\0\3\7\2\0\6\7\31\0"+
    "\16\7\1\u041e\7\7\3\0\3\7\2\0\1\u041f\5\7"+
    "\31\0\26\7\3\0\3\7\2\0\6\7\31\0\10\7"+
    "\1\u0420\15\7\3\0\3\7\2\0\1\u0421\5\7\31\0"+
    "\26\7\3\0\3\7\2\0\6\7\31\0\2\7\1\u0422"+
    "\23\7\3\0\3\7\2\0\6\7\31\0\2\7\1\u0423"+
    "\23\7\3\0\3\7\2\0\3\7\1\u0424\2\7\31\0"+
    "\26\7\3\0\3\7\2\0\4\7\1\u0425\1\7\31\0"+
    "\26\7\3\0\3\7\2\0\6\7\31\0\1\u0426\25\7"+
    "\3\0\3\7\2\0\6\7\31\0\2\7\1\u0427\23\7"+
    "\3\0\3\7\2\0\1\u0428\5\7\31\0\11\7\1\u0429"+
    "\14\7\3\0\3\7\2\0\6\7\31\0\6\7\1\u042a"+
    "\17\7\3\0\3\7\2\0\6\7\31\0\15\7\1\u042b"+
    "\10\7\3\0\3\7\2\0\1\u042c\5\7\31\0\26\7"+
    "\3\0\3\7\2\0\6\7\31\0\6\7\1\u042d\17\7"+
    "\3\0\3\7\2\0\5\7\1\u042e\31\0\26\7\3\0"+
    "\3\7\2\0\6\7\31\0\2\7\1\u042f\23\7\3\0"+
    "\3\7\2\0\5\7\1\u0430\31\0\26\7\3\0\3\7"+
    "\2\0\1\u0431\5\7\31\0\26\7\3\0\3\7\2\0"+
    "\6\7\31\0\15\7\1\u0432\10\7\3\0\3\7\2\0"+
    "\6\7\31\0\5\7\1\u0433\20\7\3\0\3\7\2\0"+
    "\6\7\31\0\2\7\1\u0434\23\7\3\0\3\7\2\0"+
    "\1\u0435\5\7\31\0\26\7\3\0\3\7\2\0\6\7"+
    "\31\0\1\u0436\25\7\3\0\3\7\2\0\6\7\31\0"+
    "\3\7\1\u0437\22\7\3\0\3\7\2\0\6\7\31\0"+
    "\11\7\1\u0438\14\7\3\0\3\7\2\0\1\u0439\5\7"+
    "\31\0\26\7\3\0\3\7\2\0\5\7\1\u043a\31\0"+
    "\26\7\3\0\3\7\2\0\6\7\31\0\2\7\1\u043b"+
    "\23\7\3\0\3\7\2\0\6\7\31\0\11\7\1\u043c"+
    "\14\7\3\0\3\7\2\0\6\7\31\0\1\u043d\25\7"+
    "\3\0\3\7\2\0\3\7\1\u043e\2\7\31\0\26\7"+
    "\3\0\3\7\2\0\3\7\1\u043f\2\7\31\0\26\7"+
    "\3\0\3\7\2\0\6\7\31\0\2\7\1\u0440\23\7"+
    "\3\0\3\7\2\0\5\7\1\u0441\31\0\26\7\3\0"+
    "\3\7\2\0\6\7\31\0\21\7\1\u0442\4\7\3\0"+
    "\3\7\2\0\6\7\31\0\11\7\1\u0443\14\7\3\0"+
    "\3\7\2\0\1\u0444\5\7\31\0\26\7\3\0\3\7"+
    "\2\0\4\7\1\u0445\1\7\31\0\26\7\3\0\3\7"+
    "\2\0\6\7\31\0\4\7\1\u0446\21\7\3\0\3\7"+
    "\2\0\1\u0447\5\7\31\0\26\7\3\0\3\7\2\0"+
    "\6\7\31\0\10\7\1\u0448\15\7\3\0\3\7\2\0"+
    "\6\7\31\0\3\7\1\u0449\22\7\3\0\3\7\2\0"+
    "\1\u044a\5\7\31\0\26\7\3\0\3\7\2\0\1\u044b"+
    "\5\7\31\0\26\7\3\0\3\7\2\0\1\u044c\5\7"+
    "\31\0\26\7\3\0\3\7\2\0\6\7\31\0\16\7"+
    "\1\u044d\7\7\3\0\3\7\2\0\6\7\31\0\3\7"+
    "\1\u044e\22\7\3\0\3\7\2\0\6\7\31\0\10\7"+
    "\1\u044f\15\7\3\0\3\7\2\0\6\7\31\0\23\7"+
    "\1\u0450\2\7\3\0\3\7\2\0\3\7\1\u0451\2\7"+
    "\31\0\26\7\3\0\3\7\2\0\3\7\1\u0452\2\7"+
    "\31\0\26\7\3\0\3\7\2\0\6\7\31\0\6\7"+
    "\1\u0453\17\7\55\0\1\u0454\22\0\3\7\2\0\5\7"+
    "\1\u0455\31\0\26\7\3\0\3\7\2\0\6\7\31\0"+
    "\10\7\1\u0456\15\7\3\0\3\7\2\0\5\7\1\u0457"+
    "\31\0\26\7\3\0\3\7\2\0\1\u0458\5\7\31\0"+
    "\26\7\3\0\3\7\2\0\1\u0459\5\7\31\0\26\7"+
    "\3\0\3\7\2\0\1\u045a\5\7\31\0\26\7\3\0"+
    "\3\7\2\0\6\7\31\0\12\7\1\u045b\13\7\3\0"+
    "\3\7\2\0\1\u045c\5\7\31\0\26\7\3\0\3\7"+
    "\2\0\6\7\31\0\10\7\1\u045d\15\7\3\0\3\7"+
    "\2\0\1\u045e\5\7\31\0\26\7\3\0\3\7\2\0"+
    "\6\7\31\0\1\u045f\25\7\3\0\3\7\2\0\1\u0460"+
    "\5\7\31\0\26\7\3\0\3\7\2\0\6\7\31\0"+
    "\2\7\1\u0461\23\7\3\0\3\7\2\0\6\7\31\0"+
    "\1\7\1\u0462\24\7\3\0\3\7\2\0\6\7\31\0"+
    "\13\7\1\u0463\12\7\3\0\3\7\2\0\1\u0464\5\7"+
    "\31\0\26\7\3\0\3\7\2\0\6\7\31\0\2\7"+
    "\1\u0465\23\7\3\0\3\7\2\0\4\7\1\u0466\1\7"+
    "\31\0\26\7\3\0\3\7\2\0\6\7\31\0\2\7"+
    "\1\u0467\23\7\3\0\3\7\2\0\1\u0468\5\7\31\0"+
    "\26\7\3\0\3\7\2\0\6\7\31\0\3\7\1\u0469"+
    "\22\7\3\0\3\7\2\0\1\u046a\5\7\31\0\26\7"+
    "\3\0\3\7\2\0\6\7\31\0\20\7\1\u046b\5\7"+
    "\3\0\3\7\2\0\1\u046c\5\7\31\0\26\7\3\0"+
    "\3\7\2\0\6\7\31\0\2\7\1\u046d\23\7\3\0"+
    "\3\7\2\0\6\7\31\0\2\7\1\u046e\23\7\3\0"+
    "\3\7\2\0\6\7\31\0\16\7\1\u046f\7\7\3\0"+
    "\3\7\2\0\6\7\31\0\21\7\1\u0470\4\7\3\0"+
    "\3\7\2\0\6\7\31\0\20\7\1\u0471\5\7\3\0"+
    "\3\7\2\0\1\u0472\5\7\31\0\26\7\3\0\3\7"+
    "\2\0\1\u0473\5\7\31\0\26\7\3\0\3\7\2\0"+
    "\6\7\31\0\2\7\1\u0474\23\7\3\0\3\7\2\0"+
    "\6\7\31\0\2\7\1\u0475\23\7\3\0\3\7\2\0"+
    "\6\7\31\0\16\7\1\u0476\7\7\3\0\3\7\2\0"+
    "\6\7\31\0\2\7\1\u0477\23\7\3\0\3\7\2\0"+
    "\6\7\31\0\6\7\1\u0478\17\7\3\0\3\7\2\0"+
    "\6\7\31\0\10\7\1\u0479\15\7\3\0\3\7\2\0"+
    "\6\7\31\0\14\7\1\u047a\11\7\3\0\3\7\2\0"+
    "\6\7\31\0\2\7\1\u047b\23\7\3\0\3\7\2\0"+
    "\6\7\31\0\6\7\1\u047c\17\7\3\0\2\7\1\u047d"+
    "\2\0\6\7\31\0\26\7\3\0\3\7\2\0\6\7"+
    "\31\0\4\7\1\u047e\21\7\3\0\3\7\2\0\6\7"+
    "\31\0\6\7\1\u047f\17\7\3\0\3\7\2\0\3\7"+
    "\1\u0480\2\7\31\0\26\7\3\0\3\7\2\0\6\7"+
    "\31\0\11\7\1\u0481\14\7\3\0\3\7\2\0\4\7"+
    "\1\u0482\1\7\31\0\26\7\3\0\3\7\2\0\3\7"+
    "\1\u0483\2\7\31\0\26\7\3\0\3\7\2\0\6\7"+
    "\31\0\2\7\1\u0484\23\7\3\0\3\7\2\0\6\7"+
    "\31\0\3\7\1\u0485\22\7\3\0\3\7\2\0\1\u0486"+
    "\5\7\31\0\26\7\3\0\3\7\2\0\6\7\31\0"+
    "\11\7\1\u0487\14\7\3\0\2\7\1\u0488\2\0\6\7"+
    "\31\0\26\7\3\0\3\7\2\0\1\u0489\5\7\31\0"+
    "\26\7\3\0\3\7\2\0\6\7\31\0\1\7\1\u048a"+
    "\24\7\3\0\3\7\2\0\6\7\31\0\11\7\1\u048b"+
    "\14\7\3\0\3\7\2\0\3\7\1\u048c\2\7\31\0"+
    "\26\7\3\0\3\7\2\0\1\u048d\5\7\31\0\26\7"+
    "\3\0\3\7\2\0\6\7\31\0\11\7\1\u048e\14\7"+
    "\3\0\3\7\2\0\6\7\31\0\5\7\1\u048f\20\7"+
    "\3\0\3\7\2\0\1\u0490\5\7\31\0\26\7\3\0"+
    "\3\7\2\0\6\7\31\0\11\7\1\u0491\14\7\3\0"+
    "\3\7\2\0\6\7\31\0\10\7\1\u0492\15\7\3\0"+
    "\3\7\2\0\1\u0493\5\7\31\0\26\7\3\0\3\7"+
    "\2\0\6\7\31\0\10\7\1\u0494\15\7\3\0\3\7"+
    "\2\0\6\7\31\0\14\7\1\u0495\11\7\3\0\3\7"+
    "\2\0\1\u0496\5\7\31\0\26\7\3\0\3\7\2\0"+
    "\6\7\31\0\1\u0497\25\7\3\0\3\7\2\0\6\7"+
    "\31\0\3\7\1\u0498\22\7\3\0\3\7\2\0\6\7"+
    "\31\0\5\7\1\u0499\20\7\3\0\3\7\2\0\6\7"+
    "\31\0\10\7\1\u049a\15\7\3\0\3\7\2\0\6\7"+
    "\31\0\6\7\1\u049b\17\7\3\0\3\7\2\0\5\7"+
    "\1\u049c\31\0\26\7\3\0\3\7\2\0\6\7\31\0"+
    "\2\7\1\u049d\23\7\3\0\3\7\2\0\5\7\1\u049e"+
    "\31\0\26\7\3\0\3\7\2\0\6\7\31\0\4\7"+
    "\1\u049f\21\7\3\0\3\7\2\0\6\7\31\0\10\7"+
    "\1\u04a0\15\7\3\0\3\7\2\0\6\7\31\0\2\7"+
    "\1\u04a1\23\7\3\0\3\7\2\0\6\7\31\0\16\7"+
    "\1\u04a2\7\7\3\0\3\7\2\0\1\u04a3\5\7\31\0"+
    "\26\7\3\0\3\7\2\0\6\7\31\0\10\7\1\u04a4"+
    "\15\7\3\0\3\7\2\0\6\7\31\0\3\7\1\u04a5"+
    "\22\7\3\0\3\7\2\0\6\7\31\0\16\7\1\u04a6"+
    "\7\7\3\0\3\7\2\0\3\7\1\u04a7\2\7\31\0"+
    "\26\7\3\0\3\7\2\0\6\7\31\0\23\7\1\u04a8"+
    "\2\7\3\0\3\7\2\0\6\7\31\0\3\7\1\u04a9"+
    "\22\7\3\0\3\7\2\0\6\7\31\0\3\7\1\u04aa"+
    "\22\7\3\0\3\7\2\0\3\7\1\u04ab\2\7\31\0"+
    "\26\7\3\0\3\7\2\0\6\7\31\0\2\7\1\u04ac"+
    "\23\7\3\0\3\7\2\0\6\7\31\0\2\7\1\u04ad"+
    "\23\7\3\0\3\7\2\0\3\7\1\u04ae\2\7\31\0"+
    "\26\7\3\0\3\7\2\0\6\7\31\0\3\7\1\u04af"+
    "\22\7\3\0\3\7\2\0\6\7\31\0\23\7\1\u04b0"+
    "\2\7\3\0\3\7\2\0\6\7\31\0\1\u04b1\25\7"+
    "\3\0\3\7\2\0\3\7\1\u04b2\2\7\31\0\26\7"+
    "\3\0\3\7\2\0\6\7\31\0\2\7\1\u04b3\23\7"+
    "\3\0\3\7\2\0\6\7\31\0\10\7\1\u04b4\15\7"+
    "\3\0\3\7\2\0\5\7\1\u04b5\31\0\26\7\3\0"+
    "\3\7\2\0\6\7\31\0\11\7\1\u04b6\14\7\3\0"+
    "\3\7\2\0\6\7\31\0\2\7\1\u04b7\23\7\3\0"+
    "\3\7\2\0\6\7\31\0\6\7\1\u04b8\17\7\3\0"+
    "\3\7\2\0\6\7\31\0\4\7\1\u04b9\21\7\3\0"+
    "\3\7\2\0\6\7\31\0\15\7\1\u04ba\10\7\3\0"+
    "\3\7\2\0\1\u04bb\5\7\31\0\11\7\1\u04bc\14\7"+
    "\3\0\3\7\2\0\6\7\31\0\11\7\1\u04bd\14\7"+
    "\3\0\3\7\2\0\1\u04be\5\7\31\0\26\7\3\0"+
    "\3\7\2\0\6\7\31\0\15\7\1\u04bf\10\7\3\0"+
    "\2\7\1\u04c0\2\0\6\7\31\0\26\7\3\0\3\7"+
    "\2\0\4\7\1\u04c1\1\7\31\0\26\7\3\0\3\7"+
    "\2\0\6\7\31\0\11\7\1\u04c2\14\7\3\0\3\7"+
    "\2\0\1\u04c3\5\7\31\0\26\7\3\0\3\7\2\0"+
    "\6\7\31\0\3\7\1\u04c4\22\7\3\0\3\7\2\0"+
    "\6\7\31\0\10\7\1\u04c5\15\7\3\0\3\7\2\0"+
    "\4\7\1\u04c6\1\7\31\0\26\7\3\0\3\7\2\0"+
    "\6\7\31\0\1\u04c7\25\7\3\0\3\7\2\0\6\7"+
    "\31\0\5\7\1\u04c8\6\7\1\u04c9\11\7\3\0\3\7"+
    "\2\0\6\7\31\0\16\7\1\u04ca\7\7\3\0\3\7"+
    "\2\0\6\7\31\0\6\7\1\u04cb\17\7\3\0\3\7"+
    "\2\0\6\7\31\0\5\7\1\u04cc\20\7\3\0\3\7"+
    "\2\0\3\7\1\u04cd\2\7\31\0\26\7\3\0\3\7"+
    "\2\0\4\7\1\u04ce\1\7\31\0\1\7\1\u04cf\1\u04d0"+
    "\23\7\3\0\3\7\2\0\6\7\31\0\1\7\1\u04d1"+
    "\24\7\3\0\3\7\2\0\3\7\1\u04d2\2\7\31\0"+
    "\26\7\3\0\3\7\2\0\6\7\31\0\16\7\1\u04d3"+
    "\7\7\3\0\3\7\2\0\6\7\31\0\3\7\1\u04d4"+
    "\22\7\3\0\3\7\2\0\6\7\31\0\10\7\1\u04d5"+
    "\15\7\3\0\3\7\2\0\6\7\31\0\2\7\1\u04d6"+
    "\23\7\3\0\3\7\2\0\3\7\1\u04d7\2\7\31\0"+
    "\26\7\3\0\3\7\2\0\3\7\1\u04d8\2\7\31\0"+
    "\26\7\3\0\3\7\2\0\3\7\1\u04d9\2\7\31\0"+
    "\26\7\3\0\3\7\2\0\3\7\1\u04da\2\7\31\0"+
    "\26\7\3\0\3\7\2\0\6\7\31\0\5\7\1\u04db"+
    "\20\7\3\0\3\7\2\0\6\7\31\0\4\7\1\u04dc"+
    "\21\7\3\0\3\7\2\0\6\7\31\0\3\7\1\u04dd"+
    "\22\7\3\0\3\7\2\0\6\7\31\0\2\7\1\u04de"+
    "\23\7\3\0\3\7\2\0\6\7\31\0\11\7\1\u04df"+
    "\14\7\3\0\3\7\2\0\6\7\31\0\4\7\1\u04e0"+
    "\21\7\3\0\2\7\1\u04e1\2\0\6\7\31\0\6\7"+
    "\1\u04e2\17\7\3\0\3\7\2\0\3\7\1\u04e3\2\7"+
    "\31\0\26\7\3\0\3\7\2\0\1\u04e4\5\7\31\0"+
    "\26\7\3\0\3\7\2\0\6\7\31\0\2\7\1\u04e5"+
    "\23\7\3\0\3\7\2\0\3\7\1\u04e6\2\7\31\0"+
    "\26\7\3\0\3\7\2\0\1\u04e7\5\7\31\0\26\7"+
    "\3\0\3\7\2\0\1\u04e8\5\7\31\0\26\7\3\0"+
    "\3\7\2\0\6\7\31\0\2\7\1\u04e9\23\7\3\0"+
    "\3\7\2\0\6\7\31\0\10\7\1\u04ea\15\7\3\0"+
    "\3\7\2\0\6\7\31\0\2\7\1\u04eb\23\7\3\0"+
    "\3\7\2\0\6\7\31\0\10\7\1\u04ec\15\7\3\0"+
    "\3\7\2\0\1\u04ed\5\7\31\0\26\7\3\0\3\7"+
    "\2\0\6\7\31\0\2\7\1\u04ee\23\7\3\0\3\7"+
    "\2\0\6\7\31\0\2\7\1\u04ef\23\7\3\0\3\7"+
    "\2\0\1\u04f0\5\7\31\0\26\7\3\0\3\7\2\0"+
    "\6\7\31\0\3\7\1\u04f1\22\7\3\0\3\7\2\0"+
    "\1\u04f2\5\7\31\0\26\7\3\0\3\7\2\0\6\7"+
    "\31\0\6\7\1\u04f3\17\7\3\0\3\7\2\0\1\u04f4"+
    "\5\7\31\0\26\7\3\0\3\7\2\0\6\7\31\0"+
    "\2\7\1\u04f5\23\7\3\0\3\7\2\0\5\7\1\u04f6"+
    "\31\0\26\7\3\0\3\7\2\0\6\7\31\0\10\7"+
    "\1\u04f7\15\7\3\0\3\7\2\0\6\7\31\0\10\7"+
    "\1\u04f8\15\7\3\0\3\7\2\0\6\7\31\0\3\7"+
    "\1\u04f9\22\7\3\0\3\7\2\0\6\7\31\0\7\7"+
    "\1\u04fa\10\7\1\u04fb\5\7\3\0\3\7\2\0\6\7"+
    "\31\0\3\7\1\u04fc\22\7\3\0\3\7\2\0\6\7"+
    "\31\0\10\7\1\u04fd\15\7\3\0\3\7\2\0\6\7"+
    "\31\0\5\7\1\u04fe\20\7\3\0\3\7\2\0\5\7"+
    "\1\u04ff\31\0\26\7\3\0\3\7\2\0\6\7\31\0"+
    "\5\7\1\u0500\20\7\3\0\3\7\2\0\4\7\1\u0501"+
    "\1\7\31\0\26\7\3\0\3\7\2\0\6\7\31\0"+
    "\11\7\1\u0502\14\7\3\0\3\7\2\0\1\u0503\5\7"+
    "\31\0\26\7\3\0\3\7\2\0\6\7\31\0\5\7"+
    "\1\u0504\20\7\3\0\3\7\2\0\1\u0505\5\7\31\0"+
    "\26\7\3\0\3\7\2\0\6\7\31\0\16\7\1\u0506"+
    "\7\7\3\0\3\7\2\0\6\7\31\0\5\7\1\u0507"+
    "\20\7\3\0\3\7\2\0\6\7\31\0\1\u0508\25\7"+
    "\3\0\3\7\2\0\6\7\31\0\11\7\1\u0509\14\7"+
    "\3\0\3\7\2\0\6\7\31\0\2\7\1\u050a\23\7"+
    "\3\0\3\7\2\0\6\7\31\0\2\7\1\u050b\23\7"+
    "\3\0\2\7\1\u050c\2\0\6\7\31\0\26\7\3\0"+
    "\3\7\2\0\3\7\1\u050d\2\7\31\0\26\7\3\0"+
    "\3\7\2\0\6\7\31\0\1\u050e\25\7\3\0\3\7"+
    "\2\0\6\7\31\0\2\7\1\u050f\23\7\3\0\3\7"+
    "\2\0\6\7\31\0\1\7\1\u0510\24\7\3\0\3\7"+
    "\2\0\6\7\31\0\16\7\1\u0511\7\7\3\0\3\7"+
    "\2\0\6\7\31\0\10\7\1\u0512\15\7\3\0\3\7"+
    "\2\0\6\7\31\0\21\7\1\u0513\4\7\3\0\3\7"+
    "\2\0\6\7\31\0\11\7\1\u0514\14\7\3\0\3\7"+
    "\2\0\6\7\31\0\10\7\1\u0515\15\7\3\0\3\7"+
    "\2\0\6\7\31\0\7\7\1\u0516\16\7\3\0\3\7"+
    "\2\0\6\7\31\0\5\7\1\u0517\20\7\3\0\3\7"+
    "\2\0\6\7\31\0\1\u0518\25\7\3\0\3\7\2\0"+
    "\6\7\31\0\3\7\1\u0519\22\7\3\0\3\7\2\0"+
    "\6\7\31\0\1\7\1\u051a\24\7\3\0\3\7\2\0"+
    "\6\7\31\0\11\7\1\u051b\14\7\3\0\3\7\2\0"+
    "\6\7\31\0\5\7\1\u051c\20\7\3\0\3\7\2\0"+
    "\6\7\31\0\1\7\1\u051d\24\7\3\0\3\7\2\0"+
    "\1\u051e\5\7\31\0\26\7\3\0\3\7\2\0\3\7"+
    "\1\u051f\2\7\31\0\26\7\3\0\3\7\2\0\3\7"+
    "\1\u0520\2\7\31\0\26\7\3\0\3\7\2\0\6\7"+
    "\31\0\2\7\1\u0521\23\7\3\0\3\7\2\0\6\7"+
    "\31\0\10\7\1\u0522\15\7\3\0\3\7\2\0\6\7"+
    "\31\0\11\7\1\u0523\14\7\3\0\3\7\2\0\1\u0524"+
    "\5\7\31\0\26\7\3\0\3\7\2\0\3\7\1\u0525"+
    "\2\7\31\0\26\7\3\0\3\7\2\0\1\u0526\5\7"+
    "\31\0\26\7\3\0\3\7\2\0\6\7\31\0\1\7"+
    "\1\u0527\24\7\3\0\3\7\2\0\6\7\31\0\20\7"+
    "\1\u0528\5\7\3\0\3\7\2\0\6\7\31\0\4\7"+
    "\1\u0529\21\7\3\0\3\7\2\0\6\7\31\0\3\7"+
    "\1\u052a\22\7\3\0\3\7\2\0\1\u052b\5\7\31\0"+
    "\26\7\3\0\3\7\2\0\6\7\31\0\2\7\1\u052c"+
    "\23\7\3\0\3\7\2\0\6\7\31\0\20\7\1\u052d"+
    "\5\7\3\0\3\7\2\0\6\7\31\0\7\7\1\u052e"+
    "\16\7\3\0\3\7\2\0\5\7\1\u052f\31\0\26\7"+
    "\3\0\3\7\2\0\6\7\31\0\13\7\1\u0530\12\7"+
    "\3\0\3\7\2\0\6\7\31\0\5\7\1\u0531\20\7"+
    "\3\0\3\7\2\0\6\7\31\0\11\7\1\u0532\14\7"+
    "\3\0\3\7\2\0\6\7\31\0\2\7\1\u0533\23\7"+
    "\3\0\3\7\2\0\4\7\1\u0534\1\7\31\0\26\7"+
    "\3\0\3\7\2\0\1\u0535\5\7\31\0\26\7\3\0"+
    "\3\7\2\0\3\7\1\u0536\2\7\31\0\26\7\3\0"+
    "\3\7\2\0\5\7\1\u0537\31\0\26\7\3\0\3\7"+
    "\2\0\6\7\31\0\13\7\1\u0538\12\7\3\0\3\7"+
    "\2\0\6\7\31\0\10\7\1\u0539\15\7\3\0\3\7"+
    "\2\0\4\7\1\u053a\1\7\31\0\26\7\3\0\3\7"+
    "\2\0\3\7\1\u053b\2\7\31\0\26\7\3\0\3\7"+
    "\2\0\6\7\31\0\3\7\1\u053c\22\7\3\0\3\7"+
    "\2\0\6\7\31\0\11\7\1\u053d\14\7\3\0\3\7"+
    "\2\0\6\7\31\0\11\7\1\u053e\14\7\3\0\3\7"+
    "\2\0\6\7\31\0\15\7\1\u053f\10\7\3\0\3\7"+
    "\2\0\6\7\31\0\3\7\1\u0540\22\7\3\0\3\7"+
    "\2\0\1\u0541\5\7\31\0\26\7\3\0\3\7\2\0"+
    "\1\u0542\5\7\31\0\26\7\3\0\3\7\2\0\1\u0543"+
    "\5\7\31\0\26\7\3\0\3\7\2\0\5\7\1\u0544"+
    "\31\0\26\7\3\0\3\7\2\0\3\7\1\u0545\2\7"+
    "\31\0\26\7\3\0\3\7\2\0\6\7\31\0\7\7"+
    "\1\u0546\16\7\3\0\3\7\2\0\6\7\31\0\3\7"+
    "\1\u0547\22\7\3\0\3\7\2\0\6\7\31\0\5\7"+
    "\1\u0548\20\7\3\0\3\7\2\0\5\7\1\u0549\31\0"+
    "\26\7\3\0\3\7\2\0\3\7\1\u054a\2\7\31\0"+
    "\26\7\3\0\3\7\2\0\6\7\31\0\3\7\1\u054b"+
    "\22\7\3\0\3\7\2\0\4\7\1\u054c\1\7\31\0"+
    "\26\7\3\0\3\7\2\0\6\7\31\0\2\7\1\u054d"+
    "\23\7\3\0\3\7\2\0\5\7\1\u054e\31\0\26\7"+
    "\3\0\3\7\2\0\6\7\31\0\7\7\1\u054f\16\7"+
    "\3\0\3\7\2\0\6\7\31\0\5\7\1\u0550\20\7"+
    "\3\0\3\7\2\0\3\7\1\u0551\2\7\31\0\26\7"+
    "\3\0\3\7\2\0\1\u0552\5\7\31\0\26\7\3\0"+
    "\3\7\2\0\6\7\31\0\16\7\1\u0553\7\7\3\0"+
    "\3\7\2\0\6\7\31\0\6\7\1\u0554\17\7\3\0"+
    "\3\7\2\0\1\u0555\5\7\31\0\26\7\3\0\3\7"+
    "\2\0\1\u0556\5\7\31\0\26\7\3\0\3\7\2\0"+
    "\6\7\31\0\2\7\1\u0557\23\7\3\0\3\7\2\0"+
    "\6\7\31\0\1\u0558\25\7\3\0\3\7\2\0\6\7"+
    "\31\0\3\7\1\u0559\22\7\3\0\3\7\2\0\6\7"+
    "\31\0\2\7\1\u055a\23\7\3\0\3\7\2\0\6\7"+
    "\31\0\16\7\1\u055b\7\7\3\0\3\7\2\0\1\u055c"+
    "\5\7\31\0\26\7\3\0\3\7\2\0\6\7\31\0"+
    "\3\7\1\u055d\22\7\3\0\3\7\2\0\1\u055e\5\7"+
    "\31\0\26\7\3\0\3\7\2\0\6\7\31\0\3\7"+
    "\1\u055f\22\7\3\0\3\7\2\0\6\7\31\0\1\u0560"+
    "\25\7\3\0\3\7\2\0\6\7\31\0\1\u0561\25\7"+
    "\3\0\3\7\2\0\6\7\31\0\2\7\1\u0562\23\7"+
    "\3\0\3\7\2\0\6\7\31\0\2\7\1\u0563\23\7"+
    "\3\0\3\7\2\0\6\7\31\0\11\7\1\u0564\14\7"+
    "\3\0\3\7\2\0\6\7\31\0\5\7\1\u0565\20\7"+
    "\3\0\3\7\2\0\6\7\31\0\20\7\1\u0566\5\7"+
    "\3\0\3\7\2\0\6\7\31\0\7\7\1\u0567\16\7"+
    "\3\0\3\7\2\0\6\7\31\0\2\7\1\u0568\23\7"+
    "\3\0\3\7\2\0\1\u0569\5\7\31\0\26\7\3\0"+
    "\3\7\2\0\6\7\31\0\15\7\1\u056a\10\7\3\0"+
    "\3\7\2\0\6\7\31\0\4\7\1\u056b\21\7\3\0"+
    "\3\7\2\0\6\7\31\0\2\7\1\u056c\23\7\3\0"+
    "\3\7\2\0\6\7\31\0\1\7\1\u056d\1\u056e\23\7"+
    "\3\0\3\7\2\0\6\7\31\0\1\u056f\25\7\3\0"+
    "\3\7\2\0\1\u0570\5\7\31\0\26\7\3\0\3\7"+
    "\2\0\6\7\31\0\1\u0571\25\7\3\0\3\7\2\0"+
    "\6\7\31\0\13\7\1\u0572\12\7\3\0\3\7\2\0"+
    "\6\7\31\0\2\7\1\u0573\23\7\3\0\3\7\2\0"+
    "\6\7\31\0\13\7\1\u0574\12\7\3\0\3\7\2\0"+
    "\5\7\1\u0575\31\0\26\7\3\0\3\7\2\0\6\7"+
    "\31\0\1\u0576\25\7\3\0\3\7\2\0\5\7\1\u0577"+
    "\31\0\26\7\3\0\3\7\2\0\1\u0578\5\7\31\0"+
    "\26\7\3\0\3\7\2\0\6\7\31\0\11\7\1\u0579"+
    "\14\7\3\0\3\7\2\0\1\u057a\5\7\31\0\26\7"+
    "\3\0\3\7\2\0\5\7\1\u057b\31\0\26\7\3\0"+
    "\3\7\2\0\6\7\31\0\5\7\1\u057c\20\7\3\0"+
    "\3\7\2\0\6\7\31\0\2\7\1\u057d\23\7\3\0"+
    "\3\7\2\0\6\7\31\0\1\u057e\25\7\3\0\3\7"+
    "\2\0\6\7\31\0\13\7\1\u057f\12\7\3\0\3\7"+
    "\2\0\5\7\1\u0580\31\0\26\7\3\0\3\7\2\0"+
    "\1\u0581\5\7\31\0\26\7";

  private static int [] zzUnpackTrans() {
    int [] result = new int[67405];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\2\0\1\11\4\1\1\11\1\1\1\11\7\1\1\11"+
    "\1\1\1\11\6\1\2\11\1\1\1\11\1\1\1\11"+
    "\1\1\2\11\25\1\1\11\13\1\1\0\24\1\2\11"+
    "\1\1\1\0\12\11\147\1\1\0\1\11\1\0\43\1"+
    "\1\11\243\1\1\0\1\1\1\0\337\1\1\0\277\1"+
    "\1\0\233\1\1\0\174\1\1\11\u012d\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[1409];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true iff the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true iff the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
    StringBuffer _cadenaComentario = new StringBuffer();
    private boolean _comentarioActivo = false;

    public boolean comentarioActivo() {
        return this._comentarioActivo;
    }

    public Symbol symbol(int type) {
        return new Symbol(type, yyline, yycolumn);
    }

    private Symbol symbol(int type, Object value) {
        return new Symbol(type, yyline, yycolumn, value);
    }


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public Lexemas(java.io.Reader in) {
  
    this.zzReader = in;
  }



  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() throws java.io.IOException {
    if (!zzEOFDone) {
      zzEOFDone = true;
      yyclose();
    }
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public java_cup.runtime.Symbol next_token() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      yychar+= zzMarkedPosL-zzStartRead;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':  // fall through
        case '\u000C':  // fall through
        case '\u0085':  // fall through
        case '\u2028':  // fall through
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn += zzCharCount;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
            zzDoEOF();
            switch (zzLexicalState) {
            case COMENTARIOMULTI: {
              
            }  // fall though
            case 1410: break;
            default:
          {     return symbol(sym.EOF);
 }
        }
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { System.out.print(yytext());
            } 
            // fall through
          case 353: break;
          case 2: 
            { return symbol(sym.Mas, new MyToken("Mas", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 354: break;
          case 3: 
            { return symbol(sym.Menos, new MyToken("Menos", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 355: break;
          case 4: 
            { return symbol(sym.DatoEntero, new MyToken("DatoEntero", yytext(), "Token", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 356: break;
          case 5: 
            { if (yytext().length() <= 31) {
        return symbol(sym.Identificador, new MyToken("Identificador", yytext(), "Token", yyline + 1, yylength() + 1, yycolumn + 1));
    } else {
        
    }
            } 
            // fall through
          case 357: break;
          case 6: 
            { 
            } 
            // fall through
          case 358: break;
          case 7: 
            { return symbol(sym.Punto, new MyToken("Punto", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 359: break;
          case 8: 
            { return symbol(sym.DatoBit, new MyToken("DatoBit", yytext(), "Token", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 360: break;
          case 9: 
            { return symbol(sym.Multiplicacion, new MyToken("Multiplicacion", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 361: break;
          case 10: 
            { return symbol(sym.Division, new MyToken("Division", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 362: break;
          case 11: 
            { return symbol(sym.Modulo, new MyToken("Modulo", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 363: break;
          case 12: 
            { return symbol(sym.Menor, new MyToken("Menor", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 364: break;
          case 13: 
            { return symbol(sym.Igual, new MyToken("Igual", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 365: break;
          case 14: 
            { return symbol(sym.Mayor, new MyToken("Mayor", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 366: break;
          case 15: 
            { return symbol(sym.Not, new MyToken("Not", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 367: break;
          case 16: 
            { return symbol(sym.PuntoComa, new MyToken("PuntoComa", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 368: break;
          case 17: 
            { return symbol(sym.Coma, new MyToken("Coma", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 369: break;
          case 18: 
            { return symbol(sym.CorcheteAbrir, new MyToken("CorcheteAbrir", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 370: break;
          case 19: 
            { return symbol(sym.CorcheteCerrar, new MyToken("CorcheteAbrir", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 371: break;
          case 20: 
            { return symbol(sym.ParentesisAbrir, new MyToken("ParentesisAbrir", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 372: break;
          case 21: 
            { return symbol(sym.ParentesisCerrar, new MyToken("ParentesisCerrar", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 373: break;
          case 22: 
            { return symbol(sym.LlaveAbrir, new MyToken("LlaveAbrir", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 374: break;
          case 23: 
            { return symbol(sym.LlaveCerrar, new MyToken("LlaveCerrar", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 375: break;
          case 24: 
            { return symbol(sym.Arroba, new MyToken("Arroba", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 376: break;
          case 25: 
            { return symbol(sym.Numeral, new MyToken("Numeral", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 377: break;
          case 26: 
            { _cadenaComentario.append(yytext());
            } 
            // fall through
          case 378: break;
          case 27: 
            { return symbol(sym.DatoFloat, new MyToken("DatoFloat", yytext(), "Token", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 379: break;
          case 28: 
            { return symbol(sym.NO, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 380: break;
          case 29: 
            { return symbol(sym.StringNoCerrado, new MyToken("StringNoCerrado", yytext(), "Error", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 381: break;
          case 30: 
            { return symbol(sym.DatoString, new MyToken("DatoString", yytext(), "Token", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 382: break;
          case 31: 
            { return symbol(sym.MenorIgual, new MyToken("MenorIgual", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 383: break;
          case 32: 
            { return symbol(sym.IgualIgual, new MyToken("IgualIgual", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 384: break;
          case 33: 
            { return symbol(sym.MayorIgual, new MyToken("MayorIgual", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 385: break;
          case 34: 
            { return symbol(sym.Diferente, new MyToken("Diferente", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 386: break;
          case 35: 
            { return symbol(sym.And, new MyToken("And", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 387: break;
          case 36: 
            { return symbol(sym.Or, new MyToken("Or", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 388: break;
          case 37: 
            { return symbol(sym.Corchetes, new MyToken("Corchetes", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 389: break;
          case 38: 
            { return symbol(sym.Parentesis, new MyToken("Parentesis", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 390: break;
          case 39: 
            { return symbol(sym.Llaves, new MyToken("Llaves", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 391: break;
          case 40: 
            { return symbol(sym.DobleNumeral, new MyToken("DobleNumeral", yytext(), "Simbolo", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 392: break;
          case 41: 
            { return symbol(sym.AT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 393: break;
          case 42: 
            { return symbol(sym.AS, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 394: break;
          case 43: 
            { return symbol(sym.TO, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 395: break;
          case 44: 
            { return symbol(sym.ON, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 396: break;
          case 45: 
            { return symbol(sym.OR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 397: break;
          case 46: 
            { return symbol(sym.OF, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 398: break;
          case 47: 
            { return symbol(sym.IN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 399: break;
          case 48: 
            { return symbol(sym.IS, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 400: break;
          case 49: 
            { return symbol(sym.IF, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 401: break;
          case 50: 
            { return symbol(sym.BY, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 402: break;
          case 51: 
            { return symbol(sym.GO, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 403: break;
          case 52: 
            { _cadenaComentario.append(yytext());
        _comentarioActivo = false;
        yybegin(YYINITIAL);
        _cadenaComentario = new StringBuffer();
            } 
            // fall through
          case 404: break;
          case 53: 
            { return symbol(sym.END, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 405: break;
          case 54: 
            { return symbol(sym.NOT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 406: break;
          case 55: 
            { return symbol(sym.USE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 407: break;
          case 56: 
            { _cadenaComentario.append(yytext());
    _comentarioActivo = true;
    yybegin(COMENTARIOMULTI);
            } 
            // fall through
          case 408: break;
          case 57: 
            { return symbol(sym.AND, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 409: break;
          case 58: 
            { return symbol(sym.ANY, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 410: break;
          case 59: 
            { return symbol(sym.ALL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 411: break;
          case 60: 
            { return symbol(sym.ADA, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 412: break;
          case 61: 
            { return symbol(sym.ADD, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 413: break;
          case 62: 
            { return symbol(sym.ARE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 414: break;
          case 63: 
            { return symbol(sym.ASC, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 415: break;
          case 64: 
            { return symbol(sym.AVG, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 416: break;
          case 65: 
            { return symbol(sym.DEC, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 417: break;
          case 66: 
            { return symbol(sym.DAY, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 418: break;
          case 67: 
            { return symbol(sym.TOP, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 419: break;
          case 68: 
            { return symbol(sym.SET, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 420: break;
          case 69: 
            { return symbol(sym.SUM, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 421: break;
          case 70: 
            { return symbol(sym.SQL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 422: break;
          case 71: 
            { return symbol(sym.OFF, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 423: break;
          case 72: 
            { return symbol(sym.INT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 424: break;
          case 73: 
            { return symbol(sym.BIT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 425: break;
          case 74: 
            { return symbol(sym.KEY, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 426: break;
          case 75: 
            { return symbol(sym.PAD, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 427: break;
          case 76: 
            { return symbol(sym.GET, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 428: break;
          case 77: 
            { return symbol(sym.MAX, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 429: break;
          case 78: 
            { return symbol(sym.MIN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 430: break;
          case 79: 
            { return symbol(sym.FOR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 431: break;
          case 80: 
            { return symbol(sym.ELSE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 432: break;
          case 81: 
            { return symbol(sym.EXEC, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 433: break;
          case 82: 
            { return symbol(sym.EXIT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 434: break;
          case 83: 
            { return symbol(sym.NEXT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 435: break;
          case 84: 
            { return symbol(sym.NULL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 436: break;
          case 85: 
            { return symbol(sym.NONE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 437: break;
          case 86: 
            { return symbol(sym.USER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 438: break;
          case 87: 
            { return symbol(sym.LEFT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 439: break;
          case 88: 
            { return symbol(sym.LAST, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 440: break;
          case 89: 
            { return symbol(sym.LOAD, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 441: break;
          case 90: 
            { return symbol(sym.LIKE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 442: break;
          case 91: 
            { return symbol(sym.DENY, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 443: break;
          case 92: 
            { return symbol(sym.DESC, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 444: break;
          case 93: 
            { return symbol(sym.DUMP, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 445: break;
          case 94: 
            { return symbol(sym.DATE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 446: break;
          case 95: 
            { return symbol(sym.DROP, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 447: break;
          case 96: 
            { return symbol(sym.DISK, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 448: break;
          case 97: 
            { return symbol(sym.DBCC, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 449: break;
          case 98: 
            { return symbol(sym.TRAN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 450: break;
          case 99: 
            { return symbol(sym.TRIM, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 451: break;
          case 100: 
            { return symbol(sym.THEN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 452: break;
          case 101: 
            { return symbol(sym.TIME, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 453: break;
          case 102: 
            { return symbol(sym.REAL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 454: break;
          case 103: 
            { return symbol(sym.READ, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 455: break;
          case 104: 
            { return symbol(sym.RULE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 456: break;
          case 105: 
            { return symbol(sym.ROWS, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 457: break;
          case 106: 
            { return symbol(sym.YEAR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 458: break;
          case 107: 
            { return symbol(sym.SAVE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 459: break;
          case 108: 
            { return symbol(sym.SOME, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 460: break;
          case 109: 
            { return symbol(sym.SIZE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 461: break;
          case 110: 
            { return symbol(sym.CASE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 462: break;
          case 111: 
            { return symbol(sym.CAST, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 463: break;
          case 112: 
            { return symbol(sym.CHAR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 464: break;
          case 113: 
            { return symbol(sym.HOUR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 465: break;
          case 114: 
            { return symbol(sym.ONLY, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 466: break;
          case 115: 
            { return symbol(sym.OPEN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 467: break;
          case 116: 
            { return symbol(sym.OVER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 468: break;
          case 117: 
            { return symbol(sym.INTO, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 469: break;
          case 118: 
            { return symbol(sym.ZONE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 470: break;
          case 119: 
            { return symbol(sym.BULK, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 471: break;
          case 120: 
            { return symbol(sym.BOTH, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 472: break;
          case 121: 
            { return symbol(sym.KILL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 473: break;
          case 122: 
            { return symbol(sym.PLAN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 474: break;
          case 123: 
            { return symbol(sym.PROC, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 475: break;
          case 124: 
            { return symbol(sym.GOTO, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 476: break;
          case 125: 
            { return symbol(sym.WHEN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 477: break;
          case 126: 
            { return symbol(sym.WORK, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 478: break;
          case 127: 
            { return symbol(sym.WITH, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 479: break;
          case 128: 
            { return symbol(sym.VIEW, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 480: break;
          case 129: 
            { return symbol(sym.FULL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 481: break;
          case 130: 
            { return symbol(sym.FROM, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 482: break;
          case 131: 
            { return symbol(sym.FILE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 483: break;
          case 132: 
            { return symbol(sym.JOIN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 484: break;
          case 133: 
            { return symbol(sym.NAMES, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 485: break;
          case 134: 
            { return symbol(sym.NCHAR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 486: break;
          case 135: 
            { return symbol(sym.UNION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 487: break;
          case 136: 
            { return symbol(sym.USAGE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 488: break;
          case 137: 
            { return symbol(sym.USING, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 489: break;
          case 138: 
            { return symbol(sym.UPPER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 490: break;
          case 139: 
            { return symbol(sym.LEVEL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 491: break;
          case 140: 
            { return symbol(sym.LOCAL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 492: break;
          case 141: 
            { return symbol(sym.LOWER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 493: break;
          case 142: 
            { return symbol(sym.ALTER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 494: break;
          case 143: 
            { return symbol(sym.TABLE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 495: break;
          case 144: 
            { return symbol(sym.RIGHT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 496: break;
          case 145: 
            { return symbol(sym.SPACE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 497: break;
          case 146: 
            { return symbol(sym.SQLCA, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 498: break;
          case 147: 
            { return symbol(sym.CLOSE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 499: break;
          case 148: 
            { return symbol(sym.CROSS, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 500: break;
          case 149: 
            { return symbol(sym.CHECK, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 501: break;
          case 150: 
            { return symbol(sym.COUNT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 502: break;
          case 151: 
            { return symbol(sym.OUTER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 503: break;
          case 152: 
            { return symbol(sym.ORDER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 504: break;
          case 153: 
            { return symbol(sym.INNER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 505: break;
          case 154: 
            { return symbol(sym.INDEX, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 506: break;
          case 155: 
            { return symbol(sym.INPUT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 507: break;
          case 156: 
            { return symbol(sym.BEGIN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 508: break;
          case 157: 
            { return symbol(sym.BREAK, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 509: break;
          case 158: 
            { return symbol(sym.PRINT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 510: break;
          case 159: 
            { return symbol(sym.PRIOR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 511: break;
          case 160: 
            { return symbol(sym.PIVOT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 512: break;
          case 161: 
            { return symbol(sym.GRANT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 513: break;
          case 162: 
            { return symbol(sym.GROUP, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 514: break;
          case 163: 
            { return symbol(sym.WRITE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 515: break;
          case 164: 
            { return symbol(sym.WHERE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 516: break;
          case 165: 
            { return symbol(sym.WHILE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 517: break;
          case 166: 
            { return symbol(sym.MERGE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 518: break;
          case 167: 
            { return symbol(sym.MATCH, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 519: break;
          case 168: 
            { return symbol(sym.MONTH, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 520: break;
          case 169: 
            { return symbol(sym.VALUE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 521: break;
          case 170: 
            { return symbol(sym.FETCH, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 522: break;
          case 171: 
            { return symbol(sym.FLOAT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 523: break;
          case 172: 
            { return symbol(sym.FALSO, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 524: break;
          case 173: 
            { return symbol(sym.FOUND, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 525: break;
          case 174: 
            { return symbol(sym.FIRST, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 526: break;
          case 175: 
            { return symbol(sym.ERRLVL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 527: break;
          case 176: 
            { return symbol(sym.ESCAPE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 528: break;
          case 177: 
            { return symbol(sym.EXCEPT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 529: break;
          case 178: 
            { return symbol(sym.EXISTS, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 530: break;
          case 179: 
            { return symbol(sym.NULLIF, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 531: break;
          case 180: 
            { return symbol(sym.UNIQUE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 532: break;
          case 181: 
            { return symbol(sym.UPDATE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 533: break;
          case 182: 
            { return symbol(sym.LINENO, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 534: break;
          case 183: 
            { return symbol(sym.ACTION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 535: break;
          case 184: 
            { return symbol(sym.DELETE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 536: break;
          case 185: 
            { return symbol(sym.DOUBLE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 537: break;
          case 186: 
            { return symbol(sym.DOMAIN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 538: break;
          case 187: 
            { return symbol(sym.RETURN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 539: break;
          case 188: 
            { return symbol(sym.REVERT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 540: break;
          case 189: 
            { return symbol(sym.REVOKE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 541: break;
          case 190: 
            { return symbol(sym.SELECT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 542: break;
          case 191: 
            { return symbol(sym.SECOND, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 543: break;
          case 192: 
            { return symbol(sym.SCROLL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 544: break;
          case 193: 
            { return symbol(sym.SCHEMA, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 545: break;
          case 194: 
            { return symbol(sym.CURSOR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 546: break;
          case 195: 
            { return symbol(sym.CREATE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 547: break;
          case 196: 
            { return symbol(sym.COLUMN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 548: break;
          case 197: 
            { return symbol(sym.COMMIT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 549: break;
          case 198: 
            { return symbol(sym.HAVING, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 550: break;
          case 199: 
            { return symbol(sym.OUTPUT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 551: break;
          case 200: 
            { return symbol(sym.OPTION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 552: break;
          case 201: 
            { return symbol(sym.INSERT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 553: break;
          case 202: 
            { return symbol(sym.BACKUP, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 554: break;
          case 203: 
            { return symbol(sym.BROWSE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 555: break;
          case 204: 
            { return symbol(sym.PUBLIC, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 556: break;
          case 205: 
            { return symbol(sym.PASCAL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 557: break;
          case 206: 
            { return symbol(sym.GLOBAL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 558: break;
          case 207: 
            { return symbol(sym.WITHIN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 559: break;
          case 208: 
            { return symbol(sym.MODULE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 560: break;
          case 209: 
            { return symbol(sym.MINUTE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 561: break;
          case 210: 
            { return symbol(sym.VALUES, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 562: break;
          case 211: 
            { return symbol(sym.EXECUTE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 563: break;
          case 212: 
            { return symbol(sym.EXTRACT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 564: break;
          case 213: 
            { return symbol(sym.NUMERIC, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 565: break;
          case 214: 
            { return symbol(sym.NATURAL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 566: break;
          case 215: 
            { return symbol(sym.NOCHECK, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 567: break;
          case 216: 
            { return symbol(sym.UNKNOWN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 568: break;
          case 217: 
            { return symbol(sym.UNPIVOT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 569: break;
          case 218: 
            { return symbol(sym.LEADING, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 570: break;
          case 219: 
            { return symbol(sym.DECLARE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 571: break;
          case 220: 
            { return symbol(sym.DECIMAL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 572: break;
          case 221: 
            { return symbol(sym.DEFAULT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 573: break;
          case 222: 
            { return symbol(sym.TRIGGER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 574: break;
          case 223: 
            { return symbol(sym.TSEQUAL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 575: break;
          case 224: 
            { return symbol(sym.RESTORE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 576: break;
          case 225: 
            { return symbol(sym.SETUSER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 577: break;
          case 226: 
            { return symbol(sym.SESSION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 578: break;
          case 227: 
            { return symbol(sym.SECTION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 579: break;
          case 228: 
            { return symbol(sym.SQLCODE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 580: break;
          case 229: 
            { return symbol(sym.CURRENT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 581: break;
          case 230: 
            { return symbol(sym.CATALOG, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 582: break;
          case 231: 
            { return symbol(sym.CASCADE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 583: break;
          case 232: 
            { return symbol(sym.CONNECT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 584: break;
          case 233: 
            { return symbol(sym.CONVERT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 585: break;
          case 234: 
            { return symbol(sym.COLLATE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 586: break;
          case 235: 
            { return symbol(sym.COMPUTE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 587: break;
          case 236: 
            { return symbol(sym.OPENXML, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 588: break;
          case 237: 
            { return symbol(sym.OFFSETS, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 589: break;
          case 238: 
            { return symbol(sym.INTEGER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 590: break;
          case 239: 
            { return symbol(sym.INCLUDE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 591: break;
          case 240: 
            { return symbol(sym.BETWEEN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 592: break;
          case 241: 
            { return symbol(sym.PERCENT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 593: break;
          case 242: 
            { return symbol(sym.PARTIAL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 594: break;
          case 243: 
            { return symbol(sym.PREPARE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 595: break;
          case 244: 
            { return symbol(sym.PRIMARY, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 596: break;
          case 245: 
            { return symbol(sym.WAITFOR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 597: break;
          case 246: 
            { return symbol(sym.VARYING, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 598: break;
          case 247: 
            { return symbol(sym.VARCHAR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 599: break;
          case 248: 
            { return symbol(sym.FOREIGN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 600: break;
          case 249: 
            { return symbol(sym.FORTRAN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 601: break;
          case 250: 
            { return symbol(sym.ENDEXEC, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 602: break;
          case 251: 
            { return symbol(sym.EXTERNAL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 603: break;
          case 252: 
            { return symbol(sym.NATIONAL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 604: break;
          case 253: 
            { return symbol(sym.LANGUAGE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 605: break;
          case 254: 
            { return symbol(sym.ALLOCATE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 606: break;
          case 255: 
            { return symbol(sym.ABSOLUTE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 607: break;
          case 256: 
            { return symbol(sym.DESCRIBE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 608: break;
          case 257: 
            { return symbol(sym.DEFERRED, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 609: break;
          case 258: 
            { return symbol(sym.DATABASE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 610: break;
          case 259: 
            { return symbol(sym.DISTINCT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 611: break;
          case 260: 
            { return symbol(sym.TEXTSIZE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 612: break;
          case 261: 
            { return symbol(sym.TRUNCATE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 613: break;
          case 262: 
            { return symbol(sym.TRAILING, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 614: break;
          case 263: 
            { return symbol(sym.RELATIVE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 615: break;
          case 264: 
            { return symbol(sym.READTEXT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 616: break;
          case 265: 
            { return symbol(sym.RESTRICT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 617: break;
          case 266: 
            { return symbol(sym.ROLLBACK, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 618: break;
          case 267: 
            { return symbol(sym.ROWCOUNT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 619: break;
          case 268: 
            { return symbol(sym.SHUTDOWN, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 620: break;
          case 269: 
            { return symbol(sym.SMALLINT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 621: break;
          case 270: 
            { return symbol(sym.SQLERROR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 622: break;
          case 271: 
            { return symbol(sym.SQLSTATE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 623: break;
          case 272: 
            { return symbol(sym.CASCADED, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 624: break;
          case 273: 
            { return symbol(sym.CONTAINS, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 625: break;
          case 274: 
            { return symbol(sym.CONTINUE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 626: break;
          case 275: 
            { return symbol(sym.COALESCE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 627: break;
          case 276: 
            { return symbol(sym.HOLDLOCK, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 628: break;
          case 277: 
            { return symbol(sym.OVERLAPS, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 629: break;
          case 278: 
            { return symbol(sym.INTERVAL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 630: break;
          case 279: 
            { return symbol(sym.IDENTITY, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 631: break;
          case 280: 
            { return symbol(sym.PRESERVE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 632: break;
          case 281: 
            { return symbol(sym.POSITION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 633: break;
          case 282: 
            { return symbol(sym.WHENEVER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 634: break;
          case 283: 
            { return symbol(sym.FUNCTION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 635: break;
          case 284: 
            { return symbol(sym.FREETEXT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 636: break;
          case 285: 
            { return symbol(sym.EXCEPTION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 637: break;
          case 286: 
            { return symbol(sym.ASSERTION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 638: break;
          case 287: 
            { return symbol(sym.TEMPORARY, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 639: break;
          case 288: 
            { return symbol(sym.TRANSLATE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 640: break;
          case 289: 
            { return symbol(sym.TIMESTAMP, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 641: break;
          case 290: 
            { return symbol(sym.RAISERROR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 642: break;
          case 291: 
            { return symbol(sym.SUBSTRING, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 643: break;
          case 292: 
            { return symbol(sym.CLUSTERED, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 644: break;
          case 293: 
            { return symbol(sym.CHARACTER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 645: break;
          case 294: 
            { return symbol(sym.COLLATION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 646: break;
          case 295: 
            { return symbol(sym.OPENQUERY, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 647: break;
          case 296: 
            { return symbol(sym.INDICATOR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 648: break;
          case 297: 
            { return symbol(sym.INTERSECT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 649: break;
          case 298: 
            { return symbol(sym.INITIALLY, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 650: break;
          case 299: 
            { return symbol(sym.ISOLATION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 651: break;
          case 300: 
            { return symbol(sym.IMMEDIATE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 652: break;
          case 301: 
            { return symbol(sym.PRECISION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 653: break;
          case 302: 
            { return symbol(sym.PROCEDURE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 654: break;
          case 303: 
            { return symbol(sym.WRITETEXT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 655: break;
          case 304: 
            { return symbol(sym.VERDADERO, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 656: break;
          case 305: 
            { return symbol(sym.UPDATETEXT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 657: break;
          case 306: 
            { return symbol(sym.DEALLOCATE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 658: break;
          case 307: 
            { return symbol(sym.DESCRIPTOR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 659: break;
          case 308: 
            { return symbol(sym.DEFERRABLE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 660: break;
          case 309: 
            { return symbol(sym.DISCONNECT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 661: break;
          case 310: 
            { return symbol(sym.REFERENCES, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 662: break;
          case 311: 
            { return symbol(sym.ROWGUIDCOL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 663: break;
          case 312: 
            { return symbol(sym.STATISTICS, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 664: break;
          case 313: 
            { return symbol(sym.SQLWARNING, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 665: break;
          case 314: 
            { return symbol(sym.CHECKPOINT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 666: break;
          case 315: 
            { return symbol(sym.CONNECTION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 667: break;
          case 316: 
            { return symbol(sym.CONSTRAINT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 668: break;
          case 317: 
            { return symbol(sym.BIT_LENGTH, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 669: break;
          case 318: 
            { return symbol(sym.PRIVILEGES, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 670: break;
          case 319: 
            { return symbol(sym.FILLFACTOR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 671: break;
          case 320: 
            { return symbol(sym.NOCLUSTERED, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 672: break;
          case 321: 
            { return symbol(sym.DIAGNOSTICS, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 673: break;
          case 322: 
            { return symbol(sym.DISTRIBUTED, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 674: break;
          case 323: 
            { return symbol(sym.TABLESAMPLE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 675: break;
          case 324: 
            { return symbol(sym.TRANSLATION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 676: break;
          case 325: 
            { return symbol(sym.TRANSACTION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 677: break;
          case 326: 
            { return symbol(sym.TRY_CONVERT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 678: break;
          case 327: 
            { return symbol(sym.RECONFIGURE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 679: break;
          case 328: 
            { return symbol(sym.REPLICATION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 680: break;
          case 329: 
            { return symbol(sym.SYSTEM_USER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 681: break;
          case 330: 
            { return symbol(sym.CHAR_LENGTH, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 682: break;
          case 331: 
            { return symbol(sym.CONSTRAINTS, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 683: break;
          case 332: 
            { return symbol(sym.INSENSITIVE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 684: break;
          case 333: 
            { return symbol(sym.IDENTITYCOL, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 685: break;
          case 334: 
            { return symbol(sym.SESSION_USER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 686: break;
          case 335: 
            { return symbol(sym.CURRENT_USER, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 687: break;
          case 336: 
            { return symbol(sym.CURRENT_DATE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 688: break;
          case 337: 
            { return symbol(sym.CURRENT_TIME, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 689: break;
          case 338: 
            { return symbol(sym.OCTET_LENGTH, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 690: break;
          case 339: 
            { return symbol(sym.AUTHORIZATION, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 691: break;
          case 340: 
            { return symbol(sym.TIMEZONE_HOUR, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 692: break;
          case 341: 
            { return symbol(sym.SECURITYAUDIT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 693: break;
          case 342: 
            { return symbol(sym.CONTAINSTABLE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 694: break;
          case 343: 
            { return symbol(sym.CORRESPONDING, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 695: break;
          case 344: 
            { return symbol(sym.FREETEXTTABLE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 696: break;
          case 345: 
            { return symbol(sym.OPENDATASOURCE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 697: break;
          case 346: 
            { return symbol(sym.TIMEZONE_MINUTE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 698: break;
          case 347: 
            { return symbol(sym.IDENTITY_INSERT, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 699: break;
          case 348: 
            { return symbol(sym.CHARACTER_LENGTH, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 700: break;
          case 349: 
            { return symbol(sym.CURRENT_TIMESTAMP, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 701: break;
          case 350: 
            { return symbol(sym.SEMANTICKEYPHRASETABLE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 702: break;
          case 351: 
            { return symbol(sym.SEMANTICSIMILARITYTABLE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 703: break;
          case 352: 
            { return symbol(sym.SEMANTICSIMILARITYDETAILSTABLE, new MyToken(yytext(), yytext(), "Reservada", yyline + 1, yylength() + 1, yycolumn + 1));
            } 
            // fall through
          case 704: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }

  /**
   * Runs the scanner on input files.
   *
   * This is a standalone scanner, it will print any unmatched
   * text to System.out unchanged.
   *
   * @param argv   the command line, contains the filenames to run
   *               the scanner on.
   */
  public static void main(String argv[]) {
    if (argv.length == 0) {
      System.out.println("Usage : java Lexemas [ --encoding <name> ] <inputfile(s)>");
    }
    else {
      int firstFilePos = 0;
      String encodingName = "UTF-8";
      if (argv[0].equals("--encoding")) {
        firstFilePos = 2;
        encodingName = argv[1];
        try {
          java.nio.charset.Charset.forName(encodingName); // Side-effect: is encodingName valid? 
        } catch (Exception e) {
          System.out.println("Invalid encoding '" + encodingName + "'");
          return;
        }
      }
      for (int i = firstFilePos; i < argv.length; i++) {
        Lexemas scanner = null;
        try {
          java.io.FileInputStream stream = new java.io.FileInputStream(argv[i]);
          java.io.Reader reader = new java.io.InputStreamReader(stream, encodingName);
          scanner = new Lexemas(reader);
          while ( !scanner.zzAtEOF ) scanner.next_token();
        }
        catch (java.io.FileNotFoundException e) {
          System.out.println("File not found : \""+argv[i]+"\"");
        }
        catch (java.io.IOException e) {
          System.out.println("IO error scanning file \""+argv[i]+"\"");
          System.out.println(e);
        }
        catch (Exception e) {
          System.out.println("Unexpected exception:");
          e.printStackTrace();
        }
      }
    }
  }


}
