
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package AnalizadorSintactico.Ascendente;

import java_cup.runtime.*;
import AnalizadorSintactico.Ascendente.Lexemas;
import MiniSql.MiniSql;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class parser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u01ef\000\002\002\004\000\002\350\004\000\002\350" +
    "\004\000\002\350\004\000\002\350\004\000\002\002\004" +
    "\000\002\003\005\000\002\003\002\000\002\004\005\000" +
    "\002\004\002\000\002\005\004\000\002\005\002\000\002" +
    "\006\004\000\002\007\005\000\002\007\005\000\002\007" +
    "\002\000\002\010\004\000\002\011\005\000\002\011\005" +
    "\000\002\011\002\000\002\012\005\000\002\012\003\000" +
    "\002\012\003\000\002\012\004\000\002\012\003\000\002" +
    "\013\005\000\002\013\005\000\002\014\007\000\002\015" +
    "\005\000\002\016\005\000\002\016\002\000\002\017\004" +
    "\000\002\020\004\000\002\020\003\000\002\021\006\000" +
    "\002\021\006\000\002\021\006\000\002\021\006\000\002" +
    "\021\006\000\002\022\004\000\002\023\003\000\002\023" +
    "\003\000\002\023\002\000\002\024\003\000\002\024\004" +
    "\000\002\025\004\000\002\025\002\000\002\026\004\000" +
    "\002\027\003\000\002\027\003\000\002\027\002\000\002" +
    "\030\003\000\002\030\004\000\002\030\003\000\002\031" +
    "\004\000\002\031\002\000\002\032\004\000\002\033\003" +
    "\000\002\033\003\000\002\033\002\000\002\034\004\000" +
    "\002\034\003\000\002\035\004\000\002\035\002\000\002" +
    "\036\005\000\002\036\005\000\002\036\005\000\002\036" +
    "\002\000\002\037\003\000\002\037\003\000\002\037\003" +
    "\000\002\040\003\000\002\040\003\000\002\041\003\000" +
    "\002\041\003\000\002\041\003\000\002\042\003\000\002" +
    "\042\003\000\002\043\003\000\002\043\003\000\002\043" +
    "\003\000\002\043\003\000\002\044\003\000\002\045\003" +
    "\000\002\046\003\000\002\046\003\000\002\047\003\000" +
    "\002\050\003\000\002\050\003\000\002\050\003\000\002" +
    "\050\003\000\002\050\003\000\002\051\003\000\002\051" +
    "\003\000\002\051\003\000\002\052\004\000\002\053\004" +
    "\000\002\053\003\000\002\054\007\000\002\055\005\000" +
    "\002\055\003\000\002\055\003\000\002\056\004\000\002" +
    "\056\003\000\002\056\003\000\002\056\003\000\002\056" +
    "\003\000\002\057\004\000\002\057\003\000\002\061\004" +
    "\000\002\062\004\000\002\062\004\000\002\062\004\000" +
    "\002\062\004\000\002\062\004\000\002\062\004\000\002" +
    "\062\004\000\002\062\004\000\002\062\004\000\002\062" +
    "\004\000\002\062\004\000\002\062\004\000\002\062\004" +
    "\000\002\063\005\000\002\063\002\000\002\064\005\000" +
    "\002\064\003\000\002\065\004\000\002\066\006\000\002" +
    "\066\003\000\002\067\004\000\002\070\004\000\002\070" +
    "\010\000\002\070\010\000\002\071\003\000\002\071\003" +
    "\000\002\071\003\000\002\071\003\000\002\071\003\000" +
    "\002\071\003\000\002\071\003\000\002\071\003\000\002" +
    "\072\004\000\002\072\004\000\002\072\005\000\002\072" +
    "\006\000\002\072\005\000\002\072\005\000\002\073\005" +
    "\000\002\073\006\000\002\073\005\000\002\074\003\000" +
    "\002\074\002\000\002\075\005\000\002\075\002\000\002" +
    "\076\004\000\002\076\002\000\002\077\003\000\002\077" +
    "\003\000\002\100\003\000\002\101\003\000\002\101\004" +
    "\000\002\102\005\000\002\102\006\000\002\103\004\000" +
    "\002\103\002\000\002\104\004\000\002\104\003\000\002" +
    "\105\004\000\002\105\006\000\002\106\005\000\002\107" +
    "\010\000\002\107\010\000\002\110\003\000\002\110\006" +
    "\000\002\110\006\000\002\110\006\000\002\110\005\000" +
    "\002\111\003\000\002\111\004\000\002\112\004\000\002" +
    "\112\003\000\002\113\006\000\002\113\012\000\002\113" +
    "\006\000\002\113\006\000\002\113\010\000\002\113\007" +
    "\000\002\113\006\000\002\113\010\000\002\113\006\000" +
    "\002\113\012\000\002\114\004\000\002\114\003\000\002" +
    "\114\003\000\002\115\004\000\002\115\002\000\002\116" +
    "\007\000\002\116\003\000\002\116\003\000\002\116\010" +
    "\000\002\117\005\000\002\117\003\000\002\120\005\000" +
    "\002\120\003\000\002\121\006\000\002\122\010\000\002" +
    "\122\010\000\002\123\006\000\002\124\004\000\002\125" +
    "\003\000\002\125\003\000\002\125\002\000\002\126\004" +
    "\000\002\127\003\000\002\127\003\000\002\127\002\000" +
    "\002\130\004\000\002\130\004\000\002\130\004\000\002" +
    "\130\002\000\002\131\003\000\002\131\002\000\002\132" +
    "\004\000\002\132\005\000\002\133\004\000\002\133\005" +
    "\000\002\133\002\000\002\134\004\000\002\134\005\000" +
    "\002\135\006\000\002\136\003\000\002\136\002\000\002" +
    "\137\005\000\002\137\004\000\002\137\005\000\002\140" +
    "\004\000\002\140\003\000\002\140\002\000\002\141\003" +
    "\000\002\141\002\000\002\142\004\000\002\143\003\000" +
    "\002\143\004\000\002\144\004\000\002\144\003\000\002" +
    "\145\004\000\002\146\003\000\002\146\003\000\002\147" +
    "\004\000\002\147\003\000\002\147\006\000\002\150\004" +
    "\000\002\150\003\000\002\150\003\000\002\150\003\000" +
    "\002\150\003\000\002\150\003\000\002\150\003\000\002" +
    "\151\004\000\002\151\003\000\002\152\003\000\002\152" +
    "\004\000\002\154\004\000\002\154\003\000\002\154\002" +
    "\000\002\155\005\000\002\155\003\000\002\156\004\000" +
    "\002\157\003\000\002\157\003\000\002\160\005\000\002" +
    "\160\002\000\002\161\004\000\002\161\002\000\002\162" +
    "\005\000\002\162\002\000\002\163\004\000\002\163\002" +
    "\000\002\164\005\000\002\164\004\000\002\165\003\000" +
    "\002\165\002\000\002\166\004\000\002\167\004\000\002" +
    "\170\004\000\002\170\003\000\002\171\003\000\002\171" +
    "\003\000\002\171\003\000\002\172\004\000\002\173\004" +
    "\000\002\173\002\000\002\174\005\000\002\174\004\000" +
    "\002\174\003\000\002\174\004\000\002\175\004\000\002" +
    "\175\003\000\002\176\005\000\002\176\003\000\002\177" +
    "\005\000\002\177\007\000\002\200\007\000\002\200\002" +
    "\000\002\201\006\000\002\202\004\000\002\202\002\000" +
    "\002\203\005\000\002\203\003\000\002\204\006\000\002" +
    "\205\005\000\002\205\005\000\002\205\002\000\002\206" +
    "\003\000\002\206\003\000\002\207\004\000\002\207\003" +
    "\000\002\207\004\000\002\210\003\000\002\210\003\000" +
    "\002\211\006\000\002\211\003\000\002\212\005\000\002" +
    "\213\005\000\002\214\005\000\002\214\003\000\002\215" +
    "\004\000\002\215\005\000\002\215\003\000\002\215\004" +
    "\000\002\216\005\000\002\216\003\000\002\216\003\000" +
    "\002\217\005\000\002\220\005\000\002\220\003\000\002" +
    "\221\010\000\002\221\003\000\002\222\006\000\002\222" +
    "\003\000\002\223\004\000\002\223\003\000\002\225\003" +
    "\000\002\225\003\000\002\226\004\000\002\227\004\000" +
    "\002\227\002\000\002\230\005\000\002\230\004\000\002" +
    "\230\003\000\002\230\004\000\002\230\004\000\002\230" +
    "\004\000\002\231\004\000\002\231\003\000\002\232\005" +
    "\000\002\232\003\000\002\233\010\000\002\233\012\000" +
    "\002\234\007\000\002\235\006\000\002\236\004\000\002" +
    "\236\002\000\002\237\005\000\002\237\003\000\002\240" +
    "\006\000\002\241\005\000\002\241\005\000\002\241\002" +
    "\000\002\242\003\000\002\242\003\000\002\243\004\000" +
    "\002\243\003\000\002\243\004\000\002\244\003\000\002" +
    "\244\003\000\002\245\006\000\002\245\003\000\002\246" +
    "\006\000\002\247\005\000\002\250\006\000\002\251\006" +
    "\000\002\252\004\000\002\252\002\000\002\253\005\000" +
    "\002\253\002\000\002\254\004\000\002\254\003\000\002" +
    "\255\004\000\002\255\002\000\002\256\004\000\002\257" +
    "\004\000\002\260\003\000\002\260\003\000\002\260\002" +
    "\000\002\261\004\000\002\261\003\000\002\262\006\000" +
    "\002\263\004\000\002\263\003\000\002\264\004\000\002" +
    "\265\004\000\002\265\003\000\002\266\004\000\002\267" +
    "\005\000\002\267\003\000\002\270\005\000\002\270\003" +
    "\000\002\271\007\000\002\271\003\000\002\272\005\000" +
    "\002\272\003\000\002\273\005\000\002\273\002\000\002" +
    "\274\005\000\002\274\003\000\002\275\005\000\002\275" +
    "\002\000\002\276\003\000\002\276\003\000\002\277\004" +
    "\000\002\300\007\000\002\300\003\000\002\301\004\000" +
    "\002\301\003\000\002\302\004\000\002\302\003\000\002" +
    "\303\004\000\002\304\004\000\002\304\003\000\002\305" +
    "\004\000\002\305\003\000\002\306\005\000\002\306\003" +
    "\000\002\306\004\000\002\307\004\000\002\311\003\000" +
    "\002\311\003\000\002\311\003\000\002\312\004\000\002" +
    "\312\004\000\002\313\006\000\002\313\002\000\002\310" +
    "\003\000\002\310\003\000\002\314\004\000\002\315\010" +
    "\000\002\315\003\000\002\316\003\000\002\316\002\000" +
    "\002\317\004\000\002\317\005\000\002\320\004\000\002" +
    "\321\004\000\002\322\004\000\002\322\006\000\002\323" +
    "\004\000\002\323\004\000\002\324\005\000\002\325\003" +
    "\000\002\325\003\000\002\325\003\000\002\326\003\000" +
    "\002\327\004\000\002\327\003\000\002\330\004\000\002" +
    "\330\003\000\002\334\005\000\002\334\003\000\002\335" +
    "\004\000\002\335\002\000\002\331\004\000\002\332\004" +
    "\000\002\333\003\000\002\333\003\000\002\336\004\000" +
    "\002\337\007\000\002\337\003\000\002\340\004\000\002" +
    "\340\003\000\002\341\004\000\002\341\003\000\002\342" +
    "\004\000\002\342\005\000\002\343\004\000\002\343\003" +
    "\000\002\344\005\000\002\344\003\000\002\345\005\000" +
    "\002\345\003\000\002\346\004\000\002\346\002\000\002" +
    "\347\003\000\002\347\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u02d6\000\012\060\006\131\012\224\010\256\005\001" +
    "\002\000\004\002\u02d8\001\002\000\010\244\u02a7\u0140\027" +
    "\u015c\u02a9\001\002\000\012\112\u0289\244\u028a\u0140\027\u015c" +
    "\u028c\001\002\000\006\327\u0284\u0153\u0285\001\002\000\130" +
    "\005\317\011\ufe76\024\ufe76\042\ufe76\050\ufe76\064\314\112" +
    "\ufe76\117\ufe76\120\ufe76\133\ufe76\140\ufe76\150\ufe76\165\ufe76" +
    "\214\ufe76\231\ufe76\244\ufe76\267\ufe76\323\ufe76\327\ufe76\341" +
    "\ufe76\345\ufe76\360\ufe76\376\ufe76\u0100\ufe76\u0105\ufe76\u010d\ufe76" +
    "\u0110\ufe76\u0111\ufe76\u0112\ufe76\u0116\ufe76\u0118\ufe76\u0119\ufe76\u0120" +
    "\ufe76\u0123\ufe76\u0137\ufe76\u013b\ufe76\u013c\ufe76\u013e\ufe76\u0140\ufe76" +
    "\u0143\ufe76\u0153\ufe76\u0158\ufe76\u015c\ufe76\001\002\000\006\327" +
    "\312\u0153\313\001\002\000\010\133\030\244\026\u0140\027" +
    "\001\002\000\006\327\021\u0153\022\001\002\000\006\327" +
    "\015\u0153\016\001\002\000\004\002\ufe27\001\002\000\004" +
    "\002\ufe26\001\002\000\004\002\uffff\001\002\000\004\002" +
    "\ufffe\001\002\000\004\002\ufe44\001\002\000\004\002\ufe45" +
    "\001\002\000\006\327\ufe5a\u0153\ufe5a\001\002\000\006\327" +
    "\ufe5c\u0153\ufe5c\001\002\000\014\057\164\224\010\262\174" +
    "\u0138\163\u0158\172\001\002\000\004\u0158\044\001\002\000" +
    "\066\011\ufffa\044\ufffa\057\ufffa\112\ufffa\113\ufffa\117\ufffa" +
    "\120\ufffa\130\ufffa\133\ufffa\135\ufffa\140\ufffa\156\ufffa\165" +
    "\ufffa\214\ufffa\224\ufffa\231\ufffa\240\ufffa\262\ufffa\267\ufffa" +
    "\327\ufffa\u0138\ufffa\u0140\ufffa\u0153\ufffa\u0154\ufffa\u0155\034\u0158" +
    "\ufffa\001\002\000\004\u0140\027\001\002\000\006\327\ufe56" +
    "\u0153\ufe56\001\002\000\006\327\ufe57\u0153\ufe57\001\002\000" +
    "\064\011\ufffc\044\ufffc\057\ufffc\112\ufffc\113\ufffc\117\ufffc" +
    "\120\ufffc\130\ufffc\133\ufffc\135\ufffc\140\ufffc\156\ufffc\165" +
    "\ufffc\214\ufffc\224\ufffc\231\ufffc\240\ufffc\262\ufffc\267\ufffc" +
    "\327\ufffc\u0138\ufffc\u0140\ufffc\u0153\ufffc\u0154\ufffc\u0158\ufffc\001" +
    "\002\000\004\u0140\035\001\002\000\066\011\ufff8\044\ufff8" +
    "\057\ufff8\112\ufff8\113\ufff8\117\ufff8\120\ufff8\130\ufff8\133" +
    "\ufff8\135\ufff8\140\ufff8\156\ufff8\165\ufff8\214\ufff8\224\ufff8" +
    "\231\ufff8\240\ufff8\262\ufff8\267\ufff8\327\ufff8\u0138\ufff8\u0140" +
    "\ufff8\u0153\ufff8\u0154\ufff8\u0155\037\u0158\ufff8\001\002\000\064" +
    "\011\ufffb\044\ufffb\057\ufffb\112\ufffb\113\ufffb\117\ufffb\120" +
    "\ufffb\130\ufffb\133\ufffb\135\ufffb\140\ufffb\156\ufffb\165\ufffb" +
    "\214\ufffb\224\ufffb\231\ufffb\240\ufffb\262\ufffb\267\ufffb\327" +
    "\ufffb\u0138\ufffb\u0140\ufffb\u0153\ufffb\u0154\ufffb\u0158\ufffb\001\002" +
    "\000\004\u0140\040\001\002\000\066\011\ufff6\044\ufff6\057" +
    "\ufff6\112\ufff6\113\ufff6\117\ufff6\120\ufff6\130\ufff6\133\ufff6" +
    "\135\ufff6\140\ufff6\156\ufff6\165\ufff6\214\ufff6\224\ufff6\231" +
    "\ufff6\240\ufff6\262\ufff6\267\ufff6\327\ufff6\u0138\ufff6\u0140\ufff6" +
    "\u0153\ufff6\u0154\ufff6\u0155\042\u0158\ufff6\001\002\000\064\011" +
    "\ufff9\044\ufff9\057\ufff9\112\ufff9\113\ufff9\117\ufff9\120\ufff9" +
    "\130\ufff9\133\ufff9\135\ufff9\140\ufff9\156\ufff9\165\ufff9\214" +
    "\ufff9\224\ufff9\231\ufff9\240\ufff9\262\ufff9\267\ufff9\327\ufff9" +
    "\u0138\ufff9\u0140\ufff9\u0153\ufff9\u0154\ufff9\u0158\ufff9\001\002\000" +
    "\004\u0140\043\001\002\000\064\011\ufff7\044\ufff7\057\ufff7" +
    "\112\ufff7\113\ufff7\117\ufff7\120\ufff7\130\ufff7\133\ufff7\135" +
    "\ufff7\140\ufff7\156\ufff7\165\ufff7\214\ufff7\224\ufff7\231\ufff7" +
    "\240\ufff7\262\ufff7\267\ufff7\327\ufff7\u0138\ufff7\u0140\ufff7\u0153" +
    "\ufff7\u0154\ufff7\u0158\ufff7\001\002\000\024\323\046\u0100\045" +
    "\u0105\050\u0110\052\u0111\060\u013b\047\u013c\057\u0158\053\u015c" +
    "\056\001\002\000\004\u0158\160\001\002\000\004\u0158\144" +
    "\001\002\000\130\007\uffec\011\uffec\012\uffec\016\uffec\032" +
    "\uffec\057\uffec\062\uffec\071\uffec\072\uffec\074\uffec\112\uffec" +
    "\117\uffec\120\uffec\126\uffec\133\uffec\134\uffec\141\uffec\150" +
    "\uffec\164\uffec\165\uffec\170\uffec\224\uffec\242\uffec\262\uffec" +
    "\266\uffec\267\uffec\327\uffec\333\uffec\u0138\uffec\u0140\uffec\u0141" +
    "\uffec\u0142\uffec\u0143\uffec\u0144\uffec\u0145\uffec\u0146\uffec\u014a\uffec" +
    "\u014c\uffec\u014d\uffec\u014f\uffec\u0153\uffec\u0154\uffec\u0159\uffec\001" +
    "\002\000\004\u0158\127\001\002\000\004\u0159\122\001\002" +
    "\000\004\u0158\117\001\002\000\024\323\046\u0100\045\u0105" +
    "\050\u0110\052\u0111\060\u013b\047\u013c\057\u0158\053\u015c\056" +
    "\001\002\000\130\007\uffee\011\uffee\012\uffee\016\uffee\032" +
    "\uffee\057\uffee\062\uffee\071\uffee\072\uffee\074\uffee\112\uffee" +
    "\117\uffee\120\uffee\126\uffee\133\uffee\134\uffee\141\uffee\150" +
    "\uffee\164\uffee\165\uffee\170\uffee\224\uffee\242\uffee\262\uffee" +
    "\266\uffee\267\uffee\327\uffee\333\uffee\u0138\uffee\u0140\uffee\u0141" +
    "\uffee\u0142\uffee\u0143\110\u0144\106\u0145\uffee\u0146\uffee\u014a\uffee" +
    "\u014c\uffee\u014d\uffee\u014f\uffee\u0153\uffee\u0154\uffee\u0159\uffee\001" +
    "\002\000\130\007\ufff2\011\ufff2\012\ufff2\016\ufff2\032\ufff2" +
    "\057\ufff2\062\ufff2\071\ufff2\072\ufff2\074\ufff2\112\ufff2\117" +
    "\ufff2\120\ufff2\126\ufff2\133\ufff2\134\ufff2\141\ufff2\150\ufff2" +
    "\164\ufff2\165\ufff2\170\ufff2\224\ufff2\242\ufff2\262\ufff2\266" +
    "\ufff2\267\ufff2\327\ufff2\333\ufff2\u0138\ufff2\u0140\ufff2\u0141\100" +
    "\u0142\077\u0143\ufff2\u0144\ufff2\u0145\ufff2\u0146\ufff2\u014a\ufff2\u014c" +
    "\ufff2\u014d\ufff2\u014f\ufff2\u0153\ufff2\u0154\ufff2\u0159\ufff2\001\002" +
    "\000\004\u0140\076\001\002\000\130\007\uffeb\011\uffeb\012" +
    "\uffeb\016\uffeb\032\uffeb\057\uffeb\062\uffeb\071\uffeb\072\uffeb" +
    "\074\uffeb\112\uffeb\117\uffeb\120\uffeb\126\uffeb\133\uffeb\134" +
    "\uffeb\141\uffeb\150\uffeb\164\uffeb\165\uffeb\170\uffeb\224\uffeb" +
    "\242\uffeb\262\uffeb\266\uffeb\267\uffeb\327\uffeb\333\uffeb\u0138" +
    "\uffeb\u0140\uffeb\u0141\uffeb\u0142\uffeb\u0143\uffeb\u0144\uffeb\u0145\uffeb" +
    "\u0146\uffeb\u014a\uffeb\u014c\uffeb\u014d\uffeb\u014f\uffeb\u0153\uffeb\u0154" +
    "\uffeb\u0159\uffeb\001\002\000\004\u0158\062\001\002\000\130" +
    "\007\uffe9\011\uffe9\012\uffe9\016\uffe9\032\uffe9\057\uffe9\062" +
    "\uffe9\071\uffe9\072\uffe9\074\uffe9\112\uffe9\117\uffe9\120\uffe9" +
    "\126\uffe9\133\uffe9\134\uffe9\141\uffe9\150\uffe9\164\uffe9\165" +
    "\uffe9\170\uffe9\224\uffe9\242\uffe9\262\uffe9\266\uffe9\267\uffe9" +
    "\327\uffe9\333\uffe9\u0138\uffe9\u0140\uffe9\u0141\uffe9\u0142\uffe9\u0143" +
    "\uffe9\u0144\uffe9\u0145\uffe9\u0146\uffe9\u014a\uffe9\u014c\uffe9\u014d\uffe9" +
    "\u014f\uffe9\u0153\uffe9\u0154\uffe9\u0159\uffe9\001\002\000\032\005" +
    "\064\064\063\323\uffc6\u0100\uffc6\u0105\uffc6\u0110\uffc6\u0111\uffc6" +
    "\u013b\uffc6\u013c\uffc6\u0140\uffc6\u0158\uffc6\u015c\uffc6\001\002\000" +
    "\026\323\uffc7\u0100\uffc7\u0105\uffc7\u0110\uffc7\u0111\uffc7\u013b\uffc7" +
    "\u013c\uffc7\u0140\uffc7\u0158\uffc7\u015c\uffc7\001\002\000\026\323" +
    "\uffc8\u0100\uffc8\u0105\uffc8\u0110\uffc8\u0111\uffc8\u013b\uffc8\u013c\uffc8" +
    "\u0140\uffc8\u0158\uffc8\u015c\uffc8\001\002\000\004\u0159\075\001" +
    "\002\000\026\323\046\u0100\045\u0105\050\u0110\052\u0111\060" +
    "\u013b\047\u013c\057\u0140\071\u0158\053\u015c\056\001\002\000" +
    "\004\u0159\uffc9\001\002\000\004\u0159\uffc4\001\002\000\006" +
    "\u0155\073\u0159\uffc2\001\002\000\004\u0159\uffc5\001\002\000" +
    "\004\u0140\074\001\002\000\004\u0159\uffc3\001\002\000\130" +
    "\007\uffdc\011\uffdc\012\uffdc\016\uffdc\032\uffdc\057\uffdc\062" +
    "\uffdc\071\uffdc\072\uffdc\074\uffdc\112\uffdc\117\uffdc\120\uffdc" +
    "\126\uffdc\133\uffdc\134\uffdc\141\uffdc\150\uffdc\164\uffdc\165" +
    "\uffdc\170\uffdc\224\uffdc\242\uffdc\262\uffdc\266\uffdc\267\uffdc" +
    "\327\uffdc\333\uffdc\u0138\uffdc\u0140\uffdc\u0141\uffdc\u0142\uffdc\u0143" +
    "\uffdc\u0144\uffdc\u0145\uffdc\u0146\uffdc\u014a\uffdc\u014c\uffdc\u014d\uffdc" +
    "\u014f\uffdc\u0153\uffdc\u0154\uffdc\u0159\uffdc\001\002\000\130\007" +
    "\uffea\011\uffea\012\uffea\016\uffea\032\uffea\057\uffea\062\uffea" +
    "\071\uffea\072\uffea\074\uffea\112\uffea\117\uffea\120\uffea\126" +
    "\uffea\133\uffea\134\uffea\141\uffea\150\uffea\164\uffea\165\uffea" +
    "\170\uffea\224\uffea\242\uffea\262\uffea\266\uffea\267\uffea\327" +
    "\uffea\333\uffea\u0138\uffea\u0140\uffea\u0141\uffea\u0142\uffea\u0143\uffea" +
    "\u0144\uffea\u0145\uffea\u0146\uffea\u014a\uffea\u014c\uffea\u014d\uffea\u014f" +
    "\uffea\u0153\uffea\u0154\uffea\u0159\uffea\001\002\000\024\323\046" +
    "\u0100\045\u0105\050\u0110\052\u0111\060\u013b\047\u013c\057\u0158" +
    "\053\u015c\056\001\002\000\024\323\046\u0100\045\u0105\050" +
    "\u0110\052\u0111\060\u013b\047\u013c\057\u0158\053\u015c\056\001" +
    "\002\000\130\007\ufff5\011\ufff5\012\ufff5\016\ufff5\032\ufff5" +
    "\057\ufff5\062\ufff5\071\ufff5\072\ufff5\074\ufff5\112\ufff5\117" +
    "\ufff5\120\ufff5\126\ufff5\133\ufff5\134\ufff5\141\ufff5\150\ufff5" +
    "\164\ufff5\165\ufff5\170\ufff5\224\ufff5\242\ufff5\262\ufff5\266" +
    "\ufff5\267\ufff5\327\ufff5\333\ufff5\u0138\ufff5\u0140\ufff5\u0141\ufff5" +
    "\u0142\ufff5\u0143\ufff5\u0144\ufff5\u0145\ufff5\u0146\ufff5\u014a\ufff5\u014c" +
    "\ufff5\u014d\ufff5\u014f\ufff5\u0153\ufff5\u0154\ufff5\u0159\ufff5\001\002" +
    "\000\130\007\ufff2\011\ufff2\012\ufff2\016\ufff2\032\ufff2\057" +
    "\ufff2\062\ufff2\071\ufff2\072\ufff2\074\ufff2\112\ufff2\117\ufff2" +
    "\120\ufff2\126\ufff2\133\ufff2\134\ufff2\141\ufff2\150\ufff2\164" +
    "\ufff2\165\ufff2\170\ufff2\224\ufff2\242\ufff2\262\ufff2\266\ufff2" +
    "\267\ufff2\327\ufff2\333\ufff2\u0138\ufff2\u0140\ufff2\u0141\100\u0142" +
    "\077\u0143\ufff2\u0144\ufff2\u0145\ufff2\u0146\ufff2\u014a\ufff2\u014c\ufff2" +
    "\u014d\ufff2\u014f\ufff2\u0153\ufff2\u0154\ufff2\u0159\ufff2\001\002\000" +
    "\130\007\ufff4\011\ufff4\012\ufff4\016\ufff4\032\ufff4\057\ufff4" +
    "\062\ufff4\071\ufff4\072\ufff4\074\ufff4\112\ufff4\117\ufff4\120" +
    "\ufff4\126\ufff4\133\ufff4\134\ufff4\141\ufff4\150\ufff4\164\ufff4" +
    "\165\ufff4\170\ufff4\224\ufff4\242\ufff4\262\ufff4\266\ufff4\267" +
    "\ufff4\327\ufff4\333\ufff4\u0138\ufff4\u0140\ufff4\u0141\ufff4\u0142\ufff4" +
    "\u0143\ufff4\u0144\ufff4\u0145\ufff4\u0146\ufff4\u014a\ufff4\u014c\ufff4\u014d" +
    "\ufff4\u014f\ufff4\u0153\ufff4\u0154\ufff4\u0159\ufff4\001\002\000\130" +
    "\007\ufff2\011\ufff2\012\ufff2\016\ufff2\032\ufff2\057\ufff2\062" +
    "\ufff2\071\ufff2\072\ufff2\074\ufff2\112\ufff2\117\ufff2\120\ufff2" +
    "\126\ufff2\133\ufff2\134\ufff2\141\ufff2\150\ufff2\164\ufff2\165" +
    "\ufff2\170\ufff2\224\ufff2\242\ufff2\262\ufff2\266\ufff2\267\ufff2" +
    "\327\ufff2\333\ufff2\u0138\ufff2\u0140\ufff2\u0141\100\u0142\077\u0143" +
    "\ufff2\u0144\ufff2\u0145\ufff2\u0146\ufff2\u014a\ufff2\u014c\ufff2\u014d\ufff2" +
    "\u014f\ufff2\u0153\ufff2\u0154\ufff2\u0159\ufff2\001\002\000\130\007" +
    "\ufff3\011\ufff3\012\ufff3\016\ufff3\032\ufff3\057\ufff3\062\ufff3" +
    "\071\ufff3\072\ufff3\074\ufff3\112\ufff3\117\ufff3\120\ufff3\126" +
    "\ufff3\133\ufff3\134\ufff3\141\ufff3\150\ufff3\164\ufff3\165\ufff3" +
    "\170\ufff3\224\ufff3\242\ufff3\262\ufff3\266\ufff3\267\ufff3\327" +
    "\ufff3\333\ufff3\u0138\ufff3\u0140\ufff3\u0141\ufff3\u0142\ufff3\u0143\ufff3" +
    "\u0144\ufff3\u0145\ufff3\u0146\ufff3\u014a\ufff3\u014c\ufff3\u014d\ufff3\u014f" +
    "\ufff3\u0153\ufff3\u0154\ufff3\u0159\ufff3\001\002\000\024\323\046" +
    "\u0100\045\u0105\050\u0110\052\u0111\060\u013b\047\u013c\057\u0158" +
    "\053\u015c\056\001\002\000\130\007\ufff1\011\ufff1\012\ufff1" +
    "\016\ufff1\032\ufff1\057\ufff1\062\ufff1\071\ufff1\072\ufff1\074" +
    "\ufff1\112\ufff1\117\ufff1\120\ufff1\126\ufff1\133\ufff1\134\ufff1" +
    "\141\ufff1\150\ufff1\164\ufff1\165\ufff1\170\ufff1\224\ufff1\242" +
    "\ufff1\262\ufff1\266\ufff1\267\ufff1\327\ufff1\333\ufff1\u0138\ufff1" +
    "\u0140\ufff1\u0141\ufff1\u0142\ufff1\u0143\ufff1\u0144\ufff1\u0145\ufff1\u0146" +
    "\ufff1\u014a\ufff1\u014c\ufff1\u014d\ufff1\u014f\ufff1\u0153\ufff1\u0154\ufff1" +
    "\u0159\ufff1\001\002\000\024\323\046\u0100\045\u0105\050\u0110" +
    "\052\u0111\060\u013b\047\u013c\057\u0158\053\u015c\056\001\002" +
    "\000\130\007\uffee\011\uffee\012\uffee\016\uffee\032\uffee\057" +
    "\uffee\062\uffee\071\uffee\072\uffee\074\uffee\112\uffee\117\uffee" +
    "\120\uffee\126\uffee\133\uffee\134\uffee\141\uffee\150\uffee\164" +
    "\uffee\165\uffee\170\uffee\224\uffee\242\uffee\262\uffee\266\uffee" +
    "\267\uffee\327\uffee\333\uffee\u0138\uffee\u0140\uffee\u0141\uffee\u0142" +
    "\uffee\u0143\110\u0144\106\u0145\uffee\u0146\uffee\u014a\uffee\u014c\uffee" +
    "\u014d\uffee\u014f\uffee\u0153\uffee\u0154\uffee\u0159\uffee\001\002\000" +
    "\130\007\ufff0\011\ufff0\012\ufff0\016\ufff0\032\ufff0\057\ufff0" +
    "\062\ufff0\071\ufff0\072\ufff0\074\ufff0\112\ufff0\117\ufff0\120" +
    "\ufff0\126\ufff0\133\ufff0\134\ufff0\141\ufff0\150\ufff0\164\ufff0" +
    "\165\ufff0\170\ufff0\224\ufff0\242\ufff0\262\ufff0\266\ufff0\267" +
    "\ufff0\327\ufff0\333\ufff0\u0138\ufff0\u0140\ufff0\u0141\ufff0\u0142\ufff0" +
    "\u0143\ufff0\u0144\ufff0\u0145\ufff0\u0146\ufff0\u014a\ufff0\u014c\ufff0\u014d" +
    "\ufff0\u014f\ufff0\u0153\ufff0\u0154\ufff0\u0159\ufff0\001\002\000\130" +
    "\007\uffee\011\uffee\012\uffee\016\uffee\032\uffee\057\uffee\062" +
    "\uffee\071\uffee\072\uffee\074\uffee\112\uffee\117\uffee\120\uffee" +
    "\126\uffee\133\uffee\134\uffee\141\uffee\150\uffee\164\uffee\165" +
    "\uffee\170\uffee\224\uffee\242\uffee\262\uffee\266\uffee\267\uffee" +
    "\327\uffee\333\uffee\u0138\uffee\u0140\uffee\u0141\uffee\u0142\uffee\u0143" +
    "\110\u0144\106\u0145\uffee\u0146\uffee\u014a\uffee\u014c\uffee\u014d\uffee" +
    "\u014f\uffee\u0153\uffee\u0154\uffee\u0159\uffee\001\002\000\130\007" +
    "\uffef\011\uffef\012\uffef\016\uffef\032\uffef\057\uffef\062\uffef" +
    "\071\uffef\072\uffef\074\uffef\112\uffef\117\uffef\120\uffef\126" +
    "\uffef\133\uffef\134\uffef\141\uffef\150\uffef\164\uffef\165\uffef" +
    "\170\uffef\224\uffef\242\uffef\262\uffef\266\uffef\267\uffef\327" +
    "\uffef\333\uffef\u0138\uffef\u0140\uffef\u0141\uffef\u0142\uffef\u0143\uffef" +
    "\u0144\uffef\u0145\uffef\u0146\uffef\u014a\uffef\u014c\uffef\u014d\uffef\u014f" +
    "\uffef\u0153\uffef\u0154\uffef\u0159\uffef\001\002\000\004\u0159\116" +
    "\001\002\000\130\007\uffed\011\uffed\012\uffed\016\uffed\032" +
    "\uffed\057\uffed\062\uffed\071\uffed\072\uffed\074\uffed\112\uffed" +
    "\117\uffed\120\uffed\126\uffed\133\uffed\134\uffed\141\uffed\150" +
    "\uffed\164\uffed\165\uffed\170\uffed\224\uffed\242\uffed\262\uffed" +
    "\266\uffed\267\uffed\327\uffed\333\uffed\u0138\uffed\u0140\uffed\u0141" +
    "\uffed\u0142\uffed\u0143\uffed\u0144\uffed\u0145\uffed\u0146\uffed\u014a\uffed" +
    "\u014c\uffed\u014d\uffed\u014f\uffed\u0153\uffed\u0154\uffed\u0159\uffed\001" +
    "\002\000\032\005\064\064\063\323\uffc6\u0100\uffc6\u0105\uffc6" +
    "\u0110\uffc6\u0111\uffc6\u013b\uffc6\u013c\uffc6\u0140\uffc6\u0158\uffc6\u015c" +
    "\uffc6\001\002\000\004\u0159\121\001\002\000\130\007\uffdd" +
    "\011\uffdd\012\uffdd\016\uffdd\032\uffdd\057\uffdd\062\uffdd\071" +
    "\uffdd\072\uffdd\074\uffdd\112\uffdd\117\uffdd\120\uffdd\126\uffdd" +
    "\133\uffdd\134\uffdd\141\uffdd\150\uffdd\164\uffdd\165\uffdd\170" +
    "\uffdd\224\uffdd\242\uffdd\262\uffdd\266\uffdd\267\uffdd\327\uffdd" +
    "\333\uffdd\u0138\uffdd\u0140\uffdd\u0141\uffdd\u0142\uffdd\u0143\uffdd\u0144" +
    "\uffdd\u0145\uffdd\u0146\uffdd\u014a\uffdd\u014c\uffdd\u014d\uffdd\u014f\uffdd" +
    "\u0153\uffdd\u0154\uffdd\u0159\uffdd\001\002\000\010\133\030\170" +
    "\125\u0140\027\001\002\000\006\327\ufe58\u0153\ufe58\001\002" +
    "\000\006\327\ufe5b\u0153\ufe5b\001\002\000\006\133\030\u0140" +
    "\027\001\002\000\006\327\ufe59\u0153\ufe59\001\002\000\034" +
    "\005\133\064\131\323\uffcf\u0100\uffcf\u0105\uffcf\u0110\uffcf\u0111" +
    "\uffcf\u013b\uffcf\u013c\uffcf\u0140\uffcf\u0143\uffcf\u0158\uffcf\u015c\uffcf" +
    "\001\002\000\030\323\046\u0100\045\u0105\050\u0110\052\u0111" +
    "\060\u013b\047\u013c\057\u0140\137\u0143\135\u0158\053\u015c\056" +
    "\001\002\000\030\323\uffd0\u0100\uffd0\u0105\uffd0\u0110\uffd0\u0111" +
    "\uffd0\u013b\uffd0\u013c\uffd0\u0140\uffd0\u0143\uffd0\u0158\uffd0\u015c\uffd0" +
    "\001\002\000\004\u0159\134\001\002\000\030\323\uffd1\u0100" +
    "\uffd1\u0105\uffd1\u0110\uffd1\u0111\uffd1\u013b\uffd1\u013c\uffd1\u0140\uffd1" +
    "\u0143\uffd1\u0158\uffd1\u015c\uffd1\001\002\000\130\007\uffde\011" +
    "\uffde\012\uffde\016\uffde\032\uffde\057\uffde\062\uffde\071\uffde" +
    "\072\uffde\074\uffde\112\uffde\117\uffde\120\uffde\126\uffde\133" +
    "\uffde\134\uffde\141\uffde\150\uffde\164\uffde\165\uffde\170\uffde" +
    "\224\uffde\242\uffde\262\uffde\266\uffde\267\uffde\327\uffde\333" +
    "\uffde\u0138\uffde\u0140\uffde\u0141\uffde\u0142\uffde\u0143\uffde\u0144\uffde" +
    "\u0145\uffde\u0146\uffde\u014a\uffde\u014c\uffde\u014d\uffde\u014f\uffde\u0153" +
    "\uffde\u0154\uffde\u0159\uffde\001\002\000\004\u0159\uffce\001\002" +
    "\000\004\u0159\uffcc\001\002\000\006\u0155\141\u0159\uffca\001" +
    "\002\000\004\u0159\uffd2\001\002\000\004\u0140\143\001\002" +
    "\000\004\u0159\uffcd\001\002\000\004\u0159\uffcb\001\002\000" +
    "\032\005\150\064\145\323\uffd7\u0100\uffd7\u0105\uffd7\u0110\uffd7" +
    "\u0111\uffd7\u013b\uffd7\u013c\uffd7\u0140\uffd7\u0158\uffd7\u015c\uffd7\001" +
    "\002\000\026\323\uffd8\u0100\uffd8\u0105\uffd8\u0110\uffd8\u0111\uffd8" +
    "\u013b\uffd8\u013c\uffd8\u0140\uffd8\u0158\uffd8\u015c\uffd8\001\002\000" +
    "\026\323\046\u0100\045\u0105\050\u0110\052\u0111\060\u013b\047" +
    "\u013c\057\u0140\154\u0158\053\u015c\056\001\002\000\004\u0159" +
    "\151\001\002\000\026\323\uffd9\u0100\uffd9\u0105\uffd9\u0110\uffd9" +
    "\u0111\uffd9\u013b\uffd9\u013c\uffd9\u0140\uffd9\u0158\uffd9\u015c\uffd9\001" +
    "\002\000\130\007\uffdf\011\uffdf\012\uffdf\016\uffdf\032\uffdf" +
    "\057\uffdf\062\uffdf\071\uffdf\072\uffdf\074\uffdf\112\uffdf\117" +
    "\uffdf\120\uffdf\126\uffdf\133\uffdf\134\uffdf\141\uffdf\150\uffdf" +
    "\164\uffdf\165\uffdf\170\uffdf\224\uffdf\242\uffdf\262\uffdf\266" +
    "\uffdf\267\uffdf\327\uffdf\333\uffdf\u0138\uffdf\u0140\uffdf\u0141\uffdf" +
    "\u0142\uffdf\u0143\uffdf\u0144\uffdf\u0145\uffdf\u0146\uffdf\u014a\uffdf\u014c" +
    "\uffdf\u014d\uffdf\u014f\uffdf\u0153\uffdf\u0154\uffdf\u0159\uffdf\001\002" +
    "\000\004\u0159\uffd6\001\002\000\004\u0159\uffda\001\002\000" +
    "\006\u0155\156\u0159\uffd3\001\002\000\004\u0159\uffd5\001\002" +
    "\000\004\u0140\157\001\002\000\004\u0159\uffd4\001\002\000" +
    "\032\005\064\064\063\323\uffc6\u0100\uffc6\u0105\uffc6\u0110\uffc6" +
    "\u0111\uffc6\u013b\uffc6\u013c\uffc6\u0140\uffc6\u0158\uffc6\u015c\uffc6\001" +
    "\002\000\004\u0159\162\001\002\000\130\007\uffdb\011\uffdb" +
    "\012\uffdb\016\uffdb\032\uffdb\057\uffdb\062\uffdb\071\uffdb\072" +
    "\uffdb\074\uffdb\112\uffdb\117\uffdb\120\uffdb\126\uffdb\133\uffdb" +
    "\134\uffdb\141\uffdb\150\uffdb\164\uffdb\165\uffdb\170\uffdb\224" +
    "\uffdb\242\uffdb\262\uffdb\266\uffdb\267\uffdb\327\uffdb\333\uffdb" +
    "\u0138\uffdb\u0140\uffdb\u0141\uffdb\u0142\uffdb\u0143\uffdb\u0144\uffdb\u0145" +
    "\uffdb\u0146\uffdb\u014a\uffdb\u014c\uffdb\u014d\uffdb\u014f\uffdb\u0153\uffdb" +
    "\u0154\uffdb\u0159\uffdb\001\002\000\026\323\046\u0100\045\u0105" +
    "\050\u0110\052\u0111\060\u013b\047\u013c\057\u0140\027\u0158\053" +
    "\u015c\056\001\002\000\004\262\265\001\002\000\012\057" +
    "\164\224\010\262\174\u0138\163\001\002\000\006\327\ufe51" +
    "\u0153\ufe51\001\002\000\006\327\ufe53\u0153\ufe53\001\002\000" +
    "\010\057\164\224\010\262\174\001\002\000\006\327\ufe55" +
    "\u0153\ufe55\001\002\000\004\u0140\255\001\002\000\006\327" +
    "\ufe4f\u0153\ufe4f\001\002\000\004\u0158\175\001\002\000\042" +
    "\057\206\150\176\151\207\323\046\u0100\045\u0105\050\u0110" +
    "\052\u0111\060\u013b\047\u013c\057\u013e\204\u0140\177\u0154\uffbe" +
    "\u0158\053\u0159\uffbe\u015c\056\001\002\000\052\016\uffab\126" +
    "\uffab\141\uffab\150\uffab\323\uffab\u0100\uffab\u0105\uffab\u0110\uffab" +
    "\u0111\uffab\u013b\uffab\u013c\uffab\u013e\uffab\u0140\uffab\u0146\uffab\u014a" +
    "\uffab\u014c\uffab\u014d\uffab\u014f\uffab\u0158\uffab\u015c\uffab\001\002" +
    "\000\074\011\uffb9\012\uffb9\016\uffb9\032\uffb9\062\uffb9\071" +
    "\uffb9\072\uffb9\112\uffb9\117\uffb9\120\uffb9\126\uffb9\133\uffb9" +
    "\141\uffb9\165\uffb9\242\uffb9\266\uffb9\267\uffb9\327\uffb9\u0138" +
    "\uffb9\u0140\uffb9\u0141\uffb9\u0146\uffb9\u014a\uffb9\u014c\uffb9\u014d\uffb9" +
    "\u014f\uffb9\u0153\uffb9\u0154\uffb9\u0159\uffb9\001\002\000\004\u0141" +
    "\226\001\002\000\006\u0154\243\u0159\244\001\002\000\006" +
    "\u0154\ufe4a\u0159\ufe4a\001\002\000\052\016\uffbe\126\uffbe\141" +
    "\uffbe\150\176\323\046\u0100\045\u0105\050\u0110\052\u0111\060" +
    "\u013b\047\u013c\057\u013e\204\u0140\177\u0146\uffbe\u014a\uffbe\u014c" +
    "\uffbe\u014d\uffbe\u014f\uffbe\u0158\053\u015c\056\001\002\000\074" +
    "\011\uffba\012\uffba\016\uffba\032\uffba\062\uffba\071\uffba\072" +
    "\uffba\112\uffba\117\uffba\120\uffba\126\uffba\133\uffba\141\uffba" +
    "\165\uffba\242\uffba\266\uffba\267\uffba\327\uffba\u0138\uffba\u0140" +
    "\uffba\u0141\uffba\u0146\uffba\u014a\uffba\u014c\uffba\u014d\uffba\u014f\uffba" +
    "\u0153\uffba\u0154\uffba\u0159\uffba\001\002\000\026\u0141\226\u0142" +
    "\213\u0143\212\u0144\215\u0145\225\u0146\217\u014a\223\u014c\222" +
    "\u014d\214\u014f\224\001\002\000\006\u0154\ufe4c\u0159\ufe4c\001" +
    "\002\000\006\u0154\ufe4b\u0159\ufe4b\001\002\000\006\327\ufe50" +
    "\u0153\ufe50\001\002\000\030\323\uffbc\u0100\uffbc\u0105\uffbc\u0110" +
    "\uffbc\u0111\uffbc\u013b\uffbc\u013c\uffbc\u013e\uffbc\u0140\uffbc\u0158\uffbc" +
    "\u015c\uffbc\001\002\000\030\323\uffb2\u0100\uffb2\u0105\uffb2\u0110" +
    "\uffb2\u0111\uffb2\u013b\uffb2\u013c\uffb2\u013e\uffb2\u0140\uffb2\u0158\uffb2" +
    "\u015c\uffb2\001\002\000\030\323\uffb3\u0100\uffb3\u0105\uffb3\u0110" +
    "\uffb3\u0111\uffb3\u013b\uffb3\u013c\uffb3\u013e\uffb3\u0140\uffb3\u0158\uffb3" +
    "\u015c\uffb3\001\002\000\172\011\uffa9\012\uffa9\016\uffa9\024" +
    "\uffa9\032\uffa9\042\uffa9\050\uffa9\062\uffa9\071\uffa9\072\uffa9" +
    "\112\uffa9\117\uffa9\120\uffa9\126\uffa9\133\uffa9\140\uffa9\141" +
    "\uffa9\152\uffa9\165\uffa9\214\uffa9\230\uffa9\231\uffa9\236\uffa9" +
    "\242\uffa9\266\uffa9\267\uffa9\323\uffa9\327\uffa9\341\uffa9\345" +
    "\uffa9\360\uffa9\376\uffa9\u0100\uffa9\u0105\uffa9\u010d\uffa9\u0110\uffa9" +
    "\u0111\uffa9\u0112\uffa9\u0116\uffa9\u0118\uffa9\u0119\uffa9\u0120\uffa9\u0122" +
    "\uffa9\u0123\uffa9\u0137\uffa9\u0138\uffa9\u013b\uffa9\u013c\uffa9\u013e\uffa9" +
    "\u0140\uffa9\u0146\uffa9\u014a\uffa9\u014c\uffa9\u014d\uffa9\u014f\uffa9\u0153" +
    "\uffa9\u0154\uffa9\u0158\uffa9\u0159\uffa9\u015c\uffa9\001\002\000\030" +
    "\323\uffb1\u0100\uffb1\u0105\uffb1\u0110\uffb1\u0111\uffb1\u013b\uffb1\u013c" +
    "\uffb1\u013e\uffb1\u0140\uffb1\u0158\uffb1\u015c\uffb1\001\002\000\030" +
    "\323\uffbb\u0100\uffbb\u0105\uffbb\u0110\uffbb\u0111\uffbb\u013b\uffbb\u013c" +
    "\uffbb\u013e\uffbb\u0140\uffbb\u0158\uffbb\u015c\uffbb\001\002\000\172" +
    "\011\uffa7\012\uffa7\016\uffa7\024\uffa7\032\uffa7\042\uffa7\050" +
    "\uffa7\062\uffa7\071\uffa7\072\uffa7\112\uffa7\117\uffa7\120\uffa7" +
    "\126\uffa7\133\uffa7\140\uffa7\141\uffa7\152\uffa7\165\uffa7\214" +
    "\uffa7\230\uffa7\231\uffa7\236\uffa7\242\uffa7\266\uffa7\267\uffa7" +
    "\323\uffa7\327\uffa7\341\uffa7\345\uffa7\360\uffa7\376\uffa7\u0100" +
    "\uffa7\u0105\uffa7\u010d\uffa7\u0110\uffa7\u0111\uffa7\u0112\uffa7\u0116\uffa7" +
    "\u0118\uffa7\u0119\uffa7\u0120\uffa7\u0122\uffa7\u0123\uffa7\u0137\uffa7\u0138" +
    "\uffa7\u013b\uffa7\u013c\uffa7\u013e\uffa7\u0140\uffa7\u0146\uffa7\u014a\uffa7" +
    "\u014c\uffa7\u014d\uffa7\u014f\uffa7\u0153\uffa7\u0154\uffa7\u0158\uffa7\u0159" +
    "\uffa7\u015c\uffa7\001\002\000\030\323\046\u0100\045\u0105\050" +
    "\u0110\052\u0111\060\u013b\047\u013c\057\u013e\227\u0140\232\u0158" +
    "\053\u015c\056\001\002\000\030\323\uffbd\u0100\uffbd\u0105\uffbd" +
    "\u0110\uffbd\u0111\uffbd\u013b\uffbd\u013c\uffbd\u013e\uffbd\u0140\uffbd\u0158" +
    "\uffbd\u015c\uffbd\001\002\000\172\011\uffaa\012\uffaa\016\uffaa" +
    "\024\uffaa\032\uffaa\042\uffaa\050\uffaa\062\uffaa\071\uffaa\072" +
    "\uffaa\112\uffaa\117\uffaa\120\uffaa\126\uffaa\133\uffaa\140\uffaa" +
    "\141\uffaa\152\uffaa\165\uffaa\214\uffaa\230\uffaa\231\uffaa\236" +
    "\uffaa\242\uffaa\266\uffaa\267\uffaa\323\uffaa\327\uffaa\341\uffaa" +
    "\345\uffaa\360\uffaa\376\uffaa\u0100\uffaa\u0105\uffaa\u010d\uffaa\u0110" +
    "\uffaa\u0111\uffaa\u0112\uffaa\u0116\uffaa\u0118\uffaa\u0119\uffaa\u0120\uffaa" +
    "\u0122\uffaa\u0123\uffaa\u0137\uffaa\u0138\uffaa\u013b\uffaa\u013c\uffaa\u013e" +
    "\uffaa\u0140\uffaa\u0146\uffaa\u014a\uffaa\u014c\uffaa\u014d\uffaa\u014f\uffaa" +
    "\u0153\uffaa\u0154\uffaa\u0158\uffaa\u0159\uffaa\u015c\uffaa\001\002\000" +
    "\172\011\uffa8\012\uffa8\016\uffa8\024\uffa8\032\uffa8\042\uffa8" +
    "\050\uffa8\062\uffa8\071\uffa8\072\uffa8\112\uffa8\117\uffa8\120" +
    "\uffa8\126\uffa8\133\uffa8\140\uffa8\141\uffa8\152\uffa8\165\uffa8" +
    "\214\uffa8\230\uffa8\231\uffa8\236\uffa8\242\uffa8\266\uffa8\267" +
    "\uffa8\323\uffa8\327\uffa8\341\uffa8\345\uffa8\360\uffa8\376\uffa8" +
    "\u0100\uffa8\u0105\uffa8\u010d\uffa8\u0110\uffa8\u0111\uffa8\u0112\uffa8\u0116" +
    "\uffa8\u0118\uffa8\u0119\uffa8\u0120\uffa8\u0122\uffa8\u0123\uffa8\u0137\uffa8" +
    "\u0138\uffa8\u013b\uffa8\u013c\uffa8\u013e\uffa8\u0140\uffa8\u0146\uffa8\u014a" +
    "\uffa8\u014c\uffa8\u014d\uffa8\u014f\uffa8\u0153\uffa8\u0154\uffa8\u0158\uffa8" +
    "\u0159\uffa8\u015c\uffa8\001\002\000\172\011\uffa6\012\uffa6\016" +
    "\uffa6\024\uffa6\032\uffa6\042\uffa6\050\uffa6\062\uffa6\071\uffa6" +
    "\072\uffa6\112\uffa6\117\uffa6\120\uffa6\126\uffa6\133\uffa6\140" +
    "\uffa6\141\uffa6\152\uffa6\165\uffa6\214\uffa6\230\uffa6\231\uffa6" +
    "\236\uffa6\242\uffa6\266\uffa6\267\uffa6\323\uffa6\327\uffa6\341" +
    "\uffa6\345\uffa6\360\uffa6\376\uffa6\u0100\uffa6\u0105\uffa6\u010d\uffa6" +
    "\u0110\uffa6\u0111\uffa6\u0112\uffa6\u0116\uffa6\u0118\uffa6\u0119\uffa6\u0120" +
    "\uffa6\u0122\uffa6\u0123\uffa6\u0137\uffa6\u0138\uffa6\u013b\uffa6\u013c\uffa6" +
    "\u013e\uffa6\u0140\uffa6\u0146\uffa6\u014a\uffa6\u014c\uffa6\u014d\uffa6\u014f" +
    "\uffa6\u0153\uffa6\u0154\uffa6\u0158\uffa6\u0159\uffa6\u015c\uffa6\001\002" +
    "\000\030\323\uffb0\u0100\uffb0\u0105\uffb0\u0110\uffb0\u0111\uffb0\u013b" +
    "\uffb0\u013c\uffb0\u013e\uffb0\u0140\uffb0\u0158\uffb0\u015c\uffb0\001\002" +
    "\000\030\323\uffaf\u0100\uffaf\u0105\uffaf\u0110\uffaf\u0111\uffaf\u013b" +
    "\uffaf\u013c\uffaf\u013e\uffaf\u0140\uffaf\u0158\uffaf\u015c\uffaf\001\002" +
    "\000\072\011\uffb6\012\uffb6\016\uffb6\032\uffb6\062\uffb6\071" +
    "\uffb6\072\uffb6\112\uffb6\117\uffb6\120\uffb6\126\uffb6\133\uffb6" +
    "\141\uffb6\165\uffb6\242\uffb6\266\uffb6\267\uffb6\327\uffb6\u0138" +
    "\uffb6\u0140\uffb6\u0146\uffb6\u014a\uffb6\u014c\uffb6\u014d\uffb6\u014f\uffb6" +
    "\u0153\uffb6\u0154\uffb6\u0159\uffb6\001\002\000\072\011\uffb8\012" +
    "\uffb8\016\uffb8\032\uffb8\062\uffb8\071\uffb8\072\uffb8\112\uffb8" +
    "\117\uffb8\120\uffb8\126\uffb8\133\uffb8\141\uffb8\165\uffb8\242" +
    "\uffb8\266\uffb8\267\uffb8\327\uffb8\u0138\uffb8\u0140\uffb8\u0146\uffb8" +
    "\u014a\uffb8\u014c\uffb8\u014d\uffb8\u014f\uffb8\u0153\uffb8\u0154\uffb8\u0159" +
    "\uffb8\001\002\000\072\011\uffc1\012\uffc1\016\uffc1\032\uffc1" +
    "\062\uffc1\071\uffc1\072\uffc1\112\uffc1\117\uffc1\120\uffc1\126" +
    "\uffc1\133\uffc1\141\uffc1\165\uffc1\242\uffc1\266\uffc1\267\uffc1" +
    "\327\uffc1\u0138\uffc1\u0140\uffc1\u0146\uffc1\u014a\uffc1\u014c\uffc1\u014d" +
    "\uffc1\u014f\uffc1\u0153\uffc1\u0154\uffc1\u0159\uffc1\001\002\000\072" +
    "\011\uffb7\012\uffb7\016\uffb7\032\uffb7\062\uffb7\071\uffb7\072" +
    "\uffb7\112\uffb7\117\uffb7\120\uffb7\126\uffb7\133\uffb7\141\uffb7" +
    "\165\uffb7\242\uffb7\266\uffb7\267\uffb7\327\uffb7\u0138\uffb7\u0140" +
    "\uffb7\u0146\uffb7\u014a\uffb7\u014c\uffb7\u014d\uffb7\u014f\uffb7\u0153\uffb7" +
    "\u0154\uffb7\u0159\uffb7\001\002\000\022\016\237\126\235\141" +
    "\241\u0146\217\u014a\223\u014c\222\u014d\214\u014f\224\001\002" +
    "\000\072\011\uffb5\012\uffb5\016\uffb5\032\uffb5\062\uffb5\071" +
    "\uffb5\072\uffb5\112\uffb5\117\uffb5\120\uffb5\126\uffb5\133\uffb5" +
    "\141\uffb5\165\uffb5\242\uffb5\266\uffb5\267\uffb5\327\uffb5\u0138" +
    "\uffb5\u0140\uffb5\u0146\uffb5\u014a\uffb5\u014c\uffb5\u014d\uffb5\u014f\uffb5" +
    "\u0153\uffb5\u0154\uffb5\u0159\uffb5\001\002\000\072\011\uffa4\012" +
    "\uffa4\016\uffa4\032\uffa4\062\uffa4\071\uffa4\072\uffa4\112\uffa4" +
    "\117\uffa4\120\uffa4\126\uffa4\133\uffa4\141\uffa4\165\uffa4\242" +
    "\uffa4\266\uffa4\267\uffa4\327\uffa4\u0138\uffa4\u0140\uffa4\u0146\uffa4" +
    "\u014a\uffa4\u014c\uffa4\u014d\uffa4\u014f\uffa4\u0153\uffa4\u0154\uffa4\u0159" +
    "\uffa4\001\002\000\072\011\uffbf\012\uffbf\016\uffbf\032\uffbf" +
    "\062\uffbf\071\uffbf\072\uffbf\112\uffbf\117\uffbf\120\uffbf\126" +
    "\uffbf\133\uffbf\141\uffbf\165\uffbf\242\uffbf\266\uffbf\267\uffbf" +
    "\327\uffbf\u0138\uffbf\u0140\uffbf\u0146\uffbf\u014a\uffbf\u014c\uffbf\u014d" +
    "\uffbf\u014f\uffbf\u0153\uffbf\u0154\uffbf\u0159\uffbf\001\002\000\072" +
    "\011\uffa5\012\uffa5\016\uffa5\032\uffa5\062\uffa5\071\uffa5\072" +
    "\uffa5\112\uffa5\117\uffa5\120\uffa5\126\uffa5\133\uffa5\141\uffa5" +
    "\165\uffa5\242\uffa5\266\uffa5\267\uffa5\327\uffa5\u0138\uffa5\u0140" +
    "\uffa5\u0146\uffa5\u014a\uffa5\u014c\uffa5\u014d\uffa5\u014f\uffa5\u0153\uffa5" +
    "\u0154\uffa5\u0159\uffa5\001\002\000\072\011\uffb4\012\uffb4\016" +
    "\uffb4\032\uffb4\062\uffb4\071\uffb4\072\uffb4\112\uffb4\117\uffb4" +
    "\120\uffb4\126\uffb4\133\uffb4\141\uffb4\165\uffb4\242\uffb4\266" +
    "\uffb4\267\uffb4\327\uffb4\u0138\uffb4\u0140\uffb4\u0146\uffb4\u014a\uffb4" +
    "\u014c\uffb4\u014d\uffb4\u014f\uffb4\u0153\uffb4\u0154\uffb4\u0159\uffb4\001" +
    "\002\000\072\011\uffa3\012\uffa3\016\uffa3\032\uffa3\062\uffa3" +
    "\071\uffa3\072\uffa3\112\uffa3\117\uffa3\120\uffa3\126\uffa3\133" +
    "\uffa3\141\uffa3\165\uffa3\242\uffa3\266\uffa3\267\uffa3\327\uffa3" +
    "\u0138\uffa3\u0140\uffa3\u0146\uffa3\u014a\uffa3\u014c\uffa3\u014d\uffa3\u014f" +
    "\uffa3\u0153\uffa3\u0154\uffa3\u0159\uffa3\001\002\000\006\327\ufe4d" +
    "\u0153\ufe4d\001\002\000\042\057\206\150\176\151\207\323" +
    "\046\u0100\045\u0105\050\u0110\052\u0111\060\u013b\047\u013c\057" +
    "\u013e\204\u0140\177\u0154\uffbe\u0158\053\u0159\uffbe\u015c\056\001" +
    "\002\000\010\327\ufe46\u0153\ufe46\u0154\246\001\002\000\006" +
    "\327\ufe48\u0153\ufe48\001\002\000\004\262\247\001\002\000" +
    "\004\u0158\250\001\002\000\042\057\206\150\176\151\207" +
    "\323\046\u0100\045\u0105\050\u0110\052\u0111\060\u013b\047\u013c" +
    "\057\u013e\204\u0140\177\u0154\uffbe\u0158\053\u0159\uffbe\u015c\056" +
    "\001\002\000\006\327\ufe47\u0153\ufe47\001\002\000\006\327" +
    "\ufe49\u0153\ufe49\001\002\000\006\u013e\204\u0140\177\001\002" +
    "\000\072\011\uffc0\012\uffc0\016\uffc0\032\uffc0\062\uffc0\071" +
    "\uffc0\072\uffc0\112\uffc0\117\uffc0\120\uffc0\126\uffc0\133\uffc0" +
    "\141\uffc0\165\uffc0\242\uffc0\266\uffc0\267\uffc0\327\uffc0\u0138" +
    "\uffc0\u0140\uffc0\u0146\uffc0\u014a\uffc0\u014c\uffc0\u014d\uffc0\u014f\uffc0" +
    "\u0153\uffc0\u0154\uffc0\u0159\uffc0\001\002\000\006\u0154\257\u0159" +
    "\260\001\002\000\022\057\ufee6\112\ufee6\224\ufee6\262\ufee6" +
    "\267\ufee6\327\ufee6\u0138\ufee6\u0153\ufee6\001\002\000\004\u0140" +
    "\255\001\002\000\022\057\ufee3\112\ufee3\224\ufee3\262\ufee3" +
    "\267\ufee3\327\ufee3\u0138\ufee3\u0153\ufee3\001\002\000\022\057" +
    "\ufee5\112\ufee5\224\ufee5\262\ufee5\267\ufee5\327\ufee5\u0138\ufee5" +
    "\u0153\ufee5\001\002\000\022\057\ufee4\112\ufee4\224\ufee4\262" +
    "\ufee4\267\ufee4\327\ufee4\u0138\ufee4\u0153\ufee4\001\002\000\006" +
    "\327\ufe52\u0153\ufe52\001\002\000\006\327\ufe54\u0153\ufe54\001" +
    "\002\000\006\327\ufe4e\u0153\ufe4e\001\002\000\024\011\ufef3" +
    "\057\ufef3\112\ufef3\133\ufef3\224\ufef3\262\ufef3\267\ufef3\327" +
    "\ufef3\u0153\ufef3\001\002\000\024\011\ufef4\057\ufef4\112\ufef4" +
    "\133\ufef4\224\ufef4\262\ufef4\267\ufef4\327\ufef4\u0153\ufef4\001" +
    "\002\000\024\011\303\057\ufef1\112\ufef1\133\ufef1\224\ufef1" +
    "\262\ufef1\267\ufef1\327\ufef1\u0153\ufef1\001\002\000\022\057" +
    "\ufeeb\112\ufeeb\133\273\224\ufeeb\262\ufeeb\267\ufeeb\327\ufeeb" +
    "\u0153\ufeeb\001\002\000\020\057\ufeee\112\ufeee\224\ufeee\262" +
    "\ufeee\267\ufeee\327\ufeee\u0153\ufeee\001\002\000\006\u0140\276" +
    "\u015c\275\001\002\000\020\057\ufeec\112\ufeec\224\ufeec\262" +
    "\ufeec\267\ufeec\327\ufeec\u0153\ufeec\001\002\000\004\u0140\301" +
    "\001\002\000\022\057\ufee7\112\ufee7\224\ufee7\262\ufee7\267" +
    "\ufee7\327\ufee7\u0153\ufee7\u0158\172\001\002\000\020\057\ufee9" +
    "\112\ufee9\224\ufee9\262\ufee9\267\ufee9\327\ufee9\u0153\ufee9\001" +
    "\002\000\020\057\ufee8\112\ufee8\224\ufee8\262\ufee8\267\ufee8" +
    "\327\ufee8\u0153\ufee8\001\002\000\022\057\ufee7\112\ufee7\224" +
    "\ufee7\262\ufee7\267\ufee7\327\ufee7\u0153\ufee7\u0158\172\001\002" +
    "\000\020\057\ufeea\112\ufeea\224\ufeea\262\ufeea\267\ufeea\327" +
    "\ufeea\u0153\ufeea\001\002\000\004\u0140\305\001\002\000\022" +
    "\057\ufef5\112\ufef5\133\ufef5\224\ufef5\262\ufef5\267\ufef5\327" +
    "\ufef5\u0153\ufef5\001\002\000\024\057\ufeef\112\ufeef\133\ufeef" +
    "\224\ufeef\262\ufeef\267\ufeef\327\ufeef\u0153\ufeef\u0154\306\001" +
    "\002\000\026\323\046\u0100\045\u0105\050\u0110\052\u0111\060" +
    "\u013b\047\u013c\057\u0140\027\u0158\053\u015c\056\001\002\000" +
    "\022\057\ufef2\112\ufef2\133\ufef2\224\ufef2\262\ufef2\267\ufef2" +
    "\327\ufef2\u0153\ufef2\001\002\000\022\057\ufef0\112\ufef0\133" +
    "\ufef0\224\ufef0\262\ufef0\267\ufef0\327\ufef0\u0153\ufef0\001\002" +
    "\000\004\002\000\001\002\000\004\002\ufe5e\001\002\000" +
    "\004\002\ufe5d\001\002\000\124\011\ufe77\024\ufe77\042\ufe77" +
    "\050\ufe77\112\ufe77\117\ufe77\120\ufe77\133\ufe77\140\ufe77\150" +
    "\ufe77\165\ufe77\214\ufe77\231\ufe77\244\ufe77\267\ufe77\323\ufe77" +
    "\327\ufe77\341\ufe77\345\ufe77\360\ufe77\376\ufe77\u0100\ufe77\u0105" +
    "\ufe77\u010d\ufe77\u0110\ufe77\u0111\ufe77\u0112\ufe77\u0116\ufe77\u0118\ufe77" +
    "\u0119\ufe77\u0120\ufe77\u0123\ufe77\u0137\ufe77\u013b\ufe77\u013c\ufe77\u013e" +
    "\ufe77\u0140\ufe77\u0143\ufe77\u0153\ufe77\u0158\ufe77\u015c\ufe77\001\002" +
    "\000\124\011\uffbe\024\325\042\331\050\350\112\uffbe\117" +
    "\uffbe\120\uffbe\133\uffbe\140\340\150\176\165\uffbe\214\353" +
    "\231\356\244\344\267\uffbe\323\046\327\uffbe\341\321\345" +
    "\323\360\320\376\322\u0100\045\u0105\050\u010d\326\u0110\052" +
    "\u0111\060\u0112\335\u0116\355\u0118\334\u0119\324\u0120\346\u0123" +
    "\354\u0137\337\u013b\047\u013c\057\u013e\204\u0140\347\u0143\352" +
    "\u0153\uffbe\u0158\053\u015c\332\001\002\000\006\327\ufe7a\u0153" +
    "\ufe7a\001\002\000\124\011\ufe78\024\ufe78\042\ufe78\050\ufe78" +
    "\112\ufe78\117\ufe78\120\ufe78\133\ufe78\140\ufe78\150\ufe78\165" +
    "\ufe78\214\ufe78\231\ufe78\244\ufe78\267\ufe78\323\ufe78\327\ufe78" +
    "\341\ufe78\345\ufe78\360\ufe78\376\ufe78\u0100\ufe78\u0105\ufe78\u010d" +
    "\ufe78\u0110\ufe78\u0111\ufe78\u0112\ufe78\u0116\ufe78\u0118\ufe78\u0119\ufe78" +
    "\u0120\ufe78\u0123\ufe78\u0137\ufe78\u013b\ufe78\u013c\ufe78\u013e\ufe78\u0140" +
    "\ufe78\u0143\ufe78\u0153\ufe78\u0158\ufe78\u015c\ufe78\001\002\000\004" +
    "\u0158\u0280\001\002\000\004\u0158\u0279\001\002\000\004\u0158" +
    "\u0272\001\002\000\004\u0158\u026f\001\002\000\004\u0158\u026c" +
    "\001\002\000\034\150\176\266\u025e\323\046\u0100\045\u0105" +
    "\050\u0110\052\u0111\060\u013b\047\u013c\057\u013e\204\u0140\177" +
    "\u0158\053\u015c\056\001\002\000\004\u0158\u025b\001\002\000" +
    "\036\011\uff04\012\uff04\032\uff04\062\uff04\112\uff04\117\uff04" +
    "\120\uff04\133\uff04\165\uff04\267\uff04\327\uff04\u0140\uff04\u0153" +
    "\uff04\u0154\uff04\001\002\000\036\011\uff01\012\uff01\032\uff01" +
    "\062\uff01\112\uff01\117\uff01\120\uff01\133\uff01\165\uff01\267" +
    "\uff01\327\uff01\u0140\uff01\u0153\uff01\u0154\uff01\001\002\000\004" +
    "\u0158\u0228\001\002\000\004\u0140\u0225\001\002\000\036\011" +
    "\ufeff\012\ufeff\032\ufeff\062\ufeff\112\ufeff\117\ufeff\120\ufeff" +
    "\133\ufeff\165\ufeff\267\ufeff\327\ufeff\u0140\ufeff\u0153\ufeff\u0154" +
    "\ufeff\001\002\000\004\u0158\u021f\001\002\000\004\u0158\u0218" +
    "\001\002\000\036\011\u0107\012\ufef8\032\ufef8\062\ufef8\112" +
    "\ufef8\117\ufef8\120\ufef8\133\ufef8\165\ufef8\267\ufef8\327\ufef8" +
    "\u0140\u010a\u0153\ufef8\u0154\ufef8\001\002\000\004\u0158\u0214\001" +
    "\002\000\004\u0158\u020f\001\002\000\062\011\uff03\012\uff03" +
    "\032\uff03\062\uff03\112\uff03\117\uff03\120\uff03\133\uff03\165" +
    "\uff03\267\uff03\327\uff03\u0140\uff03\u0141\uffe9\u0142\uffe9\u0143\uffe9" +
    "\u0144\uffe9\u0145\uffe9\u0146\uffe9\u014a\uffe9\u014c\uffe9\u014d\uffe9\u014f" +
    "\uffe9\u0153\uff03\u0154\uff03\001\002\000\006\327\ufe74\u0153\ufe74" +
    "\001\002\000\006\327\ufe79\u0153\ufe79\001\002\000\004\u0158" +
    "\u0207\001\002\000\022\112\u0122\117\u0121\120\u011f\133\u011d" +
    "\165\u0123\267\u0119\327\ufe63\u0153\ufe63\001\002\000\004\u0158" +
    "\u0115\001\002\000\042\011\u0107\012\ufef8\032\ufef8\062\ufef8" +
    "\112\ufef8\117\ufef8\120\ufef8\133\ufef8\165\ufef8\267\ufef8\327" +
    "\ufef8\u0140\u010a\u0141\uffb9\u0153\ufef8\u0154\ufef8\u0155\u0109\001\002" +
    "\000\072\007\uff54\011\uff54\012\uff54\016\uff54\032\uff54\062" +
    "\uff54\074\uff54\112\uff54\117\uff54\120\uff54\126\uff54\133\uff54" +
    "\134\uff54\141\uff54\150\uff54\164\uff54\165\uff54\267\uff54\327" +
    "\uff54\u0140\uff54\u0146\uff54\u014a\uff54\u014c\uff54\u014d\uff54\u014f\uff54" +
    "\u0153\uff54\u0154\uff54\u0159\uff54\001\002\000\036\011\uff02\012" +
    "\uff02\032\uff02\062\uff02\112\uff02\117\uff02\120\uff02\133\uff02" +
    "\165\uff02\267\uff02\327\uff02\u0140\uff02\u0153\uff02\u0154\uff02\001" +
    "\002\000\032\012\uff07\032\uff07\062\uff07\112\uff07\117\uff07" +
    "\120\uff07\133\uff07\165\uff07\267\uff07\327\uff07\u0153\uff07\u0154" +
    "\uff07\001\002\000\004\u0158\u0102\001\002\000\004\u0158\373" +
    "\001\002\000\004\u0158\365\001\002\000\004\u0101\360\001" +
    "\002\000\036\011\uff00\012\uff00\032\uff00\062\uff00\112\uff00" +
    "\117\uff00\120\uff00\133\uff00\165\uff00\267\uff00\327\uff00\u0140" +
    "\uff00\u0153\uff00\u0154\uff00\001\002\000\006\u0140\362\u015c\361" +
    "\001\002\000\004\u0140\364\001\002\000\072\007\uff4c\011" +
    "\uff4c\012\uff4c\016\uff4c\032\uff4c\062\uff4c\074\uff4c\112\uff4c" +
    "\117\uff4c\120\uff4c\126\uff4c\133\uff4c\134\uff4c\141\uff4c\150" +
    "\uff4c\164\uff4c\165\uff4c\267\uff4c\327\uff4c\u0140\uff4c\u0146\uff4c" +
    "\u014a\uff4c\u014c\uff4c\u014d\uff4c\u014f\uff4c\u0153\uff4c\u0154\uff4c\u0159" +
    "\uff4c\001\002\000\072\007\uff50\011\uff50\012\uff50\016\uff50" +
    "\032\uff50\062\uff50\074\uff50\112\uff50\117\uff50\120\uff50\126" +
    "\uff50\133\uff50\134\uff50\141\uff50\150\uff50\164\uff50\165\uff50" +
    "\267\uff50\327\uff50\u0140\uff50\u0146\uff50\u014a\uff50\u014c\uff50\u014d" +
    "\uff50\u014f\uff50\u0153\uff50\u0154\uff50\u0159\uff50\001\002\000\072" +
    "\007\uff4d\011\uff4d\012\uff4d\016\uff4d\032\uff4d\062\uff4d\074" +
    "\uff4d\112\uff4d\117\uff4d\120\uff4d\126\uff4d\133\uff4d\134\uff4d" +
    "\141\uff4d\150\uff4d\164\uff4d\165\uff4d\267\uff4d\327\uff4d\u0140" +
    "\uff4d\u0146\uff4d\u014a\uff4d\u014c\uff4d\u014d\uff4d\u014f\uff4d\u0153\uff4d" +
    "\u0154\uff4d\u0159\uff4d\001\002\000\006\u013e\367\u015c\366\001" +
    "\002\000\004\u0140\372\001\002\000\004\u0159\uff4f\001\002" +
    "\000\004\u0159\371\001\002\000\072\007\uff53\011\uff53\012" +
    "\uff53\016\uff53\032\uff53\062\uff53\074\uff53\112\uff53\117\uff53" +
    "\120\uff53\126\uff53\133\uff53\134\uff53\141\uff53\150\uff53\164" +
    "\uff53\165\uff53\267\uff53\327\uff53\u0140\uff53\u0146\uff53\u014a\uff53" +
    "\u014c\uff53\u014d\uff53\u014f\uff53\u0153\uff53\u0154\uff53\u0159\uff53\001" +
    "\002\000\004\u0159\uff4e\001\002\000\010\u013e\374\u0140\375" +
    "\u015c\376\001\002\000\010\112\uff40\u0154\uff40\u0159\uff40\001" +
    "\002\000\010\112\uff3f\u0154\uff3f\u0159\uff3f\001\002\000\004" +
    "\u0140\u0101\001\002\000\004\u0159\u0100\001\002\000\072\007" +
    "\uff49\011\uff49\012\uff49\016\uff49\032\uff49\062\uff49\074\uff49" +
    "\112\uff49\117\uff49\120\uff49\126\uff49\133\uff49\134\uff49\141" +
    "\uff49\150\uff49\164\uff49\165\uff49\267\uff49\327\uff49\u0140\uff49" +
    "\u0146\uff49\u014a\uff49\u014c\uff49\u014d\uff49\u014f\uff49\u0153\uff49\u0154" +
    "\uff49\u0159\uff49\001\002\000\010\112\uff41\u0154\uff41\u0159\uff41" +
    "\001\002\000\010\u013e\374\u0140\375\u015c\376\001\002\000" +
    "\004\u0154\u0104\001\002\000\024\323\046\u0100\045\u0105\050" +
    "\u0110\052\u0111\060\u013b\047\u013c\057\u0158\053\u015c\056\001" +
    "\002\000\004\u0159\u0106\001\002\000\072\007\uff44\011\uff44" +
    "\012\uff44\016\uff44\032\uff44\062\uff44\074\uff44\112\uff44\117" +
    "\uff44\120\uff44\126\uff44\133\uff44\134\uff44\141\uff44\150\uff44" +
    "\164\uff44\165\uff44\267\uff44\327\uff44\u0140\uff44\u0146\uff44\u014a" +
    "\uff44\u014c\uff44\u014d\uff44\u014f\uff44\u0153\uff44\u0154\uff44\u0159\uff44" +
    "\001\002\000\004\u0140\u0114\001\002\000\036\011\uff05\012" +
    "\uff05\032\uff05\062\uff05\112\uff05\117\uff05\120\uff05\133\uff05" +
    "\165\uff05\267\uff05\327\uff05\u0140\uff05\u0153\uff05\u0154\uff05\001" +
    "\002\000\006\u0140\u010d\u0143\u010e\001\002\000\036\011\ufef9" +
    "\012\ufef9\032\ufef9\062\ufef9\112\ufef9\117\ufef9\120\ufef9\133" +
    "\ufef9\165\ufef9\267\ufef9\327\ufef9\u0140\ufef9\u0153\ufef9\u0154\ufef9" +
    "\001\002\000\036\011\ufefd\012\ufefd\032\ufefd\062\ufefd\112" +
    "\ufefd\117\ufefd\120\ufefd\133\ufefd\165\ufefd\267\ufefd\327\ufefd" +
    "\u0140\ufefd\u0153\ufefd\u0154\ufefd\001\002\000\036\011\ufefe\012" +
    "\ufefe\032\ufefe\062\ufefe\112\ufefe\117\ufefe\120\ufefe\133\ufefe" +
    "\165\ufefe\267\ufefe\327\ufefe\u0140\ufefe\u0153\ufefe\u0154\ufefe\001" +
    "\002\000\040\011\u0107\012\ufef8\032\ufef8\062\ufef8\112\ufef8" +
    "\117\ufef8\120\ufef8\133\ufef8\165\ufef8\267\ufef8\327\ufef8\u0140" +
    "\u010a\u0153\ufef8\u0154\ufef8\u0155\u010f\001\002\000\036\011\ufefc" +
    "\012\ufefc\032\ufefc\062\ufefc\112\ufefc\117\ufefc\120\ufefc\133" +
    "\ufefc\165\ufefc\267\ufefc\327\ufefc\u0140\ufefc\u0153\ufefc\u0154\ufefc" +
    "\001\002\000\004\u0140\u0112\001\002\000\036\011\ufefb\012" +
    "\ufefb\032\ufefb\062\ufefb\112\ufefb\117\ufefb\120\ufefb\133\ufefb" +
    "\165\ufefb\267\ufefb\327\ufefb\u0140\ufefb\u0153\ufefb\u0154\ufefb\001" +
    "\002\000\036\011\ufef6\012\ufef6\032\ufef6\062\ufef6\112\ufef6" +
    "\117\ufef6\120\ufef6\133\ufef6\165\ufef6\267\ufef6\327\ufef6\u0140" +
    "\ufef6\u0153\ufef6\u0154\ufef6\001\002\000\036\011\u0107\012\ufef8" +
    "\032\ufef8\062\ufef8\112\ufef8\117\ufef8\120\ufef8\133\ufef8\165" +
    "\ufef8\267\ufef8\327\ufef8\u0140\u010a\u0153\ufef8\u0154\ufef8\001\002" +
    "\000\036\011\ufef7\012\ufef7\032\ufef7\062\ufef7\112\ufef7\117" +
    "\ufef7\120\ufef7\133\ufef7\165\ufef7\267\ufef7\327\ufef7\u0140\ufef7" +
    "\u0153\ufef7\u0154\ufef7\001\002\000\036\011\ufefa\012\ufefa\032" +
    "\ufefa\062\ufefa\112\ufefa\117\ufefa\120\ufefa\133\ufefa\165\ufefa" +
    "\267\ufefa\327\ufefa\u0140\ufefa\u0153\ufefa\u0154\ufefa\001\002\000" +
    "\024\323\046\u0100\045\u0105\050\u0110\052\u0111\060\u013b\047" +
    "\u013c\057\u0158\053\u015c\056\001\002\000\004\u0159\u0117\001" +
    "\002\000\072\007\uff45\011\uff45\012\uff45\016\uff45\032\uff45" +
    "\062\uff45\074\uff45\112\uff45\117\uff45\120\uff45\126\uff45\133" +
    "\uff45\134\uff45\141\uff45\150\uff45\164\uff45\165\uff45\267\uff45" +
    "\327\uff45\u0140\uff45\u0146\uff45\u014a\uff45\u014c\uff45\u014d\uff45\u014f" +
    "\uff45\u0153\uff45\u0154\uff45\u0159\uff45\001\002\000\006\327\ufe65" +
    "\u0153\ufe65\001\002\000\010\150\u0147\u010e\u0146\u0158\u0148\001" +
    "\002\000\006\327\ufe67\u0153\ufe67\001\002\000\006\327\ufe69" +
    "\u0153\ufe69\001\002\000\006\327\ufe6b\u0153\ufe6b\001\002\000" +
    "\004\u0140\027\001\002\000\006\327\ufe6e\u0153\ufe6e\001\002" +
    "\000\010\150\u0147\u010e\u0146\u0158\u0148\001\002\000\006\327" +
    "\ufe70\u0153\ufe70\001\002\000\004\022\u01f9\001\002\000\014" +
    "\160\u0133\161\u0135\u0140\027\u0158\u0136\u015c\u0138\001\002\000" +
    "\004\022\u0124\001\002\000\112\011\uffbe\012\uffbe\024\325" +
    "\032\uffbe\042\331\050\350\062\uffbe\140\340\150\176\214" +
    "\353\231\356\323\046\341\321\345\323\360\320\376\322" +
    "\u0100\045\u0105\050\u010d\326\u0110\052\u0111\060\u0112\335\u0116" +
    "\355\u0118\334\u0119\324\u0120\346\u0123\354\u0137\337\u013b\047" +
    "\u013c\057\u013e\204\u0140\347\u0143\352\u0154\uffbe\u0158\053\u015c" +
    "\332\001\002\000\012\012\u012a\032\u0127\062\u0128\u0154\u0129" +
    "\001\002\000\006\327\ufe64\u0153\ufe64\001\002\000\004\u0140" +
    "\u0130\001\002\000\044\007\uff09\016\uff09\074\uff09\126\uff09" +
    "\134\uff09\141\uff09\150\uff09\164\uff09\327\uff09\u0146\uff09\u014a" +
    "\uff09\u014c\uff09\u014d\uff09\u014f\uff09\u0153\uff09\u0154\uff09\u0159\uff09" +
    "\001\002\000\112\011\uffbe\012\uffbe\024\325\032\uffbe\042" +
    "\331\050\350\062\uffbe\140\340\150\176\214\353\231\356" +
    "\323\046\341\321\345\323\360\320\376\322\u0100\045\u0105" +
    "\050\u010d\326\u0110\052\u0111\060\u0112\335\u0116\355\u0118\334" +
    "\u0119\324\u0120\346\u0123\354\u0137\337\u013b\047\u013c\057\u013e" +
    "\204\u0140\347\u0143\352\u0154\uffbe\u0158\053\u015c\332\001\002" +
    "\000\044\007\uff0a\016\uff0a\074\uff0a\126\uff0a\134\uff0a\141" +
    "\uff0a\150\uff0a\164\uff0a\327\uff0a\u0146\uff0a\u014a\uff0a\u014c\uff0a" +
    "\u014d\uff0a\u014f\uff0a\u0153\uff0a\u0154\uff0a\u0159\uff0a\001\002\000" +
    "\044\007\uff0c\016\uff0c\074\uff0c\126\uff0c\134\uff0c\141\uff0c" +
    "\150\uff0c\164\uff0c\327\uff0c\u0146\uff0c\u014a\uff0c\u014c\uff0c\u014d" +
    "\uff0c\u014f\uff0c\u0153\uff0c\u0154\uff0c\u0159\uff0c\001\002\000\044" +
    "\007\uff0f\016\uff0f\074\uff0f\126\uff0f\134\uff0f\141\uff0f\150" +
    "\uff0f\164\uff0f\327\uff0f\u0146\uff0f\u014a\uff0f\u014c\uff0f\u014d\uff0f" +
    "\u014f\uff0f\u0153\uff0f\u0154\uff0f\u0159\uff0f\001\002\000\044\007" +
    "\uff10\016\uff10\074\uff10\126\uff10\134\uff10\141\uff10\150\uff10" +
    "\164\uff10\327\uff10\u0146\uff10\u014a\uff10\u014c\uff10\u014d\uff10\u014f" +
    "\uff10\u0153\uff10\u0154\uff10\u0159\uff10\001\002\000\044\007\uff0e" +
    "\016\uff0e\074\uff0e\126\uff0e\134\uff0e\141\uff0e\150\uff0e\164" +
    "\uff0e\327\uff0e\u0146\uff0e\u014a\uff0e\u014c\uff0e\u014d\uff0e\u014f\uff0e" +
    "\u0153\uff0e\u0154\uff0e\u0159\uff0e\001\002\000\044\007\uff0d\016" +
    "\uff0d\074\uff0d\126\uff0d\134\uff0d\141\uff0d\150\uff0d\164\uff0d" +
    "\327\uff0d\u0146\uff0d\u014a\uff0d\u014c\uff0d\u014d\uff0d\u014f\uff0d\u0153" +
    "\uff0d\u0154\uff0d\u0159\uff0d\001\002\000\006\012\u012a\062\u0128" +
    "\001\002\000\044\007\uff0b\016\uff0b\074\uff0b\126\uff0b\134" +
    "\uff0b\141\uff0b\150\uff0b\164\uff0b\327\uff0b\u0146\uff0b\u014a\uff0b" +
    "\u014c\uff0b\u014d\uff0b\u014f\uff0b\u0153\uff0b\u0154\uff0b\u0159\uff0b\001" +
    "\002\000\042\011\u01d8\044\uff13\113\uff13\117\uff13\120\uff13" +
    "\130\uff13\135\uff13\140\uff13\156\uff13\165\uff13\214\uff13\267" +
    "\uff13\327\uff13\u0140\u01d9\u0153\uff13\u0154\uff13\001\002\000\004" +
    "\u0158\u01f3\001\002\000\044\011\u01d8\044\uff13\113\uff13\117" +
    "\uff13\120\uff13\130\uff13\135\uff13\140\uff13\156\uff13\165\uff13" +
    "\214\uff13\240\uff13\267\uff13\327\uff13\u0140\u01d9\u0153\uff13\u0154" +
    "\uff13\001\002\000\004\u0158\u01e3\001\002\000\004\135\u01e1" +
    "\001\002\000\020\117\u0121\120\u011f\165\u0123\267\u0119\327" +
    "\ufe63\u0153\ufe63\u0154\u01de\001\002\000\004\u0140\u01d7\001\002" +
    "\000\034\044\u013b\113\u013c\117\uff1e\120\uff1e\130\u0140\135" +
    "\uff29\140\u013a\165\uff1e\214\u013d\267\uff1e\327\uff1e\u0153\uff1e" +
    "\u0154\uff1e\001\002\000\006\135\uff23\166\u01d1\001\002\000" +
    "\004\135\u01d4\001\002\000\006\135\uff23\166\u01d1\001\002" +
    "\000\006\135\uff23\166\u01d1\001\002\000\004\135\uff2a\001" +
    "\002\000\004\135\u01d0\001\002\000\004\135\uff2b\001\002" +
    "\000\020\117\uff22\120\uff22\165\uff22\267\uff22\327\uff22\u0153" +
    "\uff22\u0154\uff22\001\002\000\012\160\u0133\161\u0135\u0140\027" +
    "\u015c\u0138\001\002\000\020\117\uff20\120\uff20\165\uff20\267" +
    "\uff20\327\uff20\u0153\uff20\u0154\uff20\001\002\000\004\156\u0145" +
    "\001\002\000\010\150\u0147\u010e\u0146\u0158\u0148\001\002\000" +
    "\004\u0158\u01be\001\002\000\106\024\325\037\u0168\042\331" +
    "\050\350\110\u015d\140\340\152\u016b\214\353\230\u0163\231" +
    "\356\236\u0162\323\046\341\321\345\323\360\320\376\322" +
    "\u0100\045\u0105\050\u010d\326\u0110\052\u0111\060\u0112\335\u0116" +
    "\355\u0118\334\u0119\324\u0120\346\u0122\u0161\u0123\354\u0137\337" +
    "\u013b\047\u013c\057\u0140\u016a\u0158\053\u015c\056\001\002\000" +
    "\006\150\u0147\u0158\u0148\001\002\000\004\007\uff80\001\002" +
    "\000\004\007\u0153\001\002\000\034\044\u014c\113\u013c\117" +
    "\uff19\120\uff19\130\u0140\135\uff29\140\u013a\165\uff19\214\u013d" +
    "\267\uff19\327\uff19\u0153\uff19\u0154\uff19\001\002\000\004\135" +
    "\u0151\001\002\000\020\117\uff1b\120\uff1b\165\uff1b\267\uff1b" +
    "\327\uff1b\u0153\uff1b\u0154\uff1b\001\002\000\020\117\uff1a\120" +
    "\uff1a\165\uff1a\267\uff1a\327\uff1a\u0153\uff1a\u0154\uff1a\001\002" +
    "\000\012\160\u0133\161\u0135\u0140\027\u015c\u0138\001\002\000" +
    "\020\117\uff1d\120\uff1d\165\uff1d\267\uff1d\327\uff1d\u0153\uff1d" +
    "\u0154\uff1d\001\002\000\034\044\u014c\113\u013c\117\uff19\120" +
    "\uff19\130\u0140\135\uff29\140\u013a\165\uff19\214\u013d\267\uff19" +
    "\327\uff19\u0153\uff19\u0154\uff19\001\002\000\020\117\uff1c\120" +
    "\uff1c\165\uff1c\267\uff1c\327\uff1c\u0153\uff1c\u0154\uff1c\001\002" +
    "\000\010\150\u0147\u010e\u0146\u0158\u0148\001\002\000\036\044" +
    "\uff82\113\uff82\117\uff82\120\uff82\130\uff82\135\uff82\140\uff82" +
    "\165\uff82\214\uff82\267\uff82\327\uff82\u0153\uff82\u0154\uff82\u0159" +
    "\uff82\001\002\000\036\044\uff7f\113\uff7f\117\uff7f\120\uff7f" +
    "\130\uff7f\135\uff7f\140\uff7f\165\uff7f\214\uff7f\267\uff7f\327" +
    "\uff7f\u0153\uff7f\u0154\uff7f\u0159\uff7f\001\002\000\004\u0159\u0157" +
    "\001\002\000\010\007\uff5c\164\u0159\u0159\uff5c\001\002\000" +
    "\006\007\uff5e\u0159\uff5e\001\002\000\110\024\325\037\u0168" +
    "\042\331\050\350\110\u015d\140\340\150\u015f\152\u016b\214" +
    "\353\230\u0163\231\356\236\u0162\323\046\341\321\345\323" +
    "\360\320\376\322\u0100\045\u0105\050\u010d\326\u0110\052\u0111" +
    "\060\u0112\335\u0116\355\u0118\334\u0119\324\u0120\346\u0122\u0161" +
    "\u0123\354\u0137\337\u013b\047\u013c\057\u0140\u016a\u0158\u0165\u015c" +
    "\056\001\002\000\006\007\uff5a\u0159\uff5a\001\002\000\006" +
    "\007\uff5d\u0159\uff5d\001\002\000\040\007\uff76\016\uff76\074" +
    "\uff76\126\uff76\134\uff76\141\uff76\150\uff76\164\uff76\u0146\uff76" +
    "\u014a\uff76\u014c\uff76\u014d\uff76\u014f\uff76\u0154\uff76\u0159\uff76\001" +
    "\002\000\004\u0158\u01b4\001\002\000\040\007\uff79\016\uff79" +
    "\074\uff79\126\uff79\134\uff79\141\uff79\150\uff79\164\uff79\u0146" +
    "\uff79\u014a\uff79\u014c\uff79\u014d\uff79\u014f\uff79\u0154\uff79\u0159\uff79" +
    "\001\002\000\106\024\325\037\u0168\042\331\050\350\110" +
    "\u015d\140\340\152\u016b\214\353\230\u0163\231\356\236\u0162" +
    "\323\046\341\321\345\323\360\320\376\322\u0100\045\u0105" +
    "\050\u010d\326\u0110\052\u0111\060\u0112\335\u0116\355\u0118\334" +
    "\u0119\324\u0120\346\u0122\u0161\u0123\354\u0137\337\u013b\047\u013c" +
    "\057\u0140\u016a\u0158\u0165\u015c\056\001\002\000\026\016\u0194" +
    "\126\u0192\134\u0197\141\u0196\150\u0195\u0146\217\u014a\223\u014c" +
    "\222\u014d\214\u014f\224\001\002\000\004\u012a\u0180\001\002" +
    "\000\040\007\uff3b\016\uff3b\074\uff3b\126\uff3b\134\uff3b\141" +
    "\uff3b\150\uff3b\164\uff3b\u0146\uff3b\u014a\uff3b\u014c\uff3b\u014d\uff3b" +
    "\u014f\uff3b\u0154\uff3b\u0159\uff3b\001\002\000\040\007\uff3a\016" +
    "\uff3a\074\uff3a\126\uff3a\134\uff3a\141\uff3a\150\uff3a\164\uff3a" +
    "\u0146\uff3a\u014a\uff3a\u014c\uff3a\u014d\uff3a\u014f\uff3a\u0154\uff3a\u0159" +
    "\uff3a\001\002\000\040\007\uff7a\016\uff7a\074\uff7a\126\uff7a" +
    "\134\uff7a\141\uff7a\150\uff7a\164\uff7a\u0146\uff7a\u014a\uff7a\u014c" +
    "\uff7a\u014d\uff7a\u014f\uff7a\u0154\uff7a\u0159\uff7a\001\002\000\026" +
    "\150\u0147\323\046\u0100\045\u0105\050\u0110\052\u0111\060\u013b" +
    "\047\u013c\057\u0158\u017c\u015c\056\001\002\000\050\007\uffe9" +
    "\016\uffe9\074\uffe9\126\uffe9\134\uffe9\141\uffe9\150\uffe9\164" +
    "\uffe9\u0141\uffe9\u0142\uffe9\u0143\uffe9\u0144\uffe9\u0146\uffe9\u014a\uffe9" +
    "\u014c\uffe9\u014d\uffe9\u014f\uffe9\u0154\uffe9\u0159\uffe9\001\002\000" +
    "\010\007\uff5c\164\u0159\u0159\uff5c\001\002\000\004\u0158\u0173" +
    "\001\002\000\040\007\uff74\016\uff74\074\uff74\126\uff74\134" +
    "\uff74\141\uff74\150\uff74\164\uff74\u0146\uff74\u014a\uff74\u014c\uff74" +
    "\u014d\uff74\u014f\uff74\u0154\uff74\u0159\uff74\001\002\000\040\007" +
    "\uff7b\016\uff7b\074\uff7b\126\uff7b\134\uff7b\141\uff7b\150\uff7b" +
    "\164\uff7b\u0146\uff7b\u014a\uff7b\u014c\uff7b\u014d\uff7b\u014f\uff7b\u0154" +
    "\uff7b\u0159\uff7b\001\002\000\004\u0158\u016e\001\002\000\040" +
    "\007\uff77\016\uff77\074\uff77\126\uff77\134\uff77\141\uff77\150" +
    "\uff77\164\uff77\u0146\uff77\u014a\uff77\u014c\uff77\u014d\uff77\u014f\uff77" +
    "\u0154\uff77\u0159\uff77\001\002\000\040\007\uff75\016\uff75\074" +
    "\uff75\126\uff75\134\uff75\141\uff75\150\uff75\164\uff75\u0146\uff75" +
    "\u014a\uff75\u014c\uff75\u014d\uff75\u014f\uff75\u0154\uff75\u0159\uff75\001" +
    "\002\000\034\150\176\323\046\u0100\045\u0105\050\u0110\052" +
    "\u0111\060\u013b\047\u013c\057\u013e\204\u0140\177\u0154\uffbe\u0158" +
    "\053\u015c\056\001\002\000\004\u0154\u0170\001\002\000\034" +
    "\150\176\323\046\u0100\045\u0105\050\u0110\052\u0111\060\u013b" +
    "\047\u013c\057\u013e\204\u0140\177\u0158\053\u0159\uffbe\u015c\056" +
    "\001\002\000\004\u0159\u0172\001\002\000\040\007\uff39\016" +
    "\uff39\074\uff39\126\uff39\134\uff39\141\uff39\150\uff39\164\uff39" +
    "\u0146\uff39\u014a\uff39\u014c\uff39\u014d\uff39\u014f\uff39\u0154\uff39\u0159" +
    "\uff39\001\002\000\006\u0140\027\u0143\u0176\001\002\000\004" +
    "\u0154\u0177\001\002\000\004\u0154\uff63\001\002\000\004\u0154" +
    "\uff64\001\002\000\010\150\u0147\u010e\u0146\u0158\u0148\001\002" +
    "\000\004\u0159\u017a\001\002\000\004\u0159\uff62\001\002\000" +
    "\010\007\uff7d\164\uff7d\u0159\uff7d\001\002\000\006\007\uff59" +
    "\u0159\uff59\001\002\000\026\150\u0147\323\046\u0100\045\u0105" +
    "\050\u0110\052\u0111\060\u013b\047\u013c\057\u0158\u017c\u015c\056" +
    "\001\002\000\004\u0159\u017e\001\002\000\010\007\uff5c\164" +
    "\u0159\u0159\uff5c\001\002\000\006\007\uff58\u0159\uff58\001\002" +
    "\000\004\106\u0181\001\002\000\004\u0140\u0182\001\002\000" +
    "\006\167\u0185\u0155\u0187\001\002\000\040\007\uff35\016\uff35" +
    "\074\uff35\126\uff35\134\uff35\141\uff35\150\uff35\164\uff35\u0146" +
    "\uff35\u014a\uff35\u014c\uff35\u014d\uff35\u014f\uff35\u0154\uff35\u0159\uff35" +
    "\001\002\000\040\007\uff37\016\uff37\074\uff37\126\uff37\134" +
    "\uff37\141\uff37\150\uff37\164\uff37\u0146\uff37\u014a\uff37\u014c\uff37" +
    "\u014d\uff37\u014f\uff37\u0154\uff37\u0159\uff37\001\002\000\004\165" +
    "\u018e\001\002\000\040\007\uff3c\016\uff3c\074\uff3c\126\uff3c" +
    "\134\uff3c\141\uff3c\150\uff3c\164\uff3c\u0146\uff3c\u014a\uff3c\u014c" +
    "\uff3c\u014d\uff3c\u014f\uff3c\u0154\uff3c\u0159\uff3c\001\002\000\004" +
    "\u0140\u0188\001\002\000\006\167\u0185\u0155\u018b\001\002\000" +
    "\040\007\uff36\016\uff36\074\uff36\126\uff36\134\uff36\141\uff36" +
    "\150\uff36\164\uff36\u0146\uff36\u014a\uff36\u014c\uff36\u014d\uff36\u014f" +
    "\uff36\u0154\uff36\u0159\uff36\001\002\000\040\007\uff38\016\uff38" +
    "\074\uff38\126\uff38\134\uff38\141\uff38\150\uff38\164\uff38\u0146" +
    "\uff38\u014a\uff38\u014c\uff38\u014d\uff38\u014f\uff38\u0154\uff38\u0159\uff38" +
    "\001\002\000\004\u0140\u018c\001\002\000\004\167\u0185\001" +
    "\002\000\040\007\uff36\016\uff36\074\uff36\126\uff36\134\uff36" +
    "\141\uff36\150\uff36\164\uff36\u0146\uff36\u014a\uff36\u014c\uff36\u014d" +
    "\uff36\u014f\uff36\u0154\uff36\u0159\uff36\001\002\000\004\022\u018f" +
    "\001\002\000\112\011\uffbe\012\uffbe\024\325\032\uffbe\042" +
    "\331\050\350\062\uffbe\140\340\150\176\214\353\231\356" +
    "\323\046\341\321\345\323\360\320\376\322\u0100\045\u0105" +
    "\050\u010d\326\u0110\052\u0111\060\u0112\335\u0116\355\u0118\334" +
    "\u0119\324\u0120\346\u0123\354\u0137\337\u013b\047\u013c\057\u013e" +
    "\204\u0140\347\u0143\352\u0154\uffbe\u0158\053\u015c\332\001\002" +
    "\000\040\007\uff34\016\uff34\074\uff34\126\uff34\134\uff34\141" +
    "\uff34\150\uff34\164\uff34\u0146\uff34\u014a\uff34\u014c\uff34\u014d\uff34" +
    "\u014f\uff34\u0154\uff34\u0159\uff34\001\002\000\102\024\325\042" +
    "\331\050\350\140\340\152\u016b\214\353\230\u0163\231\356" +
    "\236\u0162\323\046\341\321\345\323\360\320\376\322\u0100" +
    "\045\u0105\050\u010d\326\u0110\052\u0111\060\u0112\335\u0116\355" +
    "\u0118\334\u0119\324\u0120\346\u0122\u0161\u0123\354\u0137\337\u013b" +
    "\047\u013c\057\u0140\u016a\u0158\053\u015c\056\001\002\000\102" +
    "\024\325\042\331\050\350\140\340\152\u016b\214\353\230" +
    "\u0163\231\356\236\u0162\323\046\341\321\345\323\360\320" +
    "\376\322\u0100\045\u0105\050\u010d\326\u0110\052\u0111\060\u0112" +
    "\335\u0116\355\u0118\334\u0119\324\u0120\346\u0122\u0161\u0123\354" +
    "\u0137\337\u013b\047\u013c\057\u0140\u016a\u0158\053\u015c\056\001" +
    "\002\000\010\007\uff7e\164\uff7e\u0159\uff7e\001\002\000\102" +
    "\024\325\042\331\050\350\140\340\152\u016b\214\353\230" +
    "\u0163\231\356\236\u0162\323\046\341\321\345\323\360\320" +
    "\376\322\u0100\045\u0105\050\u010d\326\u0110\052\u0111\060\u0112" +
    "\335\u0116\355\u0118\334\u0119\324\u0120\346\u0122\u0161\u0123\354" +
    "\u0137\337\u013b\047\u013c\057\u0140\u016a\u0158\053\u015c\056\001" +
    "\002\000\010\016\u01a1\126\u01a0\141\u019f\001\002\000\102" +
    "\024\325\042\331\050\350\140\340\152\u016b\214\353\230" +
    "\u0163\231\356\236\u0162\323\046\341\321\345\323\360\320" +
    "\376\322\u0100\045\u0105\050\u010d\326\u0110\052\u0111\060\u0112" +
    "\335\u0116\355\u0118\334\u0119\324\u0120\346\u0122\u0161\u0123\354" +
    "\u0137\337\u013b\047\u013c\057\u0140\u016a\u0158\053\u015c\056\001" +
    "\002\000\006\150\u0198\151\uff69\001\002\000\004\151\uff6a" +
    "\001\002\000\004\151\u019a\001\002\000\010\007\uff6f\164" +
    "\uff6f\u0159\uff6f\001\002\000\012\007\uff65\074\u019d\164\uff65" +
    "\u0159\uff65\001\002\000\010\007\uff71\164\uff71\u0159\uff71\001" +
    "\002\000\004\u013e\u019e\001\002\000\010\007\uff66\164\uff66" +
    "\u0159\uff66\001\002\000\102\024\325\042\331\050\350\140" +
    "\340\152\u016b\214\353\230\u0163\231\356\236\u0162\323\046" +
    "\341\321\345\323\360\320\376\322\u0100\045\u0105\050\u010d" +
    "\326\u0110\052\u0111\060\u0112\335\u0116\355\u0118\334\u0119\324" +
    "\u0120\346\u0122\u0161\u0123\354\u0137\337\u013b\047\u013c\057\u0140" +
    "\u016a\u0158\053\u015c\056\001\002\000\102\024\325\042\331" +
    "\050\350\140\340\152\u016b\214\353\230\u0163\231\356\236" +
    "\u0162\323\046\341\321\345\323\360\320\376\322\u0100\045" +
    "\u0105\050\u010d\326\u0110\052\u0111\060\u0112\335\u0116\355\u0118" +
    "\334\u0119\324\u0120\346\u0122\u0161\u0123\354\u0137\337\u013b\047" +
    "\u013c\057\u0140\u016a\u0158\053\u015c\056\001\002\000\102\024" +
    "\325\042\331\050\350\140\340\152\u016b\214\353\230\u0163" +
    "\231\356\236\u0162\323\046\341\321\345\323\360\320\376" +
    "\322\u0100\045\u0105\050\u010d\326\u0110\052\u0111\060\u0112\335" +
    "\u0116\355\u0118\334\u0119\324\u0120\346\u0122\u0161\u0123\354\u0137" +
    "\337\u013b\047\u013c\057\u0140\u016a\u0158\053\u015c\056\001\002" +
    "\000\010\007\uff72\164\uff72\u0159\uff72\001\002\000\004\007" +
    "\u01a4\001\002\000\102\024\325\042\331\050\350\140\340" +
    "\152\u016b\214\353\230\u0163\231\356\236\u0162\323\046\341" +
    "\321\345\323\360\320\376\322\u0100\045\u0105\050\u010d\326" +
    "\u0110\052\u0111\060\u0112\335\u0116\355\u0118\334\u0119\324\u0120" +
    "\346\u0122\u0161\u0123\354\u0137\337\u013b\047\u013c\057\u0140\u016a" +
    "\u0158\053\u015c\056\001\002\000\010\007\uff6c\164\uff6c\u0159" +
    "\uff6c\001\002\000\012\007\uff67\164\uff67\u0154\u01a7\u0159\uff67" +
    "\001\002\000\102\024\325\042\331\050\350\140\340\152" +
    "\u016b\214\353\230\u0163\231\356\236\u0162\323\046\341\321" +
    "\345\323\360\320\376\322\u0100\045\u0105\050\u010d\326\u0110" +
    "\052\u0111\060\u0112\335\u0116\355\u0118\334\u0119\324\u0120\346" +
    "\u0122\u0161\u0123\354\u0137\337\u013b\047\u013c\057\u0140\u016a\u0158" +
    "\053\u015c\056\001\002\000\010\007\uff6b\164\uff6b\u0159\uff6b" +
    "\001\002\000\012\007\uff67\164\uff67\u0154\u01a7\u0159\uff67\001" +
    "\002\000\010\007\uff68\164\uff68\u0159\uff68\001\002\000\012" +
    "\007\uff65\074\u019d\164\uff65\u0159\uff65\001\002\000\010\007" +
    "\uff6d\164\uff6d\u0159\uff6d\001\002\000\004\007\u01ae\001\002" +
    "\000\102\024\325\042\331\050\350\140\340\152\u016b\214" +
    "\353\230\u0163\231\356\236\u0162\323\046\341\321\345\323" +
    "\360\320\376\322\u0100\045\u0105\050\u010d\326\u0110\052\u0111" +
    "\060\u0112\335\u0116\355\u0118\334\u0119\324\u0120\346\u0122\u0161" +
    "\u0123\354\u0137\337\u013b\047\u013c\057\u0140\u016a\u0158\053\u015c" +
    "\056\001\002\000\010\007\uff70\164\uff70\u0159\uff70\001\002" +
    "\000\012\007\uff67\164\uff67\u0154\u01a7\u0159\uff67\001\002\000" +
    "\010\007\uff6e\164\uff6e\u0159\uff6e\001\002\000\010\007\uff73" +
    "\164\uff73\u0159\uff73\001\002\000\006\007\uff5b\u0159\uff5b\001" +
    "\002\000\006\u0140\027\u0143\u0176\001\002\000\004\u0154\u01b6" +
    "\001\002\000\006\u013e\u01b7\u015c\u01b8\001\002\000\004\u0159" +
    "\uff61\001\002\000\004\u0140\u01bb\001\002\000\004\u0159\u01ba" +
    "\001\002\000\010\007\uff7c\164\uff7c\u0159\uff7c\001\002\000" +
    "\004\u0159\uff60\001\002\000\010\007\uff5c\164\u0159\u0159\uff5c" +
    "\001\002\000\006\007\uff5f\u0159\uff5f\001\002\000\004\u0140" +
    "\u01bf\001\002\000\006\u0142\u01c2\u014d\u01c3\001\002\000\004" +
    "\u0159\u01c1\001\002\000\004\007\uff81\001\002\000\004\u0158" +
    "\u01cb\001\002\000\004\u0142\u01c6\001\002\000\004\u0140\u01c5" +
    "\001\002\000\004\u0159\uff57\001\002\000\004\u0158\u01c7\001" +
    "\002\000\004\u0140\u01c8\001\002\000\004\u0159\u01c9\001\002" +
    "\000\004\u0142\u01ca\001\002\000\004\u0140\uff56\001\002\000" +
    "\004\u0140\u01cc\001\002\000\004\u0159\u01cd\001\002\000\004" +
    "\u0142\u01ce\001\002\000\004\u014c\u01cf\001\002\000\004\u0140" +
    "\uff55\001\002\000\012\160\uff2c\161\uff2c\u0140\uff2c\u015c\uff2c" +
    "\001\002\000\004\135\uff24\001\002\000\004\135\uff27\001" +
    "\002\000\004\135\uff26\001\002\000\034\044\u014c\113\u013c" +
    "\117\uff19\120\uff19\130\u0140\135\uff29\140\u013a\165\uff19\214" +
    "\u013d\267\uff19\327\uff19\u0153\uff19\u0154\uff19\001\002\000\020" +
    "\117\uff1f\120\uff1f\165\uff1f\267\uff1f\327\uff1f\u0153\uff1f\u0154" +
    "\uff1f\001\002\000\004\135\uff28\001\002\000\042\011\u01d8" +
    "\044\uff13\113\uff13\117\uff13\120\uff13\130\uff13\135\uff13\140" +
    "\uff13\156\uff13\165\uff13\214\uff13\267\uff13\327\uff13\u0140\u01d9" +
    "\u0153\uff13\u0154\uff13\001\002\000\004\u0140\u01db\001\002\000" +
    "\040\044\uff14\113\uff14\117\uff14\120\uff14\130\uff14\135\uff14" +
    "\140\uff14\156\uff14\165\uff14\214\uff14\240\uff14\267\uff14\327" +
    "\uff14\u0153\uff14\u0154\uff14\001\002\000\036\044\uff16\113\uff16" +
    "\117\uff16\120\uff16\130\uff16\135\uff16\140\uff16\156\uff16\165" +
    "\uff16\214\uff16\267\uff16\327\uff16\u0153\uff16\u0154\uff16\001\002" +
    "\000\040\044\uff15\113\uff15\117\uff15\120\uff15\130\uff15\135" +
    "\uff15\140\uff15\156\uff15\165\uff15\214\uff15\240\uff15\267\uff15" +
    "\327\uff15\u0153\uff15\u0154\uff15\001\002\000\006\327\ufe6c\u0153" +
    "\ufe6c\001\002\000\006\327\ufe61\u0153\ufe61\001\002\000\014" +
    "\160\u0133\161\u0135\u0140\027\u0158\u0136\u015c\u0138\001\002\000" +
    "\020\117\u0121\120\u011f\165\u0123\267\u0119\327\ufe63\u0153\ufe63" +
    "\u0154\u01de\001\002\000\006\327\ufe62\u0153\ufe62\001\002\000" +
    "\004\u0159\u01e2\001\002\000\020\117\uff21\120\uff21\165\uff21" +
    "\267\uff21\327\uff21\u0153\uff21\u0154\uff21\001\002\000\004\u0140" +
    "\u01e4\001\002\000\004\u0154\u01e5\001\002\000\004\u013e\u01e6" +
    "\001\002\000\004\u0159\u01e7\001\002\000\042\011\uff32\044" +
    "\uff32\113\uff32\117\uff32\120\uff32\130\uff32\135\uff32\140\uff32" +
    "\156\uff32\165\uff32\214\uff32\267\uff32\327\uff32\u0140\uff32\u0153" +
    "\uff32\u0154\uff32\001\002\000\040\044\uff11\113\uff11\117\uff11" +
    "\120\uff11\130\uff11\135\uff11\140\uff11\156\uff11\165\uff11\214" +
    "\uff11\240\u01e9\267\uff11\327\uff11\u0153\uff11\u0154\uff11\001\002" +
    "\000\004\u0158\u01ec\001\002\000\036\044\uff18\113\uff18\117" +
    "\uff18\120\uff18\130\uff18\135\uff18\140\uff18\156\uff18\165\uff18" +
    "\214\uff18\267\uff18\327\uff18\u0153\uff18\u0154\uff18\001\002\000" +
    "\036\044\uff12\113\uff12\117\uff12\120\uff12\130\uff12\135\uff12" +
    "\140\uff12\156\uff12\165\uff12\214\uff12\267\uff12\327\uff12\u0153" +
    "\uff12\u0154\uff12\001\002\000\024\323\046\u0100\045\u0105\050" +
    "\u0110\052\u0111\060\u013b\047\u013c\057\u0158\053\u015c\056\001" +
    "\002\000\010\170\u01f1\333\u01f0\u0159\uff2d\001\002\000\004" +
    "\u0159\u01ef\001\002\000\036\044\uff31\113\uff31\117\uff31\120" +
    "\uff31\130\uff31\135\uff31\140\uff31\156\uff31\165\uff31\214\uff31" +
    "\267\uff31\327\uff31\u0153\uff31\u0154\uff31\001\002\000\004\u0159" +
    "\uff2e\001\002\000\004\u0159\uff2f\001\002\000\004\u0159\uff30" +
    "\001\002\000\004\u013e\u01f4\001\002\000\004\u0154\u01f5\001" +
    "\002\000\004\u013e\u01f6\001\002\000\004\u0159\u01f7\001\002" +
    "\000\042\011\uff33\044\uff33\113\uff33\117\uff33\120\uff33\130" +
    "\uff33\135\uff33\140\uff33\156\uff33\165\uff33\214\uff33\267\uff33" +
    "\327\uff33\u0140\uff33\u0153\uff33\u0154\uff33\001\002\000\036\044" +
    "\uff17\113\uff17\117\uff17\120\uff17\130\uff17\135\uff17\140\uff17" +
    "\156\uff17\165\uff17\214\uff17\267\uff17\327\uff17\u0153\uff17\u0154" +
    "\uff17\001\002\000\044\120\uffbe\150\176\165\uffbe\323\046" +
    "\327\uffbe\u0100\045\u0105\050\u0110\052\u0111\060\u013b\047\u013c" +
    "\057\u013e\204\u0140\177\u0153\uffbe\u0154\uffbe\u0158\053\u015c\056" +
    "\001\002\000\014\120\ufe5f\165\ufe5f\327\ufe5f\u0153\ufe5f\u0154" +
    "\u01fb\001\002\000\044\120\uffbe\150\176\165\uffbe\323\046" +
    "\327\uffbe\u0100\045\u0105\050\u0110\052\u0111\060\u013b\047\u013c" +
    "\057\u013e\204\u0140\177\u0153\uffbe\u0154\uffbe\u0158\053\u015c\056" +
    "\001\002\000\012\120\u011f\165\u0123\327\ufe63\u0153\ufe63\001" +
    "\002\000\006\327\ufe68\u0153\ufe68\001\002\000\014\120\ufe5f" +
    "\165\ufe5f\327\ufe5f\u0153\ufe5f\u0154\u01fb\001\002\000\012\120" +
    "\ufe60\165\ufe60\327\ufe60\u0153\ufe60\001\002\000\010\165\u0123" +
    "\327\ufe63\u0153\ufe63\001\002\000\006\327\ufe66\u0153\ufe66\001" +
    "\002\000\020\112\u0122\117\u0121\120\u011f\165\u0123\267\u0119" +
    "\327\ufe63\u0153\ufe63\001\002\000\006\327\ufe6f\u0153\ufe6f\001" +
    "\002\000\006\327\ufe6d\u0153\ufe6d\001\002\000\014\117\u0121" +
    "\120\u011f\165\u0123\327\ufe63\u0153\ufe63\001\002\000\006\327" +
    "\ufe6a\u0153\ufe6a\001\002\000\024\323\046\u0100\045\u0105\050" +
    "\u0110\052\u0111\060\u013b\047\u013c\057\u0158\053\u015c\056\001" +
    "\002\000\006\327\ufe75\u0153\ufe75\001\002\000\004\u0159\u020a" +
    "\001\002\000\124\011\uffbe\024\325\042\331\050\350\112" +
    "\uffbe\117\uffbe\120\uffbe\133\uffbe\140\340\150\176\165\uffbe" +
    "\170\u020b\214\353\231\356\267\uffbe\323\046\327\uffbe\341" +
    "\321\345\323\360\320\376\322\u0100\045\u0105\050\u010d\326" +
    "\u0110\052\u0111\060\u0112\335\u0116\355\u0118\334\u0119\324\u0120" +
    "\346\u0123\354\u0137\337\u013b\047\u013c\057\u013e\204\u0140\347" +
    "\u0143\352\u0153\uffbe\u0158\053\u015c\332\001\002\000\122\011" +
    "\uffbe\024\325\042\331\050\350\112\uffbe\117\uffbe\120\uffbe" +
    "\133\uffbe\140\340\150\176\165\uffbe\214\353\231\356\267" +
    "\uffbe\323\046\327\uffbe\341\321\345\323\360\320\376\322" +
    "\u0100\045\u0105\050\u010d\326\u0110\052\u0111\060\u0112\335\u0116" +
    "\355\u0118\334\u0119\324\u0120\346\u0123\354\u0137\337\u013b\047" +
    "\u013c\057\u013e\204\u0140\347\u0143\352\u0153\uffbe\u0158\053\u015c" +
    "\332\001\002\000\006\327\ufe71\u0153\ufe71\001\002\000\006" +
    "\327\ufe73\u0153\ufe73\001\002\000\006\327\ufe72\u0153\ufe72\001" +
    "\002\000\010\u013e\374\u0140\375\u015c\376\001\002\000\004" +
    "\u0154\u0211\001\002\000\024\323\046\u0100\045\u0105\050\u0110" +
    "\052\u0111\060\u013b\047\u013c\057\u0158\053\u015c\056\001\002" +
    "\000\004\u0159\u0213\001\002\000\072\007\uff47\011\uff47\012" +
    "\uff47\016\uff47\032\uff47\062\uff47\074\uff47\112\uff47\117\uff47" +
    "\120\uff47\126\uff47\133\uff47\134\uff47\141\uff47\150\uff47\164" +
    "\uff47\165\uff47\267\uff47\327\uff47\u0140\uff47\u0146\uff47\u014a\uff47" +
    "\u014c\uff47\u014d\uff47\u014f\uff47\u0153\uff47\u0154\uff47\u0159\uff47\001" +
    "\002\000\006\u013e\367\u015c\366\001\002\000\004\u0159\u0216" +
    "\001\002\000\072\007\uff51\011\uff51\012\uff51\016\uff51\032" +
    "\uff51\062\uff51\074\uff51\112\uff51\117\uff51\120\uff51\126\uff51" +
    "\133\uff51\134\uff51\141\uff51\150\uff51\164\uff51\165\uff51\267" +
    "\uff51\327\uff51\u0140\uff51\u0146\uff51\u014a\uff51\u014c\uff51\u014d\uff51" +
    "\u014f\uff51\u0153\uff51\u0154\uff51\u0159\uff51\001\002\000\032\012" +
    "\uff08\032\uff08\062\uff08\112\uff08\117\uff08\120\uff08\133\uff08" +
    "\165\uff08\267\uff08\327\uff08\u0153\uff08\u0154\uff08\001\002\000" +
    "\010\u013e\374\u0140\375\u015c\376\001\002\000\004\u0154\u021a" +
    "\001\002\000\010\u013e\374\u0140\375\u015c\376\001\002\000" +
    "\004\u0154\u021c\001\002\000\010\u013e\374\u0140\375\u015c\376" +
    "\001\002\000\004\u0159\u021e\001\002\000\072\007\uff4a\011" +
    "\uff4a\012\uff4a\016\uff4a\032\uff4a\062\uff4a\074\uff4a\112\uff4a" +
    "\117\uff4a\120\uff4a\126\uff4a\133\uff4a\134\uff4a\141\uff4a\150" +
    "\uff4a\164\uff4a\165\uff4a\267\uff4a\327\uff4a\u0140\uff4a\u0146\uff4a" +
    "\u014a\uff4a\u014c\uff4a\u014d\uff4a\u014f\uff4a\u0153\uff4a\u0154\uff4a\u0159" +
    "\uff4a\001\002\000\010\u013e\374\u0140\375\u015c\376\001\002" +
    "\000\006\112\u0221\u0159\uff3d\001\002\000\010\u013e\374\u0140" +
    "\375\u015c\376\001\002\000\004\u0159\u0223\001\002\000\072" +
    "\007\uff46\011\uff46\012\uff46\016\uff46\032\uff46\062\uff46\074" +
    "\uff46\112\uff46\117\uff46\120\uff46\126\uff46\133\uff46\134\uff46" +
    "\141\uff46\150\uff46\164\uff46\165\uff46\267\uff46\327\uff46\u0140" +
    "\uff46\u0146\uff46\u014a\uff46\u014c\uff46\u014d\uff46\u014f\uff46\u0153\uff46" +
    "\u0154\uff46\u0159\uff46\001\002\000\004\u0159\uff3e\001\002\000" +
    "\030\u0141\uffea\u0142\uffea\u0143\uffea\u0144\uffea\u0145\uffea\u0146\uffea" +
    "\u014a\uffea\u014b\u0226\u014c\uffea\u014d\uffea\u014f\uffea\001\002\000" +
    "\126\012\uffbe\024\325\032\uffbe\042\331\050\350\062\uffbe" +
    "\112\uffbe\117\uffbe\120\uffbe\133\uffbe\140\340\150\176\165" +
    "\uffbe\214\353\231\356\267\uffbe\323\046\327\uffbe\341\321" +
    "\345\323\360\320\376\322\u0100\045\u0105\050\u010d\326\u0110" +
    "\052\u0111\060\u0112\335\u0116\355\u0118\334\u0119\324\u0120\346" +
    "\u0123\354\u0137\337\u013b\047\u013c\057\u013e\204\u0140\347\u0153" +
    "\uffbe\u0154\uffbe\u0158\053\u015c\056\001\002\000\032\012\uff06" +
    "\032\uff06\062\uff06\112\uff06\117\uff06\120\uff06\133\uff06\165" +
    "\uff06\267\uff06\327\uff06\u0153\uff06\u0154\uff06\001\002\000\036" +
    "\312\u0239\322\u0235\330\u0230\345\u0238\356\u0233\361\u0229\364" +
    "\u022b\u0107\u022d\u0113\u022c\u011d\u022a\u0120\u022f\u012d\u022e\u012e\u0232" +
    "\u0140\u0234\001\002\000\036\150\uff85\323\uff85\u0100\uff85\u0105" +
    "\uff85\u0110\uff85\u0111\uff85\u013b\uff85\u013c\uff85\u013e\uff85\u0140\uff85" +
    "\u0154\uff85\u0158\u023b\u0159\uff85\u015c\uff85\001\002\000\036\150" +
    "\uff85\323\uff85\u0100\uff85\u0105\uff85\u0110\uff85\u0111\uff85\u013b\uff85" +
    "\u013c\uff85\u013e\uff85\u0140\uff85\u0154\uff85\u0158\u023b\u0159\uff85\u015c" +
    "\uff85\001\002\000\036\150\uff85\323\uff85\u0100\uff85\u0105\uff85" +
    "\u0110\uff85\u0111\uff85\u013b\uff85\u013c\uff85\u013e\uff85\u0140\uff85\u0154" +
    "\uff85\u0158\u023b\u0159\uff85\u015c\uff85\001\002\000\036\150\uff85" +
    "\323\uff85\u0100\uff85\u0105\uff85\u0110\uff85\u0111\uff85\u013b\uff85\u013c" +
    "\uff85\u013e\uff85\u0140\uff85\u0154\uff85\u0158\u023b\u0159\uff85\u015c\uff85" +
    "\001\002\000\036\150\uff85\323\uff85\u0100\uff85\u0105\uff85\u0110" +
    "\uff85\u0111\uff85\u013b\uff85\u013c\uff85\u013e\uff85\u0140\uff85\u0154\uff85" +
    "\u0158\u023b\u0159\uff85\u015c\uff85\001\002\000\036\150\uff85\323" +
    "\uff85\u0100\uff85\u0105\uff85\u0110\uff85\u0111\uff85\u013b\uff85\u013c\uff85" +
    "\u013e\uff85\u0140\uff85\u0154\uff85\u0158\u023b\u0159\uff85\u015c\uff85\001" +
    "\002\000\036\150\uff85\323\uff85\u0100\uff85\u0105\uff85\u0110\uff85" +
    "\u0111\uff85\u013b\uff85\u013c\uff85\u013e\uff85\u0140\uff85\u0154\uff85\u0158" +
    "\u023b\u0159\uff85\u015c\uff85\001\002\000\036\150\uff85\323\uff85" +
    "\u0100\uff85\u0105\uff85\u0110\uff85\u0111\uff85\u013b\uff85\u013c\uff85\u013e" +
    "\uff85\u0140\uff85\u0154\uff85\u0158\u023b\u0159\uff85\u015c\uff85\001\002" +
    "\000\072\007\uffe7\011\uffe7\012\uffe7\016\uffe7\032\uffe7\062" +
    "\uffe7\074\uffe7\112\uffe7\117\uffe7\120\uffe7\126\uffe7\133\uffe7" +
    "\134\uffe7\141\uffe7\150\uffe7\164\uffe7\165\uffe7\267\uffe7\327" +
    "\uffe7\u0140\uffe7\u0146\uffe7\u014a\uffe7\u014c\uffe7\u014d\uffe7\u014f\uffe7" +
    "\u0153\uffe7\u0154\uffe7\u0159\uffe7\001\002\000\036\150\uff85\323" +
    "\uff85\u0100\uff85\u0105\uff85\u0110\uff85\u0111\uff85\u013b\uff85\u013c\uff85" +
    "\u013e\uff85\u0140\uff85\u0154\uff85\u0158\u023b\u0159\uff85\u015c\uff85\001" +
    "\002\000\036\150\uff85\323\uff85\u0100\uff85\u0105\uff85\u0110\uff85" +
    "\u0111\uff85\u013b\uff85\u013c\uff85\u013e\uff85\u0140\uff85\u0154\uff85\u0158" +
    "\u023b\u0159\uff85\u015c\uff85\001\002\000\004\u0155\u024e\001\002" +
    "\000\036\150\uff85\323\uff85\u0100\uff85\u0105\uff85\u0110\uff85\u0111" +
    "\uff85\u013b\uff85\u013c\uff85\u013e\uff85\u0140\uff85\u0154\uff85\u0158\u023b" +
    "\u0159\uff85\u015c\uff85\001\002\000\036\150\uffe3\323\uffe3\u0100" +
    "\uffe3\u0105\uffe3\u0110\uffe3\u0111\uffe3\u013b\uffe3\u013c\uffe3\u013e\uffe3" +
    "\u0140\uffe3\u0154\uffe3\u0158\u0244\u0159\uffe3\u015c\uffe3\001\002\000" +
    "\036\150\uff95\323\uff95\u0100\uff95\u0105\uff95\u0110\uff95\u0111\uff95" +
    "\u013b\uff95\u013c\uff95\u013e\uff95\u0140\uff95\u0154\uff95\u0158\uff95\u0159" +
    "\uff95\u015c\uff95\001\002\000\036\150\uff85\323\uff85\u0100\uff85" +
    "\u0105\uff85\u0110\uff85\u0111\uff85\u013b\uff85\u013c\uff85\u013e\uff85\u0140" +
    "\uff85\u0154\uff85\u0158\u023b\u0159\uff85\u015c\uff85\001\002\000\036" +
    "\150\uff85\323\uff85\u0100\uff85\u0105\uff85\u0110\uff85\u0111\uff85\u013b" +
    "\uff85\u013c\uff85\u013e\uff85\u0140\uff85\u0154\uff85\u0158\u023b\u0159\uff85" +
    "\u015c\uff85\001\002\000\036\150\uff90\323\uff90\u0100\uff90\u0105" +
    "\uff90\u0110\uff90\u0111\uff90\u013b\uff90\u013c\uff90\u013e\uff90\u0140\uff90" +
    "\u0154\uff90\u0158\uff90\u0159\uff90\u015c\uff90\001\002\000\004\u013b" +
    "\u023c\001\002\000\006\u0154\u023d\u0159\u023f\001\002\000\004" +
    "\u013b\u0240\001\002\000\036\150\uff86\323\uff86\u0100\uff86\u0105" +
    "\uff86\u0110\uff86\u0111\uff86\u013b\uff86\u013c\uff86\u013e\uff86\u0140\uff86" +
    "\u0154\uff86\u0158\uff86\u0159\uff86\u015c\uff86\001\002\000\036\150" +
    "\uff83\323\uff83\u0100\uff83\u0105\uff83\u0110\uff83\u0111\uff83\u013b\uff83" +
    "\u013c\uff83\u013e\uff83\u0140\uff83\u0154\uff83\u0158\uff83\u0159\uff83\u015c" +
    "\uff83\001\002\000\004\u0159\u0241\001\002\000\036\150\uff84" +
    "\323\uff84\u0100\uff84\u0105\uff84\u0110\uff84\u0111\uff84\u013b\uff84\u013c" +
    "\uff84\u013e\uff84\u0140\uff84\u0154\uff84\u0158\uff84\u0159\uff84\u015c\uff84" +
    "\001\002\000\036\150\uff88\323\uff88\u0100\uff88\u0105\uff88\u0110" +
    "\uff88\u0111\uff88\u013b\uff88\u013c\uff88\u013e\uff88\u0140\uff88\u0154\uff88" +
    "\u0158\uff88\u0159\uff88\u015c\uff88\001\002\000\036\150\176\323" +
    "\046\u0100\045\u0105\050\u0110\052\u0111\060\u013b\047\u013c\057" +
    "\u013e\204\u0140\177\u0154\uffbe\u0158\053\u0159\uffbe\u015c\056\001" +
    "\002\000\004\u013b\u0245\001\002\000\004\u0159\u0246\001\002" +
    "\000\036\150\uffe4\323\uffe4\u0100\uffe4\u0105\uffe4\u0110\uffe4\u0111" +
    "\uffe4\u013b\uffe4\u013c\uffe4\u013e\uffe4\u0140\uffe4\u0154\uffe4\u0158\uffe4" +
    "\u0159\uffe4\u015c\uffe4\001\002\000\072\007\uffe5\011\uffe5\012" +
    "\uffe5\016\uffe5\032\uffe5\062\uffe5\074\uffe5\112\uffe5\117\uffe5" +
    "\120\uffe5\126\uffe5\133\uffe5\134\uffe5\141\uffe5\150\uffe5\164" +
    "\uffe5\165\uffe5\267\uffe5\327\uffe5\u0140\uffe5\u0146\uffe5\u014a\uffe5" +
    "\u014c\uffe5\u014d\uffe5\u014f\uffe5\u0153\uffe5\u0154\uffe5\u0159\uffe5\001" +
    "\002\000\006\u0154\u0249\u0159\u024b\001\002\000\024\323\046" +
    "\u0100\045\u0105\050\u0110\052\u0111\060\u013b\047\u013c\057\u0158" +
    "\053\u015c\056\001\002\000\072\007\uffe2\011\uffe2\012\uffe2" +
    "\016\uffe2\032\uffe2\062\uffe2\074\uffe2\112\uffe2\117\uffe2\120" +
    "\uffe2\126\uffe2\133\uffe2\134\uffe2\141\uffe2\150\uffe2\164\uffe2" +
    "\165\uffe2\267\uffe2\327\uffe2\u0140\uffe2\u0146\uffe2\u014a\uffe2\u014c" +
    "\uffe2\u014d\uffe2\u014f\uffe2\u0153\uffe2\u0154\uffe2\u0159\uffe2\001\002" +
    "\000\072\007\uffe0\011\uffe0\012\uffe0\016\uffe0\032\uffe0\062" +
    "\uffe0\074\uffe0\112\uffe0\117\uffe0\120\uffe0\126\uffe0\133\uffe0" +
    "\134\uffe0\141\uffe0\150\uffe0\164\uffe0\165\uffe0\267\uffe0\327" +
    "\uffe0\u0140\uffe0\u0146\uffe0\u014a\uffe0\u014c\uffe0\u014d\uffe0\u014f\uffe0" +
    "\u0153\uffe0\u0154\uffe0\u0159\uffe0\001\002\000\072\007\uffe1\011" +
    "\uffe1\012\uffe1\016\uffe1\032\uffe1\062\uffe1\074\uffe1\112\uffe1" +
    "\117\uffe1\120\uffe1\126\uffe1\133\uffe1\134\uffe1\141\uffe1\150" +
    "\uffe1\164\uffe1\165\uffe1\267\uffe1\327\uffe1\u0140\uffe1\u0146\uffe1" +
    "\u014a\uffe1\u014c\uffe1\u014d\uffe1\u014f\uffe1\u0153\uffe1\u0154\uffe1\u0159" +
    "\uffe1\001\002\000\036\150\uff8d\323\uff8d\u0100\uff8d\u0105\uff8d" +
    "\u0110\uff8d\u0111\uff8d\u013b\uff8d\u013c\uff8d\u013e\uff8d\u0140\uff8d\u0154" +
    "\uff8d\u0158\uff8d\u0159\uff8d\u015c\uff8d\001\002\000\004\u0140\u0250" +
    "\001\002\000\036\150\uff96\323\uff96\u0100\uff96\u0105\uff96\u0110" +
    "\uff96\u0111\uff96\u013b\uff96\u013c\uff96\u013e\uff96\u0140\uff96\u0154\uff96" +
    "\u0158\uff96\u0159\uff96\u015c\uff96\001\002\000\036\150\uff94\323" +
    "\uff94\u0100\uff94\u0105\uff94\u0110\uff94\u0111\uff94\u013b\uff94\u013c\uff94" +
    "\u013e\uff94\u0140\uff94\u0154\uff94\u0158\uff94\u0159\uff94\u015c\uff94\001" +
    "\002\000\036\150\uff8a\323\uff8a\u0100\uff8a\u0105\uff8a\u0110\uff8a" +
    "\u0111\uff8a\u013b\uff8a\u013c\uff8a\u013e\uff8a\u0140\uff8a\u0154\uff8a\u0158" +
    "\uff8a\u0159\uff8a\u015c\uff8a\001\002\000\036\150\uff8f\323\uff8f" +
    "\u0100\uff8f\u0105\uff8f\u0110\uff8f\u0111\uff8f\u013b\uff8f\u013c\uff8f\u013e" +
    "\uff8f\u0140\uff8f\u0154\uff8f\u0158\uff8f\u0159\uff8f\u015c\uff8f\001\002" +
    "\000\036\150\uff93\323\uff93\u0100\uff93\u0105\uff93\u0110\uff93\u0111" +
    "\uff93\u013b\uff93\u013c\uff93\u013e\uff93\u0140\uff93\u0154\uff93\u0158\uff93" +
    "\u0159\uff93\u015c\uff93\001\002\000\036\150\uff87\323\uff87\u0100" +
    "\uff87\u0105\uff87\u0110\uff87\u0111\uff87\u013b\uff87\u013c\uff87\u013e\uff87" +
    "\u0140\uff87\u0154\uff87\u0158\uff87\u0159\uff87\u015c\uff87\001\002\000" +
    "\036\150\uff8b\323\uff8b\u0100\uff8b\u0105\uff8b\u0110\uff8b\u0111\uff8b" +
    "\u013b\uff8b\u013c\uff8b\u013e\uff8b\u0140\uff8b\u0154\uff8b\u0158\uff8b\u0159" +
    "\uff8b\u015c\uff8b\001\002\000\036\150\uff89\323\uff89\u0100\uff89" +
    "\u0105\uff89\u0110\uff89\u0111\uff89\u013b\uff89\u013c\uff89\u013e\uff89\u0140" +
    "\uff89\u0154\uff89\u0158\uff89\u0159\uff89\u015c\uff89\001\002\000\036" +
    "\150\uff8e\323\uff8e\u0100\uff8e\u0105\uff8e\u0110\uff8e\u0111\uff8e\u013b" +
    "\uff8e\u013c\uff8e\u013e\uff8e\u0140\uff8e\u0154\uff8e\u0158\uff8e\u0159\uff8e" +
    "\u015c\uff8e\001\002\000\036\150\uff91\323\uff91\u0100\uff91\u0105" +
    "\uff91\u0110\uff91\u0111\uff91\u013b\uff91\u013c\uff91\u013e\uff91\u0140\uff91" +
    "\u0154\uff91\u0158\uff91\u0159\uff91\u015c\uff91\001\002\000\036\150" +
    "\uff8c\323\uff8c\u0100\uff8c\u0105\uff8c\u0110\uff8c\u0111\uff8c\u013b\uff8c" +
    "\u013c\uff8c\u013e\uff8c\u0140\uff8c\u0154\uff8c\u0158\uff8c\u0159\uff8c\u015c" +
    "\uff8c\001\002\000\036\150\uff92\323\uff92\u0100\uff92\u0105\uff92" +
    "\u0110\uff92\u0111\uff92\u013b\uff92\u013c\uff92\u013e\uff92\u0140\uff92\u0154" +
    "\uff92\u0158\uff92\u0159\uff92\u015c\uff92\001\002\000\010\u013e\374" +
    "\u0140\375\u015c\376\001\002\000\004\u0159\u025d\001\002\000" +
    "\072\007\uff4b\011\uff4b\012\uff4b\016\uff4b\032\uff4b\062\uff4b" +
    "\074\uff4b\112\uff4b\117\uff4b\120\uff4b\126\uff4b\133\uff4b\134" +
    "\uff4b\141\uff4b\150\uff4b\164\uff4b\165\uff4b\267\uff4b\327\uff4b" +
    "\u0140\uff4b\u0146\uff4b\u014a\uff4b\u014c\uff4b\u014d\uff4b\u014f\uff4b\u0153" +
    "\uff4b\u0154\uff4b\u0159\uff4b\001\002\000\034\150\176\242\uffbe" +
    "\323\046\u0100\045\u0105\050\u0110\052\u0111\060\u013b\047\u013c" +
    "\057\u013e\204\u0140\177\u0158\053\u015c\056\001\002\000\004" +
    "\266\u025e\001\002\000\072\007\uffa0\011\uffa0\012\uffa0\016" +
    "\uffa0\032\uffa0\062\uffa0\074\uffa0\112\uffa0\117\uffa0\120\uffa0" +
    "\126\uffa0\133\uffa0\134\uffa0\141\uffa0\150\uffa0\164\uffa0\165" +
    "\uffa0\267\uffa0\327\uffa0\u0140\uffa0\u0146\uffa0\u014a\uffa0\u014c\uffa0" +
    "\u014d\uffa0\u014f\uffa0\u0153\uffa0\u0154\uffa0\u0159\uffa0\001\002\000" +
    "\072\007\uffa2\011\uffa2\012\uffa2\016\uffa2\032\uffa2\062\uffa2" +
    "\074\uffa2\112\uffa2\117\uffa2\120\uffa2\126\uffa2\133\uffa2\134" +
    "\uffa2\141\uffa2\150\uffa2\164\uffa2\165\uffa2\267\uffa2\327\uffa2" +
    "\u0140\uffa2\u0146\uffa2\u014a\uffa2\u014c\uffa2\u014d\uffa2\u014f\uffa2\u0153" +
    "\uffa2\u0154\uffa2\u0159\uffa2\001\002\000\072\007\uffa1\011\uffa1" +
    "\012\uffa1\016\uffa1\032\uffa1\062\uffa1\074\uffa1\112\uffa1\117" +
    "\uffa1\120\uffa1\126\uffa1\133\uffa1\134\uffa1\141\uffa1\150\uffa1" +
    "\164\uffa1\165\uffa1\267\uffa1\327\uffa1\u0140\uffa1\u0146\uffa1\u014a" +
    "\uffa1\u014c\uffa1\u014d\uffa1\u014f\uffa1\u0153\uffa1\u0154\uffa1\u0159\uffa1" +
    "\001\002\000\004\242\u0264\001\002\000\040\071\uffbe\072" +
    "\uffbe\150\176\266\uffbe\323\046\u0100\045\u0105\050\u0110\052" +
    "\u0111\060\u013b\047\u013c\057\u013e\204\u0140\177\u0158\053\u015c" +
    "\056\001\002\000\010\071\u0266\072\u0269\266\u025e\001\002" +
    "\000\034\072\uffbe\150\176\323\046\u0100\045\u0105\050\u0110" +
    "\052\u0111\060\u013b\047\u013c\057\u013e\204\u0140\177\u0158\053" +
    "\u015c\056\001\002\000\072\007\uff9f\011\uff9f\012\uff9f\016" +
    "\uff9f\032\uff9f\062\uff9f\074\uff9f\112\uff9f\117\uff9f\120\uff9f" +
    "\126\uff9f\133\uff9f\134\uff9f\141\uff9f\150\uff9f\164\uff9f\165" +
    "\uff9f\267\uff9f\327\uff9f\u0140\uff9f\u0146\uff9f\u014a\uff9f\u014c\uff9f" +
    "\u014d\uff9f\u014f\uff9f\u0153\uff9f\u0154\uff9f\u0159\uff9f\001\002\000" +
    "\072\007\uff9d\011\uff9d\012\uff9d\016\uff9d\032\uff9d\062\uff9d" +
    "\074\uff9d\112\uff9d\117\uff9d\120\uff9d\126\uff9d\133\uff9d\134" +
    "\uff9d\141\uff9d\150\uff9d\164\uff9d\165\uff9d\267\uff9d\327\uff9d" +
    "\u0140\uff9d\u0146\uff9d\u014a\uff9d\u014c\uff9d\u014d\uff9d\u014f\uff9d\u0153" +
    "\uff9d\u0154\uff9d\u0159\uff9d\001\002\000\072\007\uff9c\011\uff9c" +
    "\012\uff9c\016\uff9c\032\uff9c\062\uff9c\074\uff9c\112\uff9c\117" +
    "\uff9c\120\uff9c\126\uff9c\133\uff9c\134\uff9c\141\uff9c\150\uff9c" +
    "\164\uff9c\165\uff9c\267\uff9c\327\uff9c\u0140\uff9c\u0146\uff9c\u014a" +
    "\uff9c\u014c\uff9c\u014d\uff9c\u014f\uff9c\u0153\uff9c\u0154\uff9c\u0159\uff9c" +
    "\001\002\000\004\072\u026b\001\002\000\072\007\uff9e\011" +
    "\uff9e\012\uff9e\016\uff9e\032\uff9e\062\uff9e\074\uff9e\112\uff9e" +
    "\117\uff9e\120\uff9e\126\uff9e\133\uff9e\134\uff9e\141\uff9e\150" +
    "\uff9e\164\uff9e\165\uff9e\267\uff9e\327\uff9e\u0140\uff9e\u0146\uff9e" +
    "\u014a\uff9e\u014c\uff9e\u014d\uff9e\u014f\uff9e\u0153\uff9e\u0154\uff9e\u0159" +
    "\uff9e\001\002\000\006\u013e\367\u015c\366\001\002\000\004" +
    "\u0159\u026e\001\002\000\072\007\uff52\011\uff52\012\uff52\016" +
    "\uff52\032\uff52\062\uff52\074\uff52\112\uff52\117\uff52\120\uff52" +
    "\126\uff52\133\uff52\134\uff52\141\uff52\150\uff52\164\uff52\165" +
    "\uff52\267\uff52\327\uff52\u0140\uff52\u0146\uff52\u014a\uff52\u014c\uff52" +
    "\u014d\uff52\u014f\uff52\u0153\uff52\u0154\uff52\u0159\uff52\001\002\000" +
    "\024\323\046\u0100\045\u0105\050\u0110\052\u0111\060\u013b\047" +
    "\u013c\057\u0158\053\u015c\056\001\002\000\004\u0159\u0271\001" +
    "\002\000\072\007\uff48\011\uff48\012\uff48\016\uff48\032\uff48" +
    "\062\uff48\074\uff48\112\uff48\117\uff48\120\uff48\126\uff48\133" +
    "\uff48\134\uff48\141\uff48\150\uff48\164\uff48\165\uff48\267\uff48" +
    "\327\uff48\u0140\uff48\u0146\uff48\u014a\uff48\u014c\uff48\u014d\uff48\u014f" +
    "\uff48\u0153\uff48\u0154\uff48\u0159\uff48\001\002\000\010\u013e\374" +
    "\u0140\375\u015c\376\001\002\000\004\u0154\u0274\001\002\000" +
    "\024\323\046\u0100\045\u0105\050\u0110\052\u0111\060\u013b\047" +
    "\u013c\057\u0158\053\u015c\056\001\002\000\004\u0154\u0276\001" +
    "\002\000\024\323\046\u0100\045\u0105\050\u0110\052\u0111\060" +
    "\u013b\047\u013c\057\u0158\053\u015c\056\001\002\000\004\u0159" +
    "\u0278\001\002\000\072\007\uff42\011\uff42\012\uff42\016\uff42" +
    "\032\uff42\062\uff42\074\uff42\112\uff42\117\uff42\120\uff42\126" +
    "\uff42\133\uff42\134\uff42\141\uff42\150\uff42\164\uff42\165\uff42" +
    "\267\uff42\327\uff42\u0140\uff42\u0146\uff42\u014a\uff42\u014c\uff42\u014d" +
    "\uff42\u014f\uff42\u0153\uff42\u0154\uff42\u0159\uff42\001\002\000\034" +
    "\011\uffbe\150\176\323\046\u0100\045\u0105\050\u0110\052\u0111" +
    "\060\u013b\047\u013c\057\u013e\204\u0140\177\u0158\053\u015c\056" +
    "\001\002\000\072\007\uffe8\011\uffe8\012\uffe8\016\uffe8\032" +
    "\uffe8\062\uffe8\074\uffe8\112\uffe8\117\uffe8\120\uffe8\126\uffe8" +
    "\133\uffe8\134\uffe8\141\uffe8\150\uffe8\164\uffe8\165\uffe8\267" +
    "\uffe8\327\uffe8\u0140\uffe8\u0146\uffe8\u014a\uffe8\u014c\uffe8\u014d\uffe8" +
    "\u014f\uffe8\u0153\uffe8\u0154\uffe8\u0159\uffe8\001\002\000\004\011" +
    "\u027c\001\002\000\036\312\u0239\322\u0235\330\u0230\345\u0238" +
    "\356\u0233\361\u0229\364\u022b\u0107\u022d\u0113\u022c\u011d\u022a\u0120" +
    "\u022f\u012d\u022e\u012e\u0232\u0140\u0234\001\002\000\006\u0158\u0244" +
    "\u0159\uffe3\001\002\000\004\u0159\u027f\001\002\000\072\007" +
    "\uffe6\011\uffe6\012\uffe6\016\uffe6\032\uffe6\062\uffe6\074\uffe6" +
    "\112\uffe6\117\uffe6\120\uffe6\126\uffe6\133\uffe6\134\uffe6\141" +
    "\uffe6\150\uffe6\164\uffe6\165\uffe6\267\uffe6\327\uffe6\u0140\uffe6" +
    "\u0146\uffe6\u014a\uffe6\u014c\uffe6\u014d\uffe6\u014f\uffe6\u0153\uffe6\u0154" +
    "\uffe6\u0159\uffe6\001\002\000\024\323\046\u0100\045\u0105\050" +
    "\u0110\052\u0111\060\u013b\047\u013c\057\u0158\053\u015c\056\001" +
    "\002\000\004\u0159\u0282\001\002\000\072\007\uff43\011\uff43" +
    "\012\uff43\016\uff43\032\uff43\062\uff43\074\uff43\112\uff43\117" +
    "\uff43\120\uff43\126\uff43\133\uff43\134\uff43\141\uff43\150\uff43" +
    "\164\uff43\165\uff43\267\uff43\327\uff43\u0140\uff43\u0146\uff43\u014a" +
    "\uff43\u014c\uff43\u014d\uff43\u014f\uff43\u0153\uff43\u0154\uff43\u0159\uff43" +
    "\001\002\000\004\002\ufffd\001\002\000\004\002\ufe13\001" +
    "\002\000\004\002\ufe14\001\002\000\014\112\u0291\267\u0290" +
    "\327\ufeed\u0138\163\u0153\ufeed\001\002\000\006\327\ufe1f\u0153" +
    "\ufe1f\001\002\000\006\327\ufe23\u0153\ufe23\001\002\000\006" +
    "\u0140\027\u015c\u028c\001\002\000\004\u0158\u029c\001\002\000" +
    "\006\327\ufe25\u0153\ufe25\001\002\000\004\u0140\u028d\001\002" +
    "\000\014\112\u0291\267\u0290\327\ufeed\u0138\163\u0153\ufeed\001" +
    "\002\000\006\327\ufe1b\u0153\ufe1b\001\002\000\006\327\ufe1d" +
    "\u0153\ufe1d\001\002\000\036\150\176\323\046\327\uffbe\u0100" +
    "\045\u0105\050\u0110\052\u0111\060\u013b\047\u013c\057\u013e\204" +
    "\u0140\177\u0153\uffbe\u0158\053\u015c\056\001\002\000\014\160" +
    "\u0133\161\u0135\u0140\027\u0158\u0136\u015c\u0138\001\002\000\012" +
    "\112\u0291\267\u0290\327\ufe15\u0153\ufe15\001\002\000\006\327" +
    "\ufe19\u0153\ufe19\001\002\000\006\327\ufe1c\u0153\ufe1c\001\002" +
    "\000\012\267\u0290\327\ufe15\u0153\ufe15\u0154\u0297\001\002\000" +
    "\006\327\ufe1a\u0153\ufe1a\001\002\000\014\160\u0133\161\u0135" +
    "\u0140\027\u0158\u0136\u015c\u0138\001\002\000\006\327\ufe17\u0153" +
    "\ufe17\001\002\000\012\267\u0290\327\ufe15\u0153\ufe15\u0154\u0297" +
    "\001\002\000\006\327\ufe18\u0153\ufe18\001\002\000\006\327" +
    "\ufe16\u0153\ufe16\001\002\000\024\323\046\u0100\045\u0105\050" +
    "\u0110\052\u0111\060\u013b\047\u013c\057\u0158\053\u015c\056\001" +
    "\002\000\004\u0159\u029e\001\002\000\012\112\u0289\170\u029f" +
    "\u0140\027\u015c\u028c\001\002\000\010\112\u0289\u0140\027\u015c" +
    "\u028c\001\002\000\006\327\ufe21\u0153\ufe21\001\002\000\006" +
    "\327\ufe24\u0153\ufe24\001\002\000\006\327\ufe22\u0153\ufe22\001" +
    "\002\000\006\327\ufe20\u0153\ufe20\001\002\000\006\327\ufe1e" +
    "\u0153\ufe1e\001\002\000\004\231\u02ac\001\002\000\006\327" +
    "\ufe41\u0153\ufe41\001\002\000\004\u0158\u02d1\001\002\000\006" +
    "\327\ufe43\u0153\ufe43\001\002\000\004\u0140\u02aa\001\002\000" +
    "\004\231\u02ac\001\002\000\006\327\ufe3d\u0153\ufe3d\001\002" +
    "\000\006\u0140\u02af\u015c\u02b0\001\002\000\016\112\u02c5\267" +
    "\u02c2\327\ufeed\u0138\163\u0153\ufeed\u0154\u02c3\001\002\000\006" +
    "\327\ufe3c\u0153\ufe3c\001\002\000\006\u014b\u02b7\u0155\u02b6\001" +
    "\002\000\004\u0140\u02b1\001\002\000\004\u014b\u02b2\001\002" +
    "\000\046\112\uffbe\150\176\267\uffbe\323\046\327\uffbe\u0100" +
    "\045\u0105\050\u0110\052\u0111\060\u0138\uffbe\u013b\047\u013c\057" +
    "\u013e\204\u0140\177\u0153\uffbe\u0154\uffbe\u0158\053\u015c\056\001" +
    "\002\000\016\112\ufe32\267\ufe32\327\ufe32\u0138\ufe32\u0153\ufe32" +
    "\u0154\ufe32\001\002\000\016\112\ufe39\267\ufe39\327\ufe39\u0138" +
    "\ufe39\u0153\ufe39\u0154\ufe39\001\002\000\016\112\ufe3a\267\ufe3a" +
    "\327\ufe3a\u0138\ufe3a\u0153\ufe3a\u0154\ufe3a\001\002\000\004\u0140" +
    "\u02bc\001\002\000\052\057\u02ba\112\uffbe\150\176\151\u02bb" +
    "\267\uffbe\323\046\327\uffbe\u0100\045\u0105\050\u0110\052\u0111" +
    "\060\u0138\uffbe\u013b\047\u013c\057\u013e\204\u0140\177\u0153\uffbe" +
    "\u0154\uffbe\u0158\053\u015c\056\001\002\000\016\112\ufe37\267" +
    "\ufe37\327\ufe37\u0138\ufe37\u0153\ufe37\u0154\ufe37\001\002\000\016" +
    "\112\ufe35\267\ufe35\327\ufe35\u0138\ufe35\u0153\ufe35\u0154\ufe35\001" +
    "\002\000\016\112\ufe34\267\ufe34\327\ufe34\u0138\ufe34\u0153\ufe34" +
    "\u0154\ufe34\001\002\000\016\112\ufe33\267\ufe33\327\ufe33\u0138" +
    "\ufe33\u0153\ufe33\u0154\ufe33\001\002\000\004\u014b\u02be\001\002" +
    "\000\016\112\ufe38\267\ufe38\327\ufe38\u0138\ufe38\u0153\ufe38\u0154" +
    "\ufe38\001\002\000\046\112\uffbe\150\176\267\uffbe\323\046" +
    "\327\uffbe\u0100\045\u0105\050\u0110\052\u0111\060\u0138\uffbe\u013b" +
    "\047\u013c\057\u013e\204\u0140\177\u0153\uffbe\u0154\uffbe\u0158\053" +
    "\u015c\056\001\002\000\016\112\ufe36\267\ufe36\327\ufe36\u0138" +
    "\ufe36\u0153\ufe36\u0154\ufe36\001\002\000\006\327\ufe30\u0153\ufe30" +
    "\001\002\000\006\327\ufe3b\u0153\ufe3b\001\002\000\036\150" +
    "\176\323\046\327\uffbe\u0100\045\u0105\050\u0110\052\u0111\060" +
    "\u013b\047\u013c\057\u013e\204\u0140\177\u0153\uffbe\u0158\053\u015c" +
    "\056\001\002\000\006\u0140\u02af\u015c\u02b0\001\002\000\012" +
    "\112\u02c5\267\u02c2\327\ufe2a\u0153\ufe2a\001\002\000\014\160" +
    "\u0133\161\u0135\u0140\027\u0158\u0136\u015c\u0138\001\002\000\006" +
    "\327\ufe2c\u0153\ufe2c\001\002\000\006\327\ufe2e\u0153\ufe2e\001" +
    "\002\000\004\u0154\u02cc\001\002\000\010\267\u02c2\327\ufe2a" +
    "\u0153\ufe2a\001\002\000\006\327\ufe2d\u0153\ufe2d\001\002\000" +
    "\010\267\ufe29\327\ufe29\u0153\ufe29\001\002\000\014\160\u0133" +
    "\161\u0135\u0140\027\u0158\u0136\u015c\u0138\001\002\000\010\267" +
    "\ufe28\327\ufe28\u0153\ufe28\001\002\000\006\327\ufe2f\u0153\ufe2f" +
    "\001\002\000\006\327\ufe31\u0153\ufe31\001\002\000\006\327" +
    "\ufe2b\u0153\ufe2b\001\002\000\024\323\046\u0100\045\u0105\050" +
    "\u0110\052\u0111\060\u013b\047\u013c\057\u0158\053\u015c\056\001" +
    "\002\000\004\u0159\u02d3\001\002\000\010\170\u02d4\u0140\ufe3f" +
    "\u015c\ufe3f\001\002\000\006\u0140\ufe40\u015c\ufe40\001\002\000" +
    "\006\u0140\027\u015c\u02a9\001\002\000\006\327\ufe42\u0153\ufe42" +
    "\001\002\000\006\327\ufe3e\u0153\ufe3e\001\002\000\004\002" +
    "\001\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u02d6\000\014\256\010\277\012\314\013\336\006\350" +
    "\003\001\001\000\002\001\001\000\010\002\u02a4\315\u02a7" +
    "\317\u02a5\001\001\000\012\002\u0285\337\u028a\341\u0287\342" +
    "\u0286\001\001\000\004\347\u0282\001\001\000\006\257\315" +
    "\260\314\001\001\000\004\276\310\001\001\000\012\002" +
    "\024\300\023\302\022\303\030\001\001\000\004\310\017" +
    "\001\001\000\004\333\016\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\016\162\167\166\164\256\172\304\170\305\166" +
    "\306\165\001\001\000\002\001\001\000\004\003\032\001" +
    "\001\000\006\002\024\303\031\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\004\035\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\005\040\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\012\006\050\010\054\012\053" +
    "\021\060\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\012\006\114\010\054\012\053\021\060\001" +
    "\001\000\004\011\106\001\001\000\004\007\100\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\032\064\033\065\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\014\006" +
    "\067\010\054\012\053\021\060\034\066\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\035\071\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\010\010\103\012\053\021" +
    "\060\001\001\000\010\010\101\012\053\021\060\001\001" +
    "\000\002\001\001\000\004\007\102\001\001\000\002\001" +
    "\001\000\004\007\104\001\001\000\002\001\001\000\006" +
    "\012\112\021\060\001\001\000\002\001\001\000\006\012" +
    "\110\021\060\001\001\000\004\011\111\001\001\000\002" +
    "\001\001\000\004\011\113\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\032\117\033\065" +
    "\001\001\000\002\001\001\000\002\001\001\000\012\002" +
    "\024\301\123\302\122\303\030\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\002\024\302\125\303\030\001" +
    "\001\000\002\001\001\000\006\026\131\027\127\001\001" +
    "\000\014\006\135\010\054\012\053\021\060\030\137\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\031\141\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\022\146\023" +
    "\145\001\001\000\002\001\001\000\014\006\151\010\054" +
    "\012\053\021\060\024\152\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\025\154\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\032\160\033\065" +
    "\001\001\000\002\001\001\000\002\001\001\000\020\002" +
    "\266\006\265\010\054\012\053\021\060\156\270\157\267" +
    "\001\001\000\002\001\001\000\012\162\167\256\172\305" +
    "\263\306\165\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\256\172\306\262\001\001\000\002\001\001\000" +
    "\004\167\255\001\001\000\002\001\001\000\002\001\001" +
    "\000\024\006\204\010\054\012\053\021\060\036\201\040" +
    "\177\047\202\307\207\311\200\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\044\252\001\001\000\004\312" +
    "\241\001\001\000\002\001\001\000\020\006\204\010\054" +
    "\012\053\021\060\036\232\040\177\047\202\001\001\000" +
    "\002\001\001\000\012\037\217\043\220\044\215\050\210" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\014\006\227\010\054\012\053\021\060" +
    "\041\230\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\042\235\050\233\051\237" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\024\006\204\010\054\012\053\021" +
    "\060\036\201\040\177\047\202\307\251\311\200\001\001" +
    "\000\004\313\244\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\024\006\204\010\054\012\053" +
    "\021\060\036\201\040\177\047\202\307\250\311\200\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\040\253" +
    "\001\001\000\002\001\001\000\004\170\260\001\001\000" +
    "\002\001\001\000\004\167\261\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\160\303\001\001\000\004\163\271\001" +
    "\001\000\002\001\001\000\004\164\273\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\165\276\166\277\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\165\301" +
    "\166\277\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\161\306\001\001\000\020\002\266" +
    "\006\265\010\054\012\053\021\060\156\307\157\267\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\040\006\204\010\054\012\053\013\356\021\340\036\326" +
    "\040\177\047\202\052\332\110\327\113\350\147\344\150" +
    "\335\261\342\264\341\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\024\006\204" +
    "\010\054\012\053\021\060\036\u025e\040\177\047\202\053" +
    "\u0260\054\u025f\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\154\u0216\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\262\u0207\001\001\000\016\265\u011f\267\u011d\270\u011b\271" +
    "\u011a\272\u0119\273\u0117\001\001\000\002\001\001\000\006" +
    "\151\u0107\154\u010a\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\112\362\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\111\367\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\114\376\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\114\u0102\001\001\000\002\001\001\000\012\006\u0104" +
    "\010\054\012\053\021\060\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\152\u010b\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\154\u0110\155\u010f\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\154\u0112\001\001\000\002\001\001\000\002" +
    "\001\001\000\012\006\u0115\010\054\012\053\021\060\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\010\065\u0204\066\u0149\102\u0148\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\002\u0201" +
    "\266\u0202\001\001\000\002\001\001\000\010\065\u01ff\066" +
    "\u0149\102\u0148\001\001\000\002\001\001\000\002\001\001" +
    "\000\012\002\u0133\122\u0131\132\u0136\137\u0138\001\001\000" +
    "\002\001\001\000\036\006\204\010\054\012\053\013\356" +
    "\021\340\036\326\040\177\047\202\052\332\110\327\113" +
    "\350\142\u0125\147\u0124\150\335\001\001\000\010\143\u012c" +
    "\144\u012b\146\u012a\001\001\000\002\001\001\000\004\145" +
    "\u012e\001\001\000\002\001\001\000\036\006\204\010\054" +
    "\012\053\013\356\021\340\036\326\040\177\047\202\052" +
    "\332\110\327\113\350\142\u012d\147\u0124\150\335\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\146\u0130\001\001\000\002\001\001\000\004\140\u01f7\001" +
    "\001\000\002\001\001\000\004\140\u01e7\001\001\000\002" +
    "\001\001\000\002\001\001\000\014\270\u01dc\271\u011a\272" +
    "\u0119\273\u0117\274\u01db\001\001\000\002\001\001\000\012" +
    "\126\u0141\127\u013e\130\u013d\133\u0140\001\001\000\004\131" +
    "\u01d5\001\001\000\002\001\001\000\004\131\u01d2\001\001" +
    "\000\004\131\u01d1\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\012\002\u0133" +
    "\122\u0131\135\u0142\137\u0143\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\065\u014a\066\u0149\102\u0148\001\001" +
    "\000\002\001\001\000\030\006\u0163\010\054\012\053\013" +
    "\u016c\021\u0165\052\u015d\070\u01bb\071\u015f\110\u015b\113\u016b" +
    "\116\u0168\001\001\000\004\102\u0155\001\001\000\002\001" +
    "\001\000\004\067\u0153\001\001\000\014\126\u014e\127\u013e" +
    "\130\u013d\134\u014d\136\u014c\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\012\002\u0133\122\u0131" +
    "\135\u014f\137\u0143\001\001\000\002\001\001\000\014\126" +
    "\u014e\127\u013e\130\u013d\134\u014d\136\u0151\001\001\000\002" +
    "\001\001\000\010\065\u0154\066\u0149\102\u0148\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\103\u0157\001\001\000\002\001\001\000\034\006\u0163\010" +
    "\054\012\053\013\u016c\021\u0165\052\u015d\070\u0166\071\u015f" +
    "\104\u015a\105\u0159\110\u015b\113\u016b\116\u0168\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\032\006\u0163\010\054\012" +
    "\053\013\u016c\021\u0165\052\u015d\070\u0166\071\u015f\105\u01b2" +
    "\110\u015b\113\u016b\116\u0168\001\001\000\006\050\u0190\072" +
    "\u0192\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\014\006\114\010\054\012" +
    "\053\021\060\102\u017c\001\001\000\002\001\001\000\004" +
    "\103\u017a\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\020\006\204\010\054\012\053\021\060\036" +
    "\u016e\040\177\047\202\001\001\000\002\001\001\000\020" +
    "\006\204\010\054\012\053\021\060\036\u0170\040\177\047" +
    "\202\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\002\u0174\077\u0173\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\012\065\u0178\066\u0149\100\u0177" +
    "\102\u0148\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\014\006\114\010\054" +
    "\012\053\021\060\102\u0155\001\001\000\002\001\001\000" +
    "\004\103\u017e\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\117\u0185\120\u0183\121\u0182\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\120\u0189\121" +
    "\u0188\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\121\u018c\001\001\000\002\001\001\000" +
    "\002\001\001\000\036\006\204\010\054\012\053\013\356" +
    "\021\340\036\326\040\177\047\202\052\332\110\327\113" +
    "\350\142\u018f\147\u0124\150\335\001\001\000\002\001\001" +
    "\000\026\006\u0163\010\054\012\053\013\u016c\021\u0165\052" +
    "\u015d\071\u01b1\110\u015b\113\u016b\116\u0168\001\001\000\026" +
    "\006\u0163\010\054\012\053\013\u016c\021\u0165\052\u015d\071" +
    "\u01af\110\u015b\113\u016b\116\u0168\001\001\000\002\001\001" +
    "\000\026\006\u0163\010\054\012\053\013\u016c\021\u0165\052" +
    "\u015d\071\u01ac\110\u015b\113\u016b\116\u0168\001\001\000\004" +
    "\073\u01a1\001\001\000\026\006\u0163\010\054\012\053\013" +
    "\u016c\021\u0165\052\u015d\071\u019a\110\u015b\113\u016b\116\u0168" +
    "\001\001\000\004\074\u0198\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\076\u019b\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\026\006\u0163\010\054\012\053\013\u016c\021\u0165\052\u015d" +
    "\071\u01aa\110\u015b\113\u016b\116\u0168\001\001\000\026\006" +
    "\u0163\010\054\012\053\013\u016c\021\u0165\052\u015d\071\u01a5" +
    "\110\u015b\113\u016b\116\u0168\001\001\000\026\006\u0163\010" +
    "\054\012\053\013\u016c\021\u0165\052\u015d\071\u01a2\110\u015b" +
    "\113\u016b\116\u0168\001\001\000\002\001\001\000\002\001" +
    "\001\000\026\006\u0163\010\054\012\053\013\u016c\021\u0165" +
    "\052\u015d\071\u01a4\110\u015b\113\u016b\116\u0168\001\001\000" +
    "\002\001\001\000\004\075\u01a7\001\001\000\026\006\u0163" +
    "\010\054\012\053\013\u016c\021\u0165\052\u015d\071\u01a8\110" +
    "\u015b\113\u016b\116\u0168\001\001\000\002\001\001\000\004" +
    "\075\u01a9\001\001\000\002\001\001\000\004\076\u01ab\001" +
    "\001\000\002\001\001\000\002\001\001\000\026\006\u0163" +
    "\010\054\012\053\013\u016c\021\u0165\052\u015d\071\u01ae\110" +
    "\u015b\113\u016b\116\u0168\001\001\000\002\001\001\000\004" +
    "\075\u01b0\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\002\u0174\077\u01b4\001\001\000\002" +
    "\001\001\000\004\101\u01b8\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\103\u01bc\001\001\000\002\001\001\000" +
    "\004\106\u01bf\001\001\000\004\107\u01c3\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\014\126\u014e\127\u013e\130\u013d\134\u014d\136\u01d4\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\140\u01d9" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\012\002\u0133\122\u0131\132\u01de\137\u0138\001\001\000" +
    "\014\270\u01dc\271\u011a\272\u0119\273\u0117\274\u01df\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\123\u01ea\141\u01e9\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\014\006\u01ec\010\054\012\053\021\060\124\u01ed\001" +
    "\001\000\004\125\u01f1\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\020\006\204\010\054\012\053\021\060\036\u01f9\040\177" +
    "\047\202\001\001\000\004\275\u01fb\001\001\000\020\006" +
    "\204\010\054\012\053\021\060\036\u01fd\040\177\047\202" +
    "\001\001\000\006\272\u01fc\273\u0117\001\001\000\002\001" +
    "\001\000\004\275\u01fe\001\001\000\002\001\001\000\004" +
    "\273\u0200\001\001\000\002\001\001\000\014\267\u0203\270" +
    "\u011b\271\u011a\272\u0119\273\u0117\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\271\u0205\272\u0119\273\u0117\001" +
    "\001\000\002\001\001\000\012\006\u0208\010\054\012\053" +
    "\021\060\001\001\000\002\001\001\000\002\001\001\000" +
    "\040\006\204\010\054\012\053\013\356\021\340\036\326" +
    "\040\177\047\202\052\332\110\327\113\350\147\344\150" +
    "\335\263\u020c\264\u020b\001\001\000\036\006\204\010\054" +
    "\012\053\013\356\021\340\036\326\040\177\047\202\052" +
    "\332\110\327\113\350\147\344\150\335\264\u020d\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\114\u020f\001\001\000\002\001\001\000\012\006\u0211" +
    "\010\054\012\053\021\060\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\111\u0214\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\114\u0218\001" +
    "\001\000\002\001\001\000\004\114\u021a\001\001\000\002" +
    "\001\001\000\004\114\u021c\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\114\u021f\001\001\000\004\115\u0221" +
    "\001\001\000\004\114\u0223\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\032" +
    "\006\204\010\054\012\053\013\356\021\340\036\326\040" +
    "\177\047\202\052\332\110\327\113\350\150\u0226\001\001" +
    "\000\002\001\001\000\010\015\u0230\057\u0235\062\u0236\001" +
    "\001\000\004\063\u0259\001\001\000\004\063\u0258\001\001" +
    "\000\004\063\u0257\001\001\000\004\063\u0256\001\001\000" +
    "\004\063\u0255\001\001\000\004\063\u0254\001\001\000\004" +
    "\063\u0253\001\001\000\004\063\u0252\001\001\000\002\001" +
    "\001\000\004\063\u0251\001\001\000\004\063\u0250\001\001" +
    "\000\004\061\u024e\001\001\000\004\063\u024c\001\001\000" +
    "\004\016\u0242\001\001\000\002\001\001\000\004\063\u0241" +
    "\001\001\000\004\063\u0239\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\064\u023d\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\022\006\204\010\054" +
    "\012\053\017\u0246\021\060\036\u0247\040\177\047\202\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\020\u0249\001\001\000\012\006" +
    "\u024b\010\054\012\053\021\060\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\114\u025b\001\001\000\002\001\001\000\002\001\001" +
    "\000\020\006\204\010\054\012\053\021\060\036\u0262\040" +
    "\177\047\202\001\001\000\004\054\u0261\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\020\006\204\010\054\012\053\021\060\036\u0264" +
    "\040\177\047\202\001\001\000\006\054\u0267\055\u0266\001" +
    "\001\000\020\006\204\010\054\012\053\021\060\036\u0269" +
    "\040\177\047\202\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\111\u026c\001\001\000\002\001\001\000\002\001" +
    "\001\000\012\006\u026f\010\054\012\053\021\060\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\114\u0272\001" +
    "\001\000\002\001\001\000\012\006\u0274\010\054\012\053" +
    "\021\060\001\001\000\002\001\001\000\012\006\u0276\010" +
    "\054\012\053\021\060\001\001\000\002\001\001\000\002" +
    "\001\001\000\022\006\204\010\054\012\053\014\u0279\021" +
    "\060\036\u027a\040\177\047\202\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\057\u027c\062\u0236\001\001\000" +
    "\004\016\u027d\001\001\000\002\001\001\000\002\001\001" +
    "\000\012\006\u0280\010\054\012\053\021\060\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\012\162\u0291\343\u02a3\344" +
    "\u028d\346\u0292\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\002\u0285\342\u02a2\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\012\162\u0291\343\u028e" +
    "\344\u028d\346\u0292\001\001\000\002\001\001\000\002\001" +
    "\001\000\020\006\204\010\054\012\053\021\060\036\u029a" +
    "\040\177\047\202\001\001\000\012\002\u0133\122\u0131\132" +
    "\u0294\137\u0138\001\001\000\006\344\u0293\346\u0292\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\345\u0295\346" +
    "\u0297\001\001\000\002\001\001\000\012\002\u0133\122\u0131" +
    "\132\u0298\137\u0138\001\001\000\002\001\001\000\006\345" +
    "\u0299\346\u0297\001\001\000\002\001\001\000\002\001\001" +
    "\000\012\006\u029c\010\054\012\053\021\060\001\001\000" +
    "\002\001\001\000\012\002\u0285\340\u02a0\341\u029f\342\u0286" +
    "\001\001\000\010\002\u0285\341\u02a1\342\u0286\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\320\u02d6\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\320\u02aa\001\001\000\002\001\001\000" +
    "\006\321\u02ad\322\u02ac\001\001\000\014\162\u02c3\327\u02c0" +
    "\330\u02bf\334\u02c6\335\u02c5\001\001\000\002\001\001\000" +
    "\004\323\u02b4\001\001\000\002\001\001\000\002\001\001" +
    "\000\022\006\204\010\054\012\053\021\060\036\u02b2\040" +
    "\177\047\202\326\u02b3\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\324\u02bc\001\001\000" +
    "\022\006\204\010\054\012\053\021\060\036\u02b8\040\177" +
    "\047\202\325\u02b7\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\022\006\204\010\054\012\053\021" +
    "\060\036\u02b2\040\177\047\202\326\u02be\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\020\006" +
    "\204\010\054\012\053\021\060\036\u02cf\040\177\047\202" +
    "\001\001\000\006\321\u02ce\322\u02ac\001\001\000\006\334" +
    "\u02cd\335\u02c5\001\001\000\014\002\u0133\122\u0131\132\u02c7" +
    "\137\u0138\331\u02c8\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\332\u02ca\001\001\000\004\335\u02c9\001\001" +
    "\000\002\001\001\000\002\001\001\000\014\002\u0133\122" +
    "\u0131\132\u02c7\137\u0138\331\u02cc\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\012\006\u02d1\010\054\012\053\021\060\001\001\000\002" +
    "\001\001\000\004\316\u02d4\001\001\000\002\001\001\000" +
    "\006\002\u02a4\317\u02d5\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


  /** User initialization code. */
  public void user_init() throws java.lang.Exception
    {
 
    try {
        BufferedReader buffered = new BufferedReader(new FileReader(MiniSql.ubicacionArchivo));
        analizadorFlex = new Lexemas(buffered);
    } catch (IOException ex) {
        ex.printStackTrace();
    }

    }

  /** Scan to get the next Symbol. */
  public java_cup.runtime.Symbol scan()
    throws java.lang.Exception
    {
 
    return analizadorFlex.next_token(); 

    }


Lexemas analizadorFlex = null;

public void syntax_error(Symbol cur_token){
    System.err.println("Syntax error at "+ cur_token.value);
}

public void report_error(String message, Object info) {
    StringBuilder m = new StringBuilder("Error");
    if (info instanceof java_cup.runtime.Symbol) {
        java_cup.runtime.Symbol s = ((java_cup.runtime.Symbol) info);
        m.append(" " + s.value.toString());
        if (s.left >= 0) {                
            m.append(" in line "+(s.left));
            if (s.right >= 0)
                m.append(", column "+(s.right));
        }
    }
    m.append(" : "+message);
    System.err.println(m);
}


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$parser$actions {
  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$parser$do_action_part00000000(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= BEGIN_T EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // BEGIN_T ::= SELECT1 SELECT19 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("BEGIN_T",230, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // BEGIN_T ::= UPDATE0 UPDATE15 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("BEGIN_T",230, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // BEGIN_T ::= INSERT0 INSERT9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("BEGIN_T",230, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // BEGIN_T ::= DEL1 DEL10 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("BEGIN_T",230, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // OBJECT ::= Identificador OBJECT1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OBJECT",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // OBJECT1 ::= Punto Identificador OBJECT2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OBJECT1",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // OBJECT1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OBJECT1",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // OBJECT2 ::= Punto Identificador OBJECT3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OBJECT2",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // OBJECT2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OBJECT2",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // OBJECT3 ::= Punto Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OBJECT3",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // OBJECT3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OBJECT3",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // SEXP ::= SEXP3 SEXP2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEXP",4, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // SEXP2 ::= Mas SEXP3 SEXP2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEXP2",5, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // SEXP2 ::= Menos SEXP3 SEXP2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEXP2",5, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // SEXP2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEXP2",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // SEXP3 ::= SEXP5 SEXP4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEXP3",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // SEXP4 ::= Multiplicacion SEXP5 SEXP4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEXP4",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // SEXP4 ::= Division SEXP5 SEXP4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEXP4",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // SEXP4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEXP4",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // SEXP5 ::= ParentesisAbrir SEXP ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEXP5",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // SEXP5 ::= DatoEntero 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEXP5",8, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // SEXP5 ::= DatoFloat 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEXP5",8, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // SEXP5 ::= Arroba Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEXP5",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // SEXP5 ::= AGG_FN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEXP5",8, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // CONV ::= CAST ParentesisAbrir CONV1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CONV",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // CONV ::= CONVERT ParentesisAbrir CONV2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CONV",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // CONV1 ::= EXPRESSION AS DATATYPE CONV3 ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CONV1",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // CONV2 ::= DATATYPE CONV3 CONV4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CONV2",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // CONV3 ::= ParentesisAbrir DatoEntero ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CONV3",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // CONV3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CONV3",12, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // CONV4 ::= EXPRESSION CONV5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CONV4",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // CONV5 ::= Coma SEXP 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CONV5",14, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // CONV5 ::= ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CONV5",14, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // AGG_FN ::= AVG ParentesisAbrir SEL_AVG ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("AGG_FN",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // AGG_FN ::= COUNT ParentesisAbrir SEL_COUNT ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("AGG_FN",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // AGG_FN ::= MAX ParentesisAbrir SEL_AGR ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("AGG_FN",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // AGG_FN ::= MIN ParentesisAbrir SEL_AGR ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("AGG_FN",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // AGG_FN ::= SUM ParentesisAbrir SEL_AGR ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("AGG_FN",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // SEL_AVG ::= SEL_AVG1 SEL_AVG2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_AVG",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // SEL_AVG1 ::= ALL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_AVG1",17, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // SEL_AVG1 ::= DISTINCT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_AVG1",17, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // SEL_AVG1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_AVG1",17, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // SEL_AVG2 ::= SEXP 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_AVG2",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // SEL_AVG2 ::= Identificador SEL_AVG3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_AVG2",18, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // SEL_AVG3 ::= Punto Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_AVG3",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // SEL_AVG3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_AVG3",19, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // SEL_COUNT ::= SEL_COUNT1 SEL_COUNT2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_COUNT",20, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // SEL_COUNT1 ::= ALL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_COUNT1",21, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // SEL_COUNT1 ::= DISTINCT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_COUNT1",21, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // SEL_COUNT1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_COUNT1",21, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // SEL_COUNT2 ::= Multiplicacion 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_COUNT2",22, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // SEL_COUNT2 ::= Identificador SEL_COUNT3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_COUNT2",22, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // SEL_COUNT2 ::= SEXP 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_COUNT2",22, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // SEL_COUNT3 ::= Punto Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_COUNT3",23, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // SEL_COUNT3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_COUNT3",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // SEL_AGR ::= SEL_AGR1 SEL_AGR2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_AGR",24, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // SEL_AGR1 ::= ALL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_AGR1",25, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // SEL_AGR1 ::= DISTINCT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_AGR1",25, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // SEL_AGR1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_AGR1",25, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // SEL_AGR2 ::= Identificador SEL_AGR3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_AGR2",26, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // SEL_AGR2 ::= SEXP 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_AGR2",26, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // SEL_AGR3 ::= Punto Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_AGR3",27, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // SEL_AGR3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_AGR3",27, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // EXPRESSION ::= SEXP EXPRESSION1 EXPRESSION3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION",28, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // EXPRESSION ::= EXPRESSION2 SUM_OPR EXPRESSION2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION",28, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // EXPRESSION ::= NOT_OPR EXPRESSION EXPRESSION4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION",28, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // EXPRESSION ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // EXPRESSION1 ::= AR_OPR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION1",29, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // EXPRESSION1 ::= COMPARE_OPR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION1",29, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // EXPRESSION1 ::= SUM_OPR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION1",29, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // EXPRESSION2 ::= DatoString 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION2",30, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // EXPRESSION2 ::= Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION2",30, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // EXPRESSION3 ::= SEXP 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION3",31, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // EXPRESSION3 ::= Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION3",31, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // EXPRESSION3 ::= DatoString 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION3",31, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // EXPRESSION4 ::= COMPARE_OPR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION4",32, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // EXPRESSION4 ::= LOGIC_OPR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION4",32, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // AR_OPR ::= Menos 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("AR_OPR",33, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // AR_OPR ::= Multiplicacion 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("AR_OPR",33, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // AR_OPR ::= Division 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("AR_OPR",33, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // AR_OPR ::= Modulo 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("AR_OPR",33, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // SUM_OPR ::= Mas 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SUM_OPR",34, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // ASIG_OPR ::= Igual 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ASIG_OPR",35, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // BIT_OPR ::= AND 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("BIT_OPR",36, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // BIT_OPR ::= OR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("BIT_OPR",36, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // NOT_OPR ::= NOT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("NOT_OPR",37, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // COMPARE_OPR ::= Mayor 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMPARE_OPR",38, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // COMPARE_OPR ::= Menor 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMPARE_OPR",38, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // COMPARE_OPR ::= MayorIgual 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMPARE_OPR",38, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // COMPARE_OPR ::= MenorIgual 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMPARE_OPR",38, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // COMPARE_OPR ::= Diferente 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMPARE_OPR",38, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // LOGIC_OPR ::= BETWEEN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("LOGIC_OPR",39, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // LOGIC_OPR ::= IN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("LOGIC_OPR",39, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // LOGIC_OPR ::= LIKE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("LOGIC_OPR",39, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // CASEW ::= CASE CASEW1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CASEW",40, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // CASEW1 ::= EXPRESSION CASEW2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CASEW1",41, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // CASEW1 ::= CASEW2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CASEW1",41, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // CASEW2 ::= WHEN EXPRESSION THEN EXPRESSION CASEW3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CASEW2",42, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // CASEW3 ::= ELSE EXPRESSION END 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CASEW3",43, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // CASEW3 ::= CASEW2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CASEW3",43, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // CASEW3 ::= END 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CASEW3",43, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // CONST_EXP ::= Arroba Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CONST_EXP",44, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // CONST_EXP ::= Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CONST_EXP",44, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // CONST_EXP ::= DatoString 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CONST_EXP",44, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // CONST_EXP ::= DatoEntero 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CONST_EXP",44, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // CONST_EXP ::= DatoFloat 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CONST_EXP",44, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // DATATYPE ::= Identificador DATATYPE2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE",45, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // DATATYPE ::= DATATYPE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE",45, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // DATATYPE2 ::= Punto Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE2",47, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // DATATYPE3 ::= BIT DATATYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE3",48, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // DATATYPE3 ::= INT DATATYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE3",48, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // DATATYPE3 ::= INTEGER DATATYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE3",48, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // DATATYPE3 ::= FLOAT DATATYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE3",48, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // DATATYPE3 ::= VARCHAR DATATYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE3",48, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // DATATYPE3 ::= DATE DATATYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE3",48, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // DATATYPE3 ::= REAL DATATYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE3",48, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // DATATYPE3 ::= DECIMAL DATATYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE3",48, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // DATATYPE3 ::= NUMERIC DATATYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE3",48, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // DATATYPE3 ::= SMALLINT DATATYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE3",48, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // DATATYPE3 ::= TIME DATATYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE3",48, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // DATATYPE3 ::= CHAR DATATYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE3",48, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // DATATYPE3 ::= NCHAR DATATYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE3",48, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // DATATYPE4 ::= ParentesisAbrir DatoEntero DATATYPE5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE4",49, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // DATATYPE4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE4",49, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // DATATYPE5 ::= Coma DatoEntero ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE5",50, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // DATATYPE5 ::= ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE5",50, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // SH_COND ::= SH_COND1 SH_COND2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SH_COND",51, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // SH_COND1 ::= MATCH ParentesisAbrir GSP ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SH_COND1",52, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // SH_COND1 ::= SH_CONDWM 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SH_COND1",52, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // SH_COND2 ::= AND SH_COND 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SH_COND2",53, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // PREDICATE ::= PREDICATE1 PREDICATE2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE",54, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // PREDICATE ::= CONTAINS ParentesisAbrir PREDICATE7 Coma PREDICATE8 ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE",54, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // PREDICATE ::= FREETEXT ParentesisAbrir PREDICATE7 Coma PREDICATE9 ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE",54, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // PREDICATE1 ::= Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE1",55, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // PREDICATE1 ::= SEXP 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE1",55, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // PREDICATE1 ::= CASEW 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE1",55, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // PREDICATE1 ::= AGG_FN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE1",55, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // PREDICATE1 ::= STR_FN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE1",55, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // PREDICATE1 ::= DT_FN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE1",55, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // PREDICATE1 ::= CONV 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE1",55, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // PREDICATE1 ::= OTH_FN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE1",55, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // PREDICATE2 ::= COMPARE_OPR PREDICATE1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE2",56, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // PREDICATE2 ::= NOT PREDICATE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE2",56, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // PREDICATE2 ::= LIKE PREDICATE1 PREDICATE6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE2",56, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // PREDICATE2 ::= BETWEEN PREDICATE1 AND PREDICATE1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE2",56, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // PREDICATE2 ::= IS PREDICATE4 NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE2",56, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // PREDICATE2 ::= IN PREDICATE1 PREDICATE5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE2",56, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // PREDICATE3 ::= LIKE PREDICATE1 PREDICATE6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE3",57, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // PREDICATE3 ::= BETWEEN PREDICATE1 AND PREDICATE1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE3",57, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // PREDICATE3 ::= IN PREDICATE1 PREDICATE5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE3",57, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // PREDICATE4 ::= NOT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE4",58, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // PREDICATE4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE4",58, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // PREDICATE5 ::= Coma PREDICATE1 PREDICATE5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE5",59, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // PREDICATE5 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE5",59, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // PREDICATE6 ::= ESCAPE DatoString 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE6",60, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // PREDICATE6 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE6",60, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // PREDICATE7 ::= Multiplicacion 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE7",61, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // PREDICATE7 ::= OBJECT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE7",61, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // PREDICATE8 ::= SH_COND 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE8",62, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // PREDICATE9 ::= DatoString 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE9",63, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // PREDICATE9 ::= Arroba Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE9",63, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // SH_CONDWM ::= NOT PREDICATE SH_CONDWM1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SH_CONDWM",64, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // SH_CONDWM ::= ParentesisAbrir SH_CONDWM ParentesisCerrar SH_CONDWM1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SH_CONDWM",64, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // SH_CONDWM1 ::= OR SH_CONDWM2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SH_CONDWM1",65, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // SH_CONDWM1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SH_CONDWM1",65, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // SH_CONDWM2 ::= NOT SH_CONDWM3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SH_CONDWM2",66, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // SH_CONDWM2 ::= SH_CONDWM3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SH_CONDWM2",66, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // SH_CONDWM3 ::= PREDICATE SH_CONDWM1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SH_CONDWM3",67, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // SH_CONDWM3 ::= ParentesisAbrir SH_CONDWM ParentesisCerrar SH_CONDWM1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SH_CONDWM3",67, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // GSP ::= Identificador GSP1 Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("GSP",68, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // GSP1 ::= Menor Menos ParentesisAbrir Identificador ParentesisCerrar Menos 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("GSP1",69, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // GSP1 ::= Menos ParentesisAbrir Identificador ParentesisCerrar Menos Mayor 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("GSP1",69, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // DT_FN ::= CURRENT_TIMESTAMP 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DT_FN",70, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // DT_FN ::= DAY ParentesisAbrir DT_FN1 ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DT_FN",70, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // DT_FN ::= MONTH ParentesisAbrir DT_FN1 ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DT_FN",70, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // DT_FN ::= YEAR ParentesisAbrir DT_FN1 ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DT_FN",70, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // DT_FN ::= SET LANGUAGE DT_FN2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DT_FN",70, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // DT_FN1 ::= DatoString 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DT_FN1",71, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // DT_FN1 ::= Arroba Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DT_FN1",71, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // DT_FN2 ::= Arroba Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DT_FN2",72, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // DT_FN2 ::= Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DT_FN2",72, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // STR_FN ::= LOWER ParentesisAbrir STR_FN1 ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("STR_FN",73, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // STR_FN ::= TRANSLATE ParentesisAbrir STR_FN1 Coma STR_FN1 Coma STR_FN1 ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("STR_FN",73, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // STR_FN ::= UPPER ParentesisAbrir STR_FN1 ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("STR_FN",73, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // STR_FN ::= CHAR ParentesisAbrir SEXP ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("STR_FN",73, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // STR_FN ::= LEFT ParentesisAbrir STR_FN1 Coma SEXP ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("STR_FN",73, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // STR_FN ::= TRIM ParentesisAbrir STR_FN1 STR_FN2 ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("STR_FN",73, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // STR_FN ::= NCHAR ParentesisAbrir SEXP ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("STR_FN",73, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // STR_FN ::= RIGHT ParentesisAbrir STR_FN1 Coma SEXP ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("STR_FN",73, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // STR_FN ::= SPACE ParentesisAbrir SEXP ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("STR_FN",73, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // STR_FN ::= SUBSTRING ParentesisAbrir STR_FN1 Coma SEXP Coma SEXP ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("STR_FN",73, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // STR_FN1 ::= Arroba Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("STR_FN1",74, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // STR_FN1 ::= DatoString 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("STR_FN1",74, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // STR_FN1 ::= Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("STR_FN1",74, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // STR_FN2 ::= FROM STR_FN1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("STR_FN2",75, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // STR_FN2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("STR_FN2",75, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // OTH_FN ::= NEXT VALUE FOR Identificador OTH_FN1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OTH_FN",76, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // OTH_FN ::= SYSTEM_USER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OTH_FN",76, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // OTH_FN ::= SESSION_USER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OTH_FN",76, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // OTH_FN ::= NULLIF ParentesisAbrir EXPRESSION Coma EXPRESSION ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OTH_FN",76, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // OTH_FN1 ::= Punto Identificador OTH_FN2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OTH_FN1",77, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // OTH_FN1 ::= OTH_FN2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OTH_FN1",77, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // OTH_FN2 ::= Punto Identificador OTH_FN3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OTH_FN2",78, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // OTH_FN2 ::= OTH_FN3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OTH_FN2",78, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // OTH_FN3 ::= OVER ORDER BY ORDERB 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OTH_FN3",79, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // ROWSET ::= OPENDATASOURCE ParentesisAbrir DatoString Coma DatoString ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ROWSET",80, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // ROWSET ::= OPENQUERY ParentesisAbrir Identificador Coma DatoString ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ROWSET",80, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // SAM_CL ::= TABLESAMPLE ParentesisAbrir SAM_CL1 ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SAM_CL",81, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // SAM_CL1 ::= SEXP SAM_CL2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SAM_CL1",82, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // SAM_CL2 ::= PERCENT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SAM_CL2",83, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // SAM_CL2 ::= ROWS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SAM_CL2",83, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // SAM_CL2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SAM_CL2",83, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // JOIN_TYPE ::= JOIN_TYPE1 JOIN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOIN_TYPE",84, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // JOIN_TYPE1 ::= INNER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOIN_TYPE1",85, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // JOIN_TYPE1 ::= JOIN_TYPE2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOIN_TYPE1",85, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // JOIN_TYPE1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOIN_TYPE1",85, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // JOIN_TYPE2 ::= LEFT JOIN_TYPE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOIN_TYPE2",86, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // JOIN_TYPE2 ::= RIGHT JOIN_TYPE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOIN_TYPE2",86, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // JOIN_TYPE2 ::= FULL JOIN_TYPE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOIN_TYPE2",86, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // JOIN_TYPE2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOIN_TYPE2",86, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // JOIN_TYPE3 ::= OUTER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOIN_TYPE3",87, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // JOIN_TYPE3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOIN_TYPE3",87, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // JOINTB ::= TB_SOURCE JOINTB1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOINTB",88, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // JOINTB ::= ParentesisAbrir JOIN ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOINTB",88, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // JOINTB1 ::= JOIN_TYPE JOINTB3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOINTB1",89, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // JOINTB1 ::= CROSS JOIN JOINTB4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOINTB1",89, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // JOINTB1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOINTB1",89, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // JOINTB2 ::= JOIN_TYPE JOINTB3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOINTB2",90, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // JOINTB2 ::= CROSS JOIN JOINTB4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOINTB2",90, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // JOINTB3 ::= TB_SOURCE ON SH_COND JOINTB4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOINTB3",91, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // JOINTB4 ::= JOINTB2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOINTB4",92, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // JOINTB4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOINTB4",92, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // TB_SOURCE ::= OBJECT TB_SOURCE1 TB_SOURCE2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_SOURCE",93, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // TB_SOURCE ::= ROWSET TB_SOURCE1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_SOURCE",93, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // TB_SOURCE ::= Arroba Identificador TB_SOURCE1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_SOURCE",93, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // TB_SOURCE1 ::= AS Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_SOURCE1",94, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // TB_SOURCE1 ::= Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_SOURCE1",94, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // TB_SOURCE1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_SOURCE1",94, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // TB_SOURCE2 ::= SAM_CL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_SOURCE2",95, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // TB_SOURCE2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_SOURCE2",95, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // ORDERB ::= SELIST ORDERB1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ORDERB",96, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // ORDERB1 ::= ORDERB2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ORDERB1",97, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // ORDERB1 ::= Coma ORDERB 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ORDERB1",97, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // ORDERB2 ::= COLLATE ORDERB3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ORDERB2",98, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // ORDERB2 ::= ORDERB4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ORDERB2",98, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // ORDERB3 ::= Identificador ORDERB4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ORDERB3",99, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // ORDERB4 ::= ASC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ORDERB4",100, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // ORDERB4 ::= DESC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ORDERB4",100, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // SELIST ::= SELIST1 SELIST5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST",101, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // SELIST ::= Multiplicacion 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST",101, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // SELIST ::= Arroba Identificador Igual SELIST1 
            {
              Object RESULT =null;
		 System.out.println("analizando selist"); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST",101, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // SELIST1 ::= Identificador SELIST2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST1",102, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // SELIST1 ::= EXPRESSION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST1",102, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // SELIST1 ::= AGG_FN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST1",102, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // SELIST1 ::= STR_FN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST1",102, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // SELIST1 ::= DT_FN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST1",102, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // SELIST1 ::= CONV 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST1",102, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // SELIST1 ::= CASEW 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST1",102, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // SELIST2 ::= Punto SELIST3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST2",103, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // SELIST2 ::= SELIST5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST2",103, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // SELIST3 ::= Multiplicacion 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST3",104, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // SELIST3 ::= Identificador SELIST7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST3",104, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // SELIST5 ::= AS Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST5",106, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // SELIST5 ::= Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST5",106, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // SELIST5 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST5",106, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // SELIST7 ::= Punto Identificador SELIST5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST7",107, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // SELIST7 ::= SELIST5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST7",107, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // DML ::= DML2 DML3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DML",108, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // DML2 ::= OBJECT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DML2",109, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // DML2 ::= SEXP 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DML2",109, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // DML3 ::= AS Identificador DML4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DML3",110, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // DML3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DML3",110, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // DML4 ::= Coma DML 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DML4",111, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // DML4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DML4",111, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // OUTCL ::= OUTPUT DML OUTCL1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OUTCL",112, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // OUTCL ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OUTCL",112, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // OUTCL1 ::= INTO OUTCL2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OUTCL1",113, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 278: // OUTCL1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OUTCL1",113, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 279: // OUTCL2 ::= Arroba Identificador OUTCL3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OUTCL2",114, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 280: // OUTCL2 ::= Identificador OUTCL3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OUTCL2",114, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 281: // OUTCL3 ::= COLST 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OUTCL3",115, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 282: // OUTCL3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OUTCL3",115, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 283: // COLST ::= ParentesisAbrir COLST1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLST",116, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 284: // COLST1 ::= Identificador COLST2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLST1",117, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 285: // COLST2 ::= Coma COLST1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLST2",118, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 286: // COLST2 ::= ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLST2",118, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 287: // EXPR_INSERT ::= SEXP 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPR_INSERT",119, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 288: // EXPR_INSERT ::= DatoString 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPR_INSERT",119, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 289: // EXPR_INSERT ::= DatoBit 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPR_INSERT",119, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 290: // COL_CST ::= COL_CST1 COL_CST2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST",120, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 291: // COL_CST1 ::= CONSTRAINT Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST1",121, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 292: // COL_CST1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST1",121, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 293: // COL_CST2 ::= PRIMARY KEY COL_CST3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST2",122, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 294: // COL_CST2 ::= UNIQUE COL_CST3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST2",122, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 295: // COL_CST2 ::= COL_CST7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST2",122, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 296: // COL_CST2 ::= CHECK COL_CST15 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST2",122, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 297: // COL_CST3 ::= CLUSTERED COL_CST4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST3",123, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 298: // COL_CST3 ::= COL_CST4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST3",123, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 299: // COL_CST4 ::= WITH COL_CST5 COL_CST6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST4",124, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parser$act_num+"found in internal parse table");

        }
    } /* end of method */
  /** Method 1 with the actual generated action code for actions 300 to 600. */
  public final java_cup.runtime.Symbol CUP$parser$do_action_part00000001(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 300: // COL_CST4 ::= COL_CST6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST4",124, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 301: // COL_CST5 ::= FILLFACTOR Igual INTEGER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST5",125, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 302: // COL_CST5 ::= ParentesisAbrir FILLFACTOR Igual INTEGER ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST5",125, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 303: // COL_CST6 ::= ON Identificador ParentesisAbrir Identificador ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST6",126, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 304: // COL_CST6 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST6",126, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 305: // COL_CST7 ::= COL_CST8 REFERENCES Identificador COL_CST9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST7",127, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 306: // COL_CST8 ::= FOREIGN KEY 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST8",128, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 307: // COL_CST8 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST8",128, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 308: // COL_CST9 ::= Punto Identificador COL_CST10 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST9",129, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 309: // COL_CST9 ::= COL_CST10 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST9",129, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 310: // COL_CST10 ::= ParentesisAbrir Identificador ParentesisCerrar COL_CST11 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST10",130, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 311: // COL_CST11 ::= ON COL_CST12 COL_CST13 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST11",131, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 312: // COL_CST11 ::= NOT FOR REPLICATION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST11",131, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 313: // COL_CST11 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST11",131, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 314: // COL_CST12 ::= DELETE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST12",132, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 315: // COL_CST12 ::= UPDATE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST12",132, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 316: // COL_CST13 ::= NO ACTION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST13",133, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 317: // COL_CST13 ::= CASCADE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST13",133, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 318: // COL_CST13 ::= SET COL_CST14 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST13",133, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 319: // COL_CST14 ::= NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST14",134, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 320: // COL_CST14 ::= DEFAULT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST14",134, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 321: // COL_CST15 ::= NOT FOR REPLICATION COL_CST16 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST15",135, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 322: // COL_CST15 ::= COL_CST16 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST15",135, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 323: // COL_CST16 ::= ParentesisAbrir EXPRESSION ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST16",136, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 324: // COL_DEF ::= Identificador DATATYPE COL_DEF1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF",137, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 325: // COL_DEF1 ::= COLLATE Identificador COL_DEF2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF1",138, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 326: // COL_DEF1 ::= COL_DEF2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF1",138, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 327: // COL_DEF2 ::= NULL COL_DEF3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF2",139, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 328: // COL_DEF2 ::= NOT NULL COL_DEF3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF2",139, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 329: // COL_DEF2 ::= COL_DEF3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF2",139, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 330: // COL_DEF2 ::= IDENTITY COL_DEF6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF2",139, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 331: // COL_DEF3 ::= CONSTRAINT Identificador COL_DEF10 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF3",140, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 332: // COL_DEF3 ::= COL_CST 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF3",140, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 333: // COL_DEF3 ::= COL_DEF4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF3",140, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 334: // COL_DEF4 ::= DEFAULT CONST_EXP COL_DEF5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF4",141, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 335: // COL_DEF5 ::= WITH VALUES COL_DEF8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF5",142, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 336: // COL_DEF5 ::= COL_DEF8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF5",142, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 337: // COL_DEF6 ::= ParentesisAbrir SEXP Coma SEXP ParentesisCerrar COL_DEF7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF6",143, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 338: // COL_DEF6 ::= COL_DEF7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF6",143, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 339: // COL_DEF7 ::= NOT FOR REPLICATION COL_DEF8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF7",144, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 340: // COL_DEF7 ::= COL_DEF8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF7",144, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 341: // COL_DEF8 ::= ROWGUIDCOL COL_DEF9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF8",145, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 342: // COL_DEF8 ::= COL_DEF9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF8",145, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 343: // COL_DEF10 ::= COL_DEF4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF10",147, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 344: // COL_DEF10 ::= COL_CST 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF10",147, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 345: // TB_CST ::= TB_CST1 TB_CST2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST",148, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 346: // TB_CST1 ::= CONSTRAINT Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST1",149, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 347: // TB_CST1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST1",149, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 348: // TB_CST2 ::= PRIMARY KEY TB_CST3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST2",150, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 349: // TB_CST2 ::= UNIQUE TB_CST3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST2",150, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 350: // TB_CST2 ::= TB_CST7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST2",150, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 351: // TB_CST2 ::= CONNECTION TB_CST17 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST2",150, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 352: // TB_CST2 ::= DEFAULT TB_CST18 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST2",150, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 353: // TB_CST2 ::= CHECK TB_CST15 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST2",150, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 354: // TB_CST3 ::= CLUSTERED TB_CST4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST3",151, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 355: // TB_CST3 ::= TB_CST4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST3",151, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 356: // TB_CST4 ::= WITH TB_CST5 TB_CST6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST4",152, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 357: // TB_CST4 ::= TB_CST6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST4",152, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 358: // TB_CST5 ::= FILLFACTOR Igual INTEGER ParentesisAbrir DatoEntero ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST5",153, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 359: // TB_CST5 ::= ParentesisAbrir FILLFACTOR Igual INTEGER ParentesisAbrir DatoEntero ParentesisCerrar ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST5",153, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 360: // TB_CST6 ::= ON Identificador ParentesisAbrir Identificador ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST6",154, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 361: // TB_CST7 ::= TB_CST8 REFERENCES Identificador TB_CST9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST7",155, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 362: // TB_CST8 ::= FOREIGN KEY 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST8",156, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 363: // TB_CST8 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST8",156, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 364: // TB_CST9 ::= Punto Identificador TB_CST10 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST9",157, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 365: // TB_CST9 ::= TB_CST10 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST9",157, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 366: // TB_CST10 ::= ParentesisAbrir Identificador ParentesisCerrar TB_CST11 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST10",158, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 367: // TB_CST11 ::= ON TB_CST12 TB_CST13 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST11",159, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 368: // TB_CST11 ::= NOT FOR REPLICATION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST11",159, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 369: // TB_CST11 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST11",159, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 370: // TB_CST12 ::= DELETE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST12",160, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 371: // TB_CST12 ::= UPDATE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST12",160, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 372: // TB_CST13 ::= NO ACTION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST13",161, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 373: // TB_CST13 ::= CASCADE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST13",161, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 374: // TB_CST13 ::= SET TB_CST14 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST13",161, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 375: // TB_CST14 ::= NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST14",162, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 376: // TB_CST14 ::= DEFAULT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST14",162, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 377: // TB_CST15 ::= NOT FOR REPLICATION TB_CST16 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST15",163, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 378: // TB_CST15 ::= TB_CST16 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST15",163, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 379: // TB_CST16 ::= ParentesisAbrir EXPRESSION ParentesisCerrar TB_CST21 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST16",164, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 380: // TB_CST17 ::= ParentesisAbrir TB_CST19 ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST17",165, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 381: // TB_CST18 ::= CONST_EXP FOR Identificador TB_CST23 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST18",166, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 382: // TB_CST19 ::= Identificador TO Identificador TB_CST20 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST19",167, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 383: // TB_CST20 ::= Coma TB_CST19 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST20",168, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 384: // TB_CST20 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST20",168, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 385: // TB_CST21 ::= ON DELETE TB_CST22 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST21",169, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 386: // TB_CST21 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST21",169, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 387: // TB_CST22 ::= NO ACTION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST22",170, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 388: // TB_CST22 ::= CASCADE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST22",170, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 389: // TB_CST23 ::= WITH VALUES 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST23",171, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 390: // TB_CST23 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST23",171, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 391: // SELECT1 ::= SELECT SELECT2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT1",172, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 392: // SELECT2 ::= SELECT3 SELECT4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT2",173, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 393: // SELECT3 ::= ALL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT3",174, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 394: // SELECT3 ::= DISTINCT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT3",174, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 395: // SELECT3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT3",174, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 396: // SELECT4 ::= TOP SELECT5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT4",175, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 397: // SELECT4 ::= SELECT7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT4",175, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 398: // SELECT5 ::= ParentesisAbrir SEXP ParentesisCerrar SELECT6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT5",176, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 399: // SELECT6 ::= PERCENT SELECT7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT6",177, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 400: // SELECT6 ::= SELECT7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT6",177, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 401: // SELECT7 ::= SELIST SELECT8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT7",178, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 402: // SELECT8 ::= INTO SELECT9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT8",179, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 403: // SELECT8 ::= SELECT11 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT8",179, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 404: // SELECT9 ::= OBJECT SELECT11 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT9",180, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 405: // SELECT11 ::= FROM JOINTB SELECT17 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT11",181, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 406: // SELECT11 ::= SELECT12 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT11",181, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 407: // SELECT12 ::= WHERE SH_COND SELECT13 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT12",182, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 408: // SELECT12 ::= SELECT13 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT12",182, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 409: // SELECT13 ::= GROUP BY EXPRESSION SELECT18 SELECT14 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT13",183, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 410: // SELECT13 ::= SELECT14 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT13",183, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 411: // SELECT14 ::= HAVING SH_COND SELECT15 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT14",184, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 412: // SELECT14 ::= SELECT15 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT14",184, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 413: // SELECT15 ::= ORDER BY ORDERB 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT15",185, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 414: // SELECT15 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT15",185, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 415: // SELECT17 ::= Coma JOINTB SELECT17 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT17",186, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 416: // SELECT17 ::= SELECT12 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT17",186, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 417: // SELECT18 ::= Coma EXPRESSION SELECT18 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT18",187, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 418: // SELECT18 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT18",187, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 419: // SELECT19 ::= GO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT19",188, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 420: // SELECT19 ::= PuntoComa 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT19",188, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 421: // INSERT0 ::= INSERT INSERT1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT0",189, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 422: // INSERT1 ::= TOP ParentesisAbrir SEXP ParentesisCerrar INSERT2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT1",190, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 423: // INSERT1 ::= INSERT3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT1",190, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 424: // INSERT2 ::= PERCENT INSERT3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT2",191, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 425: // INSERT2 ::= INSERT3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT2",191, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 426: // INSERT3 ::= INTO INSERT4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT3",192, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 427: // INSERT3 ::= INSERT4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT3",192, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 428: // INSERT4 ::= OBJECT INSERT5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT4",193, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 429: // INSERT5 ::= COLST INSERT6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT5",194, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 430: // INSERT5 ::= INSERT6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT5",194, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 431: // INSERT6 ::= OUTCL INSERT7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT6",195, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 432: // INSERT6 ::= INSERT7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT6",195, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 433: // INSERT7 ::= VALUES ParentesisAbrir INSERT8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT7",196, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 434: // INSERT7 ::= SELECT1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT7",196, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 435: // INSERT7 ::= DEFAULT VALUES 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT7",196, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 436: // INSERT8 ::= INSERT10 INSERT11 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT8",197, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 437: // INSERT10 ::= DEFAULT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT10",199, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 438: // INSERT10 ::= NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT10",199, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 439: // INSERT10 ::= EXPRESSION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT10",199, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 440: // INSERT11 ::= Coma INSERT8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT11",200, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 441: // INSERT11 ::= ParentesisCerrar INSERT12 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT11",200, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 442: // INSERT12 ::= Coma VALUES ParentesisAbrir INSERT8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT12",201, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 443: // INSERT12 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT12",201, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 444: // INSERT9 ::= PuntoComa 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT9",198, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 445: // INSERT9 ::= GO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT9",198, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 446: // UPDATE0 ::= UPDATE UPDATE1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE0",202, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 447: // UPDATE1 ::= TOP ParentesisAbrir SEXP ParentesisCerrar UPDATE2 UPDATE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE1",203, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 448: // UPDATE1 ::= UPDATE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE1",203, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 449: // UPDATE2 ::= PERCENT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE2",204, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 450: // UPDATE2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE2",204, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 451: // UPDATE3 ::= OBJECT UPDATE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE3",205, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 452: // UPDATE3 ::= Arroba Identificador UPDATE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE3",205, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 453: // UPDATE4 ::= SET UPDATE5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE4",206, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 454: // UPDATE5 ::= UPDATE6 UPDATE11 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE5",207, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 455: // UPDATE6 ::= Identificador UPDATE7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE6",208, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 456: // UPDATE6 ::= Arroba Identificador Igual UPDATE10 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE6",208, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 457: // UPDATE7 ::= Punto UPDATE8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE7",209, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 458: // UPDATE7 ::= Igual UPDATE9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE7",209, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 459: // UPDATE8 ::= Identificador Igual UPDATE10 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE8",210, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 460: // UPDATE9 ::= EXPRESSION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE9",211, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 461: // UPDATE9 ::= DEFAULT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE9",211, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 462: // UPDATE9 ::= NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE9",211, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 463: // UPDATE10 ::= EXPRESSION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE10",212, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 464: // UPDATE11 ::= Coma UPDATE5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE11",213, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 465: // UPDATE11 ::= UPDATE12 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE11",213, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 466: // UPDATE12 ::= OUTCL UPDATE16 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE12",214, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 467: // UPDATE12 ::= UPDATE16 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE12",214, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 468: // UPDATE16 ::= FROM UPDATE13 UPDATE17 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE16",218, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 469: // UPDATE16 ::= UPDATE17 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE16",218, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 470: // UPDATE17 ::= WHERE EXPRESSION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE17",219, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 471: // UPDATE17 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE17",219, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 472: // UPDATE13 ::= JOINTB UPDATE14 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE13",215, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 473: // UPDATE14 ::= Coma UPDATE13 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE14",216, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 474: // UPDATE15 ::= GO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE15",217, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 475: // UPDATE15 ::= PuntoComa 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE15",217, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 476: // DEL1 ::= DELETE DEL2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL1",220, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 477: // DEL2 ::= TOP ParentesisAbrir SEXP ParentesisCerrar DEL3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL2",221, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 478: // DEL2 ::= DEL4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL2",221, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 479: // DEL3 ::= PERCENT DEL4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL3",222, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 480: // DEL3 ::= DEL4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL3",222, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 481: // DEL4 ::= FROM DEL5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL4",223, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 482: // DEL4 ::= DEL5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL4",223, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 483: // DEL5 ::= OBJECT DEL6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL5",224, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 484: // DEL5 ::= Arroba Identificador DEL6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL5",224, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 485: // DEL6 ::= OUTCL DEL7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL6",225, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 486: // DEL6 ::= DEL7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL6",225, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 487: // DEL7 ::= FROM JOINTB DEL8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL7",226, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 488: // DEL7 ::= DEL9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL7",226, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 489: // DEL8 ::= Coma JOINTB DEL8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL8",227, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 490: // DEL8 ::= DEL9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL8",227, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 491: // DEL9 ::= WHERE EXPRESSION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL9",228, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 492: // DEL9 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL9",228, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 493: // DEL10 ::= PuntoComa 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL10",229, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 494: // DEL10 ::= GO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL10",229, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* select the action handler based on the action number */
      switch (CUP$parser$act_num/300)
        {
          /*. . . . . . . . 0 < #action < 300. . . . . . . . . . . .*/
          case 0: 
              return CUP$parser$do_action_part00000000(
                               CUP$parser$act_num,
                               CUP$parser$parser,
                               CUP$parser$stack,
                               CUP$parser$top);
          /*. . . . . . . . 300 < #action < 600. . . . . . . . . . . .*/
          case 1: 
              return CUP$parser$do_action_part00000001(
                               CUP$parser$act_num,
                               CUP$parser$parser,
                               CUP$parser$stack,
                               CUP$parser$top);
          /* . . . no valid action number: . . .*/
          default:
            throw new Exception("Invalid action number found in internal parse table");

        }      /* end of switch */
    }
}

}
