
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package AnalizadorSintactico.Ascendente;

import java_cup.runtime.*;
import AnalizadorSintactico.Ascendente.Lexemas;
import MiniSql.MiniSql;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import MiniSql.Errores;
import AnalizadorLexico.MyToken;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class parser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u015e\000\002\002\004\000\002\236\007\000\002\236" +
    "\003\000\002\236\004\000\002\236\003\000\002\236\002" +
    "\000\002\237\005\000\002\237\005\000\002\237\002\000" +
    "\002\240\003\000\002\240\002\000\002\002\004\000\002" +
    "\003\005\000\002\003\005\000\002\003\002\000\002\004" +
    "\004\000\002\005\005\000\002\005\005\000\002\005\002" +
    "\000\002\006\005\000\002\006\003\000\002\006\003\000" +
    "\002\006\004\000\002\006\003\000\002\241\003\000\002" +
    "\241\003\000\002\007\004\000\002\010\005\000\002\010" +
    "\002\000\002\011\005\000\002\011\002\000\002\012\004" +
    "\000\002\012\002\000\002\025\005\000\002\026\003\000" +
    "\002\026\003\000\002\013\005\000\002\013\005\000\002" +
    "\013\005\000\002\013\003\000\002\013\005\000\002\014" +
    "\003\000\002\014\003\000\002\014\003\000\002\015\003" +
    "\000\002\015\003\000\002\016\003\000\002\016\003\000" +
    "\002\016\003\000\002\017\003\000\002\017\003\000\002" +
    "\027\003\000\002\027\003\000\002\027\003\000\002\027" +
    "\003\000\002\027\003\000\002\030\003\000\002\030\003" +
    "\000\002\030\003\000\002\030\003\000\002\035\003\000" +
    "\002\031\003\000\002\032\003\000\002\032\003\000\002" +
    "\036\003\000\002\033\003\000\002\033\003\000\002\033" +
    "\003\000\002\033\003\000\002\033\003\000\002\033\003" +
    "\000\002\034\003\000\002\034\003\000\002\034\003\000" +
    "\002\020\004\000\002\020\003\000\002\021\004\000\002" +
    "\022\004\000\002\022\004\000\002\022\004\000\002\022" +
    "\004\000\002\022\004\000\002\022\004\000\002\022\004" +
    "\000\002\022\004\000\002\022\004\000\002\022\004\000" +
    "\002\022\004\000\002\022\004\000\002\022\004\000\002" +
    "\023\005\000\002\023\002\000\002\024\005\000\002\024" +
    "\003\000\002\042\003\000\002\042\003\000\002\042\003" +
    "\000\002\042\003\000\002\042\003\000\002\037\005\000" +
    "\002\037\002\000\002\040\005\000\002\041\004\000\002" +
    "\041\002\000\002\244\005\000\002\244\002\000\002\242" +
    "\014\000\002\243\006\000\002\243\002\000\002\043\004" +
    "\000\002\044\005\000\002\044\003\000\002\045\005\000" +
    "\002\045\003\000\002\046\007\000\002\047\003\000\002" +
    "\047\002\000\002\050\004\000\002\050\003\000\002\051" +
    "\005\000\002\051\003\000\002\052\004\000\002\052\003" +
    "\000\002\053\004\000\002\053\003\000\002\054\007\000" +
    "\002\054\003\000\002\055\003\000\002\055\003\000\002" +
    "\056\003\000\002\057\005\000\002\057\003\000\002\060" +
    "\006\000\002\061\003\000\002\061\002\000\002\063\003" +
    "\000\002\064\005\000\002\065\004\000\002\065\002\000" +
    "\002\066\007\000\002\066\004\000\002\067\004\000\002" +
    "\067\002\000\002\070\005\000\002\070\002\000\002\071" +
    "\006\000\002\071\003\000\002\072\005\000\002\073\004" +
    "\000\002\073\002\000\002\074\003\000\002\074\004\000" +
    "\002\074\002\000\002\075\005\000\002\075\004\000\002" +
    "\075\003\000\002\075\004\000\002\075\007\000\002\076" +
    "\004\000\002\076\003\000\002\077\005\000\002\077\003" +
    "\000\002\100\005\000\002\100\007\000\002\101\007\000" +
    "\002\101\002\000\002\102\007\000\002\103\004\000\002" +
    "\103\002\000\002\104\004\000\002\104\002\000\002\105" +
    "\006\000\002\105\003\000\002\106\005\000\002\106\002" +
    "\000\002\107\003\000\002\107\003\000\002\110\004\000" +
    "\002\110\003\000\002\110\004\000\002\111\003\000\002" +
    "\111\003\000\002\112\005\000\002\112\002\000\002\113" +
    "\003\000\002\113\002\000\002\114\004\000\002\114\003" +
    "\000\002\114\003\000\002\114\003\000\002\114\003\000" +
    "\002\115\004\000\002\116\004\000\002\116\002\000\002" +
    "\117\006\000\002\117\005\000\002\117\005\000\002\117" +
    "\004\000\002\117\004\000\002\117\004\000\002\120\010" +
    "\000\002\121\003\000\002\121\002\000\002\122\003\000" +
    "\002\122\003\000\002\122\002\000\002\123\005\000\002" +
    "\123\002\000\002\124\007\000\002\124\003\000\002\124" +
    "\002\000\002\125\007\000\002\125\003\000\002\126\011" +
    "\000\002\127\007\000\002\127\003\000\002\130\006\000" +
    "\002\131\003\000\002\131\003\000\002\132\004\000\002" +
    "\132\003\000\002\132\004\000\002\133\003\000\002\133" +
    "\003\000\002\134\005\000\002\134\002\000\002\135\011" +
    "\000\002\136\007\000\002\136\002\000\002\137\005\000" +
    "\002\140\004\000\002\140\003\000\002\141\007\000\002" +
    "\141\004\000\002\142\004\000\002\142\002\000\002\143" +
    "\004\000\002\144\005\000\002\144\002\000\002\145\005" +
    "\000\002\146\005\000\002\146\003\000\002\147\004\000" +
    "\002\147\005\000\002\147\003\000\002\150\003\000\002" +
    "\150\004\000\002\150\002\000\002\152\005\000\002\152" +
    "\003\000\002\153\010\000\002\153\003\000\002\154\006" +
    "\000\002\154\003\000\002\155\004\000\002\155\003\000" +
    "\002\156\003\000\002\156\002\000\002\157\010\000\002" +
    "\160\005\000\002\161\003\000\002\161\003\000\002\161" +
    "\002\000\002\162\004\000\002\162\002\000\002\163\006" +
    "\000\002\163\002\000\002\164\011\000\002\165\003\000" +
    "\002\165\003\000\002\166\005\000\002\166\002\000\002" +
    "\167\004\000\002\167\002\000\002\170\006\000\002\170" +
    "\003\000\002\171\012\000\002\172\004\000\002\172\002" +
    "\000\002\173\010\000\002\173\002\000\002\174\003\000" +
    "\002\174\002\000\002\175\004\000\002\175\002\000\002" +
    "\176\011\000\002\176\003\000\002\177\007\000\002\202" +
    "\004\000\002\202\002\000\002\203\005\000\002\204\003" +
    "\000\002\204\002\000\002\205\010\000\002\206\004\000" +
    "\002\206\002\000\002\245\004\000\002\245\004\000\002" +
    "\245\004\000\002\245\004\000\002\207\005\000\002\210" +
    "\004\000\002\210\005\000\002\210\003\000\002\211\004" +
    "\000\002\212\005\000\002\212\004\000\002\212\004\000" +
    "\002\212\006\000\002\212\005\000\002\212\005\000\002" +
    "\213\006\000\002\213\002\000\002\214\004\000\002\214" +
    "\003\000\002\215\004\000\002\215\002\000\002\216\005" +
    "\000\002\216\003\000\002\217\003\000\002\217\004\000" +
    "\002\217\002\000\002\220\004\000\002\220\004\000\002" +
    "\220\004\000\002\221\003\000\002\221\005\000\002\222" +
    "\004\000\002\222\004\000\002\223\004\000\002\223\002" +
    "\000\002\235\004\000\002\235\003\000\002\224\005\000" +
    "\002\224\003\000\002\225\003\000\002\225\005\000\002" +
    "\226\004\000\002\226\002\000\002\227\004\000\002\230" +
    "\005\000\002\230\002\000\002\231\003\000\002\231\003" +
    "\000\002\232\003\000\002\232\003\000\002\233\003\000" +
    "\002\233\003\000\002\234\004\000\002\234\005" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u022d\000\014\002\ufffc\003\010\006\006\015\011\250" +
    "\007\001\002\000\014\002\ufff7\006\ufff7\072\ufff7\250\ufff7" +
    "\327\u022b\001\002\000\014\002\ufff7\006\ufff7\072\ufff7\250" +
    "\ufff7\327\u022b\001\002\000\016\053\046\114\053\176\052" +
    "\177\045\237\051\264\050\001\002\000\004\237\024\001" +
    "\002\000\014\002\ufffd\003\010\006\006\015\011\250\007" +
    "\001\002\000\010\006\006\072\ufff9\250\007\001\002\000" +
    "\004\002\uffff\001\002\000\004\002\014\001\002\000\004" +
    "\002\001\001\002\000\004\072\016\001\002\000\006\327" +
    "\020\u0154\021\001\002\000\014\002\ufffc\003\010\006\006" +
    "\015\011\250\007\001\002\000\022\002\uffe8\003\uffe8\006" +
    "\uffe8\015\uffe8\072\uffe8\250\uffe8\327\uffe8\u0154\uffe8\001\002" +
    "\000\022\002\uffe9\003\uffe9\006\uffe9\015\uffe9\072\uffe9\250" +
    "\uffe9\327\uffe9\u0154\uffe9\001\002\000\004\002\000\001\002" +
    "\000\004\002\ufffe\001\002\000\004\u0141\026\001\002\000" +
    "\010\327\ufeda\u0154\ufeda\u0155\041\001\002\000\066\004\uffe5" +
    "\006\uffe5\016\uffe5\025\uffe5\067\uffe5\072\uffe5\126\uffe5\141" +
    "\uffe5\146\uffe5\271\uffe5\327\uffe5\u0142\uffe5\u0143\uffe5\u0144\uffe5" +
    "\u0145\uffe5\u0146\uffe5\u0147\uffe5\u014b\uffe5\u014c\uffe5\u014d\uffe5\u014e" +
    "\uffe5\u0150\uffe5\u0154\uffe5\u0155\uffe5\u0156\030\u015a\uffe5\001\002" +
    "\000\064\004\uffe7\006\uffe7\016\uffe7\025\uffe7\067\uffe7\072" +
    "\uffe7\126\uffe7\141\uffe7\146\uffe7\271\uffe7\327\uffe7\u0142\uffe7" +
    "\u0143\uffe7\u0144\uffe7\u0145\uffe7\u0146\uffe7\u0147\uffe7\u014b\uffe7\u014c" +
    "\uffe7\u014d\uffe7\u014e\uffe7\u0150\uffe7\u0154\uffe7\u0155\uffe7\u015a\uffe7" +
    "\001\002\000\004\u0141\031\001\002\000\066\004\uffe3\006" +
    "\uffe3\016\uffe3\025\uffe3\067\uffe3\072\uffe3\126\uffe3\141\uffe3" +
    "\146\uffe3\271\uffe3\327\uffe3\u0142\uffe3\u0143\uffe3\u0144\uffe3\u0145" +
    "\uffe3\u0146\uffe3\u0147\uffe3\u014b\uffe3\u014c\uffe3\u014d\uffe3\u014e\uffe3" +
    "\u0150\uffe3\u0154\uffe3\u0155\uffe3\u0156\033\u015a\uffe3\001\002\000" +
    "\064\004\uffe6\006\uffe6\016\uffe6\025\uffe6\067\uffe6\072\uffe6" +
    "\126\uffe6\141\uffe6\146\uffe6\271\uffe6\327\uffe6\u0142\uffe6\u0143" +
    "\uffe6\u0144\uffe6\u0145\uffe6\u0146\uffe6\u0147\uffe6\u014b\uffe6\u014c\uffe6" +
    "\u014d\uffe6\u014e\uffe6\u0150\uffe6\u0154\uffe6\u0155\uffe6\u015a\uffe6\001" +
    "\002\000\004\u0141\034\001\002\000\066\004\uffe1\006\uffe1" +
    "\016\uffe1\025\uffe1\067\uffe1\072\uffe1\126\uffe1\141\uffe1\146" +
    "\uffe1\271\uffe1\327\uffe1\u0142\uffe1\u0143\uffe1\u0144\uffe1\u0145\uffe1" +
    "\u0146\uffe1\u0147\uffe1\u014b\uffe1\u014c\uffe1\u014d\uffe1\u014e\uffe1\u0150" +
    "\uffe1\u0154\uffe1\u0155\uffe1\u0156\036\u015a\uffe1\001\002\000\064" +
    "\004\uffe4\006\uffe4\016\uffe4\025\uffe4\067\uffe4\072\uffe4\126" +
    "\uffe4\141\uffe4\146\uffe4\271\uffe4\327\uffe4\u0142\uffe4\u0143\uffe4" +
    "\u0144\uffe4\u0145\uffe4\u0146\uffe4\u0147\uffe4\u014b\uffe4\u014c\uffe4\u014d" +
    "\uffe4\u014e\uffe4\u0150\uffe4\u0154\uffe4\u0155\uffe4\u015a\uffe4\001\002" +
    "\000\004\u0141\037\001\002\000\064\004\uffe2\006\uffe2\016" +
    "\uffe2\025\uffe2\067\uffe2\072\uffe2\126\uffe2\141\uffe2\146\uffe2" +
    "\271\uffe2\327\uffe2\u0142\uffe2\u0143\uffe2\u0144\uffe2\u0145\uffe2\u0146" +
    "\uffe2\u0147\uffe2\u014b\uffe2\u014c\uffe2\u014d\uffe2\u014e\uffe2\u0150\uffe2" +
    "\u0154\uffe2\u0155\uffe2\u015a\uffe2\001\002\000\010\327\ufeda\u0154" +
    "\ufeda\u0155\041\001\002\000\004\u0141\026\001\002\000\010" +
    "\327\ufedb\u0154\ufedb\u0155\ufedb\001\002\000\006\327\020\u0154" +
    "\021\001\002\000\014\002\ufedc\006\ufedc\072\ufedc\250\ufedc" +
    "\327\ufedc\001\002\000\004\u0141\231\001\002\000\006\045" +
    "\u0213\u0141\u0215\001\002\000\006\327\ufed2\u0154\ufed2\001\002" +
    "\000\004\u0141\u01fd\001\002\000\004\u0141\026\001\002\000" +
    "\004\u0141\231\001\002\000\004\u0141\057\001\002\000\006" +
    "\327\020\u0154\021\001\002\000\014\002\ufed5\006\ufed5\072" +
    "\ufed5\250\ufed5\327\ufed5\001\002\000\006\327\ufed6\u0154\ufed6" +
    "\001\002\000\006\u0156\061\u0159\ufeeb\001\002\000\004\u0159" +
    "\063\001\002\000\004\u0141\062\001\002\000\004\u0159\ufeec" +
    "\001\002\000\006\u015a\ufee9\u015d\065\001\002\000\004\u015a" +
    "\153\001\002\000\004\u0141\066\001\002\000\040\011\067" +
    "\312\ufee7\322\ufee7\330\ufee7\345\ufee7\356\ufee7\361\ufee7\364" +
    "\ufee7\u0107\ufee7\u0113\ufee7\u011d\ufee7\u0120\ufee7\u012d\ufee7\u012e\ufee7" +
    "\u0141\ufee7\001\002\000\040\015\ufee8\312\ufee8\322\ufee8\330" +
    "\ufee8\345\ufee8\356\ufee8\361\ufee8\364\ufee8\u0107\ufee8\u0113\ufee8" +
    "\u011d\ufee8\u0120\ufee8\u012d\ufee8\u012e\ufee8\u0141\ufee8\001\002\000" +
    "\036\312\107\322\104\330\100\345\110\356\102\361\071" +
    "\364\073\u0107\074\u0113\075\u011d\072\u0120\077\u012d\076\u012e" +
    "\101\u0141\103\001\002\000\062\011\uffa6\015\uffa6\025\uffa6" +
    "\032\uffa6\036\uffa6\057\uffa6\106\uffa6\107\uffa6\122\uffa6\150" +
    "\uffa6\151\uffa6\174\uffa6\205\uffa6\217\uffa6\254\uffa6\263\uffa6" +
    "\271\uffa6\327\uffa6\u0138\uffa6\u014c\uffa6\u0154\uffa6\u0155\uffa6\u0159" +
    "\112\u015a\uffa6\001\002\000\062\011\uffa6\015\uffa6\025\uffa6" +
    "\032\uffa6\036\uffa6\057\uffa6\106\uffa6\107\uffa6\122\uffa6\150" +
    "\uffa6\151\uffa6\174\uffa6\205\uffa6\217\uffa6\254\uffa6\263\uffa6" +
    "\271\uffa6\327\uffa6\u0138\uffa6\u014c\uffa6\u0154\uffa6\u0155\uffa6\u0159" +
    "\112\u015a\uffa6\001\002\000\062\011\uffa6\015\uffa6\025\uffa6" +
    "\032\uffa6\036\uffa6\057\uffa6\106\uffa6\107\uffa6\122\uffa6\150" +
    "\uffa6\151\uffa6\174\uffa6\205\uffa6\217\uffa6\254\uffa6\263\uffa6" +
    "\271\uffa6\327\uffa6\u0138\uffa6\u014c\uffa6\u0154\uffa6\u0155\uffa6\u0159" +
    "\112\u015a\uffa6\001\002\000\062\011\uffa6\015\uffa6\025\uffa6" +
    "\032\uffa6\036\uffa6\057\uffa6\106\uffa6\107\uffa6\122\uffa6\150" +
    "\uffa6\151\uffa6\174\uffa6\205\uffa6\217\uffa6\254\uffa6\263\uffa6" +
    "\271\uffa6\327\uffa6\u0138\uffa6\u014c\uffa6\u0154\uffa6\u0155\uffa6\u0159" +
    "\112\u015a\uffa6\001\002\000\062\011\uffa6\015\uffa6\025\uffa6" +
    "\032\uffa6\036\uffa6\057\uffa6\106\uffa6\107\uffa6\122\uffa6\150" +
    "\uffa6\151\uffa6\174\uffa6\205\uffa6\217\uffa6\254\uffa6\263\uffa6" +
    "\271\uffa6\327\uffa6\u0138\uffa6\u014c\uffa6\u0154\uffa6\u0155\uffa6\u0159" +
    "\112\u015a\uffa6\001\002\000\062\011\uffa6\015\uffa6\025\uffa6" +
    "\032\uffa6\036\uffa6\057\uffa6\106\uffa6\107\uffa6\122\uffa6\150" +
    "\uffa6\151\uffa6\174\uffa6\205\uffa6\217\uffa6\254\uffa6\263\uffa6" +
    "\271\uffa6\327\uffa6\u0138\uffa6\u014c\uffa6\u0154\uffa6\u0155\uffa6\u0159" +
    "\112\u015a\uffa6\001\002\000\062\011\uffa6\015\uffa6\025\uffa6" +
    "\032\uffa6\036\uffa6\057\uffa6\106\uffa6\107\uffa6\122\uffa6\150" +
    "\uffa6\151\uffa6\174\uffa6\205\uffa6\217\uffa6\254\uffa6\263\uffa6" +
    "\271\uffa6\327\uffa6\u0138\uffa6\u014c\uffa6\u0154\uffa6\u0155\uffa6\u0159" +
    "\112\u015a\uffa6\001\002\000\062\011\uffa6\015\uffa6\025\uffa6" +
    "\032\uffa6\036\uffa6\057\uffa6\106\uffa6\107\uffa6\122\uffa6\150" +
    "\uffa6\151\uffa6\174\uffa6\205\uffa6\217\uffa6\254\uffa6\263\uffa6" +
    "\271\uffa6\327\uffa6\u0138\uffa6\u014c\uffa6\u0154\uffa6\u0155\uffa6\u0159" +
    "\112\u015a\uffa6\001\002\000\062\011\uffa6\015\uffa6\025\uffa6" +
    "\032\uffa6\036\uffa6\057\uffa6\106\uffa6\107\uffa6\122\uffa6\150" +
    "\uffa6\151\uffa6\174\uffa6\205\uffa6\217\uffa6\254\uffa6\263\uffa6" +
    "\271\uffa6\327\uffa6\u0138\uffa6\u014c\uffa6\u0154\uffa6\u0155\uffa6\u0159" +
    "\112\u015a\uffa6\001\002\000\062\011\uffa6\015\uffa6\025\uffa6" +
    "\032\uffa6\036\uffa6\057\uffa6\106\uffa6\107\uffa6\122\uffa6\150" +
    "\uffa6\151\uffa6\174\uffa6\205\uffa6\217\uffa6\254\uffa6\263\uffa6" +
    "\271\uffa6\327\uffa6\u0138\uffa6\u014c\uffa6\u0154\uffa6\u0155\uffa6\u0159" +
    "\112\u015a\uffa6\001\002\000\004\u0156\136\001\002\000\062" +
    "\011\uffa6\015\uffa6\025\uffa6\032\uffa6\036\uffa6\057\uffa6\106" +
    "\uffa6\107\uffa6\122\uffa6\150\uffa6\151\uffa6\174\uffa6\205\uffa6" +
    "\217\uffa6\254\uffa6\263\uffa6\271\uffa6\327\uffa6\u0138\uffa6\u014c" +
    "\uffa6\u0154\uffa6\u0155\uffa6\u0159\112\u015a\uffa6\001\002\000\010" +
    "\u014c\123\u0155\ufee5\u015a\ufee5\001\002\000\060\011\uffb6\015" +
    "\uffb6\025\uffb6\032\uffb6\036\uffb6\057\uffb6\106\uffb6\107\uffb6" +
    "\122\uffb6\150\uffb6\151\uffb6\174\uffb6\205\uffb6\217\uffb6\254" +
    "\uffb6\263\uffb6\271\uffb6\327\uffb6\u0138\uffb6\u014c\uffb6\u0154\uffb6" +
    "\u0155\uffb6\u015a\uffb6\001\002\000\062\011\uffa6\015\uffa6\025" +
    "\uffa6\032\uffa6\036\uffa6\057\uffa6\106\uffa6\107\uffa6\122\uffa6" +
    "\150\uffa6\151\uffa6\174\uffa6\205\uffa6\217\uffa6\254\uffa6\263" +
    "\uffa6\271\uffa6\327\uffa6\u0138\uffa6\u014c\uffa6\u0154\uffa6\u0155\uffa6" +
    "\u0159\112\u015a\uffa6\001\002\000\062\011\uffa6\015\uffa6\025" +
    "\uffa6\032\uffa6\036\uffa6\057\uffa6\106\uffa6\107\uffa6\122\uffa6" +
    "\150\uffa6\151\uffa6\174\uffa6\205\uffa6\217\uffa6\254\uffa6\263" +
    "\uffa6\271\uffa6\327\uffa6\u0138\uffa6\u014c\uffa6\u0154\uffa6\u0155\uffa6" +
    "\u0159\112\u015a\uffa6\001\002\000\060\011\uffa9\015\uffa9\025" +
    "\uffa9\032\uffa9\036\uffa9\057\uffa9\106\uffa9\107\uffa9\122\uffa9" +
    "\150\uffa9\151\uffa9\174\uffa9\205\uffa9\217\uffa9\254\uffa9\263" +
    "\uffa9\271\uffa9\327\uffa9\u0138\uffa9\u014c\uffa9\u0154\uffa9\u0155\uffa9" +
    "\u015a\uffa9\001\002\000\004\u013c\113\001\002\000\006\u0155" +
    "\114\u015a\116\001\002\000\004\u013c\117\001\002\000\060" +
    "\011\uffa7\015\uffa7\025\uffa7\032\uffa7\036\uffa7\057\uffa7\106" +
    "\uffa7\107\uffa7\122\uffa7\150\uffa7\151\uffa7\174\uffa7\205\uffa7" +
    "\217\uffa7\254\uffa7\263\uffa7\271\uffa7\327\uffa7\u0138\uffa7\u014c" +
    "\uffa7\u0154\uffa7\u0155\uffa7\u015a\uffa7\001\002\000\060\011\uffa4" +
    "\015\uffa4\025\uffa4\032\uffa4\036\uffa4\057\uffa4\106\uffa4\107" +
    "\uffa4\122\uffa4\150\uffa4\151\uffa4\174\uffa4\205\uffa4\217\uffa4" +
    "\254\uffa4\263\uffa4\271\uffa4\327\uffa4\u0138\uffa4\u014c\uffa4\u0154" +
    "\uffa4\u0155\uffa4\u015a\uffa4\001\002\000\004\u015a\120\001\002" +
    "\000\060\011\uffa5\015\uffa5\025\uffa5\032\uffa5\036\uffa5\057" +
    "\uffa5\106\uffa5\107\uffa5\122\uffa5\150\uffa5\151\uffa5\174\uffa5" +
    "\205\uffa5\217\uffa5\254\uffa5\263\uffa5\271\uffa5\327\uffa5\u0138" +
    "\uffa5\u014c\uffa5\u0154\uffa5\u0155\uffa5\u015a\uffa5\001\002\000\060" +
    "\011\uffb1\015\uffb1\025\uffb1\032\uffb1\036\uffb1\057\uffb1\106" +
    "\uffb1\107\uffb1\122\uffb1\150\uffb1\151\uffb1\174\uffb1\205\uffb1" +
    "\217\uffb1\254\uffb1\263\uffb1\271\uffb1\327\uffb1\u0138\uffb1\u014c" +
    "\uffb1\u0154\uffb1\u0155\uffb1\u015a\uffb1\001\002\000\006\u0155\132" +
    "\u015a\ufee0\001\002\000\014\151\127\u013c\130\u013d\126\u013e" +
    "\125\u013f\131\001\002\000\006\u0155\ufee6\u015a\ufee6\001\002" +
    "\000\016\011\uffa0\106\uffa0\271\uffa0\u0138\uffa0\u0155\uffa0\u015a" +
    "\uffa0\001\002\000\016\011\uffa2\106\uffa2\271\uffa2\u0138\uffa2" +
    "\u0155\uffa2\u015a\uffa2\001\002\000\016\011\uff9f\106\uff9f\271" +
    "\uff9f\u0138\uff9f\u0155\uff9f\u015a\uff9f\001\002\000\016\011\uffa1" +
    "\106\uffa1\271\uffa1\u0138\uffa1\u0155\uffa1\u015a\uffa1\001\002\000" +
    "\016\011\uffa3\106\uffa3\271\uffa3\u0138\uffa3\u0155\uffa3\u015a\uffa3" +
    "\001\002\000\006\u015a\ufee9\u015d\065\001\002\000\004\u015a" +
    "\ufeea\001\002\000\004\u015a\ufee1\001\002\000\060\011\uffae" +
    "\015\uffae\025\uffae\032\uffae\036\uffae\057\uffae\106\uffae\107" +
    "\uffae\122\uffae\150\uffae\151\uffae\174\uffae\205\uffae\217\uffae" +
    "\254\uffae\263\uffae\271\uffae\327\uffae\u0138\uffae\u014c\uffae\u0154" +
    "\uffae\u0155\uffae\u015a\uffae\001\002\000\004\u0141\140\001\002" +
    "\000\060\011\uffb7\015\uffb7\025\uffb7\032\uffb7\036\uffb7\057" +
    "\uffb7\106\uffb7\107\uffb7\122\uffb7\150\uffb7\151\uffb7\174\uffb7" +
    "\205\uffb7\217\uffb7\254\uffb7\263\uffb7\271\uffb7\327\uffb7\u0138" +
    "\uffb7\u014c\uffb7\u0154\uffb7\u0155\uffb7\u015a\uffb7\001\002\000\060" +
    "\011\uffb5\015\uffb5\025\uffb5\032\uffb5\036\uffb5\057\uffb5\106" +
    "\uffb5\107\uffb5\122\uffb5\150\uffb5\151\uffb5\174\uffb5\205\uffb5" +
    "\217\uffb5\254\uffb5\263\uffb5\271\uffb5\327\uffb5\u0138\uffb5\u014c" +
    "\uffb5\u0154\uffb5\u0155\uffb5\u015a\uffb5\001\002\000\060\011\uffab" +
    "\015\uffab\025\uffab\032\uffab\036\uffab\057\uffab\106\uffab\107" +
    "\uffab\122\uffab\150\uffab\151\uffab\174\uffab\205\uffab\217\uffab" +
    "\254\uffab\263\uffab\271\uffab\327\uffab\u0138\uffab\u014c\uffab\u0154" +
    "\uffab\u0155\uffab\u015a\uffab\001\002\000\060\011\uffb0\015\uffb0" +
    "\025\uffb0\032\uffb0\036\uffb0\057\uffb0\106\uffb0\107\uffb0\122" +
    "\uffb0\150\uffb0\151\uffb0\174\uffb0\205\uffb0\217\uffb0\254\uffb0" +
    "\263\uffb0\271\uffb0\327\uffb0\u0138\uffb0\u014c\uffb0\u0154\uffb0\u0155" +
    "\uffb0\u015a\uffb0\001\002\000\060\011\uffb4\015\uffb4\025\uffb4" +
    "\032\uffb4\036\uffb4\057\uffb4\106\uffb4\107\uffb4\122\uffb4\150" +
    "\uffb4\151\uffb4\174\uffb4\205\uffb4\217\uffb4\254\uffb4\263\uffb4" +
    "\271\uffb4\327\uffb4\u0138\uffb4\u014c\uffb4\u0154\uffb4\u0155\uffb4\u015a" +
    "\uffb4\001\002\000\060\011\uffa8\015\uffa8\025\uffa8\032\uffa8" +
    "\036\uffa8\057\uffa8\106\uffa8\107\uffa8\122\uffa8\150\uffa8\151" +
    "\uffa8\174\uffa8\205\uffa8\217\uffa8\254\uffa8\263\uffa8\271\uffa8" +
    "\327\uffa8\u0138\uffa8\u014c\uffa8\u0154\uffa8\u0155\uffa8\u015a\uffa8\001" +
    "\002\000\060\011\uffac\015\uffac\025\uffac\032\uffac\036\uffac" +
    "\057\uffac\106\uffac\107\uffac\122\uffac\150\uffac\151\uffac\174" +
    "\uffac\205\uffac\217\uffac\254\uffac\263\uffac\271\uffac\327\uffac" +
    "\u0138\uffac\u014c\uffac\u0154\uffac\u0155\uffac\u015a\uffac\001\002\000" +
    "\060\011\uffaf\015\uffaf\025\uffaf\032\uffaf\036\uffaf\057\uffaf" +
    "\106\uffaf\107\uffaf\122\uffaf\150\uffaf\151\uffaf\174\uffaf\205" +
    "\uffaf\217\uffaf\254\uffaf\263\uffaf\271\uffaf\327\uffaf\u0138\uffaf" +
    "\u014c\uffaf\u0154\uffaf\u0155\uffaf\u015a\uffaf\001\002\000\060\011" +
    "\uffaa\015\uffaa\025\uffaa\032\uffaa\036\uffaa\057\uffaa\106\uffaa" +
    "\107\uffaa\122\uffaa\150\uffaa\151\uffaa\174\uffaa\205\uffaa\217" +
    "\uffaa\254\uffaa\263\uffaa\271\uffaa\327\uffaa\u0138\uffaa\u014c\uffaa" +
    "\u0154\uffaa\u0155\uffaa\u015a\uffaa\001\002\000\060\011\uffb2\015" +
    "\uffb2\025\uffb2\032\uffb2\036\uffb2\057\uffb2\106\uffb2\107\uffb2" +
    "\122\uffb2\150\uffb2\151\uffb2\174\uffb2\205\uffb2\217\uffb2\254" +
    "\uffb2\263\uffb2\271\uffb2\327\uffb2\u0138\uffb2\u014c\uffb2\u0154\uffb2" +
    "\u0155\uffb2\u015a\uffb2\001\002\000\060\011\uffad\015\uffad\025" +
    "\uffad\032\uffad\036\uffad\057\uffad\106\uffad\107\uffad\122\uffad" +
    "\150\uffad\151\uffad\174\uffad\205\uffad\217\uffad\254\uffad\263" +
    "\uffad\271\uffad\327\uffad\u0138\uffad\u014c\uffad\u0154\uffad\u0155\uffad" +
    "\u015a\uffad\001\002\000\060\011\uffb3\015\uffb3\025\uffb3\032" +
    "\uffb3\036\uffb3\057\uffb3\106\uffb3\107\uffb3\122\uffb3\150\uffb3" +
    "\151\uffb3\174\uffb3\205\uffb3\217\uffb3\254\uffb3\263\uffb3\271" +
    "\uffb3\327\uffb3\u0138\uffb3\u014c\uffb3\u0154\uffb3\u0155\uffb3\u015a\uffb3" +
    "\001\002\000\004\u013b\154\001\002\000\036\312\107\322" +
    "\104\330\100\345\110\356\102\361\071\364\073\u0107\074" +
    "\u0113\075\u011d\072\u0120\077\u012d\076\u012e\101\u0141\103\001" +
    "\002\000\010\011\067\015\ufee7\271\161\001\002\000\006" +
    "\327\ufee3\u0154\ufee3\001\002\000\006\327\ufeed\u0154\ufeed\001" +
    "\002\000\004\015\170\001\002\000\004\u013b\162\001\002" +
    "\000\004\151\163\001\002\000\004\156\164\001\002\000" +
    "\004\151\165\001\002\000\004\355\166\001\002\000\006" +
    "\011\067\015\ufee7\001\002\000\006\327\ufee4\u0154\ufee4\001" +
    "\002\000\004\211\171\001\002\000\014\u013c\175\u013d\204" +
    "\u0141\026\u0159\200\u015d\203\001\002\000\004\072\173\001" +
    "\002\000\006\327\020\u0154\021\001\002\000\006\327\ufee2" +
    "\u0154\ufee2\001\002\000\046\016\uffed\072\uffed\126\uffed\141" +
    "\uffed\u0142\uffed\u0143\uffed\u0144\uffed\u0145\uffed\u0146\uffed\u0147\uffed" +
    "\u014b\uffed\u014c\uffed\u014d\uffed\u014e\uffed\u0150\uffed\u0154\uffed\u0155" +
    "\uffed\u015a\uffed\001\002\000\006\072\ufedd\u0154\227\001\002" +
    "\000\046\016\uffea\072\uffea\126\uffea\141\uffea\u0142\uffea\u0143" +
    "\uffea\u0144\uffea\u0145\uffea\u0146\uffea\u0147\uffea\u014b\uffea\u014c\uffea" +
    "\u014d\uffea\u014e\uffea\u0150\uffea\u0154\uffea\u0155\uffea\u015a\uffea\001" +
    "\002\000\014\u013c\175\u013d\204\u0141\026\u0159\200\u015d\203" +
    "\001\002\000\046\016\uffef\072\uffef\126\uffef\141\uffef\u0142" +
    "\uffef\u0143\uffef\u0144\217\u0145\215\u0146\uffef\u0147\uffef\u014b\uffef" +
    "\u014c\uffef\u014d\uffef\u014e\uffef\u0150\uffef\u0154\uffef\u0155\uffef\u015a" +
    "\uffef\001\002\000\046\016\ufff3\072\ufff3\126\ufff3\141\ufff3" +
    "\u0142\206\u0143\207\u0144\ufff3\u0145\ufff3\u0146\ufff3\u0147\ufff3\u014b" +
    "\ufff3\u014c\ufff3\u014d\ufff3\u014e\ufff3\u0150\ufff3\u0154\ufff3\u0155\ufff3" +
    "\u015a\ufff3\001\002\000\004\u0141\205\001\002\000\046\016" +
    "\uffec\072\uffec\126\uffec\141\uffec\u0142\uffec\u0143\uffec\u0144\uffec" +
    "\u0145\uffec\u0146\uffec\u0147\uffec\u014b\uffec\u014c\uffec\u014d\uffec\u014e" +
    "\uffec\u0150\uffec\u0154\uffec\u0155\uffec\u015a\uffec\001\002\000\046" +
    "\016\uffeb\072\uffeb\126\uffeb\141\uffeb\u0142\uffeb\u0143\uffeb\u0144" +
    "\uffeb\u0145\uffeb\u0146\uffeb\u0147\uffeb\u014b\uffeb\u014c\uffeb\u014d\uffeb" +
    "\u014e\uffeb\u0150\uffeb\u0154\uffeb\u0155\uffeb\u015a\uffeb\001\002\000" +
    "\014\u013c\175\u013d\204\u0141\026\u0159\200\u015d\203\001\002" +
    "\000\014\u013c\175\u013d\204\u0141\026\u0159\200\u015d\203\001" +
    "\002\000\046\016\ufff6\072\ufff6\126\ufff6\141\ufff6\u0142\ufff6" +
    "\u0143\ufff6\u0144\ufff6\u0145\ufff6\u0146\ufff6\u0147\ufff6\u014b\ufff6\u014c" +
    "\ufff6\u014d\ufff6\u014e\ufff6\u0150\ufff6\u0154\ufff6\u0155\ufff6\u015a\ufff6" +
    "\001\002\000\046\016\ufff3\072\ufff3\126\ufff3\141\ufff3\u0142" +
    "\206\u0143\207\u0144\ufff3\u0145\ufff3\u0146\ufff3\u0147\ufff3\u014b\ufff3" +
    "\u014c\ufff3\u014d\ufff3\u014e\ufff3\u0150\ufff3\u0154\ufff3\u0155\ufff3\u015a" +
    "\ufff3\001\002\000\046\016\ufff4\072\ufff4\126\ufff4\141\ufff4" +
    "\u0142\ufff4\u0143\ufff4\u0144\ufff4\u0145\ufff4\u0146\ufff4\u0147\ufff4\u014b" +
    "\ufff4\u014c\ufff4\u014d\ufff4\u014e\ufff4\u0150\ufff4\u0154\ufff4\u0155\ufff4" +
    "\u015a\ufff4\001\002\000\046\016\ufff3\072\ufff3\126\ufff3\141" +
    "\ufff3\u0142\206\u0143\207\u0144\ufff3\u0145\ufff3\u0146\ufff3\u0147\ufff3" +
    "\u014b\ufff3\u014c\ufff3\u014d\ufff3\u014e\ufff3\u0150\ufff3\u0154\ufff3\u0155" +
    "\ufff3\u015a\ufff3\001\002\000\046\016\ufff5\072\ufff5\126\ufff5" +
    "\141\ufff5\u0142\ufff5\u0143\ufff5\u0144\ufff5\u0145\ufff5\u0146\ufff5\u0147" +
    "\ufff5\u014b\ufff5\u014c\ufff5\u014d\ufff5\u014e\ufff5\u0150\ufff5\u0154\ufff5" +
    "\u0155\ufff5\u015a\ufff5\001\002\000\014\u013c\175\u013d\204\u0141" +
    "\026\u0159\200\u015d\203\001\002\000\046\016\ufff2\072\ufff2" +
    "\126\ufff2\141\ufff2\u0142\ufff2\u0143\ufff2\u0144\ufff2\u0145\ufff2\u0146" +
    "\ufff2\u0147\ufff2\u014b\ufff2\u014c\ufff2\u014d\ufff2\u014e\ufff2\u0150\ufff2" +
    "\u0154\ufff2\u0155\ufff2\u015a\ufff2\001\002\000\014\u013c\175\u013d" +
    "\204\u0141\026\u0159\200\u015d\203\001\002\000\046\016\uffef" +
    "\072\uffef\126\uffef\141\uffef\u0142\uffef\u0143\uffef\u0144\217\u0145" +
    "\215\u0146\uffef\u0147\uffef\u014b\uffef\u014c\uffef\u014d\uffef\u014e\uffef" +
    "\u0150\uffef\u0154\uffef\u0155\uffef\u015a\uffef\001\002\000\046\016" +
    "\ufff1\072\ufff1\126\ufff1\141\ufff1\u0142\ufff1\u0143\ufff1\u0144\ufff1" +
    "\u0145\ufff1\u0146\ufff1\u0147\ufff1\u014b\ufff1\u014c\ufff1\u014d\ufff1\u014e" +
    "\ufff1\u0150\ufff1\u0154\ufff1\u0155\ufff1\u015a\ufff1\001\002\000\046" +
    "\016\uffef\072\uffef\126\uffef\141\uffef\u0142\uffef\u0143\uffef\u0144" +
    "\217\u0145\215\u0146\uffef\u0147\uffef\u014b\uffef\u014c\uffef\u014d\uffef" +
    "\u014e\uffef\u0150\uffef\u0154\uffef\u0155\uffef\u015a\uffef\001\002\000" +
    "\046\016\ufff0\072\ufff0\126\ufff0\141\ufff0\u0142\ufff0\u0143\ufff0" +
    "\u0144\ufff0\u0145\ufff0\u0146\ufff0\u0147\ufff0\u014b\ufff0\u014c\ufff0\u014d" +
    "\ufff0\u014e\ufff0\u0150\ufff0\u0154\ufff0\u0155\ufff0\u015a\ufff0\001\002" +
    "\000\004\u015a\225\001\002\000\046\016\uffee\072\uffee\126" +
    "\uffee\141\uffee\u0142\uffee\u0143\uffee\u0144\uffee\u0145\uffee\u0146\uffee" +
    "\u0147\uffee\u014b\uffee\u014c\uffee\u014d\uffee\u014e\uffee\u0150\uffee\u0154" +
    "\uffee\u0155\uffee\u015a\uffee\001\002\000\004\072\ufedf\001\002" +
    "\000\004\072\ufede\001\002\000\006\327\ufed9\u0154\ufed9\001" +
    "\002\000\010\u0154\237\u0156\235\u015d\236\001\002\000\006" +
    "\327\uff90\u0154\uff90\001\002\000\006\327\uff92\u0154\uff92\001" +
    "\002\000\006\327\uff94\u0154\uff94\001\002\000\004\u0141\307" +
    "\001\002\000\004\u0141\242\001\002\000\004\u013c\240\001" +
    "\002\000\004\u015d\236\001\002\000\006\327\uff91\u0154\uff91" +
    "\001\002\000\040\011\243\312\uff8d\322\uff8d\330\uff8d\345" +
    "\uff8d\356\uff8d\361\uff8d\364\uff8d\u0107\uff8d\u0113\uff8d\u011d\uff8d" +
    "\u0120\uff8d\u012d\uff8d\u012e\uff8d\u0141\uff8d\001\002\000\036\312" +
    "\uff8e\322\uff8e\330\uff8e\345\uff8e\356\uff8e\361\uff8e\364\uff8e" +
    "\u0107\uff8e\u0113\uff8e\u011d\uff8e\u0120\uff8e\u012d\uff8e\u012e\uff8e\u0141" +
    "\uff8e\001\002\000\036\312\107\322\104\330\100\345\110" +
    "\356\102\361\071\364\073\u0107\074\u0113\075\u011d\072\u0120" +
    "\077\u012d\076\u012e\101\u0141\103\001\002\000\020\011\254" +
    "\106\251\263\256\271\255\u0138\250\u014c\253\u0155\252\001" +
    "\002\000\006\327\uff8f\u0154\uff8f\001\002\000\006\327\uff85" +
    "\u0154\uff85\001\002\000\012\011\254\106\251\271\255\u0155" +
    "\252\001\002\000\004\206\304\001\002\000\004\u015d\236" +
    "\001\002\000\014\151\127\u013c\130\u013d\126\u013e\125\u013f" +
    "\131\001\002\000\006\015\274\072\uff7b\001\002\000\006" +
    "\076\266\077\265\001\002\000\016\011\254\106\251\271" +
    "\255\u0138\250\u014c\253\u0155\252\001\002\000\006\327\uff87" +
    "\u0154\uff87\001\002\000\006\327\uff89\u0154\uff89\001\002\000" +
    "\006\327\uff7e\u0154\uff7e\001\002\000\006\327\uff8b\u0154\uff8b" +
    "\001\002\000\006\327\uff83\u0154\uff83\001\002\000\006\327" +
    "\uff8c\u0154\uff8c\001\002\000\004\011\uff82\001\002\000\004" +
    "\011\uff81\001\002\000\004\011\270\001\002\000\004\u013f" +
    "\271\001\002\000\006\011\uff80\106\uff80\001\002\000\006" +
    "\011\254\106\251\001\002\000\006\327\uff84\u0154\uff84\001" +
    "\002\000\004\072\uff7c\001\002\000\004\072\277\001\002" +
    "\000\006\327\020\u0154\021\001\002\000\006\327\uff7a\u0154" +
    "\uff7a\001\002\000\006\327\uff7d\u0154\uff7d\001\002\000\014" +
    "\011\254\106\251\271\255\u0138\250\u0155\252\001\002\000" +
    "\006\327\uff8a\u0154\uff8a\001\002\000\006\327\uff86\u0154\uff86" +
    "\001\002\000\004\011\254\001\002\000\006\327\uff7f\u0154" +
    "\uff7f\001\002\000\006\327\uff88\u0154\uff88\001\002\000\006" +
    "\u0154\237\u015d\236\001\002\000\006\327\uff93\u0154\uff93\001" +
    "\002\000\016\004\317\006\315\025\313\067\320\146\314" +
    "\271\316\001\002\000\006\327\ufed4\u0154\ufed4\001\002\000" +
    "\004\036\u01fa\001\002\000\004\036\u01f8\001\002\000\004" +
    "\033\u01f6\001\002\000\006\025\u01ef\146\u01f0\001\002\000" +
    "\022\025\uff40\036\346\057\uff40\107\uff40\174\uff40\254\uff40" +
    "\373\uff40\u0141\352\001\002\000\012\033\323\036\324\125" +
    "\330\u0141\327\001\002\000\006\327\ufed1\u0154\ufed1\001\002" +
    "\000\006\327\ufeb3\u0154\ufeb3\001\002\000\006\125\335\u0141" +
    "\ufeaf\001\002\000\010\033\323\125\330\u0141\327\001\002" +
    "\000\006\327\ufeb5\u0154\ufeb5\001\002\000\006\327\ufece\u0154" +
    "\ufece\001\002\000\006\327\ufeb2\u0154\ufeb2\001\002\000\004" +
    "\100\331\001\002\000\006\033\323\u0141\327\001\002\000" +
    "\006\327\ufeb4\u0154\ufeb4\001\002\000\006\327\ufeb6\u0154\ufeb6" +
    "\001\002\000\004\u0141\337\001\002\000\004\100\336\001" +
    "\002\000\004\u0141\ufeb0\001\002\000\010\327\ufeac\u0154\ufeac" +
    "\u0155\341\001\002\000\006\327\ufeb1\u0154\ufeb1\001\002\000" +
    "\004\u0141\343\001\002\000\006\327\ufeae\u0154\ufeae\001\002" +
    "\000\010\327\ufeac\u0154\ufeac\u0155\341\001\002\000\006\327" +
    "\ufead\u0154\ufead\001\002\000\010\327\ufeb7\u0154\ufeb7\u0155\u01eb" +
    "\001\002\000\004\u0141\u01ed\001\002\000\006\327\ufecf\u0154" +
    "\ufecf\001\002\000\010\327\ufeb7\u0154\ufeb7\u0155\u01eb\001\002" +
    "\000\016\025\u0186\057\u0184\107\u0185\174\u0187\254\u018a\373" +
    "\u0188\001\002\000\036\312\107\322\104\330\100\345\110" +
    "\356\102\361\071\364\073\u0107\074\u0113\075\u011d\072\u0120" +
    "\077\u012d\076\u012e\101\u0141\103\001\002\000\042\025\uff6c" +
    "\032\372\036\362\057\uff6c\107\uff6c\122\354\150\371\151" +
    "\360\174\uff6c\205\uff6c\217\364\254\uff6c\271\370\327\uff0a" +
    "\u0154\uff0a\u0155\uff0a\001\002\000\036\025\uff6c\036\362\057" +
    "\uff6c\107\uff6c\150\u017b\151\uff6c\174\uff6c\205\uff6c\217\364" +
    "\254\uff6c\327\uff00\u0154\uff00\u0155\uff00\u0159\u017a\001\002\000" +
    "\010\327\uff01\u0154\uff01\u0155\uff01\001\002\000\022\025\uff69" +
    "\057\uff69\107\uff69\150\u0105\151\u0106\174\uff69\205\uff69\254" +
    "\uff69\001\002\000\010\327\uff02\u0154\uff02\u0155\uff02\001\002" +
    "\000\040\025\uff6c\036\362\057\uff6c\107\uff6c\122\354\150" +
    "\uff6c\151\uff6c\174\uff6c\205\uff6c\217\364\254\uff6c\271\370" +
    "\327\uff0a\u0154\uff0a\u0155\uff0a\001\002\000\010\327\uff08\u0154" +
    "\uff08\u0155\uff08\001\002\000\004\u0141\u0102\001\002\000\010" +
    "\327\uff0c\u0154\uff0c\u0155\uff0c\001\002\000\032\025\uff6c\036" +
    "\362\057\uff6c\107\uff6c\150\uff6c\151\uff6c\174\uff6c\205\uff6c" +
    "\254\uff6c\327\uff00\u0154\uff00\u0155\uff00\001\002\000\010\327" +
    "\uff0d\u0154\uff0d\u0155\uff0d\001\002\000\010\327\uff10\u0154\uff10" +
    "\u0155\uff10\001\002\000\010\327\uff12\u0154\uff12\u0155\uff12\001" +
    "\002\000\004\262\377\001\002\000\004\151\375\001\002" +
    "\000\004\u0141\373\001\002\000\040\025\uff6c\036\362\057" +
    "\uff6c\107\uff6c\122\354\150\371\151\360\174\uff6c\205\uff6c" +
    "\217\364\254\uff6c\271\370\327\uff0a\u0154\uff0a\u0155\uff0a\001" +
    "\002\000\010\327\uff11\u0154\uff11\u0155\uff11\001\002\000\040" +
    "\025\uff6c\036\362\057\uff6c\107\uff6c\122\354\150\uff6c\151" +
    "\uff6c\174\uff6c\205\uff6c\217\364\254\uff6c\271\370\327\uff0a" +
    "\u0154\uff0a\u0155\uff0a\001\002\000\010\327\uff0e\u0154\uff0e\u0155" +
    "\uff0e\001\002\000\034\025\uff6c\036\362\057\uff6c\107\uff6c" +
    "\150\uff6c\151\uff6c\174\uff6c\205\uff6c\217\364\254\uff6c\327" +
    "\uff00\u0154\uff00\u0155\uff00\001\002\000\010\327\uff09\u0154\uff09" +
    "\u0155\uff09\001\002\000\010\327\uff03\u0154\uff03\u0155\uff03\001" +
    "\002\000\022\025\uff6d\057\uff6d\107\uff6d\150\uff6d\151\uff6d" +
    "\174\uff6d\205\uff6d\254\uff6d\001\002\000\010\327\uff0f\u0154" +
    "\uff0f\u0155\uff0f\001\002\000\016\025\u010a\057\u0108\107\u0109" +
    "\174\u010b\205\uff59\254\u010e\001\002\000\004\151\u0107\001" +
    "\002\000\016\025\uff6b\057\uff6b\107\uff6b\174\uff6b\205\uff6b" +
    "\254\uff6b\001\002\000\016\025\uff6a\057\uff6a\107\uff6a\174" +
    "\uff6a\205\uff6a\254\uff6a\001\002\000\022\327\uff48\u013c\u0172" +
    "\u013d\u0171\u013f\u0174\u0141\u0173\u0154\uff48\u0155\uff48\u015d\u0175\001" +
    "\002\000\004\136\u016e\001\002\000\006\150\u013e\u0159\uff4a" +
    "\001\002\000\004\136\u013c\001\002\000\010\327\uff6e\u0154" +
    "\uff6e\u0155\uff6e\001\002\000\004\205\u0125\001\002\000\016" +
    "\030\u0112\156\u0113\271\u0114\327\uff5c\u0154\uff5c\u0155\uff5c\001" +
    "\002\000\010\327\uff66\u0154\uff66\u0155\uff66\001\002\000\010" +
    "\327\uff62\u0154\uff62\u0155\uff62\001\002\000\010\327\uff67\u0154" +
    "\uff67\u0155\uff67\001\002\000\014\156\u0113\271\u0114\327\uff5c" +
    "\u0154\uff5c\u0155\uff5c\001\002\000\004\u0141\u0120\001\002\000" +
    "\006\105\u0117\u0159\u0116\001\002\000\010\327\uff60\u0154\uff60" +
    "\u0155\uff60\001\002\000\004\105\u011c\001\002\000\004\u014c" +
    "\u011a\001\002\000\012\156\u0113\327\uff5c\u0154\uff5c\u0155\uff5c" +
    "\001\002\000\010\327\uff61\u0154\uff61\u0155\uff61\001\002\000" +
    "\004\u013c\u011b\001\002\000\012\156\uff5f\327\uff5f\u0154\uff5f" +
    "\u0155\uff5f\001\002\000\004\u014c\u011d\001\002\000\004\u013c" +
    "\u011e\001\002\000\004\u015a\u011f\001\002\000\012\156\uff5e" +
    "\327\uff5e\u0154\uff5e\u0155\uff5e\001\002\000\004\u0159\u0121\001" +
    "\002\000\004\u0141\u0122\001\002\000\004\u015a\u0123\001\002" +
    "\000\010\327\uff5d\u0154\uff5d\u0155\uff5d\001\002\000\010\327" +
    "\uff63\u0154\uff63\u0155\uff63\001\002\000\004\u0141\u0126\001\002" +
    "\000\016\156\uff57\327\uff57\u0154\uff57\u0155\uff57\u0156\u0128\u0159" +
    "\uff57\001\002\000\014\156\u012a\327\uff53\u0154\uff53\u0155\uff53" +
    "\u0159\u012b\001\002\000\004\u0141\u0129\001\002\000\014\156" +
    "\uff58\327\uff58\u0154\uff58\u0155\uff58\u0159\uff58\001\002\000\006" +
    "\060\u0131\256\u0133\001\002\000\004\u0141\u012e\001\002\000" +
    "\010\327\uff55\u0154\uff55\u0155\uff55\001\002\000\010\327\uff5b" +
    "\u0154\uff5b\u0155\uff5b\001\002\000\004\u015a\u012f\001\002\000" +
    "\012\156\u012a\327\uff53\u0154\uff53\u0155\uff53\001\002\000\010" +
    "\327\uff56\u0154\uff56\u0155\uff56\001\002\000\010\023\uff52\231" +
    "\uff52\u0125\uff52\001\002\000\010\023\u0136\231\u0135\u0125\u0137" +
    "\001\002\000\010\023\uff51\231\uff51\u0125\uff51\001\002\000" +
    "\010\327\uff54\u0154\uff54\u0155\uff54\001\002\000\006\057\u0139" +
    "\151\u013b\001\002\000\010\327\uff4f\u0154\uff4f\u0155\uff4f\001" +
    "\002\000\004\276\u0138\001\002\000\010\327\uff50\u0154\uff50" +
    "\u0155\uff50\001\002\000\010\327\uff4c\u0154\uff4c\u0155\uff4c\001" +
    "\002\000\010\327\uff4e\u0154\uff4e\u0155\uff4e\001\002\000\010" +
    "\327\uff4d\u0154\uff4d\u0155\uff4d\001\002\000\016\030\u0112\156" +
    "\u0113\271\u0114\327\uff5c\u0154\uff5c\u0155\uff5c\001\002\000\010" +
    "\327\uff68\u0154\uff68\u0155\uff68\001\002\000\004\106\u016c\001" +
    "\002\000\004\u0159\u0140\001\002\000\020\150\u0148\u013c\175" +
    "\u013d\204\u013f\u0141\u0141\u0147\u0159\u0146\u015d\203\001\002\000" +
    "\030\016\uffd1\126\uffd1\141\uffd1\u0142\uffd5\u0147\uffd1\u014b\uffd1" +
    "\u014c\uffd1\u014d\uffd1\u014e\uffd1\u0150\uffd1\u015a\uffd1\001\002\000" +
    "\040\016\uffd3\126\uffd3\141\uffd3\u0142\u015c\u0143\u0150\u0144\u014f" +
    "\u0145\u0152\u0146\u015b\u0147\u0154\u014b\u0157\u014c\u015a\u014d\u0158\u014e" +
    "\u0151\u0150\u0159\u015a\uffd3\001\002\000\020\150\u0148\u013c\175" +
    "\u013d\204\u013f\u0141\u0141\u0147\u0159\u0146\u015d\203\001\002\000" +
    "\026\016\uffda\126\uffda\141\uffda\u0147\uffda\u014b\uffda\u014c\uffda" +
    "\u014d\uffda\u014e\uffda\u0150\uffda\u015a\uffda\001\002\000\004\u0142" +
    "\u015c\001\002\000\020\150\u0148\u013c\175\u013d\204\u013f\u0141" +
    "\u0141\u0147\u0159\u0146\u015d\203\001\002\000\042\016\uffe5\126" +
    "\uffe5\141\uffe5\u0142\uffe5\u0143\uffe5\u0144\uffe5\u0145\uffe5\u0146\uffe5" +
    "\u0147\uffe5\u014b\uffe5\u014c\uffe5\u014d\uffe5\u014e\uffe5\u0150\uffe5\u0156" +
    "\030\u015a\uffe5\001\002\000\020\150\uffc1\u013c\uffc1\u013d\uffc1" +
    "\u013f\uffc1\u0141\uffc1\u0159\uffc1\u015d\uffc1\001\002\000\004\u015a" +
    "\u014a\001\002\000\010\327\uff64\u0154\uff64\u0155\uff64\001\002" +
    "\000\032\u0142\u015c\u0143\u0150\u0144\u014f\u0145\u0152\u0146\u015b\u0147" +
    "\u0154\u014b\u0157\u014c\u015a\u014d\u0158\u014e\u0151\u0150\u0159\u015a\225" +
    "\001\002\000\004\u015a\u014d\001\002\000\026\016\uffd9\126" +
    "\uffd9\141\uffd9\u0147\uffd9\u014b\uffd9\u014c\uffd9\u014d\uffd9\u014e\uffd9" +
    "\u0150\uffd9\u015a\uffd9\001\002\000\016\u013c\uffd7\u013d\uffd7\u013f" +
    "\uffd7\u0141\uffd7\u0159\uffd7\u015d\uffd7\001\002\000\016\u013c\uffc8" +
    "\u013d\uffc8\u013f\uffc8\u0141\uffc8\u0159\uffc8\u015d\uffc8\001\002\000" +
    "\016\u013c\uffc9\u013d\uffc9\u013f\uffc9\u0141\uffc9\u0159\uffc9\u015d\uffc9" +
    "\001\002\000\042\016\uffbf\126\uffbf\141\uffbf\u013c\uffbf\u013d" +
    "\uffbf\u013f\uffbf\u0141\uffbf\u0147\uffbf\u014b\uffbf\u014c\uffbf\u014d\uffbf" +
    "\u014e\uffbf\u0150\uffbf\u0159\uffbf\u015a\uffbf\u015d\uffbf\001\002\000" +
    "\016\u013c\uffc7\u013d\uffc7\u013f\uffc7\u0141\uffc7\u0159\uffc7\u015d\uffc7" +
    "\001\002\000\016\u013c\uffd6\u013d\uffd6\u013f\uffd6\u0141\uffd6\u0159" +
    "\uffd6\u015d\uffd6\001\002\000\042\016\uffbd\126\uffbd\141\uffbd" +
    "\u013c\uffbd\u013d\uffbd\u013f\uffbd\u0141\uffbd\u0147\uffbd\u014b\uffbd\u014c" +
    "\uffbd\u014d\uffbd\u014e\uffbd\u0150\uffbd\u0159\uffbd\u015a\uffbd\u015d\uffbd" +
    "\001\002\000\016\u013c\175\u013d\204\u013f\u015d\u0141\u0160\u0159" +
    "\200\u015d\203\001\002\000\016\u013c\uffd8\u013d\uffd8\u013f\uffd8" +
    "\u0141\uffd8\u0159\uffd8\u015d\uffd8\001\002\000\042\016\uffbe\126" +
    "\uffbe\141\uffbe\u013c\uffbe\u013d\uffbe\u013f\uffbe\u0141\uffbe\u0147\uffbe" +
    "\u014b\uffbe\u014c\uffbe\u014d\uffbe\u014e\uffbe\u0150\uffbe\u0159\uffbe\u015a" +
    "\uffbe\u015d\uffbe\001\002\000\042\016\uffc0\126\uffc0\141\uffc0" +
    "\u013c\uffc0\u013d\uffc0\u013f\uffc0\u0141\uffc0\u0147\uffc0\u014b\uffc0\u014c" +
    "\uffc0\u014d\uffc0\u014e\uffc0\u0150\uffc0\u0159\uffc0\u015a\uffc0\u015d\uffc0" +
    "\001\002\000\042\016\uffbc\126\uffbc\141\uffbc\u013c\uffbc\u013d" +
    "\uffbc\u013f\uffbc\u0141\uffbc\u0147\uffbc\u014b\uffbc\u014c\uffbc\u014d\uffbc" +
    "\u014e\uffbc\u0150\uffbc\u0159\uffbc\u015a\uffbc\u015d\uffbc\001\002\000" +
    "\042\016\uffbb\126\uffbb\141\uffbb\u013c\uffbb\u013d\uffbb\u013f\uffbb" +
    "\u0141\uffbb\u0147\uffbb\u014b\uffbb\u014c\uffbb\u014d\uffbb\u014e\uffbb\u0150" +
    "\uffbb\u0159\uffbb\u015a\uffbb\u015d\uffbb\001\002\000\016\u013c\uffc6" +
    "\u013d\uffc6\u013f\uffc6\u0141\uffc6\u0159\uffc6\u015d\uffc6\001\002\000" +
    "\016\u013c\uffc5\u013d\uffc5\u013f\uffc5\u0141\uffc5\u0159\uffc5\u015d\uffc5" +
    "\001\002\000\026\016\uffd1\126\uffd1\141\uffd1\u0147\uffd1\u014b" +
    "\uffd1\u014c\uffd1\u014d\uffd1\u014e\uffd1\u0150\uffd1\u015a\uffd1\001\002" +
    "\000\026\016\uffd3\126\uffd3\141\uffd3\u0147\uffd3\u014b\uffd3\u014c" +
    "\uffd3\u014d\uffd3\u014e\uffd3\u0150\uffd3\u015a\uffd3\001\002\000\026" +
    "\016\uffdd\126\uffdd\141\uffdd\u0147\uffdd\u014b\uffdd\u014c\uffdd\u014d" +
    "\uffdd\u014e\uffdd\u0150\uffdd\u015a\uffdd\001\002\000\040\016\uffe5" +
    "\126\uffe5\141\uffe5\u0142\uffe5\u0143\uffe5\u0144\uffe5\u0145\uffe5\u0147" +
    "\uffe5\u014b\uffe5\u014c\uffe5\u014d\uffe5\u014e\uffe5\u0150\uffe5\u0156\030" +
    "\u015a\uffe5\001\002\000\006\u013f\u0163\u0141\u0164\001\002\000" +
    "\026\016\uffdc\126\uffdc\141\uffdc\u0147\uffdc\u014b\uffdc\u014c\uffdc" +
    "\u014d\uffdc\u014e\uffdc\u0150\uffdc\u015a\uffdc\001\002\000\026\016" +
    "\uffd5\126\uffd5\141\uffd5\u0147\uffd5\u014b\uffd5\u014c\uffd5\u014d\uffd5" +
    "\u014e\uffd5\u0150\uffd5\u015a\uffd5\001\002\000\026\016\uffd4\126" +
    "\uffd4\141\uffd4\u0147\uffd4\u014b\uffd4\u014c\uffd4\u014d\uffd4\u014e\uffd4" +
    "\u0150\uffd4\u015a\uffd4\001\002\000\024\016\u0169\126\u0167\141" +
    "\u016b\u0147\u0154\u014b\u0157\u014c\u015a\u014d\u0158\u014e\u0151\u0150\u0159" +
    "\001\002\000\026\016\uffd0\126\uffd0\141\uffd0\u0147\uffd0\u014b" +
    "\uffd0\u014c\uffd0\u014d\uffd0\u014e\uffd0\u0150\uffd0\u015a\uffd0\001\002" +
    "\000\026\016\uffb9\126\uffb9\141\uffb9\u0147\uffb9\u014b\uffb9\u014c" +
    "\uffb9\u014d\uffb9\u014e\uffb9\u0150\uffb9\u015a\uffb9\001\002\000\026" +
    "\016\uffdb\126\uffdb\141\uffdb\u0147\uffdb\u014b\uffdb\u014c\uffdb\u014d" +
    "\uffdb\u014e\uffdb\u0150\uffdb\u015a\uffdb\001\002\000\026\016\uffba" +
    "\126\uffba\141\uffba\u0147\uffba\u014b\uffba\u014c\uffba\u014d\uffba\u014e" +
    "\uffba\u0150\uffba\u015a\uffba\001\002\000\026\016\uffcf\126\uffcf" +
    "\141\uffcf\u0147\uffcf\u014b\uffcf\u014c\uffcf\u014d\uffcf\u014e\uffcf\u0150" +
    "\uffcf\u015a\uffcf\001\002\000\026\016\uffb8\126\uffb8\141\uffb8" +
    "\u0147\uffb8\u014b\uffb8\u014c\uffb8\u014d\uffb8\u014e\uffb8\u0150\uffb8\u015a" +
    "\uffb8\001\002\000\004\206\u016d\001\002\000\004\u0159\uff4b" +
    "\001\002\000\004\205\uff5a\001\002\000\010\327\uff49\u0154" +
    "\uff49\u0155\uff49\001\002\000\010\327\uff65\u0154\uff65\u0155\uff65" +
    "\001\002\000\012\106\uff43\327\uff43\u0154\uff43\u0155\uff43\001" +
    "\002\000\012\106\uff44\327\uff44\u0154\uff44\u0155\uff44\001\002" +
    "\000\012\106\uff46\327\uff46\u0154\uff46\u0155\uff46\001\002\000" +
    "\012\106\uff45\327\uff45\u0154\uff45\u0155\uff45\001\002\000\004" +
    "\u0141\u0176\001\002\000\012\106\uff47\327\uff47\u0154\uff47\u0155" +
    "\uff47\001\002\000\010\327\uff04\u0154\uff04\u0155\uff04\001\002" +
    "\000\010\327\uff06\u0154\uff06\u0155\uff06\001\002\000\010\327" +
    "\uff0b\u0154\uff0b\u0155\uff0b\001\002\000\014\u013c\175\u013d\204" +
    "\u0141\026\u0159\200\u015d\203\001\002\000\004\106\u017c\001" +
    "\002\000\004\206\u017d\001\002\000\034\025\uff6c\036\362" +
    "\057\uff6c\107\uff6c\150\uff6c\151\uff6c\174\uff6c\205\uff6c\217" +
    "\364\254\uff6c\327\uff00\u0154\uff00\u0155\uff00\001\002\000\010" +
    "\327\uff05\u0154\uff05\u0155\uff05\001\002\000\004\u0155\u0180\001" +
    "\002\000\014\u013c\175\u013d\204\u0141\026\u0159\200\u015d\203" +
    "\001\002\000\004\u015a\u0182\001\002\000\034\025\uff6c\036" +
    "\362\057\uff6c\107\uff6c\150\u017b\151\uff6c\174\uff6c\205\uff6c" +
    "\217\364\254\uff6c\327\uff00\u0154\uff00\u0155\uff00\001\002\000" +
    "\010\327\uff07\u0154\uff07\u0155\uff07\001\002\000\014\u013c\u0172" +
    "\u013d\u0171\u013f\u0174\u0141\u0173\u015d\u0175\001\002\000\004\136" +
    "\u01c3\001\002\000\006\150\u01bb\u0159\u01bd\001\002\000\004" +
    "\136\u01b8\001\002\000\004\u0159\u01a5\001\002\000\010\327" +
    "\uff42\u0154\uff42\u0155\uff42\001\002\000\006\030\u018b\u0159\uff37" +
    "\001\002\000\004\u0159\uff38\001\002\000\004\u0159\u018e\001" +
    "\002\000\010\327\uff3e\u0154\uff3e\u0155\uff3e\001\002\000\004" +
    "\u0141\u018f\001\002\000\012\012\u0191\062\u0190\u0155\uff34\u015a" +
    "\uff34\001\002\000\006\u0155\uff35\u015a\uff35\001\002\000\006" +
    "\u0155\uff36\u015a\uff36\001\002\000\006\u0155\u0194\u015a\uff32\001" +
    "\002\000\004\u015a\u0197\001\002\000\004\u0141\u0195\001\002" +
    "\000\006\u0155\u0194\u015a\uff32\001\002\000\004\u015a\uff33\001" +
    "\002\000\016\156\u019a\271\u019b\327\uff2f\u0141\u019c\u0154\uff2f" +
    "\u0155\uff2f\001\002\000\010\327\uff30\u0154\uff30\u0155\uff30\001" +
    "\002\000\010\327\uff39\u0154\uff39\u0155\uff39\001\002\000\004" +
    "\u0141\u01a1\001\002\000\004\105\u019d\001\002\000\010\327" +
    "\uff2d\u0154\uff2d\u0155\uff2d\001\002\000\004\u014c\u019e\001\002" +
    "\000\004\u013c\u019f\001\002\000\006\156\u019a\u0141\u019c\001" +
    "\002\000\010\327\uff31\u0154\uff31\u0155\uff31\001\002\000\004" +
    "\u0159\u01a2\001\002\000\004\u0141\u01a3\001\002\000\004\u015a" +
    "\u01a4\001\002\000\010\327\uff2e\u0154\uff2e\u0155\uff2e\001\002" +
    "\000\004\u0141\u01a7\001\002\000\010\327\uff3c\u0154\uff3c\u0155" +
    "\uff3c\001\002\000\004\243\u01a8\001\002\000\004\u0141\u01a9" +
    "\001\002\000\006\u0155\u01aa\u015a\uff1d\001\002\000\004\u0141" +
    "\u01b4\001\002\000\004\u015a\u01ac\001\002\000\004\156\u01ad" +
    "\001\002\000\004\060\u01af\001\002\000\010\327\uff1f\u0154" +
    "\uff1f\u0155\uff1f\001\002\000\006\023\u01b1\u0125\u01b2\001\002" +
    "\000\010\327\uff1c\u0154\uff1c\u0155\uff1c\001\002\000\010\327" +
    "\uff1a\u0154\uff1a\u0155\uff1a\001\002\000\004\276\u01b3\001\002" +
    "\000\010\327\uff1b\u0154\uff1b\u0155\uff1b\001\002\000\004\243" +
    "\u01b5\001\002\000\004\u0141\u01b6\001\002\000\006\u0155\u01aa" +
    "\u015a\uff1d\001\002\000\004\u015a\uff1e\001\002\000\006\030" +
    "\u018b\u0159\uff37\001\002\000\004\u0159\u018e\001\002\000\010" +
    "\327\uff3f\u0154\uff3f\u0155\uff3f\001\002\000\004\106\u01bf\001" +
    "\002\000\010\327\uff3a\u0154\uff3a\u0155\uff3a\001\002\000\004" +
    "\u015a\u01be\001\002\000\010\327\uff18\u0154\uff18\u0155\uff18\001" +
    "\002\000\004\206\u01c0\001\002\000\004\u0159\u01c1\001\002" +
    "\000\004\u015a\u01c2\001\002\000\010\327\uff19\u0154\uff19\u0155" +
    "\uff19\001\002\000\004\u0159\u01c5\001\002\000\010\327\uff3d" +
    "\u0154\uff3d\u0155\uff3d\001\002\000\004\u0141\u01c6\001\002\000" +
    "\006\u0155\u0194\u015a\uff32\001\002\000\004\u015a\u01c8\001\002" +
    "\000\004\205\u01c9\001\002\000\004\u0141\u01ca\001\002\000" +
    "\006\156\u01cb\u0159\u01ce\001\002\000\006\060\u01d4\256\u01d5" +
    "\001\002\000\010\327\uff2a\u0154\uff2a\u0155\uff2a\001\002\000" +
    "\010\327\uff2c\u0154\uff2c\u0155\uff2c\001\002\000\004\u0141\u01cf" +
    "\001\002\000\006\u0155\u0194\u015a\uff32\001\002\000\004\u015a" +
    "\u01d1\001\002\000\004\156\u01cb\001\002\000\010\327\uff2b" +
    "\u0154\uff2b\u0155\uff2b\001\002\000\010\023\u01d8\231\u01d7\u0125" +
    "\u01d9\001\002\000\010\023\uff28\231\uff28\u0125\uff28\001\002" +
    "\000\010\023\uff27\231\uff27\u0125\uff27\001\002\000\012\150" +
    "\u01de\327\uff20\u0154\uff20\u0155\uff20\001\002\000\006\057\u01db" +
    "\151\u01dd\001\002\000\012\150\uff25\327\uff25\u0154\uff25\u0155" +
    "\uff25\001\002\000\004\276\u01da\001\002\000\012\150\uff26" +
    "\327\uff26\u0154\uff26\u0155\uff26\001\002\000\012\150\uff22\327" +
    "\uff22\u0154\uff22\u0155\uff22\001\002\000\012\150\uff24\327\uff24" +
    "\u0154\uff24\u0155\uff24\001\002\000\012\150\uff23\327\uff23\u0154" +
    "\uff23\u0155\uff23\001\002\000\004\106\u01e0\001\002\000\010" +
    "\327\uff29\u0154\uff29\u0155\uff29\001\002\000\004\206\u01e1\001" +
    "\002\000\010\327\uff21\u0154\uff21\u0155\uff21\001\002\000\012" +
    "\106\u01e5\327\uff13\u0154\uff13\u0155\uff13\001\002\000\010\327" +
    "\uff3b\u0154\uff3b\u0155\uff3b\001\002\000\010\327\uff15\u0154\uff15" +
    "\u0155\uff15\001\002\000\004\u0141\u01e6\001\002\000\012\271" +
    "\u01e7\327\uff16\u0154\uff16\u0155\uff16\001\002\000\004\262\u01e9" +
    "\001\002\000\010\327\uff14\u0154\uff14\u0155\uff14\001\002\000" +
    "\010\327\uff17\u0154\uff17\u0155\uff17\001\002\000\006\327\ufeb9" +
    "\u0154\ufeb9\001\002\000\022\025\uff40\036\346\057\uff40\107" +
    "\uff40\174\uff40\254\uff40\373\uff40\u0141\352\001\002\000\006" +
    "\327\ufeb8\u0154\ufeb8\001\002\000\016\025\uff41\057\uff41\107" +
    "\uff41\174\uff41\254\uff41\373\uff41\001\002\000\006\327\ufeba" +
    "\u0154\ufeba\001\002\000\004\036\ufeab\001\002\000\004\036" +
    "\ufeaa\001\002\000\004\036\u01f2\001\002\000\006\005\u01f3" +
    "\u0141\u01f5\001\002\000\006\327\ufea9\u0154\ufea9\001\002\000" +
    "\006\327\ufecd\u0154\ufecd\001\002\000\006\327\ufea8\u0154\ufea8" +
    "\001\002\000\004\u0141\u01f7\001\002\000\006\327\ufed0\u0154" +
    "\ufed0\001\002\000\006\005\u01f3\u0141\u01f5\001\002\000\006" +
    "\327\ufecb\u0154\ufecb\001\002\000\006\005\u01f3\u0141\u01f5\001" +
    "\002\000\006\327\ufecc\u0154\ufecc\001\002\000\006\327\ufed7" +
    "\u0154\ufed7\001\002\000\010\011\uff77\u0156\u01ff\u0159\uff77\001" +
    "\002\000\006\011\u0202\u0159\u0203\001\002\000\004\u0141\u0200" +
    "\001\002\000\006\011\uff78\u0159\uff78\001\002\000\006\327" +
    "\uff79\u0154\uff79\001\002\000\010\271\u0209\327\020\u0154\021" +
    "\001\002\000\006\u0141\u0204\u015a\uff73\001\002\000\006\u0155" +
    "\u020e\u015a\uff71\001\002\000\004\u015a\u0206\001\002\000\004" +
    "\011\u0207\001\002\000\010\271\u0209\327\020\u0154\021\001" +
    "\002\000\006\327\uff6f\u0154\uff6f\001\002\000\004\025\u020b" +
    "\001\002\000\006\327\uff76\u0154\uff76\001\002\000\004\163" +
    "\u020c\001\002\000\006\327\020\u0154\021\001\002\000\006" +
    "\327\uff70\u0154\uff70\001\002\000\004\u0141\u0210\001\002\000" +
    "\004\u015a\uff74\001\002\000\006\u0155\u020e\u015a\uff71\001\002" +
    "\000\004\u015a\uff72\001\002\000\006\327\uff75\u0154\uff75\001" +
    "\002\000\006\004\ufea6\032\ufea6\001\002\000\006\004\u0217" +
    "\032\u0216\001\002\000\006\004\ufea7\032\ufea7\001\002\000" +
    "\004\u0141\u0229\001\002\000\004\104\u0219\001\002\000\006" +
    "\327\ufed3\u0154\ufed3\001\002\000\004\u0159\u021a\001\002\000" +
    "\004\u011c\u021c\001\002\000\006\327\ufea4\u0154\ufea4\001\002" +
    "\000\004\u014c\u021d\001\002\000\004\u013f\u021e\001\002\000" +
    "\004\u0155\u021f\001\002\000\004\104\u0220\001\002\000\004" +
    "\u014c\u0221\001\002\000\004\u013f\u0222\001\002\000\006\u0155" +
    "\u0224\u015a\uff95\001\002\000\004\u015a\u0228\001\002\000\004" +
    "\354\u0225\001\002\000\004\u014c\u0226\001\002\000\004\u013c" +
    "\u0227\001\002\000\004\u015a\uff96\001\002\000\006\327\uff97" +
    "\u0154\uff97\001\002\000\006\327\ufea5\u0154\ufea5\001\002\000" +
    "\006\327\ufed8\u0154\ufed8\001\002\000\012\002\ufff8\006\ufff8" +
    "\072\ufff8\250\ufff8\001\002\000\012\002\ufff9\006\006\072" +
    "\ufff9\250\007\001\002\000\006\002\ufffb\072\ufffb\001\002" +
    "\000\012\002\ufff9\006\006\072\ufff9\250\007\001\002\000" +
    "\006\002\ufffa\072\ufffa\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u022d\000\012\205\004\207\003\236\012\237\011\001" +
    "\001\000\004\240\u022d\001\001\000\004\240\u022b\001\001" +
    "\000\006\210\053\245\046\001\001\000\002\001\001\000" +
    "\012\205\004\207\003\236\022\237\011\001\001\000\010" +
    "\205\004\207\003\237\014\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\241\016\001\001\000\012\205\004\207\003\236\021\237" +
    "\011\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\007\024\001\001\000" +
    "\004\206\037\001\001\000\004\010\026\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\011\031\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\012\034\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\206\042\001\001\000\004\007\041\001\001\000\002" +
    "\001\001\000\004\241\043\001\001\000\002\001\001\000" +
    "\004\043\u0229\001\001\000\004\233\u0213\001\001\000\002" +
    "\001\001\000\004\064\u01fb\001\001\000\006\007\310\211" +
    "\311\001\001\000\004\043\227\001\001\000\004\171\055" +
    "\001\001\000\004\241\054\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\172\057\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\173\063\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\174\067" +
    "\001\001\000\002\001\001\000\006\020\104\022\105\001" +
    "\001\000\004\023\151\001\001\000\004\023\150\001\001" +
    "\000\004\023\147\001\001\000\004\023\146\001\001\000" +
    "\004\023\145\001\001\000\004\023\144\001\001\000\004" +
    "\023\143\001\001\000\004\023\142\001\001\000\004\023" +
    "\141\001\001\000\004\023\140\001\001\000\004\021\136" +
    "\001\001\000\004\023\134\001\001\000\004\175\121\001" +
    "\001\000\002\001\001\000\004\023\120\001\001\000\004" +
    "\023\110\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\024\114\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\202\132\001\001\000\004\042\123" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\173\133\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\020\154" +
    "\022\105\001\001\000\010\174\157\176\156\177\155\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\174\157\177\166" +
    "\001\001\000\002\001\001\000\004\203\171\001\001\000" +
    "\012\002\175\004\201\006\200\007\176\001\001\000\002" +
    "\001\001\000\004\241\173\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\204\225\001\001\000\002\001\001" +
    "\000\012\002\223\004\201\006\200\007\176\001\001\000" +
    "\004\005\215\001\001\000\004\003\207\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\004" +
    "\212\006\200\007\176\001\001\000\010\004\210\006\200" +
    "\007\176\001\001\000\002\001\001\000\004\003\211\001" +
    "\001\000\002\001\001\000\004\003\213\001\001\000\002" +
    "\001\001\000\006\006\221\007\176\001\001\000\002\001" +
    "\001\000\006\006\217\007\176\001\001\000\004\005\220" +
    "\001\001\000\002\001\001\000\004\005\222\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\044" +
    "\233\045\232\046\231\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\046\240\001\001\000\002" +
    "\001\001\000\004\047\243\001\001\000\002\001\001\000" +
    "\006\020\244\022\105\001\001\000\020\050\245\051\261" +
    "\052\257\053\256\054\246\057\262\060\260\001\001\000" +
    "\002\001\001\000\002\001\001\000\012\053\305\054\246" +
    "\057\262\060\260\001\001\000\002\001\001\000\004\046" +
    "\302\001\001\000\004\042\300\001\001\000\004\061\274" +
    "\001\001\000\004\055\266\001\001\000\016\051\263\052" +
    "\257\053\256\054\246\057\262\060\260\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\056\271\001" +
    "\001\000\002\001\001\000\006\057\272\060\260\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\063\275\001" +
    "\001\000\004\241\277\001\001\000\002\001\001\000\002" +
    "\001\001\000\014\052\301\053\256\054\246\057\262\060" +
    "\260\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\060\304\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\045\307\046\231\001\001\000\002\001\001\000\004" +
    "\212\320\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\231\u01f0\001\001" +
    "\000\012\115\347\116\350\145\344\222\346\001\001\000" +
    "\010\224\324\225\321\235\325\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\226\333\001\001\000\006\224" +
    "\332\225\321\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\225\331\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\227\337" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\230" +
    "\341\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\230\343\001\001\000\002\001\001\000" +
    "\004\223\u01ed\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\223\u01e9\001\001\000\004\117\u0188\001\001\000" +
    "\006\020\352\022\105\001\001\000\022\072\354\073\355" +
    "\146\366\147\365\150\364\152\362\155\360\156\356\001" +
    "\001\000\016\072\354\073\355\153\u0178\154\u0177\155\u0176" +
    "\156\356\001\001\000\002\001\001\000\004\074\u0103\001" +
    "\001\000\002\001\001\000\016\072\354\073\355\150\u0102" +
    "\152\362\155\360\156\356\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\072\354\073\355" +
    "\156\u0100\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\020\072\354\073\355\147\373\150\364\152" +
    "\362\155\360\156\356\001\001\000\002\001\001\000\016" +
    "\072\354\073\355\150\375\152\362\155\360\156\356\001" +
    "\001\000\002\001\001\000\012\072\354\073\355\155\377" +
    "\156\356\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\075\u010b\102\u010e" +
    "\103\u010c\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\113\u016f\114\u016e\001\001\000\002" +
    "\001\001\000\004\112\u013e\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\076\u0110\077\u010f" +
    "\101\u0114\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\077\u0123\101\u0114\001\001\000\002" +
    "\001\001\000\004\100\u0117\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\101\u0118\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\104\u0126\001\001\000\006\105\u012c\106\u012b\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\107\u0131" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\106\u012f\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\110\u0133\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\111\u0139\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\010" +
    "\076\u013c\077\u010f\101\u0114\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\022\002\u0141\004\201" +
    "\006\200\007\176\013\u0148\015\u0144\016\u0143\036\u0142\001" +
    "\001\000\002\001\001\000\012\014\u0154\030\u0155\033\u014d" +
    "\035\u0152\001\001\000\022\002\u0141\004\201\006\200\007" +
    "\176\013\u0164\015\u0144\016\u0143\036\u0142\001\001\000\002" +
    "\001\001\000\004\035\u0160\001\001\000\022\002\u014a\004" +
    "\201\006\200\007\176\013\u014b\015\u0144\016\u0143\036\u0142" +
    "\001\001\000\004\010\026\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\012\014\u0154\030\u0155" +
    "\033\u014d\035\u0152\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\014\002\u015d\004\201\006\200\007\176" +
    "\016\u015e\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\010\026\001\001\000\004" +
    "\015\u0161\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\017\u0167\033\u0165\034\u0169\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\012\002\u017e\004\201\006\200\007\176\001" +
    "\001\000\002\001\001\000\002\001\001\000\012\072\354" +
    "\073\355\155\u017d\156\356\001\001\000\002\001\001\000" +
    "\002\001\001\000\012\002\u0180\004\201\006\200\007\176" +
    "\001\001\000\002\001\001\000\014\072\354\073\355\154" +
    "\u0182\155\u0176\156\356\001\001\000\002\001\001\000\006" +
    "\114\u01e1\143\u01e2\001\001\000\002\001\001\000\004\141" +
    "\u01bb\001\001\000\002\001\001\000\004\135\u01a5\001\001" +
    "\000\002\001\001\000\004\121\u018b\001\001\000\002\001" +
    "\001\000\004\120\u018c\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\122\u0191\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\123\u0192\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\123\u0195\001\001\000\002\001" +
    "\001\000\006\124\u0198\125\u0197\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\125\u019f\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\136\u01aa\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\137\u01ad\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\140\u01af\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\136\u01b6\001\001" +
    "\000\002\001\001\000\004\121\u01b8\001\001\000\004\120" +
    "\u01b9\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\126\u01c3\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\123\u01c6\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\127\u01cc\130\u01cb\001" +
    "\001\000\004\131\u01d2\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\123\u01cf\001\001\000" +
    "\002\001\001\000\004\130\u01d1\001\001\000\002\001\001" +
    "\000\004\132\u01d5\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\134\u01de\001\001\000\004\133\u01db\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\144\u01e3\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\142\u01e7\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\012\115\347\116\350\145\344\222\u01eb\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\232\u01f3\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\232\u01f8\001\001\000\002\001\001\000\004\232\u01fa" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\065" +
    "\u01fd\001\001\000\004\066\u0200\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\071\u0211\241" +
    "\u0207\001\001\000\004\067\u0204\001\001\000\004\070\u020e" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\071" +
    "\u0209\241\u0207\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\241\u020c\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\070\u0210\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\234\u0217\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\242\u021a\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\243\u0222\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\205\004\207\003\237\u022c\001\001" +
    "\000\002\001\001\000\010\205\004\207\003\237\u022e\001" +
    "\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


  /** User initialization code. */
  public void user_init() throws java.lang.Exception
    {
 
    try {
        BufferedReader buffered = new BufferedReader(new FileReader(MiniSql.ubicacionArchivo));
        analizadorFlex = new Lexemas(buffered);
    } catch (IOException ex) {
        ex.printStackTrace();
    }

    }

  /** Scan to get the next Symbol. */
  public java_cup.runtime.Symbol scan()
    throws java.lang.Exception
    {
 
    return analizadorFlex.next_token(); 

    }


Lexemas analizadorFlex = null;

public void syntax_error(Symbol cur_token){
    Errores.SyntaxErrorCup((MyToken) cur_token.value);
}

public void report_error(String message, Object info) {
    StringBuilder m = new StringBuilder("Error");
    if (info instanceof java_cup.runtime.Symbol) {
        java_cup.runtime.Symbol s = ((java_cup.runtime.Symbol) info);
        m.append(" " + s.value.toString());
        if (s.left >= 0) {                
            m.append(" in line "+(s.left));
            if (s.right >= 0)
                m.append(", column "+(s.right));
        }
    }
    m.append(" : "+message);
    System.err.println(m);
}


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$parser$actions {
  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$parser$do_action_part00000000(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIALB EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INICIALB ::= BEGIN INICIAL END FIN_AN INICIALB 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIALB",156, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // INICIALB ::= INICIAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIALB",156, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // INICIALB ::= error INICIALB 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIALB",156, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // INICIALB ::= error 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIALB",156, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // INICIALB ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIALB",156, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // INICIAL ::= TRUNCATE1 GOOP INICIAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIAL",157, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // INICIAL ::= ALTER0 GOOP INICIAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIAL",157, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // INICIAL ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIAL",157, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // GOOP ::= GO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("GOOP",158, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // GOOP ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("GOOP",158, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // SEXP ::= SEXP3 SEXP2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEXP",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // SEXP2 ::= Mas SEXP3 SEXP2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEXP2",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // SEXP2 ::= Menos SEXP3 SEXP2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEXP2",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // SEXP2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEXP2",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // SEXP3 ::= SEXP5 SEXP4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEXP3",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // SEXP4 ::= Multiplicacion SEXP5 SEXP4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEXP4",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // SEXP4 ::= Division SEXP5 SEXP4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEXP4",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // SEXP4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEXP4",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // SEXP5 ::= ParentesisAbrir SEXP ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEXP5",4, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // SEXP5 ::= DatoEntero 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEXP5",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // SEXP5 ::= DatoFloat 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEXP5",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // SEXP5 ::= Arroba Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEXP5",4, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // SEXP5 ::= OBJECT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEXP5",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // FIN_AN ::= PuntoComa 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FIN_AN",159, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // FIN_AN ::= GO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FIN_AN",159, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // OBJECT ::= Identificador OBJECT1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OBJECT",5, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // OBJECT1 ::= Punto Identificador OBJECT2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OBJECT1",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // OBJECT1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OBJECT1",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // OBJECT2 ::= Punto Identificador OBJECT3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OBJECT2",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // OBJECT2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OBJECT2",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // OBJECT3 ::= Punto Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OBJECT3",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // OBJECT3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OBJECT3",8, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // COLNAME ::= Identificador Punto COLNAME1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLNAME",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // COLNAME1 ::= Multiplicacion 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLNAME1",20, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // COLNAME1 ::= Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLNAME1",20, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // EXPRESSION ::= SEXP EXPRESSION1 EXPRESSION3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // EXPRESSION ::= EXPRESSION2 SUM_OPR EXPRESSION2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // EXPRESSION ::= NOT_OPR EXPRESSION EXPRESSION4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // EXPRESSION ::= EXPRESSION3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION",9, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // EXPRESSION ::= ParentesisAbrir EXPRESSION ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // EXPRESSION1 ::= AR_OPR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION1",10, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // EXPRESSION1 ::= COMPARE_OPR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION1",10, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // EXPRESSION1 ::= SUM_OPR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION1",10, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // EXPRESSION2 ::= DatoString 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION2",11, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // EXPRESSION2 ::= Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION2",11, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // EXPRESSION3 ::= SEXP 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION3",12, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // EXPRESSION3 ::= Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION3",12, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // EXPRESSION3 ::= DatoString 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION3",12, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // EXPRESSION4 ::= COMPARE_OPR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION4",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // EXPRESSION4 ::= LOGIC_OPR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION4",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // BIN_OPR ::= AR_OPR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("BIN_OPR",21, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // BIN_OPR ::= ASIG_OPR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("BIN_OPR",21, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // BIN_OPR ::= BIT_OPR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("BIN_OPR",21, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // BIN_OPR ::= COMPARE_OPR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("BIN_OPR",21, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // BIN_OPR ::= LOGIC_OPR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("BIN_OPR",21, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // AR_OPR ::= Menos 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("AR_OPR",22, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // AR_OPR ::= Multiplicacion 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("AR_OPR",22, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // AR_OPR ::= Division 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("AR_OPR",22, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // AR_OPR ::= Modulo 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("AR_OPR",22, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // SUM_OPR ::= Mas 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SUM_OPR",27, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // ASIG_OPR ::= Igual 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ASIG_OPR",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // BIT_OPR ::= AND 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("BIT_OPR",24, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // BIT_OPR ::= OR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("BIT_OPR",24, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // NOT_OPR ::= NOT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("NOT_OPR",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // COMPARE_OPR ::= Mayor 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMPARE_OPR",25, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // COMPARE_OPR ::= Menor 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMPARE_OPR",25, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // COMPARE_OPR ::= MayorIgual 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMPARE_OPR",25, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // COMPARE_OPR ::= MenorIgual 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMPARE_OPR",25, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // COMPARE_OPR ::= Diferente 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMPARE_OPR",25, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // COMPARE_OPR ::= Igual 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMPARE_OPR",25, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // LOGIC_OPR ::= BETWEEN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("LOGIC_OPR",26, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // LOGIC_OPR ::= IN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("LOGIC_OPR",26, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // LOGIC_OPR ::= LIKE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("LOGIC_OPR",26, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // DATATYPE ::= Identificador DATATYPE2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE",14, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // DATATYPE ::= DATATYPE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE",14, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // DATATYPE2 ::= Punto Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE2",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // DATATYPE3 ::= BIT DATATYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE3",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // DATATYPE3 ::= INT DATATYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE3",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // DATATYPE3 ::= INTEGER DATATYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE3",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // DATATYPE3 ::= FLOAT DATATYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE3",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // DATATYPE3 ::= VARCHAR DATATYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE3",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // DATATYPE3 ::= DATE DATATYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE3",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // DATATYPE3 ::= REAL DATATYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE3",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // DATATYPE3 ::= DECIMAL DATATYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE3",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // DATATYPE3 ::= NUMERIC DATATYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE3",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // DATATYPE3 ::= SMALLINT DATATYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE3",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // DATATYPE3 ::= TIME DATATYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE3",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // DATATYPE3 ::= CHAR DATATYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE3",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // DATATYPE3 ::= NCHAR DATATYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE3",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // DATATYPE4 ::= ParentesisAbrir DatoEntero DATATYPE5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE4",17, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // DATATYPE4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE4",17, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // DATATYPE5 ::= Coma DatoEntero ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE5",18, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // DATATYPE5 ::= ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE5",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // DEFV ::= DatoString 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEFV",32, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // DEFV ::= DatoFloat 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEFV",32, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // DEFV ::= DatoEntero 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEFV",32, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // DEFV ::= DatoBit 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEFV",32, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // DEFV ::= NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEFV",32, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // DATABASE1 ::= ON DATABASE2 DATABASE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATABASE1",29, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // DATABASE1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATABASE1",29, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // DATABASE2 ::= PRIMARY FLSPC DATABASE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATABASE2",30, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // DATABASE3 ::= COLLATE Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATABASE3",31, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // DATABASE3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATABASE3",31, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // DATABASE4 ::= Coma FLSPC DATABASE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATABASE4",162, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // DATABASE4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATABASE4",162, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // FLSPC ::= ParentesisAbrir NAMES Igual DatoString Coma FILE Igual DatoString FLSPC1 ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FLSPC",160, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // FLSPC1 ::= Coma SIZE Igual DatoEntero 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FLSPC1",161, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // FLSPC1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FLSPC1",161, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // PROCEDURE1 ::= Identificador PROCEDURE2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE1",33, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // PROCEDURE2 ::= Punto Identificador PROCEDURE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE2",34, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // PROCEDURE2 ::= PROCEDURE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE2",34, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // PROCEDURE3 ::= PuntoComa DatoEntero PROCEDURE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE3",35, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // PROCEDURE3 ::= PROCEDURE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE3",35, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // PROCEDURE4 ::= Arroba Identificador PROCEDURE5 DATATYPE PROCEDURE6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE4",36, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // PROCEDURE5 ::= AS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE5",37, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // PROCEDURE5 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE5",37, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // PROCEDURE6 ::= VARYING PROCEDURE7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE6",38, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // PROCEDURE6 ::= PROCEDURE7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE6",38, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // PROCEDURE7 ::= Igual DEFV PROCEDURE8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE7",39, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // PROCEDURE7 ::= PROCEDURE8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE7",39, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // PROCEDURE8 ::= OUTPUT PROCEDURE9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE8",40, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // PROCEDURE8 ::= PROCEDURE9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE8",40, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // PROCEDURE9 ::= Coma PROCEDURE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE9",41, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // PROCEDURE9 ::= PROCEDURE10 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE9",41, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // PROCEDURE10 ::= WITH PROCEDURE11 AS PROCEDURE12 PROCEDURE13 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE10",42, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // PROCEDURE10 ::= PROCEDURE13 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE10",42, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // PROCEDURE11 ::= EXECUTE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE11",43, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // PROCEDURE11 ::= EXEC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE11",43, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // PROCEDURE12 ::= DatoString 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE12",44, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // PROCEDURE13 ::= FOR REPLICATION PROCEDURE14 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE13",45, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // PROCEDURE13 ::= PROCEDURE14 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE13",45, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // PROCEDURE14 ::= AS PROCEDURE15 PROCEDURE17 FIN_AN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE14",46, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // PROCEDURE15 ::= BEGIN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE15",47, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // PROCEDURE15 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE15",47, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // PROCEDURE17 ::= END 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE17",49, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // VIEW1 ::= Identificador VIEW2 VIEW3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("VIEW1",50, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // VIEW2 ::= Punto Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("VIEW2",51, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // VIEW2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("VIEW2",51, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // VIEW3 ::= ParentesisAbrir VIEW4 ParentesisCerrar AS VIEW6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("VIEW3",52, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // VIEW3 ::= AS VIEW6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("VIEW3",52, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // VIEW4 ::= Identificador VIEW5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("VIEW4",53, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // VIEW4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("VIEW4",53, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // VIEW5 ::= Coma Identificador VIEW5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("VIEW5",54, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // VIEW5 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("VIEW5",54, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // VIEW6 ::= WITH CHECK OPTION FIN_AN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("VIEW6",55, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // VIEW6 ::= FIN_AN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("VIEW6",55, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // COL_CST ::= COL_CST1 COL_CST2 COL_CST3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST",56, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // COL_CST1 ::= CONSTRAINT Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST1",57, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // COL_CST1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST1",57, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // COL_CST2 ::= NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST2",58, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // COL_CST2 ::= NOT NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST2",58, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // COL_CST2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST2",58, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // COL_CST3 ::= PRIMARY KEY COL_CST4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST3",59, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // COL_CST3 ::= UNIQUE COL_CST4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST3",59, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // COL_CST3 ::= COL_CST8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST3",59, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // COL_CST3 ::= DEFAULT COL_CST17 
            {
              Object RESULT =null;
		 System.out.println("termino DEFAULT"); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST3",59, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // COL_CST3 ::= CHECK COL_CST16 ParentesisAbrir EXPRESSION ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST3",59, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // COL_CST4 ::= CLUSTERED COL_CST5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST4",60, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // COL_CST4 ::= COL_CST5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST4",60, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // COL_CST5 ::= WITH COL_CST6 COL_CST7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST5",61, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // COL_CST5 ::= COL_CST7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST5",61, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // COL_CST6 ::= FILLFACTOR Igual DatoEntero 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST6",62, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // COL_CST6 ::= ParentesisAbrir FILLFACTOR Igual DatoEntero ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST6",62, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // COL_CST7 ::= ON Identificador ParentesisAbrir Identificador ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST7",63, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // COL_CST7 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST7",63, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // COL_CST8 ::= COL_CST9 REFERENCES Identificador COL_CST10 COL_CST11 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST8",64, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // COL_CST9 ::= FOREIGN KEY 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST9",65, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // COL_CST9 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST9",65, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // COL_CST10 ::= Punto Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST10",66, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // COL_CST10 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST10",66, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // COL_CST11 ::= ParentesisAbrir Identificador ParentesisCerrar COL_CST12 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST11",67, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // COL_CST11 ::= COL_CST12 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST11",67, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // COL_CST12 ::= ON COL_CST13 COL_CST14 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST12",68, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // COL_CST12 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST12",68, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // COL_CST13 ::= DELETE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST13",69, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // COL_CST13 ::= UPDATE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST13",69, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // COL_CST14 ::= NO ACTION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST14",70, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // COL_CST14 ::= CASCADE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST14",70, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // COL_CST14 ::= SET COL_CST15 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST14",70, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // COL_CST15 ::= NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST15",71, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // COL_CST15 ::= DEFAULT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST15",71, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // COL_CST16 ::= NOT FOR REPLICATION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST16",72, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // COL_CST16 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST16",72, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // COL_CST17 ::= CONST_EXP 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST17",73, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // COL_CST17 ::= 
            {
              Object RESULT =null;
		 System.out.println("DEFAULT VACIO"); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST17",73, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // CONST_EXP ::= Arroba Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CONST_EXP",74, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // CONST_EXP ::= Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CONST_EXP",74, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // CONST_EXP ::= DatoString 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CONST_EXP",74, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // CONST_EXP ::= DatoEntero 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CONST_EXP",74, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // CONST_EXP ::= DatoFloat 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CONST_EXP",74, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // TB_CST ::= TB_CST1 TB_CST2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST",75, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // TB_CST1 ::= CONSTRAINT Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST1",76, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // TB_CST1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST1",76, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // TB_CST2 ::= PRIMARY KEY TB_CST4 TB_CST3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST2",77, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // TB_CST2 ::= UNIQUE TB_CST4 TB_CST3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST2",77, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // TB_CST2 ::= FOREIGN KEY TB_CST9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST2",77, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // TB_CST2 ::= CONNECTION TB_CST16 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST2",77, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // TB_CST2 ::= DEFAULT TB_CST22 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST2",77, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // TB_CST2 ::= CHECK TB_CST20 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST2",77, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // TB_CST3 ::= ParentesisAbrir Identificador TB_CST5 TB_CST6 ParentesisCerrar TB_CST7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST3",78, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // TB_CST4 ::= CLUSTERED 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST4",79, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // TB_CST4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST4",79, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // TB_CST5 ::= ASC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST5",80, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // TB_CST5 ::= DESC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST5",80, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // TB_CST5 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST5",80, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // TB_CST6 ::= Coma Identificador TB_CST6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST6",81, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // TB_CST6 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST6",81, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // TB_CST7 ::= WITH FILLFACTOR Igual DatoEntero TB_CST8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST7",82, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // TB_CST7 ::= TB_CST8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST7",82, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // TB_CST7 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST7",82, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // TB_CST8 ::= ON Identificador ParentesisAbrir Identificador ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST8",83, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // TB_CST8 ::= Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST8",83, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // TB_CST9 ::= ParentesisAbrir Identificador TB_CST6 ParentesisCerrar REFERENCES Identificador TB_CST10 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST9",84, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // TB_CST10 ::= ParentesisAbrir Identificador TB_CST6 ParentesisCerrar TB_CST11 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST10",85, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // TB_CST10 ::= TB_CST11 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST10",85, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // TB_CST11 ::= ON TB_CST12 TB_CST13 TB_CST15 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST11",86, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // TB_CST12 ::= DELETE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST12",87, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // TB_CST12 ::= UPDATE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST12",87, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // TB_CST13 ::= NO ACTION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST13",88, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // TB_CST13 ::= CASCADE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST13",88, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // TB_CST13 ::= SET TB_CST14 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST13",88, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // TB_CST14 ::= NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST14",89, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // TB_CST14 ::= DEFAULT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST14",89, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // TB_CST15 ::= NOT FOR REPLICATION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST15",90, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // TB_CST15 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST15",90, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // TB_CST16 ::= ParentesisAbrir Identificador TO Identificador TB_CST17 ParentesisCerrar TB_CST18 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST16",91, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // TB_CST17 ::= Coma Identificador TO Identificador TB_CST17 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST17",92, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // TB_CST17 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST17",92, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // TB_CST18 ::= ON DELETE TB_CST19 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST18",93, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // TB_CST19 ::= NO ACTION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST19",94, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // TB_CST19 ::= CASCADE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST19",94, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // TB_CST20 ::= NOT FOR REPLICATION ParentesisAbrir ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST20",95, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // TB_CST20 ::= ParentesisAbrir ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST20",95, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // TB_CST21 ::= WITH VALUES 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST21",96, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // TB_CST21 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST21",96, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // TB_CST22 ::= CONST_EXP TB_CST23 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST22",97, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // TB_CST23 ::= FOR Identificador TB_CST21 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST23",98, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // TB_CST23 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST23",98, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // COL_DEF ::= Identificador DATATYPE COL_DEF1 
            {
              Object RESULT =null;
		 System.out.println("termino coldef"); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF",99, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // COL_DEF1 ::= COLLATE Identificador COL_DEF2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF1",100, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // COL_DEF1 ::= COL_DEF2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF1",100, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // COL_DEF2 ::= NULL COL_DEF3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF2",101, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // COL_DEF2 ::= NOT NULL COL_DEF3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF2",101, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // COL_DEF2 ::= COL_DEF3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF2",101, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // COL_DEF3 ::= COL_DEF5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF3",102, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // COL_DEF3 ::= IDENTITY COL_DEF6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF3",102, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // COL_DEF3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF3",102, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // COL_DEF5 ::= WITH VALUES COL_DEF8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF5",104, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // COL_DEF5 ::= COL_DEF8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF5",104, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // COL_DEF6 ::= ParentesisAbrir SEXP Coma SEXP ParentesisCerrar COL_DEF7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF6",105, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // COL_DEF6 ::= COL_DEF7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF6",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // COL_DEF7 ::= NOT FOR REPLICATION COL_DEF8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF7",106, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // COL_DEF7 ::= COL_DEF8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF7",106, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // COL_DEF8 ::= ROWGUIDCOL COL_DEF10 
            {
              Object RESULT =null;
		 System.out.println("termino ROWGUID"); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF8",107, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // COL_DEF8 ::= COL_DEF10 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF8",107, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // COL_DEF10 ::= COL_CST 
            {
              Object RESULT =null;
		 System.out.println("termino colcst abajo"); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF10",108, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // COL_DEF10 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF10",108, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // TB_IX ::= INDEX Identificador ParentesisAbrir TB_IX1 ParentesisCerrar TB_IX4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_IX",109, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // TB_IX1 ::= Identificador TB_IX2 TB_IX3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_IX1",110, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // TB_IX2 ::= ASC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_IX2",111, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // TB_IX2 ::= DEC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_IX2",111, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // TB_IX2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_IX2",111, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // TB_IX3 ::= Coma TB_IX2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_IX3",112, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // TB_IX3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_IX3",112, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // TB_IX4 ::= WITH FILLFACTOR Igual DatoEntero 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_IX4",113, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // TB_IX4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_IX4",113, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // TABLE1 ::= OBJECT ParentesisAbrir TABLE2 TABLE3 ParentesisCerrar TABLE4 FIN_AN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TABLE1",114, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // TABLE2 ::= COL_DEF 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TABLE2",115, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // TABLE2 ::= TB_CST 
            {
              Object RESULT =null;
		 System.out.println("termino tbcst"); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TABLE2",115, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // TABLE3 ::= Coma TABLE2 TABLE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TABLE3",116, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // TABLE3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TABLE3",116, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // TABLE4 ::= ON TABLE5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TABLE4",117, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // TABLE4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TABLE4",117, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // TABLE5 ::= Identificador ParentesisAbrir Identificador ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TABLE5",118, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // TABLE5 ::= PRIMARY 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TABLE5",118, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // FUNCTION1 ::= Identificador FUNCTION2 ParentesisAbrir FUNCTION3 ParentesisCerrar RETURNS DATATYPE FUNCTION6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION1",119, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // FUNCTION2 ::= Punto Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION2",120, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 278: // FUNCTION2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION2",120, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 279: // FUNCTION3 ::= Arroba Identificador FUNCTION4 DATATYPE FUNCTION5 FUNCTION10 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION3",121, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 280: // FUNCTION3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION3",121, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 281: // FUNCTION4 ::= AS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION4",122, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 282: // FUNCTION4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION4",122, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 283: // FUNCTION5 ::= Igual DEFV 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION5",123, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 284: // FUNCTION5 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION5",123, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 285: // FUNCTION6 ::= WITH RETURNS NULL ON NULL INPUT FUNCTION7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION6",124, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 286: // FUNCTION6 ::= FUNCTION7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION6",124, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 287: // FUNCTION7 ::= FUNCTION4 BEGIN FUNCTION11 END FIN_AN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION7",125, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 288: // FUNCTION10 ::= Coma FUNCTION3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION10",128, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 289: // FUNCTION10 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION10",128, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 290: // FUNCTION11 ::= RETURN SEXP FUNCTION12 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION11",129, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 291: // FUNCTION12 ::= PuntoComa 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION12",130, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 292: // FUNCTION12 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION12",130, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 293: // TRUNCATE1 ::= TRUNCATE TABLE OBJECT TRUNCATE2 TRUNCATE2 FIN_AN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TRUNCATE1",131, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 294: // TRUNCATE2 ::= Coma OBJECT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TRUNCATE2",132, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 295: // TRUNCATE2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TRUNCATE2",132, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 296: // CRT2 ::= PROC PROCEDURE1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CRT2",163, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 297: // CRT2 ::= PROCEDURE PROCEDURE1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CRT2",163, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 298: // CRT2 ::= VIEW VIEW1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CRT2",163, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 299: // CRT2 ::= FUNCTION FUNCTION1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CRT2",163, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parser$act_num+"found in internal parse table");

        }
    } /* end of method */
  /** Method 1 with the actual generated action code for actions 300 to 600. */
  public final java_cup.runtime.Symbol CUP$parser$do_action_part00000001(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 300: // ALTER0 ::= ALTER ALTER1 FIN_AN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER0",133, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 301: // ALTER1 ::= TABLE ALTER2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER1",134, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 302: // ALTER1 ::= DATABASE ALTER20 ALTER21 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER1",134, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 303: // ALTER1 ::= CRT2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER1",134, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 304: // ALTER2 ::= OBJECT ALTER3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER2",135, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 305: // ALTER3 ::= ALTER COLUMN Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER3",136, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 306: // ALTER3 ::= ADD ALTER11 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER3",136, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 307: // ALTER3 ::= DROP ALTER22 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER3",136, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 308: // ALTER3 ::= WITH ALTER18 CONSTRAINT ALTER19 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER3",136, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 309: // ALTER3 ::= CHECK CONSTRAINT ALTER19 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER3",136, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 310: // ALTER3 ::= NOCHECK CONSTRAINT ALTER19 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER3",136, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 311: // ALTER4 ::= ParentesisAbrir ALTER5 ParentesisCerrar ALTER7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER4",137, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 312: // ALTER4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER4",137, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 313: // ALTER5 ::= DatoEntero ALTER6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER5",138, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 314: // ALTER5 ::= MAX 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER5",138, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 315: // ALTER6 ::= Coma DatoEntero 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER6",139, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 316: // ALTER6 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER6",139, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 317: // ALTER7 ::= COLLATE Identificador ALTER8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER7",140, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 318: // ALTER7 ::= ALTER8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER7",140, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 319: // ALTER8 ::= NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER8",141, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 320: // ALTER8 ::= NOT NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER8",141, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 321: // ALTER8 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER8",141, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 322: // ALTER9 ::= DATATYPE ALTER4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER9",142, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 323: // ALTER9 ::= DROP ALTER10 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER9",142, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 324: // ALTER9 ::= ADD ALTER10 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER9",142, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 325: // ALTER10 ::= ROWGUIDCOL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER10",143, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 326: // ALTER10 ::= NOT FOR REPLICATION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER10",143, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 327: // ALTER11 ::= COL_DEF ALTER12 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER11",144, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 328: // ALTER11 ::= TB_CST ALTER12 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER11",144, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 329: // ALTER12 ::= Coma ALTER11 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER12",145, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 330: // ALTER12 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER12",145, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 331: // ALTER22 ::= CONSTRAINT ALTER13 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER22",155, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 332: // ALTER22 ::= ALTER13 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER22",155, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 333: // ALTER13 ::= IF EXISTS ALTER14 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER13",146, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 334: // ALTER13 ::= ALTER14 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER13",146, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 335: // ALTER14 ::= Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER14",147, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 336: // ALTER14 ::= COLUMN ALTER15 ALTER16 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER14",147, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 337: // ALTER15 ::= IF EXISTS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER15",148, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 338: // ALTER15 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER15",148, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 339: // ALTER16 ::= Identificador ALTER17 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER16",149, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 340: // ALTER17 ::= Coma Identificador ALTER17 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER17",150, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 341: // ALTER17 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER17",150, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 342: // ALTER18 ::= CHECK 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER18",151, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 343: // ALTER18 ::= NOCHECK 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER18",151, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 344: // ALTER19 ::= ALL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER19",152, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 345: // ALTER19 ::= Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER19",152, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 346: // ALTER20 ::= Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER20",153, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 347: // ALTER20 ::= CURRENT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER20",153, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 348: // ALTER21 ::= COLLATE Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER21",154, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 349: // ALTER21 ::= ADD FILE FLSPC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER21",154, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* select the action handler based on the action number */
      switch (CUP$parser$act_num/300)
        {
          /*. . . . . . . . 0 < #action < 300. . . . . . . . . . . .*/
          case 0: 
              return CUP$parser$do_action_part00000000(
                               CUP$parser$act_num,
                               CUP$parser$parser,
                               CUP$parser$stack,
                               CUP$parser$top);
          /*. . . . . . . . 300 < #action < 600. . . . . . . . . . . .*/
          case 1: 
              return CUP$parser$do_action_part00000001(
                               CUP$parser$act_num,
                               CUP$parser$parser,
                               CUP$parser$stack,
                               CUP$parser$top);
          /* . . . no valid action number: . . .*/
          default:
            throw new Exception("Invalid action number found in internal parse table");

        }      /* end of switch */
    }
}

}
