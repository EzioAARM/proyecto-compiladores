
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package AnalizadorSintactico.Ascendente;

import java_cup.runtime.*;
import AnalizadorSintactico.Ascendente.Lexemas;
import MiniSql.MiniSql;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import MiniSql.Errores;
import AnalizadorLexico.MyToken;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class parser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\u0301\000\002\002\004\000\002\003\007\000\002\003" +
    "\003\000\002\003\004\000\002\003\003\000\002\003\002" +
    "\000\002\004\006\000\002\004\005\000\002\004\005\000" +
    "\002\004\005\000\002\004\005\000\002\004\005\000\002" +
    "\004\005\000\002\004\005\000\002\004\005\000\002\004" +
    "\005\000\002\004\005\000\002\004\005\000\002\004\005" +
    "\000\002\004\002\000\002\002\003\000\002\002\002\000" +
    "\002\150\004\000\002\151\005\000\002\151\005\000\002" +
    "\151\002\000\002\152\004\000\002\153\005\000\002\153" +
    "\005\000\002\153\002\000\002\154\005\000\002\154\003" +
    "\000\002\154\003\000\002\154\004\000\002\154\003\000" +
    "\002\154\003\000\002\205\003\000\002\205\003\000\002" +
    "\201\004\000\002\202\005\000\002\202\002\000\002\203" +
    "\005\000\002\203\002\000\002\204\004\000\002\204\002" +
    "\000\002\155\004\000\002\156\006\000\002\156\003\000" +
    "\002\157\004\000\002\157\002\000\002\160\004\000\002" +
    "\160\010\000\002\160\010\000\002\161\003\000\002\161" +
    "\003\000\002\161\003\000\002\161\003\000\002\161\003" +
    "\000\002\161\003\000\002\161\003\000\002\161\003\000" +
    "\002\161\003\000\002\162\004\000\002\162\004\000\002" +
    "\162\005\000\002\162\006\000\002\162\005\000\002\162" +
    "\005\000\002\163\005\000\002\163\006\000\002\163\005" +
    "\000\002\164\003\000\002\164\002\000\002\165\005\000" +
    "\002\165\002\000\002\166\004\000\002\166\002\000\002" +
    "\167\003\000\002\167\003\000\002\170\003\000\002\171" +
    "\003\000\002\171\004\000\002\172\005\000\002\172\006" +
    "\000\002\173\004\000\002\173\002\000\002\174\004\000" +
    "\002\174\003\000\002\175\004\000\002\175\006\000\002" +
    "\176\003\000\002\176\002\000\002\177\005\000\002\200" +
    "\010\000\002\200\010\000\002\054\005\000\002\054\005" +
    "\000\002\054\005\000\002\054\003\000\002\055\003\000" +
    "\002\055\003\000\002\055\003\000\002\056\003\000\002" +
    "\056\003\000\002\057\003\000\002\057\003\000\002\057" +
    "\003\000\002\060\003\000\002\060\003\000\002\206\004" +
    "\000\002\207\003\000\002\207\003\000\002\210\005\000" +
    "\002\210\002\000\002\211\004\000\002\211\002\000\002" +
    "\212\005\000\002\213\003\000\002\213\003\000\002\214" +
    "\005\000\002\214\002\000\002\215\004\000\002\215\002" +
    "\000\002\216\005\000\002\216\004\000\002\217\003\000" +
    "\002\217\002\000\002\220\004\000\002\221\004\000\002" +
    "\222\004\000\002\222\003\000\002\223\003\000\002\223" +
    "\003\000\002\223\003\000\002\224\004\000\002\225\007" +
    "\000\002\225\003\000\002\226\004\000\002\226\003\000" +
    "\002\227\004\000\002\227\003\000\002\230\004\000\002" +
    "\231\004\000\002\231\003\000\002\232\004\000\002\232" +
    "\003\000\002\233\005\000\002\233\004\000\002\233\005" +
    "\000\002\234\004\000\002\235\003\000\002\235\003\000" +
    "\002\235\003\000\002\236\004\000\002\236\004\000\002" +
    "\237\005\000\002\237\003\000\002\240\003\000\002\240" +
    "\003\000\002\005\004\000\002\005\003\000\002\005\006" +
    "\000\002\006\004\000\002\006\003\000\002\006\003\000" +
    "\002\006\003\000\002\006\003\000\002\006\003\000\002" +
    "\006\003\000\002\007\004\000\002\007\004\000\002\007" +
    "\006\000\002\007\002\000\002\010\003\000\002\010\004" +
    "\000\002\011\004\000\002\011\003\000\002\011\002\000" +
    "\002\012\003\000\002\013\005\000\002\013\006\000\002" +
    "\013\003\000\002\014\004\000\002\014\004\000\002\014" +
    "\004\000\002\014\002\000\002\015\004\000\002\015\002" +
    "\000\002\016\006\000\002\016\003\000\002\017\005\000" +
    "\002\017\005\000\002\020\007\000\002\021\005\000\002" +
    "\022\005\000\002\022\002\000\002\023\004\000\002\024" +
    "\004\000\002\024\003\000\002\025\003\000\002\025\006" +
    "\000\002\025\006\000\002\025\006\000\002\025\005\000" +
    "\002\026\003\000\002\026\004\000\002\027\004\000\002" +
    "\027\003\000\002\030\006\000\002\030\012\000\002\030" +
    "\006\000\002\030\006\000\002\030\010\000\002\030\007" +
    "\000\002\030\006\000\002\030\010\000\002\030\006\000" +
    "\002\030\012\000\002\031\004\000\002\031\003\000\002" +
    "\031\003\000\002\032\004\000\002\032\002\000\002\033" +
    "\007\000\002\033\003\000\002\033\003\000\002\033\010" +
    "\000\002\034\005\000\002\034\003\000\002\035\005\000" +
    "\002\035\003\000\002\036\006\000\002\037\006\000\002" +
    "\037\006\000\002\037\006\000\002\037\006\000\002\037" +
    "\006\000\002\040\004\000\002\041\003\000\002\041\003" +
    "\000\002\041\002\000\002\042\003\000\002\042\004\000" +
    "\002\043\004\000\002\043\002\000\002\044\004\000\002" +
    "\045\003\000\002\045\003\000\002\045\002\000\002\046" +
    "\003\000\002\046\004\000\002\046\003\000\002\047\004" +
    "\000\002\047\002\000\002\050\004\000\002\051\003\000" +
    "\002\051\003\000\002\051\002\000\002\052\004\000\002" +
    "\052\003\000\002\053\004\000\002\053\002\000\002\054" +
    "\005\000\002\054\005\000\002\054\005\000\002\054\003" +
    "\000\002\054\005\000\002\055\003\000\002\055\003\000" +
    "\002\055\003\000\002\056\003\000\002\056\003\000\002" +
    "\057\003\000\002\057\003\000\002\057\003\000\002\060" +
    "\003\000\002\060\003\000\002\061\003\000\002\061\003" +
    "\000\002\061\003\000\002\061\003\000\002\061\003\000" +
    "\002\062\003\000\002\062\003\000\002\062\003\000\002" +
    "\062\003\000\002\067\003\000\002\063\003\000\002\064" +
    "\003\000\002\064\003\000\002\070\003\000\002\065\003" +
    "\000\002\065\003\000\002\065\003\000\002\065\003\000" +
    "\002\065\003\000\002\065\003\000\002\066\003\000\002" +
    "\066\003\000\002\066\003\000\002\071\004\000\002\072" +
    "\004\000\002\072\003\000\002\073\007\000\002\074\005" +
    "\000\002\074\003\000\002\074\003\000\002\075\010\000" +
    "\002\075\010\000\002\076\006\000\002\077\004\000\002" +
    "\100\003\000\002\100\003\000\002\100\002\000\002\101" +
    "\004\000\002\102\003\000\002\102\003\000\002\102\002" +
    "\000\002\103\004\000\002\103\004\000\002\103\004\000" +
    "\002\103\002\000\002\104\003\000\002\104\002\000\002" +
    "\105\004\000\002\105\005\000\002\106\004\000\002\106" +
    "\006\000\002\106\002\000\002\107\004\000\002\107\006" +
    "\000\002\110\006\000\002\111\003\000\002\111\002\000" +
    "\002\112\005\000\002\112\004\000\002\112\005\000\002" +
    "\113\004\000\002\113\003\000\002\113\002\000\002\114" +
    "\003\000\002\114\002\000\002\115\004\000\002\116\003" +
    "\000\002\116\004\000\002\117\004\000\002\117\003\000" +
    "\002\120\004\000\002\121\003\000\002\121\003\000\002" +
    "\121\002\000\002\122\004\000\002\122\003\000\002\123" +
    "\004\000\002\124\004\000\002\124\004\000\002\124\004" +
    "\000\002\124\004\000\002\124\004\000\002\124\004\000" +
    "\002\124\004\000\002\124\004\000\002\124\004\000\002" +
    "\124\004\000\002\124\004\000\002\124\004\000\002\124" +
    "\004\000\002\125\005\000\002\125\002\000\002\126\005" +
    "\000\002\126\003\000\002\127\004\000\002\130\004\000" +
    "\002\131\003\000\002\131\003\000\002\131\002\000\002" +
    "\132\004\000\002\132\003\000\002\133\006\000\002\134" +
    "\004\000\002\134\003\000\002\135\004\000\002\147\004" +
    "\000\002\147\003\000\002\136\004\000\002\136\003\000" +
    "\002\137\004\000\002\140\005\000\002\140\003\000\002" +
    "\141\005\000\002\141\003\000\002\142\007\000\002\142" +
    "\003\000\002\143\005\000\002\143\003\000\002\144\005" +
    "\000\002\144\002\000\002\145\005\000\002\145\002\000" +
    "\002\241\004\000\002\242\007\000\002\242\003\000\002" +
    "\243\004\000\002\243\003\000\002\244\004\000\002\244" +
    "\003\000\002\245\004\000\002\245\005\000\002\246\004" +
    "\000\002\246\003\000\002\247\005\000\002\247\003\000" +
    "\002\250\005\000\002\250\003\000\002\251\005\000\002" +
    "\251\003\000\002\252\003\000\002\252\003\000\002\253" +
    "\005\000\002\254\010\000\002\254\003\000\002\255\003" +
    "\000\002\255\002\000\002\256\004\000\002\256\005\000" +
    "\002\257\004\000\002\260\004\000\002\261\004\000\002" +
    "\261\006\000\002\262\004\000\002\264\003\000\002\264" +
    "\003\000\002\264\003\000\002\264\003\000\002\265\003" +
    "\000\002\266\004\000\002\266\003\000\002\267\004\000" +
    "\002\267\003\000\002\273\005\000\002\273\003\000\002" +
    "\274\004\000\002\274\002\000\002\272\003\000\002\272" +
    "\003\000\002\316\003\000\002\316\003\000\002\316\003" +
    "\000\002\316\003\000\002\316\003\000\002\317\004\000" +
    "\002\320\006\000\002\320\005\000\002\320\003\000\002" +
    "\320\005\000\002\320\004\000\002\321\004\000\002\321" +
    "\004\000\002\321\004\000\002\321\004\000\002\322\005" +
    "\000\002\322\002\000\002\323\005\000\002\324\004\000" +
    "\002\324\002\000\002\325\005\000\002\325\002\000\002" +
    "\326\014\000\002\327\006\000\002\327\002\000\002\275" +
    "\004\000\002\276\005\000\002\276\003\000\002\277\005" +
    "\000\002\277\003\000\002\300\007\000\002\301\003\000" +
    "\002\301\002\000\002\302\004\000\002\302\003\000\002" +
    "\303\005\000\002\303\003\000\002\304\004\000\002\304" +
    "\003\000\002\305\004\000\002\305\003\000\002\306\007" +
    "\000\002\306\003\000\002\307\003\000\002\307\003\000" +
    "\002\310\003\000\002\311\005\000\002\311\003\000\002" +
    "\312\007\000\002\313\003\000\002\313\002\000\002\314" +
    "\004\000\002\314\003\000\002\314\003\000\002\314\003" +
    "\000\002\315\004\000\002\315\003\000\002\330\005\000" +
    "\002\331\004\000\002\331\002\000\002\332\010\000\002" +
    "\332\005\000\002\333\004\000\002\333\002\000\002\334" +
    "\005\000\002\334\002\000\002\335\006\000\002\335\003" +
    "\000\002\336\005\000\002\337\004\000\002\337\002\000" +
    "\002\340\003\000\002\340\004\000\002\340\002\000\002" +
    "\341\005\000\002\341\004\000\002\341\003\000\002\341" +
    "\004\000\002\341\007\000\002\342\004\000\002\342\003" +
    "\000\002\343\005\000\002\343\003\000\002\344\005\000" +
    "\002\344\007\000\002\345\007\000\002\345\002\000\002" +
    "\346\007\000\002\347\004\000\002\347\002\000\002\350" +
    "\004\000\002\350\002\000\002\351\006\000\002\351\003" +
    "\000\002\352\005\000\002\352\002\000\002\353\003\000" +
    "\002\353\003\000\002\354\004\000\002\354\003\000\002" +
    "\354\004\000\002\355\003\000\002\355\003\000\002\356" +
    "\005\000\002\356\002\000\002\357\003\000\002\357\002" +
    "\000\002\360\004\000\002\360\003\000\002\360\003\000" +
    "\002\360\003\000\002\360\003\000\002\361\004\000\002" +
    "\362\004\000\002\362\002\000\002\363\006\000\002\363" +
    "\005\000\002\363\005\000\002\363\004\000\002\363\004" +
    "\000\002\363\004\000\002\364\010\000\002\365\003\000" +
    "\002\365\002\000\002\366\003\000\002\366\003\000\002" +
    "\366\002\000\002\367\005\000\002\367\002\000\002\370" +
    "\007\000\002\370\003\000\002\370\002\000\002\371\007" +
    "\000\002\371\003\000\002\372\011\000\002\373\007\000" +
    "\002\373\003\000\002\374\006\000\002\375\003\000\002" +
    "\375\003\000\002\376\004\000\002\376\003\000\002\376" +
    "\004\000\002\377\003\000\002\377\003\000\002\u0100\005" +
    "\000\002\u0100\002\000\002\u0101\011\000\002\u0102\007\000" +
    "\002\u0102\002\000\002\u0103\005\000\002\u0104\004\000\002" +
    "\u0104\003\000\002\u0105\010\000\002\u0105\005\000\002\u0106" +
    "\004\000\002\u0106\002\000\002\u0107\004\000\002\u0108\005" +
    "\000\002\u0108\002\000\002\u0109\005\000\002\u010a\005\000" +
    "\002\u010a\003\000\002\u010b\004\000\002\u010b\005\000\002" +
    "\u010b\003\000\002\u010c\003\000\002\u010c\004\000\002\u010c" +
    "\002\000\002\u010e\005\000\002\u010e\003\000\002\u010f\010" +
    "\000\002\u010f\003\000\002\u0110\006\000\002\u0110\003\000" +
    "\002\u0111\004\000\002\u0111\003\000\002\u0112\003\000\002" +
    "\u0112\002\000\002\u0118\010\000\002\u0119\005\000\002\u011a" +
    "\003\000\002\u011a\003\000\002\u011a\002\000\002\u011b\004" +
    "\000\002\u011b\002\000\002\u011c\006\000\002\u011c\002\000" +
    "\002\u0113\011\000\002\u0114\003\000\002\u0114\003\000\002" +
    "\u0115\005\000\002\u0115\002\000\002\u0116\004\000\002\u0116" +
    "\002\000\002\u0117\006\000\002\u0117\003\000\002\u011d\012" +
    "\000\002\u011e\004\000\002\u011e\002\000\002\u011f\010\000" +
    "\002\u011f\002\000\002\u0120\003\000\002\u0120\002\000\002" +
    "\u0121\004\000\002\u0121\002\000\002\u0122\011\000\002\u0122" +
    "\003\000\002\u0123\011\000\002\u0124\004\000\002\u0124\003" +
    "\000\002\u0124\003\000\002\u0124\003\000\002\u0125\004\000" +
    "\002\u0125\002\000\002\u0126\004\000\002\u0126\002\000\002" +
    "\u0127\005\000\002\u0128\003\000\002\u0128\002\000\002\u0129" +
    "\010\000\002\u012a\004\000\002\u012a\002\000\002\u012b\005" +
    "\000\002\u012c\005\000\002\u012c\005\000\002\u012c\005\000" +
    "\002\u012c\005\000\002\u012c\005\000\002\u012c\005\000\002" +
    "\u012c\005\000\002\u012d\004\000\002\u012d\002\000\002\u012e" +
    "\004\000\002\u012f\004\000\002\u012f\002\000\002\u0130\004" +
    "\000\002\u0131\004\000\002\u0131\002\000\002\u0132\004\000" +
    "\002\u0133\004\000\002\u0133\002\000\002\u013a\006\000\002" +
    "\u013b\003\000\002\u013b\003\000\002\u013c\003\000\002\u013c" +
    "\004\000\002\u013c\002\000\002\u0137\006\000\002\u0138\003" +
    "\000\002\u0138\002\000\002\u0139\003\000\002\u0139\004\000" +
    "\002\u0139\002\000\002\u0136\006\000\002\u0134\006\000\002" +
    "\u0135\003\000\002\u0135\004\000\002\u013d\005\000\002\u013e" +
    "\004\000\002\u013e\005\000\002\u013e\003\000\002\u013f\004" +
    "\000\002\u0140\005\000\002\u0140\004\000\002\u0140\004\000" +
    "\002\u0140\006\000\002\u0140\005\000\002\u0140\005\000\002" +
    "\u0141\006\000\002\u0141\002\000\002\u0142\004\000\002\u0142" +
    "\003\000\002\u0143\004\000\002\u0143\002\000\002\u0144\005" +
    "\000\002\u0144\003\000\002\u0145\003\000\002\u0145\004\000" +
    "\002\u0145\002\000\002\u0146\004\000\002\u0146\004\000\002" +
    "\u0146\004\000\002\u0147\003\000\002\u0147\005\000\002\u0148" +
    "\004\000\002\u0148\004\000\002\u0149\004\000\002\u0149\002" +
    "\000\002\u0153\004\000\002\u0153\003\000\002\u014a\005\000" +
    "\002\u014a\003\000\002\u014b\003\000\002\u014b\005\000\002" +
    "\u014c\004\000\002\u014c\002\000\002\u014d\004\000\002\u014e" +
    "\005\000\002\u014e\002\000\002\u014f\003\000\002\u014f\003" +
    "\000\002\u0150\003\000\002\u0150\003\000\002\u0151\003\000" +
    "\002\u0151\003\000\002\u0152\004\000\002\u0152\005\000\002" +
    "\u0154\010\000\002\u0155\003\000\002\u0155\003\000\002\u0156" +
    "\004\000\002\u0156\002\000\002\u0158\003\000\002\u0158\003" +
    "\000\002\u0158\005\000\002\u0158\003\000\002\u0158\002\000" +
    "\002\u0157\003\000\002\u0157\002\000\002\u0159\005\000\002" +
    "\u0159\002\000\002\u015a\006\000\002\u015a\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u056c\000\042\002\ufffc\003\033\006\026\015\021\034" +
    "\020\043\022\060\037\067\030\076\004\077\042\131\023" +
    "\215\017\221\010\224\011\250\013\256\036\001\002\000" +
    "\006\u0141\ufd0f\u015d\ufd0f\001\002\000\044\002\uffec\006\uffec" +
    "\015\uffec\034\uffec\043\uffec\060\uffec\067\uffec\072\uffec\076" +
    "\uffec\077\uffec\131\uffec\215\uffec\221\uffec\224\uffec\250\uffec" +
    "\256\uffec\327\043\001\002\000\006\u0141\ufd0c\u015d\u0558\001" +
    "\002\000\044\002\uffec\006\uffec\015\uffec\034\uffec\043\uffec" +
    "\060\uffec\067\uffec\072\uffec\076\uffec\077\uffec\131\uffec\215" +
    "\uffec\221\uffec\224\uffec\250\uffec\256\uffec\327\043\001\002" +
    "\000\006\245\051\246\050\001\002\000\106\005\u0521\024" +
    "\ufe8a\042\ufe8a\050\ufe8a\064\u051e\140\ufe8a\150\ufe8a\214\ufe8a" +
    "\231\ufe8a\244\ufe8a\323\ufe8a\341\ufe8a\345\ufe8a\360\ufe8a\376" +
    "\ufe8a\u0100\ufe8a\u0105\ufe8a\u010d\ufe8a\u0110\ufe8a\u0111\ufe8a\u0112\ufe8a" +
    "\u0116\ufe8a\u0118\ufe8a\u0119\ufe8a\u0120\ufe8a\u0123\ufe8a\u0137\ufe8a\u013c" +
    "\ufe8a\u013d\ufe8a\u013f\ufe8a\u0141\ufe8a\u0144\ufe8a\u0159\ufe8a\u015d\ufe8a" +
    "\001\002\000\044\002\uffec\006\uffec\015\uffec\034\uffec\043" +
    "\uffec\060\uffec\067\uffec\072\uffec\076\uffec\077\uffec\131\uffec" +
    "\215\uffec\221\uffec\224\uffec\250\uffec\256\uffec\327\043\001" +
    "\002\000\004\237\u0515\001\002\000\044\002\uffec\006\uffec" +
    "\015\uffec\034\uffec\043\uffec\060\uffec\067\uffec\072\uffec\076" +
    "\uffec\077\uffec\131\uffec\215\uffec\221\uffec\224\uffec\250\uffec" +
    "\256\uffec\327\043\001\002\000\044\002\uffec\006\uffec\015" +
    "\uffec\034\uffec\043\uffec\060\uffec\067\uffec\072\uffec\076\uffec" +
    "\077\uffec\131\uffec\215\uffec\221\uffec\224\uffec\250\uffec\256" +
    "\uffec\327\043\001\002\000\044\002\uffec\006\uffec\015\uffec" +
    "\034\uffec\043\uffec\060\uffec\067\uffec\072\uffec\076\uffec\077" +
    "\uffec\131\uffec\215\uffec\221\uffec\224\uffec\250\uffec\256\uffec" +
    "\327\043\001\002\000\006\245\051\246\050\001\002\000" +
    "\016\245\051\246\050\327\ufd4a\u0141\ufd4a\u0154\ufd4a\u015d\ufd4a" +
    "\001\002\000\044\006\026\015\045\034\020\043\022\060" +
    "\037\067\030\072\uffee\076\004\077\042\131\023\215\017" +
    "\221\010\224\011\245\051\246\050\250\013\256\036\001" +
    "\002\000\022\053\u04d5\114\u02f6\164\u04d8\176\u02f5\177\u02f0" +
    "\237\u04d7\261\u04d6\264\u02f3\001\002\000\010\133\u04aa\244" +
    "\u04a9\u0141\072\001\002\000\004\002\uffff\001\002\000\044" +
    "\002\uffec\006\uffec\015\uffec\034\uffec\043\uffec\060\uffec\067" +
    "\uffec\072\uffec\076\uffec\077\uffec\131\uffec\215\uffec\221\uffec" +
    "\224\uffec\250\uffec\256\uffec\327\043\001\002\000\016\053" +
    "\u02f1\114\u02f6\176\u02f5\177\u02f0\237\u02f2\264\u02f3\001\002" +
    "\000\044\002\uffec\006\uffec\015\uffec\034\uffec\043\uffec\060" +
    "\uffec\067\uffec\072\uffec\076\uffec\077\uffec\131\uffec\215\uffec" +
    "\221\uffec\224\uffec\250\uffec\256\uffec\327\043\001\002\000" +
    "\020\053\u02cb\114\u02d0\176\u02ce\177\u02ca\237\u02cc\261\u02cf" +
    "\264\u02cd\001\002\000\006\327\057\u0154\060\001\002\000" +
    "\044\002\uffec\006\uffec\015\uffec\034\uffec\043\uffec\060\uffec" +
    "\067\uffec\072\uffec\076\uffec\077\uffec\131\uffec\215\uffec\221" +
    "\uffec\224\uffec\250\uffec\256\uffec\327\043\001\002\000\042" +
    "\002\ufffd\003\033\006\026\015\021\034\020\043\022\060" +
    "\037\067\030\076\004\077\042\131\023\215\017\221\010" +
    "\224\011\250\013\256\036\001\002\000\044\002\uffec\006" +
    "\uffec\015\uffec\034\uffec\043\uffec\060\uffec\067\uffec\072\uffec" +
    "\076\uffec\077\uffec\131\uffec\215\uffec\221\uffec\224\uffec\250" +
    "\uffec\256\uffec\327\043\001\002\000\004\002\u02c0\001\002" +
    "\000\010\244\u0294\u0141\072\u015d\u0296\001\002\000\012\112" +
    "\066\244\067\u0141\072\u015d\071\001\002\000\044\002\uffec" +
    "\006\uffec\015\uffec\034\uffec\043\uffec\060\uffec\067\uffec\072" +
    "\uffec\076\uffec\077\uffec\131\uffec\215\uffec\221\uffec\224\uffec" +
    "\250\uffec\256\uffec\327\043\001\002\000\044\002\uffec\006" +
    "\uffec\015\uffec\034\uffec\043\uffec\060\uffec\067\uffec\072\uffec" +
    "\076\uffec\077\uffec\131\uffec\215\uffec\221\uffec\224\uffec\250" +
    "\uffec\256\uffec\327\043\001\002\000\006\u0141\ufd0e\u015d\ufd0e" +
    "\001\002\000\042\002\uffed\006\uffed\015\uffed\034\uffed\043" +
    "\uffed\060\uffed\067\uffed\072\uffed\076\uffed\077\uffed\131\uffed" +
    "\215\uffed\221\uffed\224\uffed\250\uffed\256\uffed\001\002\000" +
    "\042\002\uffee\006\026\015\045\034\020\043\022\060\037" +
    "\067\030\072\uffee\076\004\077\042\131\023\215\017\221" +
    "\010\224\011\250\013\256\036\001\002\000\006\245\051" +
    "\246\050\001\002\000\006\002\ufff9\072\ufff9\001\002\000" +
    "\012\327\ufd4d\u0141\054\u0154\ufd4d\u015d\053\001\002\000\012" +
    "\327\ufd50\u0141\ufd50\u0154\ufd50\u015d\ufd50\001\002\000\012\327" +
    "\ufd51\u0141\ufd51\u0154\ufd51\u015d\ufd51\001\002\000\006\327\057" +
    "\u0154\060\001\002\000\004\u0141\055\001\002\000\006\327" +
    "\ufd4f\u0154\ufd4f\001\002\000\006\327\ufd4e\u0154\ufd4e\001\002" +
    "\000\044\002\ufd52\006\ufd52\015\ufd52\034\ufd52\043\ufd52\060" +
    "\ufd52\067\ufd52\072\ufd52\076\ufd52\077\ufd52\131\ufd52\215\ufd52" +
    "\221\ufd52\224\ufd52\250\ufd52\256\ufd52\327\ufd52\001\002\000" +
    "\052\002\uffdc\003\uffdc\006\uffdc\015\uffdc\034\uffdc\043\uffdc" +
    "\060\uffdc\067\uffdc\072\uffdc\076\uffdc\077\uffdc\131\uffdc\211" +
    "\uffdc\215\uffdc\221\uffdc\224\uffdc\250\uffdc\256\uffdc\327\uffdc" +
    "\u0154\uffdc\001\002\000\052\002\uffdd\003\uffdd\006\uffdd\015" +
    "\uffdd\034\uffdd\043\uffdd\060\uffdd\067\uffdd\072\uffdd\076\uffdd" +
    "\077\uffdd\131\uffdd\211\uffdd\215\uffdd\221\uffdd\224\uffdd\250" +
    "\uffdd\256\uffdd\327\uffdd\u0154\uffdd\001\002\000\042\002\uffee" +
    "\006\026\015\045\034\020\043\022\060\037\067\030\072" +
    "\uffee\076\004\077\042\131\023\215\017\221\010\224\011" +
    "\250\013\256\036\001\002\000\006\002\ufff4\072\ufff4\001" +
    "\002\000\014\112\115\267\105\327\116\u0138\106\u0154\114" +
    "\001\002\000\046\002\ufe6c\006\ufe6c\015\ufe6c\034\ufe6c\043" +
    "\ufe6c\060\ufe6c\067\ufe6c\072\ufe6c\076\ufe6c\077\ufe6c\131\ufe6c" +
    "\211\ufe6c\215\ufe6c\221\ufe6c\224\ufe6c\250\ufe6c\256\ufe6c\327" +
    "\ufe6c\001\002\000\046\002\ufe70\006\ufe70\015\ufe70\034\ufe70" +
    "\043\ufe70\060\ufe70\067\ufe70\072\ufe70\076\ufe70\077\ufe70\131" +
    "\ufe70\211\ufe70\215\ufe70\221\ufe70\224\ufe70\250\ufe70\256\ufe70" +
    "\327\ufe70\001\002\000\006\u0141\072\u015d\071\001\002\000" +
    "\004\u0159\u0289\001\002\000\046\002\ufe72\006\ufe72\015\ufe72" +
    "\034\ufe72\043\ufe72\060\ufe72\067\ufe72\072\ufe72\076\ufe72\077" +
    "\ufe72\131\ufe72\211\ufe72\215\ufe72\221\ufe72\224\ufe72\250\ufe72" +
    "\256\ufe72\327\ufe72\001\002\000\004\u0141\104\001\002\000" +
    "\210\004\uffd9\006\uffd9\007\uffd9\011\uffd9\012\uffd9\016\uffd9" +
    "\025\uffd9\032\uffd9\044\uffd9\057\uffd9\062\uffd9\067\uffd9\071" +
    "\uffd9\072\uffd9\074\uffd9\112\uffd9\113\uffd9\117\uffd9\120\uffd9" +
    "\126\uffd9\130\uffd9\133\uffd9\134\uffd9\135\uffd9\140\uffd9\141" +
    "\uffd9\146\uffd9\150\uffd9\151\uffd9\156\uffd9\164\uffd9\165\uffd9" +
    "\170\uffd9\214\uffd9\224\uffd9\231\uffd9\240\uffd9\242\uffd9\262" +
    "\uffd9\266\uffd9\267\uffd9\271\uffd9\327\uffd9\333\uffd9\u0138\uffd9" +
    "\u013c\uffd9\u013d\uffd9\u013e\uffd9\u013f\uffd9\u0141\uffd9\u0142\uffd9\u0143" +
    "\uffd9\u0144\uffd9\u0145\uffd9\u0146\uffd9\u0147\uffd9\u014b\uffd9\u014c\uffd9" +
    "\u014d\uffd9\u014e\uffd9\u0150\uffd9\u0154\uffd9\u0155\uffd9\u0156\074\u0159" +
    "\uffd9\u015a\uffd9\u015d\uffd9\001\002\000\206\004\uffdb\006\uffdb" +
    "\007\uffdb\011\uffdb\012\uffdb\016\uffdb\025\uffdb\032\uffdb\044" +
    "\uffdb\057\uffdb\062\uffdb\067\uffdb\071\uffdb\072\uffdb\074\uffdb" +
    "\112\uffdb\113\uffdb\117\uffdb\120\uffdb\126\uffdb\130\uffdb\133" +
    "\uffdb\134\uffdb\135\uffdb\140\uffdb\141\uffdb\146\uffdb\150\uffdb" +
    "\151\uffdb\156\uffdb\164\uffdb\165\uffdb\170\uffdb\214\uffdb\224" +
    "\uffdb\231\uffdb\240\uffdb\242\uffdb\262\uffdb\266\uffdb\267\uffdb" +
    "\271\uffdb\327\uffdb\333\uffdb\u0138\uffdb\u013c\uffdb\u013d\uffdb\u013e" +
    "\uffdb\u013f\uffdb\u0141\uffdb\u0142\uffdb\u0143\uffdb\u0144\uffdb\u0145\uffdb" +
    "\u0146\uffdb\u0147\uffdb\u014b\uffdb\u014c\uffdb\u014d\uffdb\u014e\uffdb\u0150" +
    "\uffdb\u0154\uffdb\u0155\uffdb\u0159\uffdb\u015a\uffdb\u015d\uffdb\001\002" +
    "\000\004\u0141\075\001\002\000\210\004\uffd7\006\uffd7\007" +
    "\uffd7\011\uffd7\012\uffd7\016\uffd7\025\uffd7\032\uffd7\044\uffd7" +
    "\057\uffd7\062\uffd7\067\uffd7\071\uffd7\072\uffd7\074\uffd7\112" +
    "\uffd7\113\uffd7\117\uffd7\120\uffd7\126\uffd7\130\uffd7\133\uffd7" +
    "\134\uffd7\135\uffd7\140\uffd7\141\uffd7\146\uffd7\150\uffd7\151" +
    "\uffd7\156\uffd7\164\uffd7\165\uffd7\170\uffd7\214\uffd7\224\uffd7" +
    "\231\uffd7\240\uffd7\242\uffd7\262\uffd7\266\uffd7\267\uffd7\271" +
    "\uffd7\327\uffd7\333\uffd7\u0138\uffd7\u013c\uffd7\u013d\uffd7\u013e\uffd7" +
    "\u013f\uffd7\u0141\uffd7\u0142\uffd7\u0143\uffd7\u0144\uffd7\u0145\uffd7\u0146" +
    "\uffd7\u0147\uffd7\u014b\uffd7\u014c\uffd7\u014d\uffd7\u014e\uffd7\u0150\uffd7" +
    "\u0154\uffd7\u0155\uffd7\u0156\077\u0159\uffd7\u015a\uffd7\u015d\uffd7\001" +
    "\002\000\206\004\uffda\006\uffda\007\uffda\011\uffda\012\uffda" +
    "\016\uffda\025\uffda\032\uffda\044\uffda\057\uffda\062\uffda\067" +
    "\uffda\071\uffda\072\uffda\074\uffda\112\uffda\113\uffda\117\uffda" +
    "\120\uffda\126\uffda\130\uffda\133\uffda\134\uffda\135\uffda\140" +
    "\uffda\141\uffda\146\uffda\150\uffda\151\uffda\156\uffda\164\uffda" +
    "\165\uffda\170\uffda\214\uffda\224\uffda\231\uffda\240\uffda\242" +
    "\uffda\262\uffda\266\uffda\267\uffda\271\uffda\327\uffda\333\uffda" +
    "\u0138\uffda\u013c\uffda\u013d\uffda\u013e\uffda\u013f\uffda\u0141\uffda\u0142" +
    "\uffda\u0143\uffda\u0144\uffda\u0145\uffda\u0146\uffda\u0147\uffda\u014b\uffda" +
    "\u014c\uffda\u014d\uffda\u014e\uffda\u0150\uffda\u0154\uffda\u0155\uffda\u0159" +
    "\uffda\u015a\uffda\u015d\uffda\001\002\000\004\u0141\100\001\002" +
    "\000\210\004\uffd5\006\uffd5\007\uffd5\011\uffd5\012\uffd5\016" +
    "\uffd5\025\uffd5\032\uffd5\044\uffd5\057\uffd5\062\uffd5\067\uffd5" +
    "\071\uffd5\072\uffd5\074\uffd5\112\uffd5\113\uffd5\117\uffd5\120" +
    "\uffd5\126\uffd5\130\uffd5\133\uffd5\134\uffd5\135\uffd5\140\uffd5" +
    "\141\uffd5\146\uffd5\150\uffd5\151\uffd5\156\uffd5\164\uffd5\165" +
    "\uffd5\170\uffd5\214\uffd5\224\uffd5\231\uffd5\240\uffd5\242\uffd5" +
    "\262\uffd5\266\uffd5\267\uffd5\271\uffd5\327\uffd5\333\uffd5\u0138" +
    "\uffd5\u013c\uffd5\u013d\uffd5\u013e\uffd5\u013f\uffd5\u0141\uffd5\u0142\uffd5" +
    "\u0143\uffd5\u0144\uffd5\u0145\uffd5\u0146\uffd5\u0147\uffd5\u014b\uffd5\u014c" +
    "\uffd5\u014d\uffd5\u014e\uffd5\u0150\uffd5\u0154\uffd5\u0155\uffd5\u0156\102" +
    "\u0159\uffd5\u015a\uffd5\u015d\uffd5\001\002\000\206\004\uffd8\006" +
    "\uffd8\007\uffd8\011\uffd8\012\uffd8\016\uffd8\025\uffd8\032\uffd8" +
    "\044\uffd8\057\uffd8\062\uffd8\067\uffd8\071\uffd8\072\uffd8\074" +
    "\uffd8\112\uffd8\113\uffd8\117\uffd8\120\uffd8\126\uffd8\130\uffd8" +
    "\133\uffd8\134\uffd8\135\uffd8\140\uffd8\141\uffd8\146\uffd8\150" +
    "\uffd8\151\uffd8\156\uffd8\164\uffd8\165\uffd8\170\uffd8\214\uffd8" +
    "\224\uffd8\231\uffd8\240\uffd8\242\uffd8\262\uffd8\266\uffd8\267" +
    "\uffd8\271\uffd8\327\uffd8\333\uffd8\u0138\uffd8\u013c\uffd8\u013d\uffd8" +
    "\u013e\uffd8\u013f\uffd8\u0141\uffd8\u0142\uffd8\u0143\uffd8\u0144\uffd8\u0145" +
    "\uffd8\u0146\uffd8\u0147\uffd8\u014b\uffd8\u014c\uffd8\u014d\uffd8\u014e\uffd8" +
    "\u0150\uffd8\u0154\uffd8\u0155\uffd8\u0159\uffd8\u015a\uffd8\u015d\uffd8\001" +
    "\002\000\004\u0141\103\001\002\000\206\004\uffd6\006\uffd6" +
    "\007\uffd6\011\uffd6\012\uffd6\016\uffd6\025\uffd6\032\uffd6\044" +
    "\uffd6\057\uffd6\062\uffd6\067\uffd6\071\uffd6\072\uffd6\074\uffd6" +
    "\112\uffd6\113\uffd6\117\uffd6\120\uffd6\126\uffd6\130\uffd6\133" +
    "\uffd6\134\uffd6\135\uffd6\140\uffd6\141\uffd6\146\uffd6\150\uffd6" +
    "\151\uffd6\156\uffd6\164\uffd6\165\uffd6\170\uffd6\214\uffd6\224" +
    "\uffd6\231\uffd6\240\uffd6\242\uffd6\262\uffd6\266\uffd6\267\uffd6" +
    "\271\uffd6\327\uffd6\333\uffd6\u0138\uffd6\u013c\uffd6\u013d\uffd6\u013e" +
    "\uffd6\u013f\uffd6\u0141\uffd6\u0142\uffd6\u0143\uffd6\u0144\uffd6\u0145\uffd6" +
    "\u0146\uffd6\u0147\uffd6\u014b\uffd6\u014c\uffd6\u014d\uffd6\u014e\uffd6\u0150" +
    "\uffd6\u0154\uffd6\u0155\uffd6\u0159\uffd6\u015a\uffd6\u015d\uffd6\001\002" +
    "\000\014\112\115\267\105\327\116\u0138\106\u0154\114\001" +
    "\002\000\114\024\uffa6\037\uffa6\042\uffa6\050\uffa6\110\uffa6" +
    "\140\uffa6\150\145\152\uffa6\214\uffa6\230\uffa6\231\uffa6\236" +
    "\uffa6\323\uffa6\341\uffa6\345\uffa6\360\uffa6\376\uffa6\u0100\uffa6" +
    "\u0105\uffa6\u010d\uffa6\u010e\144\u0110\uffa6\u0111\uffa6\u0112\uffa6\u0116" +
    "\uffa6\u0118\uffa6\u0119\uffa6\u0120\uffa6\u0122\uffa6\u0123\uffa6\u0137\uffa6" +
    "\u013c\uffa6\u013d\uffa6\u013f\uffa6\u0141\uffa6\u0159\147\u015d\uffa6\001" +
    "\002\000\026\323\231\u0100\240\u0105\243\u0110\246\u0111\215" +
    "\u013c\242\u013d\225\u0141\u0269\u0159\275\u015d\204\001\002\000" +
    "\046\002\ufe66\006\ufe66\015\ufe66\034\ufe66\043\ufe66\060\ufe66" +
    "\067\ufe66\072\ufe66\076\ufe66\077\ufe66\131\ufe66\211\ufe66\215" +
    "\ufe66\221\ufe66\224\ufe66\250\ufe66\256\ufe66\327\ufe66\001\002" +
    "\000\046\002\ufe68\006\ufe68\015\ufe68\034\ufe68\043\ufe68\060" +
    "\ufe68\067\ufe68\072\ufe68\076\ufe68\077\ufe68\131\ufe68\211\ufe68" +
    "\215\ufe68\221\ufe68\224\ufe68\250\ufe68\256\ufe68\327\ufe68\001" +
    "\002\000\046\002\ufe6a\006\ufe6a\015\ufe6a\034\ufe6a\043\ufe6a" +
    "\060\ufe6a\067\ufe6a\072\ufe6a\076\ufe6a\077\ufe6a\131\ufe6a\211" +
    "\ufe6a\215\ufe6a\221\ufe6a\224\ufe6a\250\ufe6a\256\ufe6a\327\ufe6a" +
    "\001\002\000\046\002\ufe62\006\ufe62\015\ufe62\034\ufe62\043" +
    "\ufe62\060\ufe62\067\ufe62\072\ufe62\076\ufe62\077\ufe62\131\ufe62" +
    "\211\ufe62\215\ufe62\221\ufe62\224\ufe62\250\ufe62\256\ufe62\327" +
    "\ufe62\001\002\000\012\112\115\267\105\327\116\u0154\114" +
    "\001\002\000\046\002\ufe61\006\ufe61\015\ufe61\034\ufe61\043" +
    "\ufe61\060\ufe61\067\ufe61\072\ufe61\076\ufe61\077\ufe61\131\ufe61" +
    "\211\ufe61\215\ufe61\221\ufe61\224\ufe61\250\ufe61\256\ufe61\327" +
    "\ufe61\001\002\000\014\160\120\161\123\u0141\072\u0159\122" +
    "\u015d\125\001\002\000\046\002\ufe60\006\ufe60\015\ufe60\034" +
    "\ufe60\043\ufe60\060\ufe60\067\ufe60\072\ufe60\076\ufe60\077\ufe60" +
    "\131\ufe60\211\ufe60\215\ufe60\221\ufe60\224\ufe60\250\ufe60\256" +
    "\ufe60\327\ufe60\001\002\000\044\011\u0246\044\ufeae\113\ufeae" +
    "\117\ufeae\120\ufeae\130\ufeae\135\ufeae\140\ufeae\156\ufeae\165" +
    "\ufeae\214\ufeae\267\ufeae\271\ufeae\327\ufeae\u0141\u0247\u0154\ufeae" +
    "\u0155\ufeae\001\002\000\004\u0159\u0261\001\002\000\046\011" +
    "\u0246\044\ufeae\113\ufeae\117\ufeae\120\ufeae\130\ufeae\135\ufeae" +
    "\140\ufeae\156\ufeae\165\ufeae\214\ufeae\240\ufeae\267\ufeae\271" +
    "\ufeae\327\ufeae\u0141\u0247\u0154\ufeae\u0155\ufeae\001\002\000\004" +
    "\135\u0254\001\002\000\004\u0159\u024f\001\002\000\012\267" +
    "\105\327\116\u0154\114\u0155\u024b\001\002\000\004\u0141\u0245" +
    "\001\002\000\036\044\130\113\131\117\ufeb9\120\ufeb9\130" +
    "\135\135\ufec4\140\127\165\ufeb9\214\132\267\ufeb9\271\ufeb9" +
    "\327\ufeb9\u0154\ufeb9\u0155\ufeb9\001\002\000\006\135\ufebe\166" +
    "\u023e\001\002\000\004\u0155\u0241\001\002\000\006\135\ufebe" +
    "\166\u023e\001\002\000\006\135\ufebe\166\u023e\001\002\000" +
    "\004\135\ufec5\001\002\000\004\135\u023d\001\002\000\004" +
    "\135\ufec6\001\002\000\022\117\ufebd\120\ufebd\165\ufebd\267" +
    "\ufebd\271\ufebd\327\ufebd\u0154\ufebd\u0155\ufebd\001\002\000\012" +
    "\160\120\161\123\u0141\072\u015d\125\001\002\000\022\117" +
    "\ufebb\120\ufebb\165\ufebb\267\ufebb\271\ufebb\327\ufebb\u0154\ufebb" +
    "\u0155\ufebb\001\002\000\004\156\142\001\002\000\114\024" +
    "\uffa6\037\uffa6\042\uffa6\050\uffa6\110\uffa6\140\uffa6\150\145" +
    "\152\uffa6\214\uffa6\230\uffa6\231\uffa6\236\uffa6\323\uffa6\341" +
    "\uffa6\345\uffa6\360\uffa6\376\uffa6\u0100\uffa6\u0105\uffa6\u010d\uffa6" +
    "\u010e\144\u0110\uffa6\u0111\uffa6\u0112\uffa6\u0116\uffa6\u0118\uffa6\u0119" +
    "\uffa6\u0120\uffa6\u0122\uffa6\u0123\uffa6\u0137\uffa6\u013c\uffa6\u013d\uffa6" +
    "\u013f\uffa6\u0141\uffa6\u0159\147\u015d\uffa6\001\002\000\110\024" +
    "\200\037\230\042\203\050\236\110\205\140\217\152\237" +
    "\214\244\230\221\231\250\236\220\323\231\341\171\345" +
    "\174\360\172\376\173\u0100\240\u0105\243\u010d\201\u0110\246" +
    "\u0111\215\u0112\214\u0116\247\u0118\211\u0119\177\u0120\233\u0122" +
    "\213\u0123\245\u0137\216\u013c\242\u013d\225\u013f\223\u0141\072" +
    "\u0159\275\u015d\204\001\002\000\004\u0159\u0229\001\002\000" +
    "\110\024\uffa7\037\uffa7\042\uffa7\050\uffa7\110\uffa7\140\uffa7" +
    "\152\uffa7\214\uffa7\230\uffa7\231\uffa7\236\uffa7\323\uffa7\341" +
    "\uffa7\345\uffa7\360\uffa7\376\uffa7\u0100\uffa7\u0105\uffa7\u010d\uffa7" +
    "\u0110\uffa7\u0111\uffa7\u0112\uffa7\u0116\uffa7\u0118\uffa7\u0119\uffa7\u0120" +
    "\uffa7\u0122\uffa7\u0123\uffa7\u0137\uffa7\u013c\uffa7\u013d\uffa7\u013f\uffa7" +
    "\u0141\uffa7\u0159\uffa7\u015d\uffa7\001\002\000\042\007\uffd2\044" +
    "\uffd2\113\uffd2\117\uffd2\120\uffd2\130\uffd2\135\uffd2\140\uffd2" +
    "\165\uffd2\214\uffd2\267\uffd2\271\uffd2\327\uffd2\u0154\uffd2\u0155" +
    "\uffd2\u015a\uffd2\001\002\000\112\024\uffa6\037\uffa6\042\uffa6" +
    "\050\uffa6\110\uffa6\140\uffa6\150\145\152\uffa6\214\uffa6\230" +
    "\uffa6\231\uffa6\236\uffa6\323\uffa6\341\uffa6\345\uffa6\360\uffa6" +
    "\376\uffa6\u0100\uffa6\u0105\uffa6\u010d\uffa6\u0110\uffa6\u0111\uffa6\u0112" +
    "\uffa6\u0116\uffa6\u0118\uffa6\u0119\uffa6\u0120\uffa6\u0122\uffa6\u0123\uffa6" +
    "\u0137\uffa6\u013c\uffa6\u013d\uffa6\u013f\uffa6\u0141\uffa6\u0159\147\u015d" +
    "\uffa6\001\002\000\042\007\162\044\uffd0\113\uffd0\117\uffd0" +
    "\120\uffd0\130\uffd0\135\uffd0\140\uffd0\165\uffd0\214\uffd0\267" +
    "\uffd0\271\uffd0\327\uffd0\u0154\uffd0\u0155\uffd0\u015a\uffd0\001\002" +
    "\000\036\044\152\113\131\117\ufeb4\120\ufeb4\130\135\135" +
    "\ufec4\140\127\165\ufeb4\214\132\267\ufeb4\271\ufeb4\327\ufeb4" +
    "\u0154\ufeb4\u0155\ufeb4\001\002\000\004\u0155\157\001\002\000" +
    "\022\117\ufeb6\120\ufeb6\165\ufeb6\267\ufeb6\271\ufeb6\327\ufeb6" +
    "\u0154\ufeb6\u0155\ufeb6\001\002\000\022\117\ufeb5\120\ufeb5\165" +
    "\ufeb5\267\ufeb5\271\ufeb5\327\ufeb5\u0154\ufeb5\u0155\ufeb5\001\002" +
    "\000\012\160\120\161\123\u0141\072\u015d\125\001\002\000" +
    "\022\117\ufeb8\120\ufeb8\165\ufeb8\267\ufeb8\271\ufeb8\327\ufeb8" +
    "\u0154\ufeb8\u0155\ufeb8\001\002\000\004\135\160\001\002\000" +
    "\036\044\152\113\131\117\ufeb4\120\ufeb4\130\135\135\ufec4" +
    "\140\127\165\ufeb4\214\132\267\ufeb4\271\ufeb4\327\ufeb4\u0154" +
    "\ufeb4\u0155\ufeb4\001\002\000\022\117\ufeb7\120\ufeb7\165\ufeb7" +
    "\267\ufeb7\271\ufeb7\327\ufeb7\u0154\ufeb7\u0155\ufeb7\001\002\000" +
    "\114\024\uffa6\037\uffa6\042\uffa6\050\uffa6\110\uffa6\140\uffa6" +
    "\150\145\152\uffa6\214\uffa6\230\uffa6\231\uffa6\236\uffa6\323" +
    "\uffa6\341\uffa6\345\uffa6\360\uffa6\376\uffa6\u0100\uffa6\u0105\uffa6" +
    "\u010d\uffa6\u010e\144\u0110\uffa6\u0111\uffa6\u0112\uffa6\u0116\uffa6\u0118" +
    "\uffa6\u0119\uffa6\u0120\uffa6\u0122\uffa6\u0123\uffa6\u0137\uffa6\u013c\uffa6" +
    "\u013d\uffa6\u013f\uffa6\u0141\uffa6\u0159\147\u015d\uffa6\001\002\000" +
    "\040\044\uffd4\113\uffd4\117\uffd4\120\uffd4\130\uffd4\135\uffd4" +
    "\140\uffd4\165\uffd4\214\uffd4\267\uffd4\271\uffd4\327\uffd4\u0154" +
    "\uffd4\u0155\uffd4\u015a\uffd4\001\002\000\040\044\uffd1\113\uffd1" +
    "\117\uffd1\120\uffd1\130\uffd1\135\uffd1\140\uffd1\165\uffd1\214" +
    "\uffd1\267\uffd1\271\uffd1\327\uffd1\u0154\uffd1\u0155\uffd1\u015a\uffd1" +
    "\001\002\000\004\u015a\166\001\002\000\044\007\uffac\044" +
    "\uffac\113\uffac\117\uffac\120\uffac\130\uffac\135\uffac\140\uffac" +
    "\164\170\165\uffac\214\uffac\267\uffac\271\uffac\327\uffac\u0154" +
    "\uffac\u0155\uffac\u015a\uffac\001\002\000\042\007\uffae\044\uffae" +
    "\113\uffae\117\uffae\120\uffae\130\uffae\135\uffae\140\uffae\165" +
    "\uffae\214\uffae\267\uffae\271\uffae\327\uffae\u0154\uffae\u0155\uffae" +
    "\u015a\uffae\001\002\000\112\024\200\037\230\042\203\050" +
    "\236\110\205\140\217\150\207\152\237\214\244\230\221" +
    "\231\250\236\220\323\231\341\171\345\174\360\172\376" +
    "\173\u0100\240\u0105\243\u010d\201\u0110\246\u0111\215\u0112\214" +
    "\u0116\247\u0118\211\u0119\177\u0120\233\u0122\213\u0123\245\u0137" +
    "\216\u013c\242\u013d\225\u013f\223\u0141\072\u0159\224\u015d\204" +
    "\001\002\000\004\u0159\u0222\001\002\000\004\u0159\u021f\001" +
    "\002\000\004\u0159\u0218\001\002\000\004\u0159\u0215\001\002" +
    "\000\042\007\uffaa\044\uffaa\113\uffaa\117\uffaa\120\uffaa\130" +
    "\uffaa\135\uffaa\140\uffaa\165\uffaa\214\uffaa\267\uffaa\271\uffaa" +
    "\327\uffaa\u0154\uffaa\u0155\uffaa\u015a\uffaa\001\002\000\042\007" +
    "\uffad\044\uffad\113\uffad\117\uffad\120\uffad\130\uffad\135\uffad" +
    "\140\uffad\165\uffad\214\uffad\267\uffad\271\uffad\327\uffad\u0154" +
    "\uffad\u0155\uffad\u015a\uffad\001\002\000\004\u0159\u0212\001\002" +
    "\000\034\150\343\266\u0204\323\231\u0100\240\u0105\243\u0110" +
    "\246\u0111\215\u013c\242\u013d\225\u013f\351\u0141\344\u0159\353" +
    "\u015d\204\001\002\000\004\u0159\u0201\001\002\000\074\007" +
    "\uffc6\016\uffc6\044\uffc6\074\uffc6\113\uffc6\117\uffc6\120\uffc6" +
    "\126\uffc6\130\uffc6\134\uffc6\135\uffc6\140\uffc6\141\uffc6\150" +
    "\uffc6\164\uffc6\165\uffc6\214\uffc6\267\uffc6\271\uffc6\327\uffc6" +
    "\u0147\uffc6\u014b\uffc6\u014c\uffc6\u014d\uffc6\u014e\uffc6\u0150\uffc6\u0154" +
    "\uffc6\u0155\uffc6\u015a\uffc6\001\002\000\004\u0159\u01ce\001\002" +
    "\000\004\u0141\u01cd\001\002\000\004\u0159\u01c5\001\002\000" +
    "\074\007\uffc9\016\uffc9\044\uffc9\074\uffc9\113\uffc9\117\uffc9" +
    "\120\uffc9\126\uffc9\130\uffc9\134\uffc9\135\uffc9\140\uffc9\141" +
    "\uffc9\150\uffc9\164\uffc9\165\uffc9\214\uffc9\267\uffc9\271\uffc9" +
    "\327\uffc9\u0147\uffc9\u014b\uffc9\u014c\uffc9\u014d\uffc9\u014e\uffc9\u0150" +
    "\uffc9\u0154\uffc9\u0155\uffc9\u015a\uffc9\001\002\000\110\024\200" +
    "\037\230\042\203\050\236\110\205\140\217\152\237\214" +
    "\244\230\221\231\250\236\220\323\231\341\171\345\174" +
    "\360\172\376\173\u0100\240\u0105\243\u010d\201\u0110\246\u0111" +
    "\215\u0112\214\u0116\247\u0118\211\u0119\177\u0120\233\u0122\213" +
    "\u0123\245\u0137\216\u013c\242\u013d\225\u013f\223\u0141\072\u0159" +
    "\224\u015d\204\001\002\000\104\007\uffde\016\uffde\044\uffde" +
    "\074\uffde\113\uffde\117\uffde\120\uffde\126\uffde\130\uffde\134" +
    "\uffde\135\uffde\140\uffde\141\uffde\150\uffde\164\uffde\165\uffde" +
    "\214\uffde\267\uffde\271\uffde\327\uffde\u0142\uffde\u0143\uffde\u0144" +
    "\uffde\u0145\uffde\u0147\uffde\u014b\uffde\u014c\uffde\u014d\uffde\u014e\uffde" +
    "\u0150\uffde\u0154\uffde\u0155\uffde\u015a\uffde\001\002\000\004\u0159" +
    "\u01be\001\002\000\030\016\u019f\126\u019d\134\u01a2\141\u01a1" +
    "\150\u01a0\u0147\364\u014b\370\u014c\371\u014d\367\u014e\361\u0150" +
    "\372\001\002\000\004\u012a\u014c\001\002\000\004\u0159\u0145" +
    "\001\002\000\004\u0159\u0142\001\002\000\004\u0159\u013f\001" +
    "\002\000\004\u0159\u013a\001\002\000\074\007\uff21\016\uff21" +
    "\044\uff21\074\uff21\113\uff21\117\uff21\120\uff21\126\uff21\130" +
    "\uff21\134\uff21\135\uff21\140\uff21\141\uff21\150\uff21\164\uff21" +
    "\165\uff21\214\uff21\267\uff21\271\uff21\327\uff21\u0147\uff21\u014b" +
    "\uff21\u014c\uff21\u014d\uff21\u014e\uff21\u0150\uff21\u0154\uff21\u0155\uff21" +
    "\u015a\uff21\001\002\000\074\007\uff20\016\uff20\044\uff20\074" +
    "\uff20\113\uff20\117\uff20\120\uff20\126\uff20\130\uff20\134\uff20" +
    "\135\uff20\140\uff20\141\uff20\150\uff20\164\uff20\165\uff20\214" +
    "\uff20\267\uff20\271\uff20\327\uff20\u0147\uff20\u014b\uff20\u014c\uff20" +
    "\u014d\uff20\u014e\uff20\u0150\uff20\u0154\uff20\u0155\uff20\u015a\uff20\001" +
    "\002\000\074\007\uffca\016\uffca\044\uffca\074\uffca\113\uffca" +
    "\117\uffca\120\uffca\126\uffca\130\uffca\134\uffca\135\uffca\140" +
    "\uffca\141\uffca\150\uffca\164\uffca\165\uffca\214\uffca\267\uffca" +
    "\271\uffca\327\uffca\u0147\uffca\u014b\uffca\u014c\uffca\u014d\uffca\u014e" +
    "\uffca\u0150\uffca\u0154\uffca\u0155\uffca\u015a\uffca\001\002\000\074" +
    "\007\uffcb\016\uffcb\044\uffcb\074\uffcb\113\uffcb\117\uffcb\120" +
    "\uffcb\126\uffcb\130\uffcb\134\uffcb\135\uffcb\140\uffcb\141\uffcb" +
    "\150\uffcb\164\uffcb\165\uffcb\214\uffcb\267\uffcb\271\uffcb\327" +
    "\uffcb\u0147\uffcb\u014b\uffcb\u014c\uffcb\u014d\uffcb\u014e\uffcb\u0150\uffcb" +
    "\u0154\uffcb\u0155\uffcb\u015a\uffcb\001\002\000\112\024\uffa6\037" +
    "\uffa6\042\uffa6\050\uffa6\110\uffa6\140\uffa6\150\145\152\uffa6" +
    "\214\uffa6\230\uffa6\231\uffa6\236\uffa6\323\231\341\uffa6\345" +
    "\uffa6\360\uffa6\376\uffa6\u0100\240\u0105\243\u010d\uffa6\u0110\246" +
    "\u0111\215\u0112\uffa6\u0116\uffa6\u0118\uffa6\u0119\uffa6\u0120\uffa6\u0122" +
    "\uffa6\u0123\uffa6\u0137\uffa6\u013c\242\u013d\225\u013f\uffa6\u0141\072" +
    "\u0159\u0137\u015d\204\001\002\000\150\007\uffe1\011\uffe1\012" +
    "\uffe1\016\uffe1\032\uffe1\044\uffe1\057\uffe1\062\uffe1\071\uffe1" +
    "\072\uffe1\074\uffe1\112\uffe1\113\uffe1\117\uffe1\120\uffe1\126" +
    "\uffe1\130\uffe1\133\uffe1\134\uffe1\135\uffe1\140\uffe1\141\uffe1" +
    "\150\uffe1\164\uffe1\165\uffe1\170\uffe1\214\uffe1\224\uffe1\242" +
    "\uffe1\262\uffe1\266\uffe1\267\uffe1\271\uffe1\327\uffe1\333\uffe1" +
    "\u0138\uffe1\u0141\uffe1\u0142\uffe1\u0143\uffe1\u0144\uffe1\u0145\uffe1\u0146" +
    "\uffe1\u0147\uffe1\u014b\uffe1\u014c\uffe1\u014d\uffe1\u014e\uffe1\u0150\uffe1" +
    "\u0154\uffe1\u0155\uffe1\u015a\uffe1\001\002\000\104\007\uffdf\016" +
    "\uffdf\044\uffdf\074\uffdf\113\uffdf\117\uffdf\120\uffdf\126\uffdf" +
    "\130\uffdf\134\uffdf\135\uffdf\140\uffdf\141\uffdf\150\uffdf\164" +
    "\uffdf\165\uffdf\214\uffdf\267\uffdf\271\uffdf\327\uffdf\u0142\uffdf" +
    "\u0143\uffdf\u0144\uffdf\u0145\uffdf\u0147\uffdf\u014b\uffdf\u014c\uffdf\u014d" +
    "\uffdf\u014e\uffdf\u0150\uffdf\u0154\uffdf\u0155\uffdf\u015a\uffdf\001\002" +
    "\000\044\007\uffac\044\uffac\113\uffac\117\uffac\120\uffac\130" +
    "\uffac\135\uffac\140\uffac\164\170\165\uffac\214\uffac\267\uffac" +
    "\271\uffac\327\uffac\u0154\uffac\u0155\uffac\u015a\uffac\001\002\000" +
    "\004\u0159\u012d\001\002\000\004\u0159\u0121\001\002\000\074" +
    "\007\uffc4\016\uffc4\044\uffc4\074\uffc4\113\uffc4\117\uffc4\120" +
    "\uffc4\126\uffc4\130\uffc4\134\uffc4\135\uffc4\140\uffc4\141\uffc4" +
    "\150\uffc4\164\uffc4\165\uffc4\214\uffc4\267\uffc4\271\uffc4\327" +
    "\uffc4\u0147\uffc4\u014b\uffc4\u014c\uffc4\u014d\uffc4\u014e\uffc4\u0150\uffc4" +
    "\u0154\uffc4\u0155\uffc4\u015a\uffc4\001\002\000\004\u0159\u011e\001" +
    "\002\000\150\007\uffe4\011\uffe4\012\uffe4\016\uffe4\032\uffe4" +
    "\044\uffe4\057\uffe4\062\uffe4\071\uffe4\072\uffe4\074\uffe4\112" +
    "\uffe4\113\uffe4\117\uffe4\120\uffe4\126\uffe4\130\uffe4\133\uffe4" +
    "\134\uffe4\135\uffe4\140\uffe4\141\uffe4\150\uffe4\164\uffe4\165" +
    "\uffe4\170\uffe4\214\uffe4\224\uffe4\242\uffe4\262\uffe4\266\uffe4" +
    "\267\uffe4\271\uffe4\327\uffe4\333\uffe4\u0138\uffe4\u0141\uffe4\u0142" +
    "\uffe4\u0143\uffe4\u0144\u0119\u0145\u0117\u0146\uffe4\u0147\uffe4\u014b\uffe4" +
    "\u014c\uffe4\u014d\uffe4\u014e\uffe4\u0150\uffe4\u0154\uffe4\u0155\uffe4\u015a" +
    "\uffe4\001\002\000\150\007\uffe8\011\uffe8\012\uffe8\016\uffe8" +
    "\032\uffe8\044\uffe8\057\uffe8\062\uffe8\071\uffe8\072\uffe8\074" +
    "\uffe8\112\uffe8\113\uffe8\117\uffe8\120\uffe8\126\uffe8\130\uffe8" +
    "\133\uffe8\134\uffe8\135\uffe8\140\uffe8\141\uffe8\150\uffe8\164" +
    "\uffe8\165\uffe8\170\uffe8\214\uffe8\224\uffe8\242\uffe8\262\uffe8" +
    "\266\uffe8\267\uffe8\271\uffe8\327\uffe8\333\uffe8\u0138\uffe8\u0141" +
    "\uffe8\u0142\u0110\u0143\u0111\u0144\uffe8\u0145\uffe8\u0146\uffe8\u0147\uffe8" +
    "\u014b\uffe8\u014c\uffe8\u014d\uffe8\u014e\uffe8\u0150\uffe8\u0154\uffe8\u0155" +
    "\uffe8\u015a\uffe8\001\002\000\112\007\uff3a\011\uff3a\012\uff3a" +
    "\016\uff3a\032\uff3a\044\uff3a\062\uff3a\074\uff3a\112\uff3a\113" +
    "\uff3a\117\uff3a\120\uff3a\126\uff3a\130\uff3a\133\uff3a\134\uff3a" +
    "\135\uff3a\140\uff3a\141\uff3a\150\uff3a\164\uff3a\165\uff3a\214" +
    "\uff3a\267\uff3a\271\uff3a\327\uff3a\u0141\uff3a\u0147\uff3a\u014b\uff3a" +
    "\u014c\uff3a\u014d\uff3a\u014e\uff3a\u0150\uff3a\u0154\uff3a\u0155\uff3a\u015a" +
    "\uff3a\001\002\000\004\u0159\342\001\002\000\004\u0159\337" +
    "\001\002\000\074\007\uffc7\016\uffc7\044\uffc7\074\uffc7\113" +
    "\uffc7\117\uffc7\120\uffc7\126\uffc7\130\uffc7\134\uffc7\135\uffc7" +
    "\140\uffc7\141\uffc7\150\uffc7\164\uffc7\165\uffc7\214\uffc7\267" +
    "\uffc7\271\uffc7\327\uffc7\u0147\uffc7\u014b\uffc7\u014c\uffc7\u014d\uffc7" +
    "\u014e\uffc7\u0150\uffc7\u0154\uffc7\u0155\uffc7\u015a\uffc7\001\002\000" +
    "\150\007\uffe2\011\uffe2\012\uffe2\016\uffe2\032\uffe2\044\uffe2" +
    "\057\uffe2\062\uffe2\071\uffe2\072\uffe2\074\uffe2\112\uffe2\113" +
    "\uffe2\117\uffe2\120\uffe2\126\uffe2\130\uffe2\133\uffe2\134\uffe2" +
    "\135\uffe2\140\uffe2\141\uffe2\150\uffe2\164\uffe2\165\uffe2\170" +
    "\uffe2\214\uffe2\224\uffe2\242\uffe2\262\uffe2\266\uffe2\267\uffe2" +
    "\271\uffe2\327\uffe2\333\uffe2\u0138\uffe2\u0141\uffe2\u0142\uffe2\u0143" +
    "\uffe2\u0144\uffe2\u0145\uffe2\u0146\uffe2\u0147\uffe2\u014b\uffe2\u014c\uffe2" +
    "\u014d\uffe2\u014e\uffe2\u0150\uffe2\u0154\uffe2\u0155\uffe2\u015a\uffe2\001" +
    "\002\000\004\u0159\322\001\002\000\004\u0159\315\001\002" +
    "\000\004\u0159\306\001\002\000\004\u0159\265\001\002\000" +
    "\004\u0159\257\001\002\000\004\u0101\252\001\002\000\074" +
    "\007\uffc5\016\uffc5\044\uffc5\074\uffc5\113\uffc5\117\uffc5\120" +
    "\uffc5\126\uffc5\130\uffc5\134\uffc5\135\uffc5\140\uffc5\141\uffc5" +
    "\150\uffc5\164\uffc5\165\uffc5\214\uffc5\267\uffc5\271\uffc5\327" +
    "\uffc5\u0147\uffc5\u014b\uffc5\u014c\uffc5\u014d\uffc5\u014e\uffc5\u0150\uffc5" +
    "\u0154\uffc5\u0155\uffc5\u015a\uffc5\001\002\000\006\u0141\253\u015d" +
    "\254\001\002\000\112\007\uff32\011\uff32\012\uff32\016\uff32" +
    "\032\uff32\044\uff32\062\uff32\074\uff32\112\uff32\113\uff32\117" +
    "\uff32\120\uff32\126\uff32\130\uff32\133\uff32\134\uff32\135\uff32" +
    "\140\uff32\141\uff32\150\uff32\164\uff32\165\uff32\214\uff32\267" +
    "\uff32\271\uff32\327\uff32\u0141\uff32\u0147\uff32\u014b\uff32\u014c\uff32" +
    "\u014d\uff32\u014e\uff32\u0150\uff32\u0154\uff32\u0155\uff32\u015a\uff32\001" +
    "\002\000\004\u0141\256\001\002\000\112\007\uff36\011\uff36" +
    "\012\uff36\016\uff36\032\uff36\044\uff36\062\uff36\074\uff36\112" +
    "\uff36\113\uff36\117\uff36\120\uff36\126\uff36\130\uff36\133\uff36" +
    "\134\uff36\135\uff36\140\uff36\141\uff36\150\uff36\164\uff36\165" +
    "\uff36\214\uff36\267\uff36\271\uff36\327\uff36\u0141\uff36\u0147\uff36" +
    "\u014b\uff36\u014c\uff36\u014d\uff36\u014e\uff36\u0150\uff36\u0154\uff36\u0155" +
    "\uff36\u015a\uff36\001\002\000\112\007\uff33\011\uff33\012\uff33" +
    "\016\uff33\032\uff33\044\uff33\062\uff33\074\uff33\112\uff33\113" +
    "\uff33\117\uff33\120\uff33\126\uff33\130\uff33\133\uff33\134\uff33" +
    "\135\uff33\140\uff33\141\uff33\150\uff33\164\uff33\165\uff33\214" +
    "\uff33\267\uff33\271\uff33\327\uff33\u0141\uff33\u0147\uff33\u014b\uff33" +
    "\u014c\uff33\u014d\uff33\u014e\uff33\u0150\uff33\u0154\uff33\u0155\uff33\u015a" +
    "\uff33\001\002\000\006\u013f\260\u015d\261\001\002\000\004" +
    "\u015a\uff35\001\002\000\004\u0141\264\001\002\000\004\u015a" +
    "\263\001\002\000\112\007\uff39\011\uff39\012\uff39\016\uff39" +
    "\032\uff39\044\uff39\062\uff39\074\uff39\112\uff39\113\uff39\117" +
    "\uff39\120\uff39\126\uff39\130\uff39\133\uff39\134\uff39\135\uff39" +
    "\140\uff39\141\uff39\150\uff39\164\uff39\165\uff39\214\uff39\267" +
    "\uff39\271\uff39\327\uff39\u0141\uff39\u0147\uff39\u014b\uff39\u014c\uff39" +
    "\u014d\uff39\u014e\uff39\u0150\uff39\u0154\uff39\u0155\uff39\u015a\uff39\001" +
    "\002\000\004\u015a\uff34\001\002\000\032\005\267\064\266" +
    "\323\uff00\u0100\uff00\u0105\uff00\u0110\uff00\u0111\uff00\u013c\uff00\u013d" +
    "\uff00\u0141\uff00\u0159\uff00\u015d\uff00\001\002\000\026\323\uff01" +
    "\u0100\uff01\u0105\uff01\u0110\uff01\u0111\uff01\u013c\uff01\u013d\uff01\u0141" +
    "\uff01\u0159\uff01\u015d\uff01\001\002\000\026\323\uff02\u0100\uff02" +
    "\u0105\uff02\u0110\uff02\u0111\uff02\u013c\uff02\u013d\uff02\u0141\uff02\u0159" +
    "\uff02\u015d\uff02\001\002\000\004\u015a\305\001\002\000\026" +
    "\323\231\u0100\240\u0105\243\u0110\246\u0111\215\u013c\242\u013d" +
    "\225\u0141\276\u0159\275\u015d\204\001\002\000\004\u015a\uff03" +
    "\001\002\000\004\u015a\ufefe\001\002\000\150\007\uffde\011" +
    "\uffde\012\uffde\016\uffde\032\uffde\044\uffde\057\uffde\062\uffde" +
    "\071\uffde\072\uffde\074\uffde\112\uffde\113\uffde\117\uffde\120" +
    "\uffde\126\uffde\130\uffde\133\uffde\134\uffde\135\uffde\140\uffde" +
    "\141\uffde\150\uffde\164\uffde\165\uffde\170\uffde\214\uffde\224" +
    "\uffde\242\uffde\262\uffde\266\uffde\267\uffde\271\uffde\327\uffde" +
    "\333\uffde\u0138\uffde\u0141\uffde\u0142\uffde\u0143\uffde\u0144\uffde\u0145" +
    "\uffde\u0146\uffde\u0147\uffde\u014b\uffde\u014c\uffde\u014d\uffde\u014e\uffde" +
    "\u0150\uffde\u0154\uffde\u0155\uffde\u015a\uffde\001\002\000\026\323" +
    "\231\u0100\240\u0105\243\u0110\246\u0111\215\u013c\242\u013d\225" +
    "\u0141\072\u0159\275\u015d\204\001\002\000\016\u0142\uffd9\u0143" +
    "\uffd9\u0144\uffd9\u0145\uffd9\u0156\301\u015a\uffd9\001\002\000\150" +
    "\007\uffdf\011\uffdf\012\uffdf\016\uffdf\032\uffdf\044\uffdf\057" +
    "\uffdf\062\uffdf\071\uffdf\072\uffdf\074\uffdf\112\uffdf\113\uffdf" +
    "\117\uffdf\120\uffdf\126\uffdf\130\uffdf\133\uffdf\134\uffdf\135" +
    "\uffdf\140\uffdf\141\uffdf\150\uffdf\164\uffdf\165\uffdf\170\uffdf" +
    "\214\uffdf\224\uffdf\242\uffdf\262\uffdf\266\uffdf\267\uffdf\271" +
    "\uffdf\327\uffdf\333\uffdf\u0138\uffdf\u0141\uffdf\u0142\uffdf\u0143\uffdf" +
    "\u0144\uffdf\u0145\uffdf\u0146\uffdf\u0147\uffdf\u014b\uffdf\u014c\uffdf\u014d" +
    "\uffdf\u014e\uffdf\u0150\uffdf\u0154\uffdf\u0155\uffdf\u015a\uffdf\001\002" +
    "\000\004\u015a\ufeff\001\002\000\004\u0141\302\001\002\000" +
    "\016\u0142\uffd7\u0143\uffd7\u0144\uffd7\u0145\uffd7\u0156\077\u015a\uffd7" +
    "\001\002\000\004\u015a\304\001\002\000\150\007\uffe3\011" +
    "\uffe3\012\uffe3\016\uffe3\032\uffe3\044\uffe3\057\uffe3\062\uffe3" +
    "\071\uffe3\072\uffe3\074\uffe3\112\uffe3\113\uffe3\117\uffe3\120" +
    "\uffe3\126\uffe3\130\uffe3\133\uffe3\134\uffe3\135\uffe3\140\uffe3" +
    "\141\uffe3\150\uffe3\164\uffe3\165\uffe3\170\uffe3\214\uffe3\224" +
    "\uffe3\242\uffe3\262\uffe3\266\uffe3\267\uffe3\271\uffe3\327\uffe3" +
    "\333\uffe3\u0138\uffe3\u0141\uffe3\u0142\uffe3\u0143\uffe3\u0144\uffe3\u0145" +
    "\uffe3\u0146\uffe3\u0147\uffe3\u014b\uffe3\u014c\uffe3\u014d\uffe3\u014e\uffe3" +
    "\u0150\uffe3\u0154\uffe3\u0155\uffe3\u015a\uffe3\001\002\000\150\007" +
    "\uff17\011\uff17\012\uff17\016\uff17\032\uff17\044\uff17\057\uff17" +
    "\062\uff17\071\uff17\072\uff17\074\uff17\112\uff17\113\uff17\117" +
    "\uff17\120\uff17\126\uff17\130\uff17\133\uff17\134\uff17\135\uff17" +
    "\140\uff17\141\uff17\150\uff17\164\uff17\165\uff17\170\uff17\214" +
    "\uff17\224\uff17\242\uff17\262\uff17\266\uff17\267\uff17\271\uff17" +
    "\327\uff17\333\uff17\u0138\uff17\u0141\uff17\u0142\uff17\u0143\uff17\u0144" +
    "\uff17\u0145\uff17\u0146\uff17\u0147\uff17\u014b\uff17\u014c\uff17\u014d\uff17" +
    "\u014e\uff17\u0150\uff17\u0154\uff17\u0155\uff17\u015a\uff17\001\002\000" +
    "\010\u013f\311\u0141\307\u015d\310\001\002\000\010\112\uff25" +
    "\u0155\uff25\u015a\uff25\001\002\000\004\u0141\314\001\002\000" +
    "\010\112\uff26\u0155\uff26\u015a\uff26\001\002\000\004\u015a\313" +
    "\001\002\000\112\007\uff2f\011\uff2f\012\uff2f\016\uff2f\032" +
    "\uff2f\044\uff2f\062\uff2f\074\uff2f\112\uff2f\113\uff2f\117\uff2f" +
    "\120\uff2f\126\uff2f\130\uff2f\133\uff2f\134\uff2f\135\uff2f\140" +
    "\uff2f\141\uff2f\150\uff2f\164\uff2f\165\uff2f\214\uff2f\267\uff2f" +
    "\271\uff2f\327\uff2f\u0141\uff2f\u0147\uff2f\u014b\uff2f\u014c\uff2f\u014d" +
    "\uff2f\u014e\uff2f\u0150\uff2f\u0154\uff2f\u0155\uff2f\u015a\uff2f\001\002" +
    "\000\010\112\uff27\u0155\uff27\u015a\uff27\001\002\000\010\u013f" +
    "\311\u0141\307\u015d\310\001\002\000\004\u0155\317\001\002" +
    "\000\026\323\231\u0100\240\u0105\243\u0110\246\u0111\215\u013c" +
    "\242\u013d\225\u0141\072\u0159\275\u015d\204\001\002\000\004" +
    "\u015a\321\001\002\000\112\007\uff2a\011\uff2a\012\uff2a\016" +
    "\uff2a\032\uff2a\044\uff2a\062\uff2a\074\uff2a\112\uff2a\113\uff2a" +
    "\117\uff2a\120\uff2a\126\uff2a\130\uff2a\133\uff2a\134\uff2a\135" +
    "\uff2a\140\uff2a\141\uff2a\150\uff2a\164\uff2a\165\uff2a\214\uff2a" +
    "\267\uff2a\271\uff2a\327\uff2a\u0141\uff2a\u0147\uff2a\u014b\uff2a\u014c" +
    "\uff2a\u014d\uff2a\u014e\uff2a\u0150\uff2a\u0154\uff2a\u0155\uff2a\u015a\uff2a" +
    "\001\002\000\034\005\326\064\324\323\uff09\u0100\uff09\u0105" +
    "\uff09\u0110\uff09\u0111\uff09\u013c\uff09\u013d\uff09\u0141\uff09\u0144\uff09" +
    "\u0159\uff09\u015d\uff09\001\002\000\030\323\231\u0100\240\u0105" +
    "\243\u0110\246\u0111\215\u013c\242\u013d\225\u0141\332\u0144\330" +
    "\u0159\275\u015d\204\001\002\000\030\323\uff0a\u0100\uff0a\u0105" +
    "\uff0a\u0110\uff0a\u0111\uff0a\u013c\uff0a\u013d\uff0a\u0141\uff0a\u0144\uff0a" +
    "\u0159\uff0a\u015d\uff0a\001\002\000\004\u015a\327\001\002\000" +
    "\030\323\uff0b\u0100\uff0b\u0105\uff0b\u0110\uff0b\u0111\uff0b\u013c\uff0b" +
    "\u013d\uff0b\u0141\uff0b\u0144\uff0b\u0159\uff0b\u015d\uff0b\001\002\000" +
    "\150\007\uff18\011\uff18\012\uff18\016\uff18\032\uff18\044\uff18" +
    "\057\uff18\062\uff18\071\uff18\072\uff18\074\uff18\112\uff18\113" +
    "\uff18\117\uff18\120\uff18\126\uff18\130\uff18\133\uff18\134\uff18" +
    "\135\uff18\140\uff18\141\uff18\150\uff18\164\uff18\165\uff18\170" +
    "\uff18\214\uff18\224\uff18\242\uff18\262\uff18\266\uff18\267\uff18" +
    "\271\uff18\327\uff18\333\uff18\u0138\uff18\u0141\uff18\u0142\uff18\u0143" +
    "\uff18\u0144\uff18\u0145\uff18\u0146\uff18\u0147\uff18\u014b\uff18\u014c\uff18" +
    "\u014d\uff18\u014e\uff18\u0150\uff18\u0154\uff18\u0155\uff18\u015a\uff18\001" +
    "\002\000\004\u015a\uff08\001\002\000\004\u015a\uff06\001\002" +
    "\000\016\u0142\uffd9\u0143\uffd9\u0144\uffd9\u0145\uffd9\u0156\334\u015a" +
    "\uffd9\001\002\000\004\u015a\uff0c\001\002\000\004\u0141\336" +
    "\001\002\000\004\u015a\uff07\001\002\000\016\u0142\uffd7\u0143" +
    "\uffd7\u0144\uffd7\u0145\uffd7\u0156\077\u015a\uffd7\001\002\000\032" +
    "\005\267\064\266\323\uff00\u0100\uff00\u0105\uff00\u0110\uff00\u0111" +
    "\uff00\u013c\uff00\u013d\uff00\u0141\uff00\u0159\uff00\u015d\uff00\001\002" +
    "\000\004\u015a\341\001\002\000\150\007\uff15\011\uff15\012" +
    "\uff15\016\uff15\032\uff15\044\uff15\057\uff15\062\uff15\071\uff15" +
    "\072\uff15\074\uff15\112\uff15\113\uff15\117\uff15\120\uff15\126" +
    "\uff15\130\uff15\133\uff15\134\uff15\135\uff15\140\uff15\141\uff15" +
    "\150\uff15\164\uff15\165\uff15\170\uff15\214\uff15\224\uff15\242" +
    "\uff15\262\uff15\266\uff15\267\uff15\271\uff15\327\uff15\333\uff15" +
    "\u0138\uff15\u0141\uff15\u0142\uff15\u0143\uff15\u0144\uff15\u0145\uff15\u0146" +
    "\uff15\u0147\uff15\u014b\uff15\u014c\uff15\u014d\uff15\u014e\uff15\u0150\uff15" +
    "\u0154\uff15\u0155\uff15\u015a\uff15\001\002\000\032\150\343\323" +
    "\231\u0100\240\u0105\243\u0110\246\u0111\215\u013c\242\u013d\225" +
    "\u013f\351\u0141\344\u0159\353\u015d\204\001\002\000\032\150" +
    "\ufedf\323\ufedf\u0100\ufedf\u0105\ufedf\u0110\ufedf\u0111\ufedf\u013c\ufedf" +
    "\u013d\ufedf\u013f\ufedf\u0141\ufedf\u0159\ufedf\u015d\ufedf\001\002\000" +
    "\140\007\uffd9\011\uffd9\012\uffd9\016\uffd9\032\uffd9\044\uffd9" +
    "\062\uffd9\071\uffd9\072\uffd9\074\uffd9\112\uffd9\113\uffd9\117" +
    "\uffd9\120\uffd9\126\uffd9\130\uffd9\133\uffd9\134\uffd9\135\uffd9" +
    "\140\uffd9\141\uffd9\150\uffd9\164\uffd9\165\uffd9\214\uffd9\242" +
    "\uffd9\266\uffd9\267\uffd9\271\uffd9\327\uffd9\u0138\uffd9\u0141\uffd9" +
    "\u0142\uffd9\u0143\uffd9\u0144\uffd9\u0145\uffd9\u0146\uffd9\u0147\uffd9\u014b" +
    "\uffd9\u014c\uffd9\u014d\uffd9\u014e\uffd9\u0150\uffd9\u0154\uffd9\u0155\uffd9" +
    "\u0156\074\u015a\uffd9\001\002\000\124\007\uff9f\011\uff9f\012" +
    "\uff9f\016\uff9f\032\uff9f\044\uff9f\062\uff9f\071\uff9f\072\uff9f" +
    "\074\uff9f\112\uff9f\113\uff9f\117\uff9f\120\uff9f\126\uff9f\130" +
    "\uff9f\133\uff9f\134\uff9f\135\uff9f\140\uff9f\141\uff9f\150\uff9f" +
    "\164\uff9f\165\uff9f\214\uff9f\242\uff9f\266\uff9f\267\uff9f\271" +
    "\uff9f\327\uff9f\u0138\uff9f\u0141\uff9f\u0147\uff9f\u014b\uff9f\u014c\uff9f" +
    "\u014d\uff9f\u014e\uff9f\u0150\uff9f\u0154\uff9f\u0155\uff9f\u015a\uff9f\001" +
    "\002\000\004\u0142\373\001\002\000\004\u0155\u0109\001\002" +
    "\000\032\150\343\323\231\u0100\240\u0105\243\u0110\246\u0111" +
    "\215\u013c\242\u013d\225\u013f\351\u0141\344\u0159\353\u015d\204" +
    "\001\002\000\126\007\uff97\011\uff97\012\uff97\016\uff97\032" +
    "\uff97\044\uff97\062\uff97\071\uff97\072\uff97\074\uff97\112\uff97" +
    "\113\uff97\117\uff97\120\uff97\126\uff97\130\uff97\133\uff97\134" +
    "\uff97\135\uff97\140\uff97\141\uff97\150\uff97\164\uff97\165\uff97" +
    "\214\uff97\242\uff97\266\uff97\267\uff97\271\uff97\327\uff97\u0138" +
    "\uff97\u0141\uff97\u0142\uff9b\u0147\uff97\u014b\uff97\u014c\uff97\u014d\uff97" +
    "\u014e\uff97\u0150\uff97\u0154\uff97\u0155\uff97\u015a\uff97\001\002\000" +
    "\136\007\uff99\011\uff99\012\uff99\016\uff99\032\uff99\044\uff99" +
    "\062\uff99\071\uff99\072\uff99\074\uff99\112\uff99\113\uff99\117" +
    "\uff99\120\uff99\126\uff99\130\uff99\133\uff99\134\uff99\135\uff99" +
    "\140\uff99\141\uff99\150\uff99\164\uff99\165\uff99\214\uff99\242" +
    "\uff99\266\uff99\267\uff99\271\uff99\327\uff99\u0138\uff99\u0141\uff99" +
    "\u0142\373\u0143\360\u0144\357\u0145\362\u0146\374\u0147\364\u014b" +
    "\370\u014c\371\u014d\367\u014e\361\u0150\372\u0154\uff99\u0155\uff99" +
    "\u015a\uff99\001\002\000\032\150\343\323\231\u0100\240\u0105" +
    "\243\u0110\246\u0111\215\u013c\242\u013d\225\u013f\351\u0141\344" +
    "\u0159\353\u015d\204\001\002\000\004\u015a\u0101\001\002\000" +
    "\032\u0142\373\u0143\360\u0144\357\u0145\362\u0146\374\u0147\364" +
    "\u014b\370\u014c\371\u014d\367\u014e\361\u0150\372\u015a\304\001" +
    "\002\000\030\323\uff9d\u0100\uff9d\u0105\uff9d\u0110\uff9d\u0111\uff9d" +
    "\u013c\uff9d\u013d\uff9d\u013f\uff9d\u0141\uff9d\u0159\uff9d\u015d\uff9d\001" +
    "\002\000\030\323\ufee6\u0100\ufee6\u0105\ufee6\u0110\ufee6\u0111\ufee6" +
    "\u013c\ufee6\u013d\ufee6\u013f\ufee6\u0141\ufee6\u0159\ufee6\u015d\ufee6\001" +
    "\002\000\030\323\ufee7\u0100\ufee7\u0105\ufee7\u0110\ufee7\u0111\ufee7" +
    "\u013c\ufee7\u013d\ufee7\u013f\ufee7\u0141\ufee7\u0159\ufee7\u015d\ufee7\001" +
    "\002\000\220\007\ufedd\011\ufedd\012\ufedd\016\ufedd\024\ufedd" +
    "\032\ufedd\042\ufedd\044\ufedd\050\ufedd\062\ufedd\071\ufedd\072" +
    "\ufedd\074\ufedd\112\ufedd\113\ufedd\117\ufedd\120\ufedd\126\ufedd" +
    "\130\ufedd\133\ufedd\134\ufedd\135\ufedd\140\ufedd\141\ufedd\150" +
    "\ufedd\152\ufedd\164\ufedd\165\ufedd\214\ufedd\230\ufedd\231\ufedd" +
    "\236\ufedd\242\ufedd\266\ufedd\267\ufedd\271\ufedd\323\ufedd\327" +
    "\ufedd\341\ufedd\345\ufedd\360\ufedd\376\ufedd\u0100\ufedd\u0105\ufedd" +
    "\u010d\ufedd\u0110\ufedd\u0111\ufedd\u0112\ufedd\u0116\ufedd\u0118\ufedd\u0119" +
    "\ufedd\u0120\ufedd\u0122\ufedd\u0123\ufedd\u0137\ufedd\u0138\ufedd\u013c\ufedd" +
    "\u013d\ufedd\u013f\ufedd\u0141\ufedd\u0147\ufedd\u014b\ufedd\u014c\ufedd\u014d" +
    "\ufedd\u014e\ufedd\u0150\ufedd\u0154\ufedd\u0155\ufedd\u0159\ufedd\u015a\ufedd" +
    "\u015d\ufedd\001\002\000\030\323\ufee5\u0100\ufee5\u0105\ufee5\u0110" +
    "\ufee5\u0111\ufee5\u013c\ufee5\u013d\ufee5\u013f\ufee5\u0141\ufee5\u0159\ufee5" +
    "\u015d\ufee5\001\002\000\030\323\uff9c\u0100\uff9c\u0105\uff9c\u0110" +
    "\uff9c\u0111\uff9c\u013c\uff9c\u013d\uff9c\u013f\uff9c\u0141\uff9c\u0159\uff9c" +
    "\u015d\uff9c\001\002\000\220\007\ufedb\011\ufedb\012\ufedb\016" +
    "\ufedb\024\ufedb\032\ufedb\042\ufedb\044\ufedb\050\ufedb\062\ufedb" +
    "\071\ufedb\072\ufedb\074\ufedb\112\ufedb\113\ufedb\117\ufedb\120" +
    "\ufedb\126\ufedb\130\ufedb\133\ufedb\134\ufedb\135\ufedb\140\ufedb" +
    "\141\ufedb\150\ufedb\152\ufedb\164\ufedb\165\ufedb\214\ufedb\230" +
    "\ufedb\231\ufedb\236\ufedb\242\ufedb\266\ufedb\267\ufedb\271\ufedb" +
    "\323\ufedb\327\ufedb\341\ufedb\345\ufedb\360\ufedb\376\ufedb\u0100" +
    "\ufedb\u0105\ufedb\u010d\ufedb\u0110\ufedb\u0111\ufedb\u0112\ufedb\u0116\ufedb" +
    "\u0118\ufedb\u0119\ufedb\u0120\ufedb\u0122\ufedb\u0123\ufedb\u0137\ufedb\u0138" +
    "\ufedb\u013c\ufedb\u013d\ufedb\u013f\ufedb\u0141\ufedb\u0147\ufedb\u014b\ufedb" +
    "\u014c\ufedb\u014d\ufedb\u014e\ufedb\u0150\ufedb\u0154\ufedb\u0155\ufedb\u0159" +
    "\ufedb\u015a\ufedb\u015d\ufedb\001\002\000\030\323\231\u0100\240" +
    "\u0105\243\u0110\246\u0111\215\u013c\242\u013d\225\u013f\375\u0141" +
    "\u0100\u0159\275\u015d\204\001\002\000\030\323\uff9e\u0100\uff9e" +
    "\u0105\uff9e\u0110\uff9e\u0111\uff9e\u013c\uff9e\u013d\uff9e\u013f\uff9e\u0141" +
    "\uff9e\u0159\uff9e\u015d\uff9e\001\002\000\220\007\ufede\011\ufede" +
    "\012\ufede\016\ufede\024\ufede\032\ufede\042\ufede\044\ufede\050" +
    "\ufede\062\ufede\071\ufede\072\ufede\074\ufede\112\ufede\113\ufede" +
    "\117\ufede\120\ufede\126\ufede\130\ufede\133\ufede\134\ufede\135" +
    "\ufede\140\ufede\141\ufede\150\ufede\152\ufede\164\ufede\165\ufede" +
    "\214\ufede\230\ufede\231\ufede\236\ufede\242\ufede\266\ufede\267" +
    "\ufede\271\ufede\323\ufede\327\ufede\341\ufede\345\ufede\360\ufede" +
    "\376\ufede\u0100\ufede\u0105\ufede\u010d\ufede\u0110\ufede\u0111\ufede\u0112" +
    "\ufede\u0116\ufede\u0118\ufede\u0119\ufede\u0120\ufede\u0122\ufede\u0123\ufede" +
    "\u0137\ufede\u0138\ufede\u013c\ufede\u013d\ufede\u013f\ufede\u0141\ufede\u0147" +
    "\ufede\u014b\ufede\u014c\ufede\u014d\ufede\u014e\ufede\u0150\ufede\u0154\ufede" +
    "\u0155\ufede\u0159\ufede\u015a\ufede\u015d\ufede\001\002\000\220\007" +
    "\ufedc\011\ufedc\012\ufedc\016\ufedc\024\ufedc\032\ufedc\042\ufedc" +
    "\044\ufedc\050\ufedc\062\ufedc\071\ufedc\072\ufedc\074\ufedc\112" +
    "\ufedc\113\ufedc\117\ufedc\120\ufedc\126\ufedc\130\ufedc\133\ufedc" +
    "\134\ufedc\135\ufedc\140\ufedc\141\ufedc\150\ufedc\152\ufedc\164" +
    "\ufedc\165\ufedc\214\ufedc\230\ufedc\231\ufedc\236\ufedc\242\ufedc" +
    "\266\ufedc\267\ufedc\271\ufedc\323\ufedc\327\ufedc\341\ufedc\345" +
    "\ufedc\360\ufedc\376\ufedc\u0100\ufedc\u0105\ufedc\u010d\ufedc\u0110\ufedc" +
    "\u0111\ufedc\u0112\ufedc\u0116\ufedc\u0118\ufedc\u0119\ufedc\u0120\ufedc\u0122" +
    "\ufedc\u0123\ufedc\u0137\ufedc\u0138\ufedc\u013c\ufedc\u013d\ufedc\u013f\ufedc" +
    "\u0141\ufedc\u0147\ufedc\u014b\ufedc\u014c\ufedc\u014d\ufedc\u014e\ufedc\u0150" +
    "\ufedc\u0154\ufedc\u0155\ufedc\u0159\ufedc\u015a\ufedc\u015d\ufedc\001\002" +
    "\000\220\007\ufed9\011\ufed9\012\ufed9\016\ufed9\024\ufed9\032" +
    "\ufed9\042\ufed9\044\ufed9\050\ufed9\062\ufed9\071\ufed9\072\ufed9" +
    "\074\ufed9\112\ufed9\113\ufed9\117\ufed9\120\ufed9\126\ufed9\130" +
    "\ufed9\133\ufed9\134\ufed9\135\ufed9\140\ufed9\141\ufed9\150\ufed9" +
    "\152\ufed9\164\ufed9\165\ufed9\214\ufed9\230\ufed9\231\ufed9\236" +
    "\ufed9\242\ufed9\266\ufed9\267\ufed9\271\ufed9\323\ufed9\327\ufed9" +
    "\341\ufed9\345\ufed9\360\ufed9\376\ufed9\u0100\ufed9\u0105\ufed9\u010d" +
    "\ufed9\u0110\ufed9\u0111\ufed9\u0112\ufed9\u0116\ufed9\u0118\ufed9\u0119\ufed9" +
    "\u0120\ufed9\u0122\ufed9\u0123\ufed9\u0137\ufed9\u0138\ufed9\u013c\ufed9\u013d" +
    "\ufed9\u013f\ufed9\u0141\ufed9\u0147\ufed9\u014b\ufed9\u014c\ufed9\u014d\ufed9" +
    "\u014e\ufed9\u0150\ufed9\u0154\ufed9\u0155\ufed9\u0159\ufed9\u015a\ufed9\u015d" +
    "\ufed9\001\002\000\220\007\ufeda\011\ufeda\012\ufeda\016\ufeda" +
    "\024\ufeda\032\ufeda\042\ufeda\044\ufeda\050\ufeda\062\ufeda\071" +
    "\ufeda\072\ufeda\074\ufeda\112\ufeda\113\ufeda\117\ufeda\120\ufeda" +
    "\126\ufeda\130\ufeda\133\ufeda\134\ufeda\135\ufeda\140\ufeda\141" +
    "\ufeda\150\ufeda\152\ufeda\164\ufeda\165\ufeda\214\ufeda\230\ufeda" +
    "\231\ufeda\236\ufeda\242\ufeda\266\ufeda\267\ufeda\271\ufeda\323" +
    "\ufeda\327\ufeda\341\ufeda\345\ufeda\360\ufeda\376\ufeda\u0100\ufeda" +
    "\u0105\ufeda\u010d\ufeda\u0110\ufeda\u0111\ufeda\u0112\ufeda\u0116\ufeda\u0118" +
    "\ufeda\u0119\ufeda\u0120\ufeda\u0122\ufeda\u0123\ufeda\u0137\ufeda\u0138\ufeda" +
    "\u013c\ufeda\u013d\ufeda\u013f\ufeda\u0141\ufeda\u0147\ufeda\u014b\ufeda\u014c" +
    "\ufeda\u014d\ufeda\u014e\ufeda\u0150\ufeda\u0154\ufeda\u0155\ufeda\u0159\ufeda" +
    "\u015a\ufeda\u015d\ufeda\001\002\000\030\323\ufee3\u0100\ufee3\u0105" +
    "\ufee3\u0110\ufee3\u0111\ufee3\u013c\ufee3\u013d\ufee3\u013f\ufee3\u0141\ufee3" +
    "\u0159\ufee3\u015d\ufee3\001\002\000\030\323\ufee4\u0100\ufee4\u0105" +
    "\ufee4\u0110\ufee4\u0111\ufee4\u013c\ufee4\u013d\ufee4\u013f\ufee4\u0141\ufee4" +
    "\u0159\ufee4\u015d\ufee4\001\002\000\124\007\uff97\011\uff97\012" +
    "\uff97\016\uff97\032\uff97\044\uff97\062\uff97\071\uff97\072\uff97" +
    "\074\uff97\112\uff97\113\uff97\117\uff97\120\uff97\126\uff97\130" +
    "\uff97\133\uff97\134\uff97\135\uff97\140\uff97\141\uff97\150\uff97" +
    "\164\uff97\165\uff97\214\uff97\242\uff97\266\uff97\267\uff97\271" +
    "\uff97\327\uff97\u0138\uff97\u0141\uff97\u0147\uff97\u014b\uff97\u014c\uff97" +
    "\u014d\uff97\u014e\uff97\u0150\uff97\u0154\uff97\u0155\uff97\u015a\uff97\001" +
    "\002\000\124\007\uff99\011\uff99\012\uff99\016\uff99\032\uff99" +
    "\044\uff99\062\uff99\071\uff99\072\uff99\074\uff99\112\uff99\113" +
    "\uff99\117\uff99\120\uff99\126\uff99\130\uff99\133\uff99\134\uff99" +
    "\135\uff99\140\uff99\141\uff99\150\uff99\164\uff99\165\uff99\214" +
    "\uff99\242\uff99\266\uff99\267\uff99\271\uff99\327\uff99\u0138\uff99" +
    "\u0141\uff99\u0147\uff99\u014b\uff99\u014c\uff99\u014d\uff99\u014e\uff99\u0150" +
    "\uff99\u0154\uff99\u0155\uff99\u015a\uff99\001\002\000\124\007\uffa2" +
    "\011\uffa2\012\uffa2\016\uffa2\032\uffa2\044\uffa2\062\uffa2\071" +
    "\uffa2\072\uffa2\074\uffa2\112\uffa2\113\uffa2\117\uffa2\120\uffa2" +
    "\126\uffa2\130\uffa2\133\uffa2\134\uffa2\135\uffa2\140\uffa2\141" +
    "\uffa2\150\uffa2\164\uffa2\165\uffa2\214\uffa2\242\uffa2\266\uffa2" +
    "\267\uffa2\271\uffa2\327\uffa2\u0138\uffa2\u0141\uffa2\u0147\uffa2\u014b" +
    "\uffa2\u014c\uffa2\u014d\uffa2\u014e\uffa2\u0150\uffa2\u0154\uffa2\u0155\uffa2" +
    "\u015a\uffa2\001\002\000\136\007\uffd9\011\uffd9\012\uffd9\016" +
    "\uffd9\032\uffd9\044\uffd9\062\uffd9\071\uffd9\072\uffd9\074\uffd9" +
    "\112\uffd9\113\uffd9\117\uffd9\120\uffd9\126\uffd9\130\uffd9\133" +
    "\uffd9\134\uffd9\135\uffd9\140\uffd9\141\uffd9\150\uffd9\164\uffd9" +
    "\165\uffd9\214\uffd9\242\uffd9\266\uffd9\267\uffd9\271\uffd9\327" +
    "\uffd9\u0138\uffd9\u0141\uffd9\u0142\uffd9\u0143\uffd9\u0144\uffd9\u0145\uffd9" +
    "\u0147\uffd9\u014b\uffd9\u014c\uffd9\u014d\uffd9\u014e\uffd9\u0150\uffd9\u0154" +
    "\uffd9\u0155\uffd9\u0156\074\u015a\uffd9\001\002\000\124\007\ufef7" +
    "\011\ufef7\012\ufef7\016\ufef7\032\ufef7\044\ufef7\062\ufef7\071" +
    "\ufef7\072\ufef7\074\ufef7\112\ufef7\113\ufef7\117\ufef7\120\ufef7" +
    "\126\ufef7\130\ufef7\133\ufef7\134\ufef7\135\ufef7\140\ufef7\141" +
    "\ufef7\150\ufef7\164\ufef7\165\ufef7\214\ufef7\242\ufef7\266\ufef7" +
    "\267\ufef7\271\ufef7\327\ufef7\u0138\ufef7\u0141\ufef7\u0147\ufef7\u014b" +
    "\ufef7\u014c\ufef7\u014d\ufef7\u014e\ufef7\u0150\ufef7\u0154\ufef7\u0155\ufef7" +
    "\u015a\ufef7\001\002\000\024\016\u0106\126\u0104\141\u0108\u0147" +
    "\364\u014b\370\u014c\371\u014d\367\u014e\361\u0150\372\001\002" +
    "\000\124\007\uff96\011\uff96\012\uff96\016\uff96\032\uff96\044" +
    "\uff96\062\uff96\071\uff96\072\uff96\074\uff96\112\uff96\113\uff96" +
    "\117\uff96\120\uff96\126\uff96\130\uff96\133\uff96\134\uff96\135" +
    "\uff96\140\uff96\141\uff96\150\uff96\164\uff96\165\uff96\214\uff96" +
    "\242\uff96\266\uff96\267\uff96\271\uff96\327\uff96\u0138\uff96\u0141" +
    "\uff96\u0147\uff96\u014b\uff96\u014c\uff96\u014d\uff96\u014e\uff96\u0150\uff96" +
    "\u0154\uff96\u0155\uff96\u015a\uff96\001\002\000\124\007\ufed7\011" +
    "\ufed7\012\ufed7\016\ufed7\032\ufed7\044\ufed7\062\ufed7\071\ufed7" +
    "\072\ufed7\074\ufed7\112\ufed7\113\ufed7\117\ufed7\120\ufed7\126" +
    "\ufed7\130\ufed7\133\ufed7\134\ufed7\135\ufed7\140\ufed7\141\ufed7" +
    "\150\ufed7\164\ufed7\165\ufed7\214\ufed7\242\ufed7\266\ufed7\267" +
    "\ufed7\271\ufed7\327\ufed7\u0138\ufed7\u0141\ufed7\u0147\ufed7\u014b\ufed7" +
    "\u014c\ufed7\u014d\ufed7\u014e\ufed7\u0150\ufed7\u0154\ufed7\u0155\ufed7\u015a" +
    "\ufed7\001\002\000\124\007\uffa0\011\uffa0\012\uffa0\016\uffa0" +
    "\032\uffa0\044\uffa0\062\uffa0\071\uffa0\072\uffa0\074\uffa0\112" +
    "\uffa0\113\uffa0\117\uffa0\120\uffa0\126\uffa0\130\uffa0\133\uffa0" +
    "\134\uffa0\135\uffa0\140\uffa0\141\uffa0\150\uffa0\164\uffa0\165" +
    "\uffa0\214\uffa0\242\uffa0\266\uffa0\267\uffa0\271\uffa0\327\uffa0" +
    "\u0138\uffa0\u0141\uffa0\u0147\uffa0\u014b\uffa0\u014c\uffa0\u014d\uffa0\u014e" +
    "\uffa0\u0150\uffa0\u0154\uffa0\u0155\uffa0\u015a\uffa0\001\002\000\124" +
    "\007\ufed8\011\ufed8\012\ufed8\016\ufed8\032\ufed8\044\ufed8\062" +
    "\ufed8\071\ufed8\072\ufed8\074\ufed8\112\ufed8\113\ufed8\117\ufed8" +
    "\120\ufed8\126\ufed8\130\ufed8\133\ufed8\134\ufed8\135\ufed8\140" +
    "\ufed8\141\ufed8\150\ufed8\164\ufed8\165\ufed8\214\ufed8\242\ufed8" +
    "\266\ufed8\267\ufed8\271\ufed8\327\ufed8\u0138\ufed8\u0141\ufed8\u0147" +
    "\ufed8\u014b\ufed8\u014c\ufed8\u014d\ufed8\u014e\ufed8\u0150\ufed8\u0154\ufed8" +
    "\u0155\ufed8\u015a\ufed8\001\002\000\124\007\uff95\011\uff95\012" +
    "\uff95\016\uff95\032\uff95\044\uff95\062\uff95\071\uff95\072\uff95" +
    "\074\uff95\112\uff95\113\uff95\117\uff95\120\uff95\126\uff95\130" +
    "\uff95\133\uff95\134\uff95\135\uff95\140\uff95\141\uff95\150\uff95" +
    "\164\uff95\165\uff95\214\uff95\242\uff95\266\uff95\267\uff95\271" +
    "\uff95\327\uff95\u0138\uff95\u0141\uff95\u0147\uff95\u014b\uff95\u014c\uff95" +
    "\u014d\uff95\u014e\uff95\u0150\uff95\u0154\uff95\u0155\uff95\u015a\uff95\001" +
    "\002\000\124\007\ufed6\011\ufed6\012\ufed6\016\ufed6\032\ufed6" +
    "\044\ufed6\062\ufed6\071\ufed6\072\ufed6\074\ufed6\112\ufed6\113" +
    "\ufed6\117\ufed6\120\ufed6\126\ufed6\130\ufed6\133\ufed6\134\ufed6" +
    "\135\ufed6\140\ufed6\141\ufed6\150\ufed6\164\ufed6\165\ufed6\214" +
    "\ufed6\242\ufed6\266\ufed6\267\ufed6\271\ufed6\327\ufed6\u0138\ufed6" +
    "\u0141\ufed6\u0147\ufed6\u014b\ufed6\u014c\ufed6\u014d\ufed6\u014e\ufed6\u0150" +
    "\ufed6\u0154\ufed6\u0155\ufed6\u015a\ufed6\001\002\000\032\150\343" +
    "\323\231\u0100\240\u0105\243\u0110\246\u0111\215\u013c\242\u013d" +
    "\225\u013f\351\u0141\344\u0159\353\u015d\204\001\002\000\004" +
    "\u015a\u010b\001\002\000\074\007\uff1f\016\uff1f\044\uff1f\074" +
    "\uff1f\113\uff1f\117\uff1f\120\uff1f\126\uff1f\130\uff1f\134\uff1f" +
    "\135\uff1f\140\uff1f\141\uff1f\150\uff1f\164\uff1f\165\uff1f\214" +
    "\uff1f\267\uff1f\271\uff1f\327\uff1f\u0147\uff1f\u014b\uff1f\u014c\uff1f" +
    "\u014d\uff1f\u014e\uff1f\u0150\uff1f\u0154\uff1f\u0155\uff1f\u015a\uff1f\001" +
    "\002\000\006\u013f\u010e\u0141\u010f\001\002\000\124\007\uffa1" +
    "\011\uffa1\012\uffa1\016\uffa1\032\uffa1\044\uffa1\062\uffa1\071" +
    "\uffa1\072\uffa1\074\uffa1\112\uffa1\113\uffa1\117\uffa1\120\uffa1" +
    "\126\uffa1\130\uffa1\133\uffa1\134\uffa1\135\uffa1\140\uffa1\141" +
    "\uffa1\150\uffa1\164\uffa1\165\uffa1\214\uffa1\242\uffa1\266\uffa1" +
    "\267\uffa1\271\uffa1\327\uffa1\u0138\uffa1\u0141\uffa1\u0147\uffa1\u014b" +
    "\uffa1\u014c\uffa1\u014d\uffa1\u014e\uffa1\u0150\uffa1\u0154\uffa1\u0155\uffa1" +
    "\u015a\uffa1\001\002\000\124\007\uff9b\011\uff9b\012\uff9b\016" +
    "\uff9b\032\uff9b\044\uff9b\062\uff9b\071\uff9b\072\uff9b\074\uff9b" +
    "\112\uff9b\113\uff9b\117\uff9b\120\uff9b\126\uff9b\130\uff9b\133" +
    "\uff9b\134\uff9b\135\uff9b\140\uff9b\141\uff9b\150\uff9b\164\uff9b" +
    "\165\uff9b\214\uff9b\242\uff9b\266\uff9b\267\uff9b\271\uff9b\327" +
    "\uff9b\u0138\uff9b\u0141\uff9b\u0147\uff9b\u014b\uff9b\u014c\uff9b\u014d\uff9b" +
    "\u014e\uff9b\u0150\uff9b\u0154\uff9b\u0155\uff9b\u015a\uff9b\001\002\000" +
    "\124\007\uff9a\011\uff9a\012\uff9a\016\uff9a\032\uff9a\044\uff9a" +
    "\062\uff9a\071\uff9a\072\uff9a\074\uff9a\112\uff9a\113\uff9a\117" +
    "\uff9a\120\uff9a\126\uff9a\130\uff9a\133\uff9a\134\uff9a\135\uff9a" +
    "\140\uff9a\141\uff9a\150\uff9a\164\uff9a\165\uff9a\214\uff9a\242" +
    "\uff9a\266\uff9a\267\uff9a\271\uff9a\327\uff9a\u0138\uff9a\u0141\uff9a" +
    "\u0147\uff9a\u014b\uff9a\u014c\uff9a\u014d\uff9a\u014e\uff9a\u0150\uff9a\u0154" +
    "\uff9a\u0155\uff9a\u015a\uff9a\001\002\000\026\323\231\u0100\240" +
    "\u0105\243\u0110\246\u0111\215\u013c\242\u013d\225\u0141\072\u0159" +
    "\275\u015d\204\001\002\000\026\323\231\u0100\240\u0105\243" +
    "\u0110\246\u0111\215\u013c\242\u013d\225\u0141\072\u0159\275\u015d" +
    "\204\001\002\000\150\007\uffeb\011\uffeb\012\uffeb\016\uffeb" +
    "\032\uffeb\044\uffeb\057\uffeb\062\uffeb\071\uffeb\072\uffeb\074" +
    "\uffeb\112\uffeb\113\uffeb\117\uffeb\120\uffeb\126\uffeb\130\uffeb" +
    "\133\uffeb\134\uffeb\135\uffeb\140\uffeb\141\uffeb\150\uffeb\164" +
    "\uffeb\165\uffeb\170\uffeb\214\uffeb\224\uffeb\242\uffeb\262\uffeb" +
    "\266\uffeb\267\uffeb\271\uffeb\327\uffeb\333\uffeb\u0138\uffeb\u0141" +
    "\uffeb\u0142\uffeb\u0143\uffeb\u0144\uffeb\u0145\uffeb\u0146\uffeb\u0147\uffeb" +
    "\u014b\uffeb\u014c\uffeb\u014d\uffeb\u014e\uffeb\u0150\uffeb\u0154\uffeb\u0155" +
    "\uffeb\u015a\uffeb\001\002\000\150\007\uffe8\011\uffe8\012\uffe8" +
    "\016\uffe8\032\uffe8\044\uffe8\057\uffe8\062\uffe8\071\uffe8\072" +
    "\uffe8\074\uffe8\112\uffe8\113\uffe8\117\uffe8\120\uffe8\126\uffe8" +
    "\130\uffe8\133\uffe8\134\uffe8\135\uffe8\140\uffe8\141\uffe8\150" +
    "\uffe8\164\uffe8\165\uffe8\170\uffe8\214\uffe8\224\uffe8\242\uffe8" +
    "\262\uffe8\266\uffe8\267\uffe8\271\uffe8\327\uffe8\333\uffe8\u0138" +
    "\uffe8\u0141\uffe8\u0142\u0110\u0143\u0111\u0144\uffe8\u0145\uffe8\u0146\uffe8" +
    "\u0147\uffe8\u014b\uffe8\u014c\uffe8\u014d\uffe8\u014e\uffe8\u0150\uffe8\u0154" +
    "\uffe8\u0155\uffe8\u015a\uffe8\001\002\000\150\007\uffe9\011\uffe9" +
    "\012\uffe9\016\uffe9\032\uffe9\044\uffe9\057\uffe9\062\uffe9\071" +
    "\uffe9\072\uffe9\074\uffe9\112\uffe9\113\uffe9\117\uffe9\120\uffe9" +
    "\126\uffe9\130\uffe9\133\uffe9\134\uffe9\135\uffe9\140\uffe9\141" +
    "\uffe9\150\uffe9\164\uffe9\165\uffe9\170\uffe9\214\uffe9\224\uffe9" +
    "\242\uffe9\262\uffe9\266\uffe9\267\uffe9\271\uffe9\327\uffe9\333" +
    "\uffe9\u0138\uffe9\u0141\uffe9\u0142\uffe9\u0143\uffe9\u0144\uffe9\u0145\uffe9" +
    "\u0146\uffe9\u0147\uffe9\u014b\uffe9\u014c\uffe9\u014d\uffe9\u014e\uffe9\u0150" +
    "\uffe9\u0154\uffe9\u0155\uffe9\u015a\uffe9\001\002\000\150\007\uffe8" +
    "\011\uffe8\012\uffe8\016\uffe8\032\uffe8\044\uffe8\057\uffe8\062" +
    "\uffe8\071\uffe8\072\uffe8\074\uffe8\112\uffe8\113\uffe8\117\uffe8" +
    "\120\uffe8\126\uffe8\130\uffe8\133\uffe8\134\uffe8\135\uffe8\140" +
    "\uffe8\141\uffe8\150\uffe8\164\uffe8\165\uffe8\170\uffe8\214\uffe8" +
    "\224\uffe8\242\uffe8\262\uffe8\266\uffe8\267\uffe8\271\uffe8\327" +
    "\uffe8\333\uffe8\u0138\uffe8\u0141\uffe8\u0142\u0110\u0143\u0111\u0144\uffe8" +
    "\u0145\uffe8\u0146\uffe8\u0147\uffe8\u014b\uffe8\u014c\uffe8\u014d\uffe8\u014e" +
    "\uffe8\u0150\uffe8\u0154\uffe8\u0155\uffe8\u015a\uffe8\001\002\000\150" +
    "\007\uffea\011\uffea\012\uffea\016\uffea\032\uffea\044\uffea\057" +
    "\uffea\062\uffea\071\uffea\072\uffea\074\uffea\112\uffea\113\uffea" +
    "\117\uffea\120\uffea\126\uffea\130\uffea\133\uffea\134\uffea\135" +
    "\uffea\140\uffea\141\uffea\150\uffea\164\uffea\165\uffea\170\uffea" +
    "\214\uffea\224\uffea\242\uffea\262\uffea\266\uffea\267\uffea\271" +
    "\uffea\327\uffea\333\uffea\u0138\uffea\u0141\uffea\u0142\uffea\u0143\uffea" +
    "\u0144\uffea\u0145\uffea\u0146\uffea\u0147\uffea\u014b\uffea\u014c\uffea\u014d" +
    "\uffea\u014e\uffea\u0150\uffea\u0154\uffea\u0155\uffea\u015a\uffea\001\002" +
    "\000\026\323\231\u0100\240\u0105\243\u0110\246\u0111\215\u013c" +
    "\242\u013d\225\u0141\072\u0159\275\u015d\204\001\002\000\150" +
    "\007\uffe7\011\uffe7\012\uffe7\016\uffe7\032\uffe7\044\uffe7\057" +
    "\uffe7\062\uffe7\071\uffe7\072\uffe7\074\uffe7\112\uffe7\113\uffe7" +
    "\117\uffe7\120\uffe7\126\uffe7\130\uffe7\133\uffe7\134\uffe7\135" +
    "\uffe7\140\uffe7\141\uffe7\150\uffe7\164\uffe7\165\uffe7\170\uffe7" +
    "\214\uffe7\224\uffe7\242\uffe7\262\uffe7\266\uffe7\267\uffe7\271" +
    "\uffe7\327\uffe7\333\uffe7\u0138\uffe7\u0141\uffe7\u0142\uffe7\u0143\uffe7" +
    "\u0144\uffe7\u0145\uffe7\u0146\uffe7\u0147\uffe7\u014b\uffe7\u014c\uffe7\u014d" +
    "\uffe7\u014e\uffe7\u0150\uffe7\u0154\uffe7\u0155\uffe7\u015a\uffe7\001\002" +
    "\000\026\323\231\u0100\240\u0105\243\u0110\246\u0111\215\u013c" +
    "\242\u013d\225\u0141\072\u0159\275\u015d\204\001\002\000\150" +
    "\007\uffe4\011\uffe4\012\uffe4\016\uffe4\032\uffe4\044\uffe4\057" +
    "\uffe4\062\uffe4\071\uffe4\072\uffe4\074\uffe4\112\uffe4\113\uffe4" +
    "\117\uffe4\120\uffe4\126\uffe4\130\uffe4\133\uffe4\134\uffe4\135" +
    "\uffe4\140\uffe4\141\uffe4\150\uffe4\164\uffe4\165\uffe4\170\uffe4" +
    "\214\uffe4\224\uffe4\242\uffe4\262\uffe4\266\uffe4\267\uffe4\271" +
    "\uffe4\327\uffe4\333\uffe4\u0138\uffe4\u0141\uffe4\u0142\uffe4\u0143\uffe4" +
    "\u0144\u0119\u0145\u0117\u0146\uffe4\u0147\uffe4\u014b\uffe4\u014c\uffe4\u014d" +
    "\uffe4\u014e\uffe4\u0150\uffe4\u0154\uffe4\u0155\uffe4\u015a\uffe4\001\002" +
    "\000\150\007\uffe6\011\uffe6\012\uffe6\016\uffe6\032\uffe6\044" +
    "\uffe6\057\uffe6\062\uffe6\071\uffe6\072\uffe6\074\uffe6\112\uffe6" +
    "\113\uffe6\117\uffe6\120\uffe6\126\uffe6\130\uffe6\133\uffe6\134" +
    "\uffe6\135\uffe6\140\uffe6\141\uffe6\150\uffe6\164\uffe6\165\uffe6" +
    "\170\uffe6\214\uffe6\224\uffe6\242\uffe6\262\uffe6\266\uffe6\267" +
    "\uffe6\271\uffe6\327\uffe6\333\uffe6\u0138\uffe6\u0141\uffe6\u0142\uffe6" +
    "\u0143\uffe6\u0144\uffe6\u0145\uffe6\u0146\uffe6\u0147\uffe6\u014b\uffe6\u014c" +
    "\uffe6\u014d\uffe6\u014e\uffe6\u0150\uffe6\u0154\uffe6\u0155\uffe6\u015a\uffe6" +
    "\001\002\000\150\007\uffe4\011\uffe4\012\uffe4\016\uffe4\032" +
    "\uffe4\044\uffe4\057\uffe4\062\uffe4\071\uffe4\072\uffe4\074\uffe4" +
    "\112\uffe4\113\uffe4\117\uffe4\120\uffe4\126\uffe4\130\uffe4\133" +
    "\uffe4\134\uffe4\135\uffe4\140\uffe4\141\uffe4\150\uffe4\164\uffe4" +
    "\165\uffe4\170\uffe4\214\uffe4\224\uffe4\242\uffe4\262\uffe4\266" +
    "\uffe4\267\uffe4\271\uffe4\327\uffe4\333\uffe4\u0138\uffe4\u0141\uffe4" +
    "\u0142\uffe4\u0143\uffe4\u0144\u0119\u0145\u0117\u0146\uffe4\u0147\uffe4\u014b" +
    "\uffe4\u014c\uffe4\u014d\uffe4\u014e\uffe4\u0150\uffe4\u0154\uffe4\u0155\uffe4" +
    "\u015a\uffe4\001\002\000\150\007\uffe5\011\uffe5\012\uffe5\016" +
    "\uffe5\032\uffe5\044\uffe5\057\uffe5\062\uffe5\071\uffe5\072\uffe5" +
    "\074\uffe5\112\uffe5\113\uffe5\117\uffe5\120\uffe5\126\uffe5\130" +
    "\uffe5\133\uffe5\134\uffe5\135\uffe5\140\uffe5\141\uffe5\150\uffe5" +
    "\164\uffe5\165\uffe5\170\uffe5\214\uffe5\224\uffe5\242\uffe5\262" +
    "\uffe5\266\uffe5\267\uffe5\271\uffe5\327\uffe5\333\uffe5\u0138\uffe5" +
    "\u0141\uffe5\u0142\uffe5\u0143\uffe5\u0144\uffe5\u0145\uffe5\u0146\uffe5\u0147" +
    "\uffe5\u014b\uffe5\u014c\uffe5\u014d\uffe5\u014e\uffe5\u0150\uffe5\u0154\uffe5" +
    "\u0155\uffe5\u015a\uffe5\001\002\000\026\323\231\u0100\240\u0105" +
    "\243\u0110\246\u0111\215\u013c\242\u013d\225\u0141\072\u0159\275" +
    "\u015d\204\001\002\000\004\u015a\u0120\001\002\000\112\007" +
    "\uff2b\011\uff2b\012\uff2b\016\uff2b\032\uff2b\044\uff2b\062\uff2b" +
    "\074\uff2b\112\uff2b\113\uff2b\117\uff2b\120\uff2b\126\uff2b\130" +
    "\uff2b\133\uff2b\134\uff2b\135\uff2b\140\uff2b\141\uff2b\150\uff2b" +
    "\164\uff2b\165\uff2b\214\uff2b\267\uff2b\271\uff2b\327\uff2b\u0141" +
    "\uff2b\u0147\uff2b\u014b\uff2b\u014c\uff2b\u014d\uff2b\u014e\uff2b\u0150\uff2b" +
    "\u0154\uff2b\u0155\uff2b\u015a\uff2b\001\002\000\032\005\u0125\064" +
    "\u0122\323\uff11\u0100\uff11\u0105\uff11\u0110\uff11\u0111\uff11\u013c\uff11" +
    "\u013d\uff11\u0141\uff11\u0159\uff11\u015d\uff11\001\002\000\026\323" +
    "\uff12\u0100\uff12\u0105\uff12\u0110\uff12\u0111\uff12\u013c\uff12\u013d\uff12" +
    "\u0141\uff12\u0159\uff12\u015d\uff12\001\002\000\026\323\231\u0100" +
    "\240\u0105\243\u0110\246\u0111\215\u013c\242\u013d\225\u0141\u0129" +
    "\u0159\275\u015d\204\001\002\000\004\u015a\u0126\001\002\000" +
    "\026\323\uff13\u0100\uff13\u0105\uff13\u0110\uff13\u0111\uff13\u013c\uff13" +
    "\u013d\uff13\u0141\uff13\u0159\uff13\u015d\uff13\001\002\000\150\007" +
    "\uff19\011\uff19\012\uff19\016\uff19\032\uff19\044\uff19\057\uff19" +
    "\062\uff19\071\uff19\072\uff19\074\uff19\112\uff19\113\uff19\117" +
    "\uff19\120\uff19\126\uff19\130\uff19\133\uff19\134\uff19\135\uff19" +
    "\140\uff19\141\uff19\150\uff19\164\uff19\165\uff19\170\uff19\214" +
    "\uff19\224\uff19\242\uff19\262\uff19\266\uff19\267\uff19\271\uff19" +
    "\327\uff19\333\uff19\u0138\uff19\u0141\uff19\u0142\uff19\u0143\uff19\u0144" +
    "\uff19\u0145\uff19\u0146\uff19\u0147\uff19\u014b\uff19\u014c\uff19\u014d\uff19" +
    "\u014e\uff19\u0150\uff19\u0154\uff19\u0155\uff19\u015a\uff19\001\002\000" +
    "\004\u015a\uff10\001\002\000\004\u015a\uff14\001\002\000\016" +
    "\u0142\uffd9\u0143\uffd9\u0144\uffd9\u0145\uffd9\u0156\u012b\u015a\uffd9\001" +
    "\002\000\004\u015a\uff0f\001\002\000\004\u0141\u012c\001\002" +
    "\000\016\u0142\uffd7\u0143\uffd7\u0144\uffd7\u0145\uffd7\u0156\077\u015a" +
    "\uffd7\001\002\000\006\u0141\072\u0144\u0130\001\002\000\004" +
    "\u0155\u0131\001\002\000\004\u0155\uffb3\001\002\000\004\u0155" +
    "\uffb4\001\002\000\114\024\uffa6\037\uffa6\042\uffa6\050\uffa6" +
    "\110\uffa6\140\uffa6\150\145\152\uffa6\214\uffa6\230\uffa6\231" +
    "\uffa6\236\uffa6\323\uffa6\341\uffa6\345\uffa6\360\uffa6\376\uffa6" +
    "\u0100\uffa6\u0105\uffa6\u010d\uffa6\u010e\144\u0110\uffa6\u0111\uffa6\u0112" +
    "\uffa6\u0116\uffa6\u0118\uffa6\u0119\uffa6\u0120\uffa6\u0122\uffa6\u0123\uffa6" +
    "\u0137\uffa6\u013c\uffa6\u013d\uffa6\u013f\uffa6\u0141\uffa6\u0159\147\u015d" +
    "\uffa6\001\002\000\004\u015a\u0134\001\002\000\004\u015a\uffb2" +
    "\001\002\000\044\007\uffce\044\uffce\113\uffce\117\uffce\120" +
    "\uffce\130\uffce\135\uffce\140\uffce\164\uffce\165\uffce\214\uffce" +
    "\267\uffce\271\uffce\327\uffce\u0154\uffce\u0155\uffce\u015a\uffce\001" +
    "\002\000\042\007\uffa9\044\uffa9\113\uffa9\117\uffa9\120\uffa9" +
    "\130\uffa9\135\uffa9\140\uffa9\165\uffa9\214\uffa9\267\uffa9\271" +
    "\uffa9\327\uffa9\u0154\uffa9\u0155\uffa9\u015a\uffa9\001\002\000\004" +
    "\u015a\u0138\001\002\000\112\024\uffa6\037\uffa6\042\uffa6\050" +
    "\uffa6\110\uffa6\140\uffa6\150\145\152\uffa6\214\uffa6\230\uffa6" +
    "\231\uffa6\236\uffa6\323\231\341\uffa6\345\uffa6\360\uffa6\376" +
    "\uffa6\u0100\240\u0105\243\u010d\uffa6\u0110\246\u0111\215\u0112\uffa6" +
    "\u0116\uffa6\u0118\uffa6\u0119\uffa6\u0120\uffa6\u0122\uffa6\u0123\uffa6\u0137" +
    "\uffa6\u013c\242\u013d\225\u013f\uffa6\u0141\072\u0159\u0137\u015d\204" +
    "\001\002\000\044\007\uffac\044\uffac\113\uffac\117\uffac\120" +
    "\uffac\130\uffac\135\uffac\140\uffac\164\170\165\uffac\214\uffac" +
    "\267\uffac\271\uffac\327\uffac\u0154\uffac\u0155\uffac\u015a\uffac\001" +
    "\002\000\042\007\uffa8\044\uffa8\113\uffa8\117\uffa8\120\uffa8" +
    "\130\uffa8\135\uffa8\140\uffa8\165\uffa8\214\uffa8\267\uffa8\271" +
    "\uffa8\327\uffa8\u0154\uffa8\u0155\uffa8\u015a\uffa8\001\002\000\010" +
    "\u013f\311\u0141\307\u015d\310\001\002\000\004\u0155\u013c\001" +
    "\002\000\026\323\231\u0100\240\u0105\243\u0110\246\u0111\215" +
    "\u013c\242\u013d\225\u0141\072\u0159\275\u015d\204\001\002\000" +
    "\004\u015a\u013e\001\002\000\112\007\uff2d\011\uff2d\012\uff2d" +
    "\016\uff2d\032\uff2d\044\uff2d\062\uff2d\074\uff2d\112\uff2d\113" +
    "\uff2d\117\uff2d\120\uff2d\126\uff2d\130\uff2d\133\uff2d\134\uff2d" +
    "\135\uff2d\140\uff2d\141\uff2d\150\uff2d\164\uff2d\165\uff2d\214" +
    "\uff2d\267\uff2d\271\uff2d\327\uff2d\u0141\uff2d\u0147\uff2d\u014b\uff2d" +
    "\u014c\uff2d\u014d\uff2d\u014e\uff2d\u0150\uff2d\u0154\uff2d\u0155\uff2d\u015a" +
    "\uff2d\001\002\000\006\u013f\260\u015d\261\001\002\000\004" +
    "\u015a\u0141\001\002\000\112\007\uff37\011\uff37\012\uff37\016" +
    "\uff37\032\uff37\044\uff37\062\uff37\074\uff37\112\uff37\113\uff37" +
    "\117\uff37\120\uff37\126\uff37\130\uff37\133\uff37\134\uff37\135" +
    "\uff37\140\uff37\141\uff37\150\uff37\164\uff37\165\uff37\214\uff37" +
    "\267\uff37\271\uff37\327\uff37\u0141\uff37\u0147\uff37\u014b\uff37\u014c" +
    "\uff37\u014d\uff37\u014e\uff37\u0150\uff37\u0154\uff37\u0155\uff37\u015a\uff37" +
    "\001\002\000\032\005\267\064\266\323\uff00\u0100\uff00\u0105" +
    "\uff00\u0110\uff00\u0111\uff00\u013c\uff00\u013d\uff00\u0141\uff00\u0159\uff00" +
    "\u015d\uff00\001\002\000\004\u015a\u0144\001\002\000\150\007" +
    "\uff16\011\uff16\012\uff16\016\uff16\032\uff16\044\uff16\057\uff16" +
    "\062\uff16\071\uff16\072\uff16\074\uff16\112\uff16\113\uff16\117" +
    "\uff16\120\uff16\126\uff16\130\uff16\133\uff16\134\uff16\135\uff16" +
    "\140\uff16\141\uff16\150\uff16\164\uff16\165\uff16\170\uff16\214" +
    "\uff16\224\uff16\242\uff16\262\uff16\266\uff16\267\uff16\271\uff16" +
    "\327\uff16\333\uff16\u0138\uff16\u0141\uff16\u0142\uff16\u0143\uff16\u0144" +
    "\uff16\u0145\uff16\u0146\uff16\u0147\uff16\u014b\uff16\u014c\uff16\u014d\uff16" +
    "\u014e\uff16\u0150\uff16\u0154\uff16\u0155\uff16\u015a\uff16\001\002\000" +
    "\010\u013f\311\u0141\307\u015d\310\001\002\000\004\u0155\u0147" +
    "\001\002\000\010\u013f\311\u0141\307\u015d\310\001\002\000" +
    "\004\u0155\u0149\001\002\000\010\u013f\311\u0141\307\u015d\310" +
    "\001\002\000\004\u015a\u014b\001\002\000\112\007\uff30\011" +
    "\uff30\012\uff30\016\uff30\032\uff30\044\uff30\062\uff30\074\uff30" +
    "\112\uff30\113\uff30\117\uff30\120\uff30\126\uff30\130\uff30\133" +
    "\uff30\134\uff30\135\uff30\140\uff30\141\uff30\150\uff30\164\uff30" +
    "\165\uff30\214\uff30\267\uff30\271\uff30\327\uff30\u0141\uff30\u0147" +
    "\uff30\u014b\uff30\u014c\uff30\u014d\uff30\u014e\uff30\u0150\uff30\u0154\uff30" +
    "\u0155\uff30\u015a\uff30\001\002\000\004\106\u014d\001\002\000" +
    "\004\u0141\u014e\001\002\000\006\167\u0150\u0156\u0153\001\002" +
    "\000\074\007\uff1b\016\uff1b\044\uff1b\074\uff1b\113\uff1b\117" +
    "\uff1b\120\uff1b\126\uff1b\130\uff1b\134\uff1b\135\uff1b\140\uff1b" +
    "\141\uff1b\150\uff1b\164\uff1b\165\uff1b\214\uff1b\267\uff1b\271" +
    "\uff1b\327\uff1b\u0147\uff1b\u014b\uff1b\u014c\uff1b\u014d\uff1b\u014e\uff1b" +
    "\u0150\uff1b\u0154\uff1b\u0155\uff1b\u015a\uff1b\001\002\000\004\165" +
    "\u015a\001\002\000\074\007\uff1d\016\uff1d\044\uff1d\074\uff1d" +
    "\113\uff1d\117\uff1d\120\uff1d\126\uff1d\130\uff1d\134\uff1d\135" +
    "\uff1d\140\uff1d\141\uff1d\150\uff1d\164\uff1d\165\uff1d\214\uff1d" +
    "\267\uff1d\271\uff1d\327\uff1d\u0147\uff1d\u014b\uff1d\u014c\uff1d\u014d" +
    "\uff1d\u014e\uff1d\u0150\uff1d\u0154\uff1d\u0155\uff1d\u015a\uff1d\001\002" +
    "\000\074\007\uff22\016\uff22\044\uff22\074\uff22\113\uff22\117" +
    "\uff22\120\uff22\126\uff22\130\uff22\134\uff22\135\uff22\140\uff22" +
    "\141\uff22\150\uff22\164\uff22\165\uff22\214\uff22\267\uff22\271" +
    "\uff22\327\uff22\u0147\uff22\u014b\uff22\u014c\uff22\u014d\uff22\u014e\uff22" +
    "\u0150\uff22\u0154\uff22\u0155\uff22\u015a\uff22\001\002\000\004\u0141" +
    "\u0154\001\002\000\006\167\u0150\u0156\u0157\001\002\000\074" +
    "\007\uff1c\016\uff1c\044\uff1c\074\uff1c\113\uff1c\117\uff1c\120" +
    "\uff1c\126\uff1c\130\uff1c\134\uff1c\135\uff1c\140\uff1c\141\uff1c" +
    "\150\uff1c\164\uff1c\165\uff1c\214\uff1c\267\uff1c\271\uff1c\327" +
    "\uff1c\u0147\uff1c\u014b\uff1c\u014c\uff1c\u014d\uff1c\u014e\uff1c\u0150\uff1c" +
    "\u0154\uff1c\u0155\uff1c\u015a\uff1c\001\002\000\074\007\uff1e\016" +
    "\uff1e\044\uff1e\074\uff1e\113\uff1e\117\uff1e\120\uff1e\126\uff1e" +
    "\130\uff1e\134\uff1e\135\uff1e\140\uff1e\141\uff1e\150\uff1e\164" +
    "\uff1e\165\uff1e\214\uff1e\267\uff1e\271\uff1e\327\uff1e\u0147\uff1e" +
    "\u014b\uff1e\u014c\uff1e\u014d\uff1e\u014e\uff1e\u0150\uff1e\u0154\uff1e\u0155" +
    "\uff1e\u015a\uff1e\001\002\000\004\u0141\u0158\001\002\000\004" +
    "\167\u0150\001\002\000\074\007\uff1c\016\uff1c\044\uff1c\074" +
    "\uff1c\113\uff1c\117\uff1c\120\uff1c\126\uff1c\130\uff1c\134\uff1c" +
    "\135\uff1c\140\uff1c\141\uff1c\150\uff1c\164\uff1c\165\uff1c\214" +
    "\uff1c\267\uff1c\271\uff1c\327\uff1c\u0147\uff1c\u014b\uff1c\u014c\uff1c" +
    "\u014d\uff1c\u014e\uff1c\u0150\uff1c\u0154\uff1c\u0155\uff1c\u015a\uff1c\001" +
    "\002\000\004\022\u015b\001\002\000\100\024\200\042\203" +
    "\050\236\140\217\150\343\214\244\231\250\323\231\341" +
    "\171\345\174\360\172\376\173\u0100\240\u0105\243\u010d\201" +
    "\u0110\246\u0111\215\u0112\214\u0116\247\u0118\211\u0119\177\u0120" +
    "\233\u0123\245\u0137\216\u013c\242\u013d\225\u013f\351\u0141\u0163" +
    "\u0144\u0166\u0159\353\u015d\u015e\001\002\000\112\007\uff5e\011" +
    "\uff5e\012\uff5e\016\uff5e\032\uff5e\044\uff5e\062\uff5e\074\uff5e" +
    "\112\uff5e\113\uff5e\117\uff5e\120\uff5e\126\uff5e\130\uff5e\133" +
    "\uff5e\134\uff5e\135\uff5e\140\uff5e\141\uff5e\150\uff5e\164\uff5e" +
    "\165\uff5e\214\uff5e\267\uff5e\271\uff5e\327\uff5e\u0141\uff5e\u0147" +
    "\uff5e\u014b\uff5e\u014c\uff5e\u014d\uff5e\u014e\uff5e\u0150\uff5e\u0154\uff5e" +
    "\u0155\uff5e\u015a\uff5e\001\002\000\112\007\uff5b\011\uff5b\012" +
    "\uff5b\016\uff5b\032\uff5b\044\uff5b\062\uff5b\074\uff5b\112\uff5b" +
    "\113\uff5b\117\uff5b\120\uff5b\126\uff5b\130\uff5b\133\uff5b\134" +
    "\uff5b\135\uff5b\140\uff5b\141\uff5b\150\uff5b\164\uff5b\165\uff5b" +
    "\214\uff5b\267\uff5b\271\uff5b\327\uff5b\u0141\uff5b\u0147\uff5b\u014b" +
    "\uff5b\u014c\uff5b\u014d\uff5b\u014e\uff5b\u0150\uff5b\u0154\uff5b\u0155\uff5b" +
    "\u015a\uff5b\001\002\000\004\u0141\u0199\001\002\000\112\007" +
    "\uff59\011\uff59\012\uff59\016\uff59\032\uff59\044\uff59\062\uff59" +
    "\074\uff59\112\uff59\113\uff59\117\uff59\120\uff59\126\uff59\130" +
    "\uff59\133\uff59\134\uff59\135\uff59\140\uff59\141\uff59\150\uff59" +
    "\164\uff59\165\uff59\214\uff59\267\uff59\271\uff59\327\uff59\u0141" +
    "\uff59\u0147\uff59\u014b\uff59\u014c\uff59\u014d\uff59\u014e\uff59\u0150\uff59" +
    "\u0154\uff59\u0155\uff59\u015a\uff59\001\002\000\112\007\uff50\011" +
    "\u0171\012\uff50\016\uff50\032\uff50\044\uff50\062\uff50\074\uff50" +
    "\112\uff50\113\uff50\117\uff50\120\uff50\126\uff50\130\uff50\133" +
    "\uff50\134\uff50\135\uff50\140\uff50\141\uff50\150\uff50\164\uff50" +
    "\165\uff50\214\uff50\267\uff50\271\uff50\327\uff50\u0141\u0174\u0147" +
    "\uff50\u014b\uff50\u014c\uff50\u014d\uff50\u014e\uff50\u0150\uff50\u0154\uff50" +
    "\u0155\uff50\u015a\uff50\001\002\000\124\007\uffdf\011\uffdf\012" +
    "\uffdf\016\uffdf\032\uffdf\044\uffdf\062\uffdf\074\uffdf\112\uffdf" +
    "\113\uffdf\117\uffdf\120\uffdf\126\uffdf\130\uffdf\133\uffdf\134" +
    "\uffdf\135\uffdf\140\uffdf\141\uffdf\150\uffdf\164\uffdf\165\uffdf" +
    "\214\uffdf\267\uffdf\271\uffdf\327\uffdf\u0141\uffdf\u0142\uffdf\u0143" +
    "\uffdf\u0144\uffdf\u0145\uffdf\u0146\uffdf\u0147\uffdf\u014b\uffdf\u014c\uffdf" +
    "\u014d\uffdf\u014e\uffdf\u0150\uffdf\u0154\uffdf\u0155\uffdf\u015a\uffdf\001" +
    "\002\000\102\007\ufea3\012\u0190\016\ufea3\032\u018d\044\ufea3" +
    "\062\u0191\074\ufea3\113\ufea3\117\ufea3\120\ufea3\126\ufea3\130" +
    "\ufea3\134\ufea3\135\ufea3\140\ufea3\141\ufea3\150\ufea3\164\ufea3" +
    "\165\ufea3\214\ufea3\267\ufea3\271\ufea3\327\ufea3\u0147\ufea3\u014b" +
    "\ufea3\u014c\ufea3\u014d\ufea3\u014e\ufea3\u0150\ufea3\u0154\ufea3\u0155\u018f" +
    "\u015a\ufea3\001\002\000\130\007\uffd9\011\uffd9\012\uffd9\016" +
    "\uffd9\032\uffd9\044\uffd9\062\uffd9\074\uffd9\112\uffd9\113\uffd9" +
    "\117\uffd9\120\uffd9\126\uffd9\130\uffd9\133\uffd9\134\uffd9\135" +
    "\uffd9\140\uffd9\141\uffd9\150\uffd9\164\uffd9\165\uffd9\214\uffd9" +
    "\267\uffd9\271\uffd9\327\uffd9\u0141\uffd9\u0142\uffd9\u0143\uffd9\u0144" +
    "\uffd9\u0145\uffd9\u0146\uffd9\u0147\uffd9\u014b\uffd9\u014c\u016b\u014d\uffd9" +
    "\u014e\uffd9\u0150\uffd9\u0154\uffd9\u0155\uffd9\u0156\u016a\u0159\u0169\u015a" +
    "\uffd9\001\002\000\074\007\uff1a\016\uff1a\044\uff1a\074\uff1a" +
    "\113\uff1a\117\uff1a\120\uff1a\126\uff1a\130\uff1a\134\uff1a\135" +
    "\uff1a\140\uff1a\141\uff1a\150\uff1a\164\uff1a\165\uff1a\214\uff1a" +
    "\267\uff1a\271\uff1a\327\uff1a\u0147\uff1a\u014b\uff1a\u014c\uff1a\u014d" +
    "\uff1a\u014e\uff1a\u0150\uff1a\u0154\uff1a\u0155\uff1a\u015a\uff1a\001\002" +
    "\000\112\007\uff5c\011\uff5c\012\uff5c\016\uff5c\032\uff5c\044" +
    "\uff5c\062\uff5c\074\uff5c\112\uff5c\113\uff5c\117\uff5c\120\uff5c" +
    "\126\uff5c\130\uff5c\133\uff5c\134\uff5c\135\uff5c\140\uff5c\141" +
    "\uff5c\150\uff5c\164\uff5c\165\uff5c\214\uff5c\267\uff5c\271\uff5c" +
    "\327\uff5c\u0141\uff5c\u0147\uff5c\u014b\uff5c\u014c\uff5c\u014d\uff5c\u014e" +
    "\uff5c\u0150\uff5c\u0154\uff5c\u0155\uff5c\u015a\uff5c\001\002\000\106" +
    "\007\uff61\012\uff61\016\uff61\032\uff61\044\uff61\062\uff61\074" +
    "\uff61\112\uff61\113\uff61\117\uff61\120\uff61\126\uff61\130\uff61" +
    "\133\uff61\134\uff61\135\uff61\140\uff61\141\uff61\150\uff61\164" +
    "\uff61\165\uff61\214\uff61\267\uff61\271\uff61\327\uff61\u0147\uff61" +
    "\u014b\uff61\u014c\uff61\u014d\uff61\u014e\uff61\u0150\uff61\u0154\uff61\u0155" +
    "\uff61\u015a\uff61\001\002\000\112\007\uff5a\011\uff5a\012\uff5a" +
    "\016\uff5a\032\uff5a\044\uff5a\062\uff5a\074\uff5a\112\uff5a\113" +
    "\uff5a\117\uff5a\120\uff5a\126\uff5a\130\uff5a\133\uff5a\134\uff5a" +
    "\135\uff5a\140\uff5a\141\uff5a\150\uff5a\164\uff5a\165\uff5a\214" +
    "\uff5a\267\uff5a\271\uff5a\327\uff5a\u0141\uff5a\u0147\uff5a\u014b\uff5a" +
    "\u014c\uff5a\u014d\uff5a\u014e\uff5a\u0150\uff5a\u0154\uff5a\u0155\uff5a\u015a" +
    "\uff5a\001\002\000\112\007\uff5f\011\uff5f\012\uff5f\016\uff5f" +
    "\032\uff5f\044\uff5f\062\uff5f\074\uff5f\112\uff5f\113\uff5f\117" +
    "\uff5f\120\uff5f\126\uff5f\130\uff5f\133\uff5f\134\uff5f\135\uff5f" +
    "\140\uff5f\141\uff5f\150\uff5f\164\uff5f\165\uff5f\214\uff5f\267" +
    "\uff5f\271\uff5f\327\uff5f\u0141\uff5f\u0147\uff5f\u014b\uff5f\u014c\uff5f" +
    "\u014d\uff5f\u014e\uff5f\u0150\uff5f\u0154\uff5f\u0155\uff5f\u015a\uff5f\001" +
    "\002\000\034\323\231\u0100\240\u0105\243\u0110\246\u0111\215" +
    "\u013c\242\u013d\225\u013e\u017b\u013f\u017c\u0141\072\u0159\275\u015a" +
    "\uff48\u015d\204\001\002\000\006\u0141\u016f\u0144\u0170\001\002" +
    "\000\032\150\343\323\231\u0100\240\u0105\243\u0110\246\u0111" +
    "\215\u013c\242\u013d\225\u013f\351\u0141\344\u0159\353\u015d\204" +
    "\001\002\000\112\007\uff57\011\uff57\012\uff57\016\uff57\032" +
    "\uff57\044\uff57\062\uff57\074\uff57\112\uff57\113\uff57\117\uff57" +
    "\120\uff57\126\uff57\130\uff57\133\uff57\134\uff57\135\uff57\140" +
    "\uff57\141\uff57\150\uff57\164\uff57\165\uff57\214\uff57\267\uff57" +
    "\271\uff57\327\uff57\u0141\uff57\u0147\uff57\u014b\uff57\u014c\uff57\u014d" +
    "\uff57\u014e\uff57\u0150\uff57\u0154\uff57\u0155\uff57\u015a\uff57\001\002" +
    "\000\112\007\uff4f\011\uff4f\012\uff4f\016\uff4f\032\uff4f\044" +
    "\uff4f\062\uff4f\074\uff4f\112\uff4f\113\uff4f\117\uff4f\120\uff4f" +
    "\126\uff4f\130\uff4f\133\uff4f\134\uff4f\135\uff4f\140\uff4f\141" +
    "\uff4f\150\uff4f\164\uff4f\165\uff4f\214\uff4f\267\uff4f\271\uff4f" +
    "\327\uff4f\u0141\uff4f\u0147\uff4f\u014b\uff4f\u014c\uff4f\u014d\uff4f\u014e" +
    "\uff4f\u0150\uff4f\u0154\uff4f\u0155\uff4f\u015a\uff4f\001\002\000\112" +
    "\007\uff58\011\uff58\012\uff58\016\uff58\032\uff58\044\uff58\062" +
    "\uff58\074\uff58\112\uff58\113\uff58\117\uff58\120\uff58\126\uff58" +
    "\130\uff58\133\uff58\134\uff58\135\uff58\140\uff58\141\uff58\150" +
    "\uff58\164\uff58\165\uff58\214\uff58\267\uff58\271\uff58\327\uff58" +
    "\u0141\uff58\u0147\uff58\u014b\uff58\u014c\uff58\u014d\uff58\u014e\uff58\u0150" +
    "\uff58\u0154\uff58\u0155\uff58\u015a\uff58\001\002\000\130\007\uffd7" +
    "\011\u0171\012\uffd7\016\uffd7\032\uffd7\044\uffd7\062\uffd7\074" +
    "\uffd7\112\uffd7\113\uffd7\117\uffd7\120\uffd7\126\uffd7\130\uffd7" +
    "\133\uffd7\134\uffd7\135\uffd7\140\uffd7\141\uffd7\150\uffd7\164" +
    "\uffd7\165\uffd7\214\uffd7\267\uffd7\271\uffd7\327\uffd7\u0141\u0174" +
    "\u0142\uffd7\u0143\uffd7\u0144\uffd7\u0145\uffd7\u0146\uffd7\u0147\uffd7\u014b" +
    "\uffd7\u014c\uffd7\u014d\uffd7\u014e\uffd7\u0150\uffd7\u0154\uffd7\u0155\uffd7" +
    "\u0156\u0173\u0159\u0172\u015a\uffd7\001\002\000\112\007\uff54\011" +
    "\uff54\012\uff54\016\uff54\032\uff54\044\uff54\062\uff54\074\uff54" +
    "\112\uff54\113\uff54\117\uff54\120\uff54\126\uff54\130\uff54\133" +
    "\uff54\134\uff54\135\uff54\140\uff54\141\uff54\150\uff54\164\uff54" +
    "\165\uff54\214\uff54\267\uff54\271\uff54\327\uff54\u0141\uff54\u0147" +
    "\uff54\u014b\uff54\u014c\uff54\u014d\uff54\u014e\uff54\u0150\uff54\u0154\uff54" +
    "\u0155\uff54\u015a\uff54\001\002\000\004\u0141\u0189\001\002\000" +
    "\034\323\231\u0100\240\u0105\243\u0110\246\u0111\215\u013c\242" +
    "\u013d\225\u013e\u017b\u013f\u017c\u0141\072\u0159\275\u015a\uff48\u015d" +
    "\204\001\002\000\004\u0141\u0177\001\002\000\112\007\uff51" +
    "\011\uff51\012\uff51\016\uff51\032\uff51\044\uff51\062\uff51\074" +
    "\uff51\112\uff51\113\uff51\117\uff51\120\uff51\126\uff51\130\uff51" +
    "\133\uff51\134\uff51\135\uff51\140\uff51\141\uff51\150\uff51\164" +
    "\uff51\165\uff51\214\uff51\267\uff51\271\uff51\327\uff51\u0141\uff51" +
    "\u0147\uff51\u014b\uff51\u014c\uff51\u014d\uff51\u014e\uff51\u0150\uff51\u0154" +
    "\uff51\u0155\uff51\u015a\uff51\001\002\000\112\007\uff53\011\uff53" +
    "\012\uff53\016\uff53\032\uff53\044\uff53\062\uff53\074\uff53\112" +
    "\uff53\113\uff53\117\uff53\120\uff53\126\uff53\130\uff53\133\uff53" +
    "\134\uff53\135\uff53\140\uff53\141\uff53\150\uff53\164\uff53\165" +
    "\uff53\214\uff53\267\uff53\271\uff53\327\uff53\u0141\uff53\u0147\uff53" +
    "\u014b\uff53\u014c\uff53\u014d\uff53\u014e\uff53\u0150\uff53\u0154\uff53\u0155" +
    "\uff53\u015a\uff53\001\002\000\112\007\uff4c\011\uff4c\012\uff4c" +
    "\016\uff4c\032\uff4c\044\uff4c\062\uff4c\074\uff4c\112\uff4c\113" +
    "\uff4c\117\uff4c\120\uff4c\126\uff4c\130\uff4c\133\uff4c\134\uff4c" +
    "\135\uff4c\140\uff4c\141\uff4c\150\uff4c\164\uff4c\165\uff4c\214" +
    "\uff4c\267\uff4c\271\uff4c\327\uff4c\u0141\uff4c\u0147\uff4c\u014b\uff4c" +
    "\u014c\uff4c\u014d\uff4c\u014e\uff4c\u0150\uff4c\u0154\uff4c\u0155\uff4c\u015a" +
    "\uff4c\001\002\000\130\007\uffd5\011\u0171\012\uffd5\016\uffd5" +
    "\032\uffd5\044\uffd5\062\uffd5\074\uffd5\112\uffd5\113\uffd5\117" +
    "\uffd5\120\uffd5\126\uffd5\130\uffd5\133\uffd5\134\uffd5\135\uffd5" +
    "\140\uffd5\141\uffd5\150\uffd5\164\uffd5\165\uffd5\214\uffd5\267" +
    "\uffd5\271\uffd5\327\uffd5\u0141\u0174\u0142\uffd5\u0143\uffd5\u0144\uffd5" +
    "\u0145\uffd5\u0146\uffd5\u0147\uffd5\u014b\uffd5\u014c\uffd5\u014d\uffd5\u014e" +
    "\uffd5\u0150\uffd5\u0154\uffd5\u0155\uffd5\u0156\102\u0159\u0179\u015a\uffd5" +
    "\001\002\000\112\007\uff4e\011\uff4e\012\uff4e\016\uff4e\032" +
    "\uff4e\044\uff4e\062\uff4e\074\uff4e\112\uff4e\113\uff4e\117\uff4e" +
    "\120\uff4e\126\uff4e\130\uff4e\133\uff4e\134\uff4e\135\uff4e\140" +
    "\uff4e\141\uff4e\150\uff4e\164\uff4e\165\uff4e\214\uff4e\267\uff4e" +
    "\271\uff4e\327\uff4e\u0141\uff4e\u0147\uff4e\u014b\uff4e\u014c\uff4e\u014d" +
    "\uff4e\u014e\uff4e\u0150\uff4e\u0154\uff4e\u0155\uff4e\u015a\uff4e\001\002" +
    "\000\034\323\231\u0100\240\u0105\243\u0110\246\u0111\215\u013c" +
    "\242\u013d\225\u013e\u017b\u013f\u017c\u0141\072\u0159\275\u015a\uff48" +
    "\u015d\204\001\002\000\112\007\uff44\011\uff44\012\uff44\016" +
    "\uff44\032\uff44\044\uff44\062\uff44\074\uff44\112\uff44\113\uff44" +
    "\117\uff44\120\uff44\126\uff44\130\uff44\133\uff44\134\uff44\135" +
    "\uff44\140\uff44\141\uff44\150\uff44\164\uff44\165\uff44\214\uff44" +
    "\267\uff44\271\uff44\327\uff44\u0141\uff44\u0147\uff44\u014b\uff44\u014c" +
    "\uff44\u014d\uff44\u014e\uff44\u0150\uff44\u0154\uff44\u0155\uff44\u015a\uff44" +
    "\001\002\000\006\u0155\u0181\u015a\uff46\001\002\000\006\u0155" +
    "\u0181\u015a\uff46\001\002\000\006\u0155\u0181\u015a\uff46\001\002" +
    "\000\004\u015a\u017f\001\002\000\112\007\uff50\011\u0171\012" +
    "\uff50\016\uff50\032\uff50\044\uff50\062\uff50\074\uff50\112\uff50" +
    "\113\uff50\117\uff50\120\uff50\126\uff50\130\uff50\133\uff50\134" +
    "\uff50\135\uff50\140\uff50\141\uff50\150\uff50\164\uff50\165\uff50" +
    "\214\uff50\267\uff50\271\uff50\327\uff50\u0141\u0174\u0147\uff50\u014b" +
    "\uff50\u014c\uff50\u014d\uff50\u014e\uff50\u0150\uff50\u0154\uff50\u0155\uff50" +
    "\u015a\uff50\001\002\000\112\007\uff45\011\uff45\012\uff45\016" +
    "\uff45\032\uff45\044\uff45\062\uff45\074\uff45\112\uff45\113\uff45" +
    "\117\uff45\120\uff45\126\uff45\130\uff45\133\uff45\134\uff45\135" +
    "\uff45\140\uff45\141\uff45\150\uff45\164\uff45\165\uff45\214\uff45" +
    "\267\uff45\271\uff45\327\uff45\u0141\uff45\u0147\uff45\u014b\uff45\u014c" +
    "\uff45\u014d\uff45\u014e\uff45\u0150\uff45\u0154\uff45\u0155\uff45\u015a\uff45" +
    "\001\002\000\034\323\231\u0100\240\u0105\243\u0110\246\u0111" +
    "\215\u013c\242\u013d\225\u013e\u017b\u013f\u017c\u0141\072\u0159\275" +
    "\u015a\uff48\u015d\204\001\002\000\004\u015a\uff4b\001\002\000" +
    "\004\u015a\uff47\001\002\000\004\u015a\uff4a\001\002\000\004" +
    "\u015a\uff49\001\002\000\004\u015a\u0187\001\002\000\112\007" +
    "\uff50\011\u0171\012\uff50\016\uff50\032\uff50\044\uff50\062\uff50" +
    "\074\uff50\112\uff50\113\uff50\117\uff50\120\uff50\126\uff50\130" +
    "\uff50\133\uff50\134\uff50\135\uff50\140\uff50\141\uff50\150\uff50" +
    "\164\uff50\165\uff50\214\uff50\267\uff50\271\uff50\327\uff50\u0141" +
    "\u0174\u0147\uff50\u014b\uff50\u014c\uff50\u014d\uff50\u014e\uff50\u0150\uff50" +
    "\u0154\uff50\u0155\uff50\u015a\uff50\001\002\000\112\007\uff4d\011" +
    "\uff4d\012\uff4d\016\uff4d\032\uff4d\044\uff4d\062\uff4d\074\uff4d" +
    "\112\uff4d\113\uff4d\117\uff4d\120\uff4d\126\uff4d\130\uff4d\133" +
    "\uff4d\134\uff4d\135\uff4d\140\uff4d\141\uff4d\150\uff4d\164\uff4d" +
    "\165\uff4d\214\uff4d\267\uff4d\271\uff4d\327\uff4d\u0141\uff4d\u0147" +
    "\uff4d\u014b\uff4d\u014c\uff4d\u014d\uff4d\u014e\uff4d\u0150\uff4d\u0154\uff4d" +
    "\u0155\uff4d\u015a\uff4d\001\002\000\112\007\uff52\011\uff52\012" +
    "\uff52\016\uff52\032\uff52\044\uff52\062\uff52\074\uff52\112\uff52" +
    "\113\uff52\117\uff52\120\uff52\126\uff52\130\uff52\133\uff52\134" +
    "\uff52\135\uff52\140\uff52\141\uff52\150\uff52\164\uff52\165\uff52" +
    "\214\uff52\267\uff52\271\uff52\327\uff52\u0141\uff52\u0147\uff52\u014b" +
    "\uff52\u014c\uff52\u014d\uff52\u014e\uff52\u0150\uff52\u0154\uff52\u0155\uff52" +
    "\u015a\uff52\001\002\000\004\u015a\u018b\001\002\000\112\007" +
    "\uff50\011\u0171\012\uff50\016\uff50\032\uff50\044\uff50\062\uff50" +
    "\074\uff50\112\uff50\113\uff50\117\uff50\120\uff50\126\uff50\130" +
    "\uff50\133\uff50\134\uff50\135\uff50\140\uff50\141\uff50\150\uff50" +
    "\164\uff50\165\uff50\214\uff50\267\uff50\271\uff50\327\uff50\u0141" +
    "\u0174\u0147\uff50\u014b\uff50\u014c\uff50\u014d\uff50\u014e\uff50\u0150\uff50" +
    "\u0154\uff50\u0155\uff50\u015a\uff50\001\002\000\112\007\uff56\011" +
    "\uff56\012\uff56\016\uff56\032\uff56\044\uff56\062\uff56\074\uff56" +
    "\112\uff56\113\uff56\117\uff56\120\uff56\126\uff56\130\uff56\133" +
    "\uff56\134\uff56\135\uff56\140\uff56\141\uff56\150\uff56\164\uff56" +
    "\165\uff56\214\uff56\267\uff56\271\uff56\327\uff56\u0141\uff56\u0147" +
    "\uff56\u014b\uff56\u014c\uff56\u014d\uff56\u014e\uff56\u0150\uff56\u0154\uff56" +
    "\u0155\uff56\u015a\uff56\001\002\000\004\u0141\u0196\001\002\000" +
    "\074\007\ufea7\016\ufea7\044\ufea7\074\ufea7\113\ufea7\117\ufea7" +
    "\120\ufea7\126\ufea7\130\ufea7\134\ufea7\135\ufea7\140\ufea7\141" +
    "\ufea7\150\ufea7\164\ufea7\165\ufea7\214\ufea7\267\ufea7\271\ufea7" +
    "\327\ufea7\u0147\ufea7\u014b\ufea7\u014c\ufea7\u014d\ufea7\u014e\ufea7\u0150" +
    "\ufea7\u0154\ufea7\u0155\ufea7\u015a\ufea7\001\002\000\100\024\200" +
    "\042\203\050\236\140\217\150\343\214\244\231\250\323" +
    "\231\341\171\345\174\360\172\376\173\u0100\240\u0105\243" +
    "\u010d\201\u0110\246\u0111\215\u0112\214\u0116\247\u0118\211\u0119" +
    "\177\u0120\233\u0123\245\u0137\216\u013c\242\u013d\225\u013f\351" +
    "\u0141\u0163\u0144\u0166\u0159\353\u015d\u015e\001\002\000\074\007" +
    "\ufea5\016\ufea5\044\ufea5\074\ufea5\113\ufea5\117\ufea5\120\ufea5" +
    "\126\ufea5\130\ufea5\134\ufea5\135\ufea5\140\ufea5\141\ufea5\150" +
    "\ufea5\164\ufea5\165\ufea5\214\ufea5\267\ufea5\271\ufea5\327\ufea5" +
    "\u0147\ufea5\u014b\ufea5\u014c\ufea5\u014d\ufea5\u014e\ufea5\u0150\ufea5\u0154" +
    "\ufea5\u0155\ufea5\u015a\ufea5\001\002\000\074\007\ufea4\016\ufea4" +
    "\044\ufea4\074\ufea4\113\ufea4\117\ufea4\120\ufea4\126\ufea4\130" +
    "\ufea4\134\ufea4\135\ufea4\140\ufea4\141\ufea4\150\ufea4\164\ufea4" +
    "\165\ufea4\214\ufea4\267\ufea4\271\ufea4\327\ufea4\u0147\ufea4\u014b" +
    "\ufea4\u014c\ufea4\u014d\ufea4\u014e\ufea4\u0150\ufea4\u0154\ufea4\u0155\ufea4" +
    "\u015a\ufea4\001\002\000\074\007\ufeaa\016\ufeaa\044\ufeaa\074" +
    "\ufeaa\113\ufeaa\117\ufeaa\120\ufeaa\126\ufeaa\130\ufeaa\134\ufeaa" +
    "\135\ufeaa\140\ufeaa\141\ufeaa\150\ufeaa\164\ufeaa\165\ufeaa\214" +
    "\ufeaa\267\ufeaa\271\ufeaa\327\ufeaa\u0147\ufeaa\u014b\ufeaa\u014c\ufeaa" +
    "\u014d\ufeaa\u014e\ufeaa\u0150\ufeaa\u0154\ufeaa\u0155\ufeaa\u015a\ufeaa\001" +
    "\002\000\074\007\ufeab\016\ufeab\044\ufeab\074\ufeab\113\ufeab" +
    "\117\ufeab\120\ufeab\126\ufeab\130\ufeab\134\ufeab\135\ufeab\140" +
    "\ufeab\141\ufeab\150\ufeab\164\ufeab\165\ufeab\214\ufeab\267\ufeab" +
    "\271\ufeab\327\ufeab\u0147\ufeab\u014b\ufeab\u014c\ufeab\u014d\ufeab\u014e" +
    "\ufeab\u0150\ufeab\u0154\ufeab\u0155\ufeab\u015a\ufeab\001\002\000\074" +
    "\007\ufea9\016\ufea9\044\ufea9\074\ufea9\113\ufea9\117\ufea9\120" +
    "\ufea9\126\ufea9\130\ufea9\134\ufea9\135\ufea9\140\ufea9\141\ufea9" +
    "\150\ufea9\164\ufea9\165\ufea9\214\ufea9\267\ufea9\271\ufea9\327" +
    "\ufea9\u0147\ufea9\u014b\ufea9\u014c\ufea9\u014d\ufea9\u014e\ufea9\u0150\ufea9" +
    "\u0154\ufea9\u0155\ufea9\u015a\ufea9\001\002\000\074\007\ufea8\016" +
    "\ufea8\044\ufea8\074\ufea8\113\ufea8\117\ufea8\120\ufea8\126\ufea8" +
    "\130\ufea8\134\ufea8\135\ufea8\140\ufea8\141\ufea8\150\ufea8\164" +
    "\ufea8\165\ufea8\214\ufea8\267\ufea8\271\ufea8\327\ufea8\u0147\ufea8" +
    "\u014b\ufea8\u014c\ufea8\u014d\ufea8\u014e\ufea8\u0150\ufea8\u0154\ufea8\u0155" +
    "\ufea8\u015a\ufea8\001\002\000\100\007\ufea3\012\u0190\016\ufea3" +
    "\044\ufea3\062\u0191\074\ufea3\113\ufea3\117\ufea3\120\ufea3\126" +
    "\ufea3\130\ufea3\134\ufea3\135\ufea3\140\ufea3\141\ufea3\150\ufea3" +
    "\164\ufea3\165\ufea3\214\ufea3\267\ufea3\271\ufea3\327\ufea3\u0147" +
    "\ufea3\u014b\ufea3\u014c\ufea3\u014d\ufea3\u014e\ufea3\u0150\ufea3\u0154\ufea3" +
    "\u0155\ufea3\u015a\ufea3\001\002\000\074\007\ufea6\016\ufea6\044" +
    "\ufea6\074\ufea6\113\ufea6\117\ufea6\120\ufea6\126\ufea6\130\ufea6" +
    "\134\ufea6\135\ufea6\140\ufea6\141\ufea6\150\ufea6\164\ufea6\165" +
    "\ufea6\214\ufea6\267\ufea6\271\ufea6\327\ufea6\u0147\ufea6\u014b\ufea6" +
    "\u014c\ufea6\u014d\ufea6\u014e\ufea6\u0150\ufea6\u0154\ufea6\u0155\ufea6\u015a" +
    "\ufea6\001\002\000\106\007\uff62\012\uff62\016\uff62\032\uff62" +
    "\044\uff62\062\uff62\074\uff62\112\uff62\113\uff62\117\uff62\120" +
    "\uff62\126\uff62\130\uff62\133\uff62\134\uff62\135\uff62\140\uff62" +
    "\141\uff62\150\uff62\164\uff62\165\uff62\214\uff62\267\uff62\271" +
    "\uff62\327\uff62\u0147\uff62\u014b\uff62\u014c\uff62\u014d\uff62\u014e\uff62" +
    "\u0150\uff62\u0154\uff62\u0155\uff62\u015a\uff62\001\002\000\124\007" +
    "\uffe0\011\uffe0\012\uffe0\016\uffe0\032\uffe0\044\uffe0\062\uffe0" +
    "\074\uffe0\112\uffe0\113\uffe0\117\uffe0\120\uffe0\126\uffe0\130" +
    "\uffe0\133\uffe0\134\uffe0\135\uffe0\140\uffe0\141\uffe0\150\uffe0" +
    "\164\uffe0\165\uffe0\214\uffe0\267\uffe0\271\uffe0\327\uffe0\u0141" +
    "\uffe0\u0142\uffe0\u0143\uffe0\u0144\uffe0\u0145\uffe0\u0146\uffe0\u0147\uffe0" +
    "\u014b\uffe0\u014c\u019a\u014d\uffe0\u014e\uffe0\u0150\uffe0\u0154\uffe0\u0155" +
    "\uffe0\u015a\uffe0\001\002\000\076\024\200\042\203\050\236" +
    "\140\217\150\343\214\244\231\250\323\231\341\171\345" +
    "\174\360\172\376\173\u0100\240\u0105\243\u010d\201\u0110\246" +
    "\u0111\215\u0112\214\u0116\247\u0118\211\u0119\177\u0120\233\u0123" +
    "\245\u0137\216\u013c\242\u013d\225\u013f\351\u0141\u0163\u0159\353" +
    "\u015d\204\001\002\000\106\007\uff60\012\uff60\016\uff60\032" +
    "\uff60\044\uff60\062\uff60\074\uff60\112\uff60\113\uff60\117\uff60" +
    "\120\uff60\126\uff60\130\uff60\133\uff60\134\uff60\135\uff60\140" +
    "\uff60\141\uff60\150\uff60\164\uff60\165\uff60\214\uff60\267\uff60" +
    "\271\uff60\327\uff60\u0147\uff60\u014b\uff60\u014c\uff60\u014d\uff60\u014e" +
    "\uff60\u0150\uff60\u0154\uff60\u0155\uff60\u015a\uff60\001\002\000\104" +
    "\024\200\042\203\050\236\140\217\152\237\214\244\230" +
    "\221\231\250\236\220\323\231\341\171\345\174\360\172" +
    "\376\173\u0100\240\u0105\243\u010d\201\u0110\246\u0111\215\u0112" +
    "\214\u0116\247\u0118\211\u0119\177\u0120\233\u0122\213\u0123\245" +
    "\u0137\216\u013c\242\u013d\225\u013f\223\u0141\072\u0159\275\u015d" +
    "\204\001\002\000\104\024\200\042\203\050\236\140\217" +
    "\152\237\214\244\230\221\231\250\236\220\323\231\341" +
    "\171\345\174\360\172\376\173\u0100\240\u0105\243\u010d\201" +
    "\u0110\246\u0111\215\u0112\214\u0116\247\u0118\211\u0119\177\u0120" +
    "\233\u0122\213\u0123\245\u0137\216\u013c\242\u013d\225\u013f\223" +
    "\u0141\072\u0159\275\u015d\204\001\002\000\044\007\uffcf\044" +
    "\uffcf\113\uffcf\117\uffcf\120\uffcf\130\uffcf\135\uffcf\140\uffcf" +
    "\164\uffcf\165\uffcf\214\uffcf\267\uffcf\271\uffcf\327\uffcf\u0154" +
    "\uffcf\u0155\uffcf\u015a\uffcf\001\002\000\104\024\200\042\203" +
    "\050\236\140\217\152\237\214\244\230\221\231\250\236" +
    "\220\323\231\341\171\345\174\360\172\376\173\u0100\240" +
    "\u0105\243\u010d\201\u0110\246\u0111\215\u0112\214\u0116\247\u0118" +
    "\211\u0119\177\u0120\233\u0122\213\u0123\245\u0137\216\u013c\242" +
    "\u013d\225\u013f\223\u0141\072\u0159\275\u015d\204\001\002\000" +
    "\010\016\u01ac\126\u01ab\141\u01aa\001\002\000\104\024\200" +
    "\042\203\050\236\140\217\152\237\214\244\230\221\231" +
    "\250\236\220\323\231\341\171\345\174\360\172\376\173" +
    "\u0100\240\u0105\243\u010d\201\u0110\246\u0111\215\u0112\214\u0116" +
    "\247\u0118\211\u0119\177\u0120\233\u0122\213\u0123\245\u0137\216" +
    "\u013c\242\u013d\225\u013f\223\u0141\072\u0159\275\u015d\204\001" +
    "\002\000\006\150\u01a3\151\uffb9\001\002\000\004\151\uffba" +
    "\001\002\000\004\151\u01a5\001\002\000\044\007\uffbf\044" +
    "\uffbf\113\uffbf\117\uffbf\120\uffbf\130\uffbf\135\uffbf\140\uffbf" +
    "\164\uffbf\165\uffbf\214\uffbf\267\uffbf\271\uffbf\327\uffbf\u0154" +
    "\uffbf\u0155\uffbf\u015a\uffbf\001\002\000\046\007\uffb5\044\uffb5" +
    "\074\u01a8\113\uffb5\117\uffb5\120\uffb5\130\uffb5\135\uffb5\140" +
    "\uffb5\164\uffb5\165\uffb5\214\uffb5\267\uffb5\271\uffb5\327\uffb5" +
    "\u0154\uffb5\u0155\uffb5\u015a\uffb5\001\002\000\044\007\uffc1\044" +
    "\uffc1\113\uffc1\117\uffc1\120\uffc1\130\uffc1\135\uffc1\140\uffc1" +
    "\164\uffc1\165\uffc1\214\uffc1\267\uffc1\271\uffc1\327\uffc1\u0154" +
    "\uffc1\u0155\uffc1\u015a\uffc1\001\002\000\004\u013f\u01a9\001\002" +
    "\000\044\007\uffb6\044\uffb6\113\uffb6\117\uffb6\120\uffb6\130" +
    "\uffb6\135\uffb6\140\uffb6\164\uffb6\165\uffb6\214\uffb6\267\uffb6" +
    "\271\uffb6\327\uffb6\u0154\uffb6\u0155\uffb6\u015a\uffb6\001\002\000" +
    "\104\024\200\042\203\050\236\140\217\152\237\214\244" +
    "\230\221\231\250\236\220\323\231\341\171\345\174\360" +
    "\172\376\173\u0100\240\u0105\243\u010d\201\u0110\246\u0111\215" +
    "\u0112\214\u0116\247\u0118\211\u0119\177\u0120\233\u0122\213\u0123" +
    "\245\u0137\216\u013c\242\u013d\225\u013f\223\u0141\072\u0159\275" +
    "\u015d\204\001\002\000\104\024\200\042\203\050\236\140" +
    "\217\152\237\214\244\230\221\231\250\236\220\323\231" +
    "\341\171\345\174\360\172\376\173\u0100\240\u0105\243\u010d" +
    "\201\u0110\246\u0111\215\u0112\214\u0116\247\u0118\211\u0119\177" +
    "\u0120\233\u0122\213\u0123\245\u0137\216\u013c\242\u013d\225\u013f" +
    "\223\u0141\072\u0159\275\u015d\204\001\002\000\104\024\200" +
    "\042\203\050\236\140\217\152\237\214\244\230\221\231" +
    "\250\236\220\323\231\341\171\345\174\360\172\376\173" +
    "\u0100\240\u0105\243\u010d\201\u0110\246\u0111\215\u0112\214\u0116" +
    "\247\u0118\211\u0119\177\u0120\233\u0122\213\u0123\245\u0137\216" +
    "\u013c\242\u013d\225\u013f\223\u0141\072\u0159\275\u015d\204\001" +
    "\002\000\044\007\uffc2\044\uffc2\113\uffc2\117\uffc2\120\uffc2" +
    "\130\uffc2\135\uffc2\140\uffc2\164\uffc2\165\uffc2\214\uffc2\267" +
    "\uffc2\271\uffc2\327\uffc2\u0154\uffc2\u0155\uffc2\u015a\uffc2\001\002" +
    "\000\004\007\u01af\001\002\000\104\024\200\042\203\050" +
    "\236\140\217\152\237\214\244\230\221\231\250\236\220" +
    "\323\231\341\171\345\174\360\172\376\173\u0100\240\u0105" +
    "\243\u010d\201\u0110\246\u0111\215\u0112\214\u0116\247\u0118\211" +
    "\u0119\177\u0120\233\u0122\213\u0123\245\u0137\216\u013c\242\u013d" +
    "\225\u013f\223\u0141\072\u0159\275\u015d\204\001\002\000\044" +
    "\007\uffbc\044\uffbc\113\uffbc\117\uffbc\120\uffbc\130\uffbc\135" +
    "\uffbc\140\uffbc\164\uffbc\165\uffbc\214\uffbc\267\uffbc\271\uffbc" +
    "\327\uffbc\u0154\uffbc\u0155\uffbc\u015a\uffbc\001\002\000\044\007" +
    "\uffb7\044\uffb7\113\uffb7\117\uffb7\120\uffb7\130\uffb7\135\uffb7" +
    "\140\uffb7\164\uffb7\165\uffb7\214\uffb7\267\uffb7\271\uffb7\327" +
    "\uffb7\u0154\uffb7\u0155\u01b2\u015a\uffb7\001\002\000\104\024\200" +
    "\042\203\050\236\140\217\152\237\214\244\230\221\231" +
    "\250\236\220\323\231\341\171\345\174\360\172\376\173" +
    "\u0100\240\u0105\243\u010d\201\u0110\246\u0111\215\u0112\214\u0116" +
    "\247\u0118\211\u0119\177\u0120\233\u0122\213\u0123\245\u0137\216" +
    "\u013c\242\u013d\225\u013f\223\u0141\072\u0159\275\u015d\204\001" +
    "\002\000\044\007\uffbb\044\uffbb\113\uffbb\117\uffbb\120\uffbb" +
    "\130\uffbb\135\uffbb\140\uffbb\164\uffbb\165\uffbb\214\uffbb\267" +
    "\uffbb\271\uffbb\327\uffbb\u0154\uffbb\u0155\uffbb\u015a\uffbb\001\002" +
    "\000\044\007\uffb7\044\uffb7\113\uffb7\117\uffb7\120\uffb7\130" +
    "\uffb7\135\uffb7\140\uffb7\164\uffb7\165\uffb7\214\uffb7\267\uffb7" +
    "\271\uffb7\327\uffb7\u0154\uffb7\u0155\u01b2\u015a\uffb7\001\002\000" +
    "\044\007\uffb8\044\uffb8\113\uffb8\117\uffb8\120\uffb8\130\uffb8" +
    "\135\uffb8\140\uffb8\164\uffb8\165\uffb8\214\uffb8\267\uffb8\271" +
    "\uffb8\327\uffb8\u0154\uffb8\u0155\uffb8\u015a\uffb8\001\002\000\046" +
    "\007\uffb5\044\uffb5\074\u01a8\113\uffb5\117\uffb5\120\uffb5\130" +
    "\uffb5\135\uffb5\140\uffb5\164\uffb5\165\uffb5\214\uffb5\267\uffb5" +
    "\271\uffb5\327\uffb5\u0154\uffb5\u0155\uffb5\u015a\uffb5\001\002\000" +
    "\044\007\uffbd\044\uffbd\113\uffbd\117\uffbd\120\uffbd\130\uffbd" +
    "\135\uffbd\140\uffbd\164\uffbd\165\uffbd\214\uffbd\267\uffbd\271" +
    "\uffbd\327\uffbd\u0154\uffbd\u0155\uffbd\u015a\uffbd\001\002\000\004" +
    "\007\u01b9\001\002\000\104\024\200\042\203\050\236\140" +
    "\217\152\237\214\244\230\221\231\250\236\220\323\231" +
    "\341\171\345\174\360\172\376\173\u0100\240\u0105\243\u010d" +
    "\201\u0110\246\u0111\215\u0112\214\u0116\247\u0118\211\u0119\177" +
    "\u0120\233\u0122\213\u0123\245\u0137\216\u013c\242\u013d\225\u013f" +
    "\223\u0141\072\u0159\275\u015d\204\001\002\000\044\007\uffc0" +
    "\044\uffc0\113\uffc0\117\uffc0\120\uffc0\130\uffc0\135\uffc0\140" +
    "\uffc0\164\uffc0\165\uffc0\214\uffc0\267\uffc0\271\uffc0\327\uffc0" +
    "\u0154\uffc0\u0155\uffc0\u015a\uffc0\001\002\000\044\007\uffb7\044" +
    "\uffb7\113\uffb7\117\uffb7\120\uffb7\130\uffb7\135\uffb7\140\uffb7" +
    "\164\uffb7\165\uffb7\214\uffb7\267\uffb7\271\uffb7\327\uffb7\u0154" +
    "\uffb7\u0155\u01b2\u015a\uffb7\001\002\000\044\007\uffbe\044\uffbe" +
    "\113\uffbe\117\uffbe\120\uffbe\130\uffbe\135\uffbe\140\uffbe\164" +
    "\uffbe\165\uffbe\214\uffbe\267\uffbe\271\uffbe\327\uffbe\u0154\uffbe" +
    "\u0155\uffbe\u015a\uffbe\001\002\000\044\007\uffc3\044\uffc3\113" +
    "\uffc3\117\uffc3\120\uffc3\130\uffc3\135\uffc3\140\uffc3\164\uffc3" +
    "\165\uffc3\214\uffc3\267\uffc3\271\uffc3\327\uffc3\u0154\uffc3\u0155" +
    "\uffc3\u015a\uffc3\001\002\000\010\u013f\311\u0141\307\u015d\310" +
    "\001\002\000\006\112\u01c0\u015a\uff23\001\002\000\010\u013f" +
    "\311\u0141\307\u015d\310\001\002\000\004\u015a\u01c2\001\002" +
    "\000\112\007\uff2c\011\uff2c\012\uff2c\016\uff2c\032\uff2c\044" +
    "\uff2c\062\uff2c\074\uff2c\112\uff2c\113\uff2c\117\uff2c\120\uff2c" +
    "\126\uff2c\130\uff2c\133\uff2c\134\uff2c\135\uff2c\140\uff2c\141" +
    "\uff2c\150\uff2c\164\uff2c\165\uff2c\214\uff2c\267\uff2c\271\uff2c" +
    "\327\uff2c\u0141\uff2c\u0147\uff2c\u014b\uff2c\u014c\uff2c\u014d\uff2c\u014e" +
    "\uff2c\u0150\uff2c\u0154\uff2c\u0155\uff2c\u015a\uff2c\001\002\000\004" +
    "\u015a\uff24\001\002\000\042\007\uffab\044\uffab\113\uffab\117" +
    "\uffab\120\uffab\130\uffab\135\uffab\140\uffab\165\uffab\214\uffab" +
    "\267\uffab\271\uffab\327\uffab\u0154\uffab\u0155\uffab\u015a\uffab\001" +
    "\002\000\006\u0141\072\u0144\u0130\001\002\000\004\u0155\u01c7" +
    "\001\002\000\006\u013f\u01c8\u015d\u01c9\001\002\000\004\u015a" +
    "\uffb1\001\002\000\004\u0141\u01cc\001\002\000\004\u015a\u01cb" +
    "\001\002\000\044\007\uffcd\044\uffcd\113\uffcd\117\uffcd\120" +
    "\uffcd\130\uffcd\135\uffcd\140\uffcd\164\uffcd\165\uffcd\214\uffcd" +
    "\267\uffcd\271\uffcd\327\uffcd\u0154\uffcd\u0155\uffcd\u015a\uffcd\001" +
    "\002\000\004\u015a\uffb0\001\002\000\150\007\uffe0\011\uffe0" +
    "\012\uffe0\016\uffe0\032\uffe0\044\uffe0\057\uffe0\062\uffe0\071" +
    "\uffe0\072\uffe0\074\uffe0\112\uffe0\113\uffe0\117\uffe0\120\uffe0" +
    "\126\uffe0\130\uffe0\133\uffe0\134\uffe0\135\uffe0\140\uffe0\141" +
    "\uffe0\150\uffe0\164\uffe0\165\uffe0\170\uffe0\214\uffe0\224\uffe0" +
    "\242\uffe0\262\uffe0\266\uffe0\267\uffe0\271\uffe0\327\uffe0\333" +
    "\uffe0\u0138\uffe0\u0141\uffe0\u0142\uffe0\u0143\uffe0\u0144\uffe0\u0145\uffe0" +
    "\u0146\uffe0\u0147\uffe0\u014b\uffe0\u014c\uffe0\u014d\uffe0\u014e\uffe0\u0150" +
    "\uffe0\u0154\uffe0\u0155\uffe0\u015a\uffe0\001\002\000\036\312\u01de" +
    "\322\u01db\330\u01d6\345\u01df\356\u01d9\361\u01cf\364\u01d1\u0107" +
    "\u01d3\u0113\u01d2\u011d\u01d0\u0120\u01d4\u012d\u01d5\u012e\u01d7\u0141\u01da" +
    "\001\002\000\106\011\ufe91\015\ufe91\025\ufe91\032\ufe91\036" +
    "\ufe91\057\ufe91\106\ufe91\107\ufe91\122\ufe91\150\ufe91\151\ufe91" +
    "\174\ufe91\205\ufe91\217\ufe91\254\ufe91\263\ufe91\271\ufe91\323" +
    "\ufe91\327\ufe91\u0100\ufe91\u0105\ufe91\u0110\ufe91\u0111\ufe91\u0138\ufe91" +
    "\u013c\ufe91\u013d\ufe91\u013f\ufe91\u0141\ufe91\u014c\ufe91\u0154\ufe91\u0155" +
    "\ufe91\u0159\u01e0\u015a\ufe91\u015d\ufe91\001\002\000\106\011\ufe91" +
    "\015\ufe91\025\ufe91\032\ufe91\036\ufe91\057\ufe91\106\ufe91\107" +
    "\ufe91\122\ufe91\150\ufe91\151\ufe91\174\ufe91\205\ufe91\217\ufe91" +
    "\254\ufe91\263\ufe91\271\ufe91\323\ufe91\327\ufe91\u0100\ufe91\u0105" +
    "\ufe91\u0110\ufe91\u0111\ufe91\u0138\ufe91\u013c\ufe91\u013d\ufe91\u013f\ufe91" +
    "\u0141\ufe91\u014c\ufe91\u0154\ufe91\u0155\ufe91\u0159\u01e0\u015a\ufe91\u015d" +
    "\ufe91\001\002\000\106\011\ufe91\015\ufe91\025\ufe91\032\ufe91" +
    "\036\ufe91\057\ufe91\106\ufe91\107\ufe91\122\ufe91\150\ufe91\151" +
    "\ufe91\174\ufe91\205\ufe91\217\ufe91\254\ufe91\263\ufe91\271\ufe91" +
    "\323\ufe91\327\ufe91\u0100\ufe91\u0105\ufe91\u0110\ufe91\u0111\ufe91\u0138" +
    "\ufe91\u013c\ufe91\u013d\ufe91\u013f\ufe91\u0141\ufe91\u014c\ufe91\u0154\ufe91" +
    "\u0155\ufe91\u0159\u01e0\u015a\ufe91\u015d\ufe91\001\002\000\106\011" +
    "\ufe91\015\ufe91\025\ufe91\032\ufe91\036\ufe91\057\ufe91\106\ufe91" +
    "\107\ufe91\122\ufe91\150\ufe91\151\ufe91\174\ufe91\205\ufe91\217" +
    "\ufe91\254\ufe91\263\ufe91\271\ufe91\323\ufe91\327\ufe91\u0100\ufe91" +
    "\u0105\ufe91\u0110\ufe91\u0111\ufe91\u0138\ufe91\u013c\ufe91\u013d\ufe91\u013f" +
    "\ufe91\u0141\ufe91\u014c\ufe91\u0154\ufe91\u0155\ufe91\u0159\u01e0\u015a\ufe91" +
    "\u015d\ufe91\001\002\000\106\011\ufe91\015\ufe91\025\ufe91\032" +
    "\ufe91\036\ufe91\057\ufe91\106\ufe91\107\ufe91\122\ufe91\150\ufe91" +
    "\151\ufe91\174\ufe91\205\ufe91\217\ufe91\254\ufe91\263\ufe91\271" +
    "\ufe91\323\ufe91\327\ufe91\u0100\ufe91\u0105\ufe91\u0110\ufe91\u0111\ufe91" +
    "\u0138\ufe91\u013c\ufe91\u013d\ufe91\u013f\ufe91\u0141\ufe91\u014c\ufe91\u0154" +
    "\ufe91\u0155\ufe91\u0159\u01e0\u015a\ufe91\u015d\ufe91\001\002\000\106" +
    "\011\ufe91\015\ufe91\025\ufe91\032\ufe91\036\ufe91\057\ufe91\106" +
    "\ufe91\107\ufe91\122\ufe91\150\ufe91\151\ufe91\174\ufe91\205\ufe91" +
    "\217\ufe91\254\ufe91\263\ufe91\271\ufe91\323\ufe91\327\ufe91\u0100" +
    "\ufe91\u0105\ufe91\u0110\ufe91\u0111\ufe91\u0138\ufe91\u013c\ufe91\u013d\ufe91" +
    "\u013f\ufe91\u0141\ufe91\u014c\ufe91\u0154\ufe91\u0155\ufe91\u0159\u01e0\u015a" +
    "\ufe91\u015d\ufe91\001\002\000\106\011\ufe91\015\ufe91\025\ufe91" +
    "\032\ufe91\036\ufe91\057\ufe91\106\ufe91\107\ufe91\122\ufe91\150" +
    "\ufe91\151\ufe91\174\ufe91\205\ufe91\217\ufe91\254\ufe91\263\ufe91" +
    "\271\ufe91\323\ufe91\327\ufe91\u0100\ufe91\u0105\ufe91\u0110\ufe91\u0111" +
    "\ufe91\u0138\ufe91\u013c\ufe91\u013d\ufe91\u013f\ufe91\u0141\ufe91\u014c\ufe91" +
    "\u0154\ufe91\u0155\ufe91\u0159\u01e0\u015a\ufe91\u015d\ufe91\001\002\000" +
    "\106\011\ufe91\015\ufe91\025\ufe91\032\ufe91\036\ufe91\057\ufe91" +
    "\106\ufe91\107\ufe91\122\ufe91\150\ufe91\151\ufe91\174\ufe91\205" +
    "\ufe91\217\ufe91\254\ufe91\263\ufe91\271\ufe91\323\ufe91\327\ufe91" +
    "\u0100\ufe91\u0105\ufe91\u0110\ufe91\u0111\ufe91\u0138\ufe91\u013c\ufe91\u013d" +
    "\ufe91\u013f\ufe91\u0141\ufe91\u014c\ufe91\u0154\ufe91\u0155\ufe91\u0159\u01e0" +
    "\u015a\ufe91\u015d\ufe91\001\002\000\106\011\ufe91\015\ufe91\025" +
    "\ufe91\032\ufe91\036\ufe91\057\ufe91\106\ufe91\107\ufe91\122\ufe91" +
    "\150\ufe91\151\ufe91\174\ufe91\205\ufe91\217\ufe91\254\ufe91\263" +
    "\ufe91\271\ufe91\323\ufe91\327\ufe91\u0100\ufe91\u0105\ufe91\u0110\ufe91" +
    "\u0111\ufe91\u0138\ufe91\u013c\ufe91\u013d\ufe91\u013f\ufe91\u0141\ufe91\u014c" +
    "\ufe91\u0154\ufe91\u0155\ufe91\u0159\u01e0\u015a\ufe91\u015d\ufe91\001\002" +
    "\000\112\007\uff42\011\uff42\012\uff42\016\uff42\032\uff42\044" +
    "\uff42\062\uff42\074\uff42\112\uff42\113\uff42\117\uff42\120\uff42" +
    "\126\uff42\130\uff42\133\uff42\134\uff42\135\uff42\140\uff42\141" +
    "\uff42\150\uff42\164\uff42\165\uff42\214\uff42\267\uff42\271\uff42" +
    "\327\uff42\u0141\uff42\u0147\uff42\u014b\uff42\u014c\uff42\u014d\uff42\u014e" +
    "\uff42\u0150\uff42\u0154\uff42\u0155\uff42\u015a\uff42\001\002\000\106" +
    "\011\ufe91\015\ufe91\025\ufe91\032\ufe91\036\ufe91\057\ufe91\106" +
    "\ufe91\107\ufe91\122\ufe91\150\ufe91\151\ufe91\174\ufe91\205\ufe91" +
    "\217\ufe91\254\ufe91\263\ufe91\271\ufe91\323\ufe91\327\ufe91\u0100" +
    "\ufe91\u0105\ufe91\u0110\ufe91\u0111\ufe91\u0138\ufe91\u013c\ufe91\u013d\ufe91" +
    "\u013f\ufe91\u0141\ufe91\u014c\ufe91\u0154\ufe91\u0155\ufe91\u0159\u01e0\u015a" +
    "\ufe91\u015d\ufe91\001\002\000\004\u0156\u01f4\001\002\000\106" +
    "\011\ufe91\015\ufe91\025\ufe91\032\ufe91\036\ufe91\057\ufe91\106" +
    "\ufe91\107\ufe91\122\ufe91\150\ufe91\151\ufe91\174\ufe91\205\ufe91" +
    "\217\ufe91\254\ufe91\263\ufe91\271\ufe91\323\ufe91\327\ufe91\u0100" +
    "\ufe91\u0105\ufe91\u0110\ufe91\u0111\ufe91\u0138\ufe91\u013c\ufe91\u013d\ufe91" +
    "\u013f\ufe91\u0141\ufe91\u014c\ufe91\u0154\ufe91\u0155\ufe91\u0159\u01e0\u015a" +
    "\ufe91\u015d\ufe91\001\002\000\032\150\uff3e\323\uff3e\u0100\uff3e" +
    "\u0105\uff3e\u0110\uff3e\u0111\uff3e\u013c\uff3e\u013d\uff3e\u013f\uff3e\u0141" +
    "\uff3e\u0159\u01ea\u015d\uff3e\001\002\000\106\011\ufea1\015\ufea1" +
    "\025\ufea1\032\ufea1\036\ufea1\057\ufea1\106\ufea1\107\ufea1\122" +
    "\ufea1\150\ufea1\151\ufea1\174\ufea1\205\ufea1\217\ufea1\254\ufea1" +
    "\263\ufea1\271\ufea1\323\ufea1\327\ufea1\u0100\ufea1\u0105\ufea1\u0110" +
    "\ufea1\u0111\ufea1\u0138\ufea1\u013c\ufea1\u013d\ufea1\u013f\ufea1\u0141\ufea1" +
    "\u014c\ufea1\u0154\ufea1\u0155\ufea1\u0159\ufea1\u015a\ufea1\u015d\ufea1\001" +
    "\002\000\106\011\ufe91\015\ufe91\025\ufe91\032\ufe91\036\ufe91" +
    "\057\ufe91\106\ufe91\107\ufe91\122\ufe91\150\ufe91\151\ufe91\174" +
    "\ufe91\205\ufe91\217\ufe91\254\ufe91\263\ufe91\271\ufe91\323\ufe91" +
    "\327\ufe91\u0100\ufe91\u0105\ufe91\u0110\ufe91\u0111\ufe91\u0138\ufe91\u013c" +
    "\ufe91\u013d\ufe91\u013f\ufe91\u0141\ufe91\u014c\ufe91\u0154\ufe91\u0155\ufe91" +
    "\u0159\u01e0\u015a\ufe91\u015d\ufe91\001\002\000\106\011\ufe91\015" +
    "\ufe91\025\ufe91\032\ufe91\036\ufe91\057\ufe91\106\ufe91\107\ufe91" +
    "\122\ufe91\150\ufe91\151\ufe91\174\ufe91\205\ufe91\217\ufe91\254" +
    "\ufe91\263\ufe91\271\ufe91\323\ufe91\327\ufe91\u0100\ufe91\u0105\ufe91" +
    "\u0110\ufe91\u0111\ufe91\u0138\ufe91\u013c\ufe91\u013d\ufe91\u013f\ufe91\u0141" +
    "\ufe91\u014c\ufe91\u0154\ufe91\u0155\ufe91\u0159\u01e0\u015a\ufe91\u015d\ufe91" +
    "\001\002\000\004\u013c\u01e2\001\002\000\106\011\ufe94\015" +
    "\ufe94\025\ufe94\032\ufe94\036\ufe94\057\ufe94\106\ufe94\107\ufe94" +
    "\122\ufe94\150\ufe94\151\ufe94\174\ufe94\205\ufe94\217\ufe94\254" +
    "\ufe94\263\ufe94\271\ufe94\323\ufe94\327\ufe94\u0100\ufe94\u0105\ufe94" +
    "\u0110\ufe94\u0111\ufe94\u0138\ufe94\u013c\ufe94\u013d\ufe94\u013f\ufe94\u0141" +
    "\ufe94\u014c\ufe94\u0154\ufe94\u0155\ufe94\u0159\ufe94\u015a\ufe94\u015d\ufe94" +
    "\001\002\000\006\u0155\u01e3\u015a\u01e5\001\002\000\004\u013c" +
    "\u01e6\001\002\000\106\011\ufe92\015\ufe92\025\ufe92\032\ufe92" +
    "\036\ufe92\057\ufe92\106\ufe92\107\ufe92\122\ufe92\150\ufe92\151" +
    "\ufe92\174\ufe92\205\ufe92\217\ufe92\254\ufe92\263\ufe92\271\ufe92" +
    "\323\ufe92\327\ufe92\u0100\ufe92\u0105\ufe92\u0110\ufe92\u0111\ufe92\u0138" +
    "\ufe92\u013c\ufe92\u013d\ufe92\u013f\ufe92\u0141\ufe92\u014c\ufe92\u0154\ufe92" +
    "\u0155\ufe92\u0159\ufe92\u015a\ufe92\u015d\ufe92\001\002\000\106\011" +
    "\ufe8f\015\ufe8f\025\ufe8f\032\ufe8f\036\ufe8f\057\ufe8f\106\ufe8f" +
    "\107\ufe8f\122\ufe8f\150\ufe8f\151\ufe8f\174\ufe8f\205\ufe8f\217" +
    "\ufe8f\254\ufe8f\263\ufe8f\271\ufe8f\323\ufe8f\327\ufe8f\u0100\ufe8f" +
    "\u0105\ufe8f\u0110\ufe8f\u0111\ufe8f\u0138\ufe8f\u013c\ufe8f\u013d\ufe8f\u013f" +
    "\ufe8f\u0141\ufe8f\u014c\ufe8f\u0154\ufe8f\u0155\ufe8f\u0159\ufe8f\u015a\ufe8f" +
    "\u015d\ufe8f\001\002\000\004\u015a\u01e7\001\002\000\106\011" +
    "\ufe90\015\ufe90\025\ufe90\032\ufe90\036\ufe90\057\ufe90\106\ufe90" +
    "\107\ufe90\122\ufe90\150\ufe90\151\ufe90\174\ufe90\205\ufe90\217" +
    "\ufe90\254\ufe90\263\ufe90\271\ufe90\323\ufe90\327\ufe90\u0100\ufe90" +
    "\u0105\ufe90\u0110\ufe90\u0111\ufe90\u0138\ufe90\u013c\ufe90\u013d\ufe90\u013f" +
    "\ufe90\u0141\ufe90\u014c\ufe90\u0154\ufe90\u0155\ufe90\u0159\ufe90\u015a\ufe90" +
    "\u015d\ufe90\001\002\000\106\011\ufe9c\015\ufe9c\025\ufe9c\032" +
    "\ufe9c\036\ufe9c\057\ufe9c\106\ufe9c\107\ufe9c\122\ufe9c\150\ufe9c" +
    "\151\ufe9c\174\ufe9c\205\ufe9c\217\ufe9c\254\ufe9c\263\ufe9c\271" +
    "\ufe9c\323\ufe9c\327\ufe9c\u0100\ufe9c\u0105\ufe9c\u0110\ufe9c\u0111\ufe9c" +
    "\u0138\ufe9c\u013c\ufe9c\u013d\ufe9c\u013f\ufe9c\u0141\ufe9c\u014c\ufe9c\u0154" +
    "\ufe9c\u0155\ufe9c\u0159\ufe9c\u015a\ufe9c\u015d\ufe9c\001\002\000\032" +
    "\150\343\323\231\u0100\240\u0105\243\u0110\246\u0111\215\u013c" +
    "\242\u013d\225\u013f\351\u0141\344\u0159\353\u015d\204\001\002" +
    "\000\004\u013c\u01eb\001\002\000\004\u015a\u01ec\001\002\000" +
    "\034\150\uff3f\323\uff3f\u0100\uff3f\u0105\uff3f\u0110\uff3f\u0111\uff3f" +
    "\u013c\uff3f\u013d\uff3f\u013f\uff3f\u0141\uff3f\u0159\uff3f\u015a\uff3f\u015d" +
    "\uff3f\001\002\000\112\007\uff40\011\uff40\012\uff40\016\uff40" +
    "\032\uff40\044\uff40\062\uff40\074\uff40\112\uff40\113\uff40\117" +
    "\uff40\120\uff40\126\uff40\130\uff40\133\uff40\134\uff40\135\uff40" +
    "\140\uff40\141\uff40\150\uff40\164\uff40\165\uff40\214\uff40\267" +
    "\uff40\271\uff40\327\uff40\u0141\uff40\u0147\uff40\u014b\uff40\u014c\uff40" +
    "\u014d\uff40\u014e\uff40\u0150\uff40\u0154\uff40\u0155\uff40\u015a\uff40\001" +
    "\002\000\006\u0155\u01ef\u015a\u01f1\001\002\000\026\323\231" +
    "\u0100\240\u0105\243\u0110\246\u0111\215\u013c\242\u013d\225\u0141" +
    "\072\u0159\275\u015d\204\001\002\000\112\007\uff3d\011\uff3d" +
    "\012\uff3d\016\uff3d\032\uff3d\044\uff3d\062\uff3d\074\uff3d\112" +
    "\uff3d\113\uff3d\117\uff3d\120\uff3d\126\uff3d\130\uff3d\133\uff3d" +
    "\134\uff3d\135\uff3d\140\uff3d\141\uff3d\150\uff3d\164\uff3d\165" +
    "\uff3d\214\uff3d\267\uff3d\271\uff3d\327\uff3d\u0141\uff3d\u0147\uff3d" +
    "\u014b\uff3d\u014c\uff3d\u014d\uff3d\u014e\uff3d\u0150\uff3d\u0154\uff3d\u0155" +
    "\uff3d\u015a\uff3d\001\002\000\112\007\uff3b\011\uff3b\012\uff3b" +
    "\016\uff3b\032\uff3b\044\uff3b\062\uff3b\074\uff3b\112\uff3b\113" +
    "\uff3b\117\uff3b\120\uff3b\126\uff3b\130\uff3b\133\uff3b\134\uff3b" +
    "\135\uff3b\140\uff3b\141\uff3b\150\uff3b\164\uff3b\165\uff3b\214" +
    "\uff3b\267\uff3b\271\uff3b\327\uff3b\u0141\uff3b\u0147\uff3b\u014b\uff3b" +
    "\u014c\uff3b\u014d\uff3b\u014e\uff3b\u0150\uff3b\u0154\uff3b\u0155\uff3b\u015a" +
    "\uff3b\001\002\000\112\007\uff3c\011\uff3c\012\uff3c\016\uff3c" +
    "\032\uff3c\044\uff3c\062\uff3c\074\uff3c\112\uff3c\113\uff3c\117" +
    "\uff3c\120\uff3c\126\uff3c\130\uff3c\133\uff3c\134\uff3c\135\uff3c" +
    "\140\uff3c\141\uff3c\150\uff3c\164\uff3c\165\uff3c\214\uff3c\267" +
    "\uff3c\271\uff3c\327\uff3c\u0141\uff3c\u0147\uff3c\u014b\uff3c\u014c\uff3c" +
    "\u014d\uff3c\u014e\uff3c\u0150\uff3c\u0154\uff3c\u0155\uff3c\u015a\uff3c\001" +
    "\002\000\106\011\ufe99\015\ufe99\025\ufe99\032\ufe99\036\ufe99" +
    "\057\ufe99\106\ufe99\107\ufe99\122\ufe99\150\ufe99\151\ufe99\174" +
    "\ufe99\205\ufe99\217\ufe99\254\ufe99\263\ufe99\271\ufe99\323\ufe99" +
    "\327\ufe99\u0100\ufe99\u0105\ufe99\u0110\ufe99\u0111\ufe99\u0138\ufe99\u013c" +
    "\ufe99\u013d\ufe99\u013f\ufe99\u0141\ufe99\u014c\ufe99\u0154\ufe99\u0155\ufe99" +
    "\u0159\ufe99\u015a\ufe99\u015d\ufe99\001\002\000\004\u0141\u01f6\001" +
    "\002\000\106\011\ufea2\015\ufea2\025\ufea2\032\ufea2\036\ufea2" +
    "\057\ufea2\106\ufea2\107\ufea2\122\ufea2\150\ufea2\151\ufea2\174" +
    "\ufea2\205\ufea2\217\ufea2\254\ufea2\263\ufea2\271\ufea2\323\ufea2" +
    "\327\ufea2\u0100\ufea2\u0105\ufea2\u0110\ufea2\u0111\ufea2\u0138\ufea2\u013c" +
    "\ufea2\u013d\ufea2\u013f\ufea2\u0141\ufea2\u014c\ufea2\u0154\ufea2\u0155\ufea2" +
    "\u0159\ufea2\u015a\ufea2\u015d\ufea2\001\002\000\106\011\ufea0\015" +
    "\ufea0\025\ufea0\032\ufea0\036\ufea0\057\ufea0\106\ufea0\107\ufea0" +
    "\122\ufea0\150\ufea0\151\ufea0\174\ufea0\205\ufea0\217\ufea0\254" +
    "\ufea0\263\ufea0\271\ufea0\323\ufea0\327\ufea0\u0100\ufea0\u0105\ufea0" +
    "\u0110\ufea0\u0111\ufea0\u0138\ufea0\u013c\ufea0\u013d\ufea0\u013f\ufea0\u0141" +
    "\ufea0\u014c\ufea0\u0154\ufea0\u0155\ufea0\u0159\ufea0\u015a\ufea0\u015d\ufea0" +
    "\001\002\000\106\011\ufe96\015\ufe96\025\ufe96\032\ufe96\036" +
    "\ufe96\057\ufe96\106\ufe96\107\ufe96\122\ufe96\150\ufe96\151\ufe96" +
    "\174\ufe96\205\ufe96\217\ufe96\254\ufe96\263\ufe96\271\ufe96\323" +
    "\ufe96\327\ufe96\u0100\ufe96\u0105\ufe96\u0110\ufe96\u0111\ufe96\u0138\ufe96" +
    "\u013c\ufe96\u013d\ufe96\u013f\ufe96\u0141\ufe96\u014c\ufe96\u0154\ufe96\u0155" +
    "\ufe96\u0159\ufe96\u015a\ufe96\u015d\ufe96\001\002\000\106\011\ufe9b" +
    "\015\ufe9b\025\ufe9b\032\ufe9b\036\ufe9b\057\ufe9b\106\ufe9b\107" +
    "\ufe9b\122\ufe9b\150\ufe9b\151\ufe9b\174\ufe9b\205\ufe9b\217\ufe9b" +
    "\254\ufe9b\263\ufe9b\271\ufe9b\323\ufe9b\327\ufe9b\u0100\ufe9b\u0105" +
    "\ufe9b\u0110\ufe9b\u0111\ufe9b\u0138\ufe9b\u013c\ufe9b\u013d\ufe9b\u013f\ufe9b" +
    "\u0141\ufe9b\u014c\ufe9b\u0154\ufe9b\u0155\ufe9b\u0159\ufe9b\u015a\ufe9b\u015d" +
    "\ufe9b\001\002\000\106\011\ufe9f\015\ufe9f\025\ufe9f\032\ufe9f" +
    "\036\ufe9f\057\ufe9f\106\ufe9f\107\ufe9f\122\ufe9f\150\ufe9f\151" +
    "\ufe9f\174\ufe9f\205\ufe9f\217\ufe9f\254\ufe9f\263\ufe9f\271\ufe9f" +
    "\323\ufe9f\327\ufe9f\u0100\ufe9f\u0105\ufe9f\u0110\ufe9f\u0111\ufe9f\u0138" +
    "\ufe9f\u013c\ufe9f\u013d\ufe9f\u013f\ufe9f\u0141\ufe9f\u014c\ufe9f\u0154\ufe9f" +
    "\u0155\ufe9f\u0159\ufe9f\u015a\ufe9f\u015d\ufe9f\001\002\000\106\011" +
    "\ufe97\015\ufe97\025\ufe97\032\ufe97\036\ufe97\057\ufe97\106\ufe97" +
    "\107\ufe97\122\ufe97\150\ufe97\151\ufe97\174\ufe97\205\ufe97\217" +
    "\ufe97\254\ufe97\263\ufe97\271\ufe97\323\ufe97\327\ufe97\u0100\ufe97" +
    "\u0105\ufe97\u0110\ufe97\u0111\ufe97\u0138\ufe97\u013c\ufe97\u013d\ufe97\u013f" +
    "\ufe97\u0141\ufe97\u014c\ufe97\u0154\ufe97\u0155\ufe97\u0159\ufe97\u015a\ufe97" +
    "\u015d\ufe97\001\002\000\106\011\ufe93\015\ufe93\025\ufe93\032" +
    "\ufe93\036\ufe93\057\ufe93\106\ufe93\107\ufe93\122\ufe93\150\ufe93" +
    "\151\ufe93\174\ufe93\205\ufe93\217\ufe93\254\ufe93\263\ufe93\271" +
    "\ufe93\323\ufe93\327\ufe93\u0100\ufe93\u0105\ufe93\u0110\ufe93\u0111\ufe93" +
    "\u0138\ufe93\u013c\ufe93\u013d\ufe93\u013f\ufe93\u0141\ufe93\u014c\ufe93\u0154" +
    "\ufe93\u0155\ufe93\u0159\ufe93\u015a\ufe93\u015d\ufe93\001\002\000\106" +
    "\011\ufe95\015\ufe95\025\ufe95\032\ufe95\036\ufe95\057\ufe95\106" +
    "\ufe95\107\ufe95\122\ufe95\150\ufe95\151\ufe95\174\ufe95\205\ufe95" +
    "\217\ufe95\254\ufe95\263\ufe95\271\ufe95\323\ufe95\327\ufe95\u0100" +
    "\ufe95\u0105\ufe95\u0110\ufe95\u0111\ufe95\u0138\ufe95\u013c\ufe95\u013d\ufe95" +
    "\u013f\ufe95\u0141\ufe95\u014c\ufe95\u0154\ufe95\u0155\ufe95\u0159\ufe95\u015a" +
    "\ufe95\u015d\ufe95\001\002\000\106\011\ufe9a\015\ufe9a\025\ufe9a" +
    "\032\ufe9a\036\ufe9a\057\ufe9a\106\ufe9a\107\ufe9a\122\ufe9a\150" +
    "\ufe9a\151\ufe9a\174\ufe9a\205\ufe9a\217\ufe9a\254\ufe9a\263\ufe9a" +
    "\271\ufe9a\323\ufe9a\327\ufe9a\u0100\ufe9a\u0105\ufe9a\u0110\ufe9a\u0111" +
    "\ufe9a\u0138\ufe9a\u013c\ufe9a\u013d\ufe9a\u013f\ufe9a\u0141\ufe9a\u014c\ufe9a" +
    "\u0154\ufe9a\u0155\ufe9a\u0159\ufe9a\u015a\ufe9a\u015d\ufe9a\001\002\000" +
    "\106\011\ufe9d\015\ufe9d\025\ufe9d\032\ufe9d\036\ufe9d\057\ufe9d" +
    "\106\ufe9d\107\ufe9d\122\ufe9d\150\ufe9d\151\ufe9d\174\ufe9d\205" +
    "\ufe9d\217\ufe9d\254\ufe9d\263\ufe9d\271\ufe9d\323\ufe9d\327\ufe9d" +
    "\u0100\ufe9d\u0105\ufe9d\u0110\ufe9d\u0111\ufe9d\u0138\ufe9d\u013c\ufe9d\u013d" +
    "\ufe9d\u013f\ufe9d\u0141\ufe9d\u014c\ufe9d\u0154\ufe9d\u0155\ufe9d\u0159\ufe9d" +
    "\u015a\ufe9d\u015d\ufe9d\001\002\000\106\011\ufe98\015\ufe98\025" +
    "\ufe98\032\ufe98\036\ufe98\057\ufe98\106\ufe98\107\ufe98\122\ufe98" +
    "\150\ufe98\151\ufe98\174\ufe98\205\ufe98\217\ufe98\254\ufe98\263" +
    "\ufe98\271\ufe98\323\ufe98\327\ufe98\u0100\ufe98\u0105\ufe98\u0110\ufe98" +
    "\u0111\ufe98\u0138\ufe98\u013c\ufe98\u013d\ufe98\u013f\ufe98\u0141\ufe98\u014c" +
    "\ufe98\u0154\ufe98\u0155\ufe98\u0159\ufe98\u015a\ufe98\u015d\ufe98\001\002" +
    "\000\106\011\ufe9e\015\ufe9e\025\ufe9e\032\ufe9e\036\ufe9e\057" +
    "\ufe9e\106\ufe9e\107\ufe9e\122\ufe9e\150\ufe9e\151\ufe9e\174\ufe9e" +
    "\205\ufe9e\217\ufe9e\254\ufe9e\263\ufe9e\271\ufe9e\323\ufe9e\327" +
    "\ufe9e\u0100\ufe9e\u0105\ufe9e\u0110\ufe9e\u0111\ufe9e\u0138\ufe9e\u013c\ufe9e" +
    "\u013d\ufe9e\u013f\ufe9e\u0141\ufe9e\u014c\ufe9e\u0154\ufe9e\u0155\ufe9e\u0159" +
    "\ufe9e\u015a\ufe9e\u015d\ufe9e\001\002\000\010\u013f\311\u0141\307" +
    "\u015d\310\001\002\000\004\u015a\u0203\001\002\000\112\007" +
    "\uff31\011\uff31\012\uff31\016\uff31\032\uff31\044\uff31\062\uff31" +
    "\074\uff31\112\uff31\113\uff31\117\uff31\120\uff31\126\uff31\130" +
    "\uff31\133\uff31\134\uff31\135\uff31\140\uff31\141\uff31\150\uff31" +
    "\164\uff31\165\uff31\214\uff31\267\uff31\271\uff31\327\uff31\u0141" +
    "\uff31\u0147\uff31\u014b\uff31\u014c\uff31\u014d\uff31\u014e\uff31\u0150\uff31" +
    "\u0154\uff31\u0155\uff31\u015a\uff31\001\002\000\032\150\343\323" +
    "\231\u0100\240\u0105\243\u0110\246\u0111\215\u013c\242\u013d\225" +
    "\u013f\351\u0141\344\u0159\353\u015d\204\001\002\000\004\266" +
    "\u0204\001\002\000\112\007\ufed3\011\ufed3\012\ufed3\016\ufed3" +
    "\032\ufed3\044\ufed3\062\ufed3\074\ufed3\112\ufed3\113\ufed3\117" +
    "\ufed3\120\ufed3\126\ufed3\130\ufed3\133\ufed3\134\ufed3\135\ufed3" +
    "\140\ufed3\141\ufed3\150\ufed3\164\ufed3\165\ufed3\214\ufed3\267" +
    "\ufed3\271\ufed3\327\ufed3\u0141\ufed3\u0147\ufed3\u014b\ufed3\u014c\ufed3" +
    "\u014d\ufed3\u014e\ufed3\u0150\ufed3\u0154\ufed3\u0155\ufed3\u015a\ufed3\001" +
    "\002\000\112\007\ufed5\011\ufed5\012\ufed5\016\ufed5\032\ufed5" +
    "\044\ufed5\062\ufed5\074\ufed5\112\ufed5\113\ufed5\117\ufed5\120" +
    "\ufed5\126\ufed5\130\ufed5\133\ufed5\134\ufed5\135\ufed5\140\ufed5" +
    "\141\ufed5\150\ufed5\164\ufed5\165\ufed5\214\ufed5\267\ufed5\271" +
    "\ufed5\327\ufed5\u0141\ufed5\u0147\ufed5\u014b\ufed5\u014c\ufed5\u014d\ufed5" +
    "\u014e\ufed5\u0150\ufed5\u0154\ufed5\u0155\ufed5\u015a\ufed5\001\002\000" +
    "\112\007\ufed4\011\ufed4\012\ufed4\016\ufed4\032\ufed4\044\ufed4" +
    "\062\ufed4\074\ufed4\112\ufed4\113\ufed4\117\ufed4\120\ufed4\126" +
    "\ufed4\130\ufed4\133\ufed4\134\ufed4\135\ufed4\140\ufed4\141\ufed4" +
    "\150\ufed4\164\ufed4\165\ufed4\214\ufed4\267\ufed4\271\ufed4\327" +
    "\ufed4\u0141\ufed4\u0147\ufed4\u014b\ufed4\u014c\ufed4\u014d\ufed4\u014e\ufed4" +
    "\u0150\ufed4\u0154\ufed4\u0155\ufed4\u015a\ufed4\001\002\000\004\242" +
    "\u020a\001\002\000\032\150\343\323\231\u0100\240\u0105\243" +
    "\u0110\246\u0111\215\u013c\242\u013d\225\u013f\351\u0141\344\u0159" +
    "\353\u015d\204\001\002\000\010\071\u020c\072\u020e\266\u0204" +
    "\001\002\000\032\150\343\323\231\u0100\240\u0105\243\u0110" +
    "\246\u0111\215\u013c\242\u013d\225\u013f\351\u0141\344\u0159\353" +
    "\u015d\204\001\002\000\112\007\ufed2\011\ufed2\012\ufed2\016" +
    "\ufed2\032\ufed2\044\ufed2\062\ufed2\074\ufed2\112\ufed2\113\ufed2" +
    "\117\ufed2\120\ufed2\126\ufed2\130\ufed2\133\ufed2\134\ufed2\135" +
    "\ufed2\140\ufed2\141\ufed2\150\ufed2\164\ufed2\165\ufed2\214\ufed2" +
    "\267\ufed2\271\ufed2\327\ufed2\u0141\ufed2\u0147\ufed2\u014b\ufed2\u014c" +
    "\ufed2\u014d\ufed2\u014e\ufed2\u0150\ufed2\u0154\ufed2\u0155\ufed2\u015a\ufed2" +
    "\001\002\000\112\007\ufecf\011\ufecf\012\ufecf\016\ufecf\032" +
    "\ufecf\044\ufecf\062\ufecf\074\ufecf\112\ufecf\113\ufecf\117\ufecf" +
    "\120\ufecf\126\ufecf\130\ufecf\133\ufecf\134\ufecf\135\ufecf\140" +
    "\ufecf\141\ufecf\150\ufecf\164\ufecf\165\ufecf\214\ufecf\267\ufecf" +
    "\271\ufecf\327\ufecf\u0141\ufecf\u0147\ufecf\u014b\ufecf\u014c\ufecf\u014d" +
    "\ufecf\u014e\ufecf\u0150\ufecf\u0154\ufecf\u0155\ufecf\u015a\ufecf\001\002" +
    "\000\112\007\ufed0\011\ufed0\012\ufed0\016\ufed0\032\ufed0\044" +
    "\ufed0\062\ufed0\074\ufed0\112\ufed0\113\ufed0\117\ufed0\120\ufed0" +
    "\126\ufed0\130\ufed0\133\ufed0\134\ufed0\135\ufed0\140\ufed0\141" +
    "\ufed0\150\ufed0\164\ufed0\165\ufed0\214\ufed0\267\ufed0\271\ufed0" +
    "\327\ufed0\u0141\ufed0\u0147\ufed0\u014b\ufed0\u014c\ufed0\u014d\ufed0\u014e" +
    "\ufed0\u0150\ufed0\u0154\ufed0\u0155\ufed0\u015a\ufed0\001\002\000\004" +
    "\072\u0211\001\002\000\112\007\ufed1\011\ufed1\012\ufed1\016" +
    "\ufed1\032\ufed1\044\ufed1\062\ufed1\074\ufed1\112\ufed1\113\ufed1" +
    "\117\ufed1\120\ufed1\126\ufed1\130\ufed1\133\ufed1\134\ufed1\135" +
    "\ufed1\140\ufed1\141\ufed1\150\ufed1\164\ufed1\165\ufed1\214\ufed1" +
    "\267\ufed1\271\ufed1\327\ufed1\u0141\ufed1\u0147\ufed1\u014b\ufed1\u014c" +
    "\ufed1\u014d\ufed1\u014e\ufed1\u0150\ufed1\u0154\ufed1\u0155\ufed1\u015a\ufed1" +
    "\001\002\000\006\u013f\260\u015d\261\001\002\000\004\u015a" +
    "\u0214\001\002\000\112\007\uff38\011\uff38\012\uff38\016\uff38" +
    "\032\uff38\044\uff38\062\uff38\074\uff38\112\uff38\113\uff38\117" +
    "\uff38\120\uff38\126\uff38\130\uff38\133\uff38\134\uff38\135\uff38" +
    "\140\uff38\141\uff38\150\uff38\164\uff38\165\uff38\214\uff38\267" +
    "\uff38\271\uff38\327\uff38\u0141\uff38\u0147\uff38\u014b\uff38\u014c\uff38" +
    "\u014d\uff38\u014e\uff38\u0150\uff38\u0154\uff38\u0155\uff38\u015a\uff38\001" +
    "\002\000\026\323\231\u0100\240\u0105\243\u0110\246\u0111\215" +
    "\u013c\242\u013d\225\u0141\072\u0159\275\u015d\204\001\002\000" +
    "\004\u015a\u0217\001\002\000\112\007\uff2e\011\uff2e\012\uff2e" +
    "\016\uff2e\032\uff2e\044\uff2e\062\uff2e\074\uff2e\112\uff2e\113" +
    "\uff2e\117\uff2e\120\uff2e\126\uff2e\130\uff2e\133\uff2e\134\uff2e" +
    "\135\uff2e\140\uff2e\141\uff2e\150\uff2e\164\uff2e\165\uff2e\214" +
    "\uff2e\267\uff2e\271\uff2e\327\uff2e\u0141\uff2e\u0147\uff2e\u014b\uff2e" +
    "\u014c\uff2e\u014d\uff2e\u014e\uff2e\u0150\uff2e\u0154\uff2e\u0155\uff2e\u015a" +
    "\uff2e\001\002\000\010\u013f\311\u0141\307\u015d\310\001\002" +
    "\000\004\u0155\u021a\001\002\000\026\323\231\u0100\240\u0105" +
    "\243\u0110\246\u0111\215\u013c\242\u013d\225\u0141\072\u0159\275" +
    "\u015d\204\001\002\000\004\u0155\u021c\001\002\000\026\323" +
    "\231\u0100\240\u0105\243\u0110\246\u0111\215\u013c\242\u013d\225" +
    "\u0141\072\u0159\275\u015d\204\001\002\000\004\u015a\u021e\001" +
    "\002\000\112\007\uff28\011\uff28\012\uff28\016\uff28\032\uff28" +
    "\044\uff28\062\uff28\074\uff28\112\uff28\113\uff28\117\uff28\120" +
    "\uff28\126\uff28\130\uff28\133\uff28\134\uff28\135\uff28\140\uff28" +
    "\141\uff28\150\uff28\164\uff28\165\uff28\214\uff28\267\uff28\271" +
    "\uff28\327\uff28\u0141\uff28\u0147\uff28\u014b\uff28\u014c\uff28\u014d\uff28" +
    "\u014e\uff28\u0150\uff28\u0154\uff28\u0155\uff28\u015a\uff28\001\002\000" +
    "\026\323\231\u0100\240\u0105\243\u0110\246\u0111\215\u013c\242" +
    "\u013d\225\u0141\072\u0159\275\u015d\204\001\002\000\004\u015a" +
    "\u0221\001\002\000\112\007\uff29\011\uff29\012\uff29\016\uff29" +
    "\032\uff29\044\uff29\062\uff29\074\uff29\112\uff29\113\uff29\117" +
    "\uff29\120\uff29\126\uff29\130\uff29\133\uff29\134\uff29\135\uff29" +
    "\140\uff29\141\uff29\150\uff29\164\uff29\165\uff29\214\uff29\267" +
    "\uff29\271\uff29\327\uff29\u0141\uff29\u0147\uff29\u014b\uff29\u014c\uff29" +
    "\u014d\uff29\u014e\uff29\u0150\uff29\u0154\uff29\u0155\uff29\u015a\uff29\001" +
    "\002\000\032\150\343\323\231\u0100\240\u0105\243\u0110\246" +
    "\u0111\215\u013c\242\u013d\225\u013f\351\u0141\344\u0159\353\u015d" +
    "\204\001\002\000\112\007\uff43\011\uff43\012\uff43\016\uff43" +
    "\032\uff43\044\uff43\062\uff43\074\uff43\112\uff43\113\uff43\117" +
    "\uff43\120\uff43\126\uff43\130\uff43\133\uff43\134\uff43\135\uff43" +
    "\140\uff43\141\uff43\150\uff43\164\uff43\165\uff43\214\uff43\267" +
    "\uff43\271\uff43\327\uff43\u0141\uff43\u0147\uff43\u014b\uff43\u014c\uff43" +
    "\u014d\uff43\u014e\uff43\u0150\uff43\u0154\uff43\u0155\uff43\u015a\uff43\001" +
    "\002\000\004\011\u0225\001\002\000\036\312\u01de\322\u01db" +
    "\330\u01d6\345\u01df\356\u01d9\361\u01cf\364\u01d1\u0107\u01d3\u0113" +
    "\u01d2\u011d\u01d0\u0120\u01d4\u012d\u01d5\u012e\u01d7\u0141\u01da\001\002" +
    "\000\006\u0159\u01ea\u015a\uff3e\001\002\000\004\u015a\u0228\001" +
    "\002\000\112\007\uff41\011\uff41\012\uff41\016\uff41\032\uff41" +
    "\044\uff41\062\uff41\074\uff41\112\uff41\113\uff41\117\uff41\120" +
    "\uff41\126\uff41\130\uff41\133\uff41\134\uff41\135\uff41\140\uff41" +
    "\141\uff41\150\uff41\164\uff41\165\uff41\214\uff41\267\uff41\271" +
    "\uff41\327\uff41\u0141\uff41\u0147\uff41\u014b\uff41\u014c\uff41\u014d\uff41" +
    "\u014e\uff41\u0150\uff41\u0154\uff41\u0155\uff41\u015a\uff41\001\002\000" +
    "\004\u0141\u022a\001\002\000\006\u0143\u022d\u014e\u022e\001\002" +
    "\000\004\u015a\u022c\001\002\000\042\007\uffd3\044\uffd3\113" +
    "\uffd3\117\uffd3\120\uffd3\130\uffd3\135\uffd3\140\uffd3\165\uffd3" +
    "\214\uffd3\267\uffd3\271\uffd3\327\uffd3\u0154\uffd3\u0155\uffd3\u015a" +
    "\uffd3\001\002\000\004\u0159\u0236\001\002\000\004\u0143\u0231" +
    "\001\002\000\004\u0141\u0230\001\002\000\004\u015a\uffa5\001" +
    "\002\000\004\u0159\u0232\001\002\000\004\u0141\u0233\001\002" +
    "\000\004\u015a\u0234\001\002\000\004\u0143\u0235\001\002\000" +
    "\004\u0141\uffa4\001\002\000\004\u0141\u0237\001\002\000\004" +
    "\u015a\u0238\001\002\000\004\u0143\u0239\001\002\000\004\u014d" +
    "\u023a\001\002\000\004\u0141\uffa3\001\002\000\044\007\uffac" +
    "\044\uffac\113\uffac\117\uffac\120\uffac\130\uffac\135\uffac\140" +
    "\uffac\164\170\165\uffac\214\uffac\267\uffac\271\uffac\327\uffac" +
    "\u0154\uffac\u0155\uffac\u015a\uffac\001\002\000\042\007\uffaf\044" +
    "\uffaf\113\uffaf\117\uffaf\120\uffaf\130\uffaf\135\uffaf\140\uffaf" +
    "\165\uffaf\214\uffaf\267\uffaf\271\uffaf\327\uffaf\u0154\uffaf\u0155" +
    "\uffaf\u015a\uffaf\001\002\000\012\160\ufec7\161\ufec7\u0141\ufec7" +
    "\u015d\ufec7\001\002\000\004\135\ufebf\001\002\000\004\135" +
    "\ufec2\001\002\000\004\135\ufec1\001\002\000\004\135\u0242" +
    "\001\002\000\036\044\152\113\131\117\ufeb4\120\ufeb4\130" +
    "\135\135\ufec4\140\127\165\ufeb4\214\132\267\ufeb4\271\ufeb4" +
    "\327\ufeb4\u0154\ufeb4\u0155\ufeb4\001\002\000\022\117\ufeba\120" +
    "\ufeba\165\ufeba\267\ufeba\271\ufeba\327\ufeba\u0154\ufeba\u0155\ufeba" +
    "\001\002\000\004\135\ufec3\001\002\000\044\011\u0246\044" +
    "\ufeae\113\ufeae\117\ufeae\120\ufeae\130\ufeae\135\ufeae\140\ufeae" +
    "\156\ufeae\165\ufeae\214\ufeae\267\ufeae\271\ufeae\327\ufeae\u0141" +
    "\u0247\u0154\ufeae\u0155\ufeae\001\002\000\004\u0141\u0249\001\002" +
    "\000\042\044\ufeaf\113\ufeaf\117\ufeaf\120\ufeaf\130\ufeaf\135" +
    "\ufeaf\140\ufeaf\156\ufeaf\165\ufeaf\214\ufeaf\240\ufeaf\267\ufeaf" +
    "\271\ufeaf\327\ufeaf\u0154\ufeaf\u0155\ufeaf\001\002\000\040\044" +
    "\ufeb1\113\ufeb1\117\ufeb1\120\ufeb1\130\ufeb1\135\ufeb1\140\ufeb1" +
    "\156\ufeb1\165\ufeb1\214\ufeb1\267\ufeb1\271\ufeb1\327\ufeb1\u0154" +
    "\ufeb1\u0155\ufeb1\001\002\000\042\044\ufeb0\113\ufeb0\117\ufeb0" +
    "\120\ufeb0\130\ufeb0\135\ufeb0\140\ufeb0\156\ufeb0\165\ufeb0\214" +
    "\ufeb0\240\ufeb0\267\ufeb0\271\ufeb0\327\ufeb0\u0154\ufeb0\u0155\ufeb0" +
    "\001\002\000\046\002\ufe67\006\ufe67\015\ufe67\034\ufe67\043" +
    "\ufe67\060\ufe67\067\ufe67\072\ufe67\076\ufe67\077\ufe67\131\ufe67" +
    "\211\ufe67\215\ufe67\221\ufe67\224\ufe67\250\ufe67\256\ufe67\327" +
    "\ufe67\001\002\000\014\160\120\161\123\u0141\072\u0159\122" +
    "\u015d\125\001\002\000\046\002\ufe64\006\ufe64\015\ufe64\034" +
    "\ufe64\043\ufe64\060\ufe64\067\ufe64\072\ufe64\076\ufe64\077\ufe64" +
    "\131\ufe64\211\ufe64\215\ufe64\221\ufe64\224\ufe64\250\ufe64\256" +
    "\ufe64\327\ufe64\001\002\000\012\267\105\327\116\u0154\114" +
    "\u0155\u024b\001\002\000\046\002\ufe65\006\ufe65\015\ufe65\034" +
    "\ufe65\043\ufe65\060\ufe65\067\ufe65\072\ufe65\076\ufe65\077\ufe65" +
    "\131\ufe65\211\ufe65\215\ufe65\221\ufe65\224\ufe65\250\ufe65\256" +
    "\ufe65\327\ufe65\001\002\000\004\u0141\u0250\001\002\000\004" +
    "\u0155\u0251\001\002\000\004\u013f\u0252\001\002\000\004\u015a" +
    "\u0253\001\002\000\044\011\ufecd\044\ufecd\113\ufecd\117\ufecd" +
    "\120\ufecd\130\ufecd\135\ufecd\140\ufecd\156\ufecd\165\ufecd\214" +
    "\ufecd\267\ufecd\271\ufecd\327\ufecd\u0141\ufecd\u0154\ufecd\u0155\ufecd" +
    "\001\002\000\004\u015a\u0255\001\002\000\022\117\ufebc\120" +
    "\ufebc\165\ufebc\267\ufebc\271\ufebc\327\ufebc\u0154\ufebc\u0155\ufebc" +
    "\001\002\000\042\044\ufeac\113\ufeac\117\ufeac\120\ufeac\130" +
    "\ufeac\135\ufeac\140\ufeac\156\ufeac\165\ufeac\214\ufeac\240\u0257" +
    "\267\ufeac\271\ufeac\327\ufeac\u0154\ufeac\u0155\ufeac\001\002\000" +
    "\004\u0159\u025a\001\002\000\040\044\ufeb3\113\ufeb3\117\ufeb3" +
    "\120\ufeb3\130\ufeb3\135\ufeb3\140\ufeb3\156\ufeb3\165\ufeb3\214" +
    "\ufeb3\267\ufeb3\271\ufeb3\327\ufeb3\u0154\ufeb3\u0155\ufeb3\001\002" +
    "\000\040\044\ufead\113\ufead\117\ufead\120\ufead\130\ufead\135" +
    "\ufead\140\ufead\156\ufead\165\ufead\214\ufead\267\ufead\271\ufead" +
    "\327\ufead\u0154\ufead\u0155\ufead\001\002\000\026\323\231\u0100" +
    "\240\u0105\243\u0110\246\u0111\215\u013c\242\u013d\225\u0141\072" +
    "\u0159\275\u015d\204\001\002\000\010\170\u025f\333\u025e\u015a" +
    "\ufec8\001\002\000\004\u015a\u025d\001\002\000\040\044\ufecc" +
    "\113\ufecc\117\ufecc\120\ufecc\130\ufecc\135\ufecc\140\ufecc\156" +
    "\ufecc\165\ufecc\214\ufecc\267\ufecc\271\ufecc\327\ufecc\u0154\ufecc" +
    "\u0155\ufecc\001\002\000\004\u015a\ufec9\001\002\000\004\u015a" +
    "\ufeca\001\002\000\004\u015a\ufecb\001\002\000\004\u013f\u0262" +
    "\001\002\000\004\u0155\u0263\001\002\000\004\u013f\u0264\001" +
    "\002\000\004\u015a\u0265\001\002\000\044\011\ufece\044\ufece" +
    "\113\ufece\117\ufece\120\ufece\130\ufece\135\ufece\140\ufece\156" +
    "\ufece\165\ufece\214\ufece\267\ufece\271\ufece\327\ufece\u0141\ufece" +
    "\u0154\ufece\u0155\ufece\001\002\000\040\044\ufeb2\113\ufeb2\117" +
    "\ufeb2\120\ufeb2\130\ufeb2\135\ufeb2\140\ufeb2\156\ufeb2\165\ufeb2" +
    "\214\ufeb2\267\ufeb2\271\ufeb2\327\ufeb2\u0154\ufeb2\u0155\ufeb2\001" +
    "\002\000\046\002\ufe69\006\ufe69\015\ufe69\034\ufe69\043\ufe69" +
    "\060\ufe69\067\ufe69\072\ufe69\076\ufe69\077\ufe69\131\ufe69\211" +
    "\ufe69\215\ufe69\221\ufe69\224\ufe69\250\ufe69\256\ufe69\327\ufe69" +
    "\001\002\000\022\057\uff87\112\uff87\133\u0278\224\uff87\262" +
    "\uff87\267\uff87\327\uff87\u0154\uff87\001\002\000\036\011\uffd9" +
    "\057\uffd9\112\uffd9\133\uffd9\224\uffd9\262\uffd9\267\uffd9\327" +
    "\uffd9\u0142\uffd9\u0143\uffd9\u0144\uffd9\u0145\uffd9\u0154\uffd9\u0156\u0273" +
    "\001\002\000\024\011\u026d\057\uff90\112\uff90\133\uff90\224" +
    "\uff90\262\uff90\267\uff90\327\uff90\u0154\uff90\001\002\000\024" +
    "\011\uff92\057\uff92\112\uff92\133\uff92\224\uff92\262\uff92\267" +
    "\uff92\327\uff92\u0154\uff92\001\002\000\024\011\uff93\057\uff93" +
    "\112\uff93\133\uff93\224\uff93\262\uff93\267\uff93\327\uff93\u0154" +
    "\uff93\001\002\000\004\u0141\u026f\001\002\000\022\057\uff94" +
    "\112\uff94\133\uff94\224\uff94\262\uff94\267\uff94\327\uff94\u0154" +
    "\uff94\001\002\000\024\057\uff8e\112\uff8e\133\uff8e\224\uff8e" +
    "\262\uff8e\267\uff8e\327\uff8e\u0154\uff8e\u0155\u0270\001\002\000" +
    "\026\323\231\u0100\240\u0105\243\u0110\246\u0111\215\u013c\242" +
    "\u013d\225\u0141\u0269\u0159\275\u015d\204\001\002\000\022\057" +
    "\uff91\112\uff91\133\uff91\224\uff91\262\uff91\267\uff91\327\uff91" +
    "\u0154\uff91\001\002\000\022\057\uff8f\112\uff8f\133\uff8f\224" +
    "\uff8f\262\uff8f\267\uff8f\327\uff8f\u0154\uff8f\001\002\000\006" +
    "\u0141\u0275\u0144\u0276\001\002\000\024\011\uff8d\057\uff8d\112" +
    "\uff8d\133\uff8d\224\uff8d\262\uff8d\267\uff8d\327\uff8d\u0154\uff8d" +
    "\001\002\000\036\011\uffd7\057\uffd7\112\uffd7\133\uffd7\224" +
    "\uffd7\262\uffd7\267\uffd7\327\uffd7\u0142\uffd7\u0143\uffd7\u0144\uffd7" +
    "\u0145\uffd7\u0154\uffd7\u0156\077\001\002\000\024\011\uff8c\057" +
    "\uff8c\112\uff8c\133\uff8c\224\uff8c\262\uff8c\267\uff8c\327\uff8c" +
    "\u0154\uff8c\001\002\000\020\057\uff8a\112\uff8a\224\uff8a\262" +
    "\uff8a\267\uff8a\327\uff8a\u0154\uff8a\001\002\000\006\u0141\u027a" +
    "\u015d\u027b\001\002\000\020\057\uff88\112\uff88\224\uff88\262" +
    "\uff88\267\uff88\327\uff88\u0154\uff88\001\002\000\022\057\uff83" +
    "\112\uff83\224\uff83\262\uff83\267\uff83\327\uff83\u0154\uff83\u0159" +
    "\u027e\001\002\000\004\u0141\u027c\001\002\000\022\057\uff83" +
    "\112\uff83\224\uff83\262\uff83\267\uff83\327\uff83\u0154\uff83\u0159" +
    "\u027e\001\002\000\020\057\uff86\112\uff86\224\uff86\262\uff86" +
    "\267\uff86\327\uff86\u0154\uff86\001\002\000\004\u0141\u0280\001" +
    "\002\000\020\057\uff84\112\uff84\224\uff84\262\uff84\267\uff84" +
    "\327\uff84\u0154\uff84\001\002\000\006\u0155\u0282\u015a\u0283\001" +
    "\002\000\022\057\uff82\112\uff82\224\uff82\262\uff82\267\uff82" +
    "\327\uff82\u0138\uff82\u0154\uff82\001\002\000\004\u0141\u0280\001" +
    "\002\000\022\057\uff7f\112\uff7f\224\uff7f\262\uff7f\267\uff7f" +
    "\327\uff7f\u0138\uff7f\u0154\uff7f\001\002\000\022\057\uff81\112" +
    "\uff81\224\uff81\262\uff81\267\uff81\327\uff81\u0138\uff81\u0154\uff81" +
    "\001\002\000\022\057\uff80\112\uff80\224\uff80\262\uff80\267" +
    "\uff80\327\uff80\u0138\uff80\u0154\uff80\001\002\000\020\057\uff85" +
    "\112\uff85\224\uff85\262\uff85\267\uff85\327\uff85\u0154\uff85\001" +
    "\002\000\006\327\116\u0154\114\001\002\000\046\002\ufe63" +
    "\006\ufe63\015\ufe63\034\ufe63\043\ufe63\060\ufe63\067\ufe63\072" +
    "\ufe63\076\ufe63\077\ufe63\131\ufe63\211\ufe63\215\ufe63\221\ufe63" +
    "\224\ufe63\250\ufe63\256\ufe63\327\ufe63\001\002\000\026\323" +
    "\231\u0100\240\u0105\243\u0110\246\u0111\215\u013c\242\u013d\225" +
    "\u0141\072\u0159\275\u015d\204\001\002\000\004\u015a\u028b\001" +
    "\002\000\012\112\066\170\u028c\u0141\072\u015d\071\001\002" +
    "\000\010\112\066\u0141\072\u015d\071\001\002\000\046\002" +
    "\ufe6e\006\ufe6e\015\ufe6e\034\ufe6e\043\ufe6e\060\ufe6e\067\ufe6e" +
    "\072\ufe6e\076\ufe6e\077\ufe6e\131\ufe6e\211\ufe6e\215\ufe6e\221" +
    "\ufe6e\224\ufe6e\250\ufe6e\256\ufe6e\327\ufe6e\001\002\000\046" +
    "\002\ufe71\006\ufe71\015\ufe71\034\ufe71\043\ufe71\060\ufe71\067" +
    "\ufe71\072\ufe71\076\ufe71\077\ufe71\131\ufe71\211\ufe71\215\ufe71" +
    "\221\ufe71\224\ufe71\250\ufe71\256\ufe71\327\ufe71\001\002\000" +
    "\046\002\ufe6f\006\ufe6f\015\ufe6f\034\ufe6f\043\ufe6f\060\ufe6f" +
    "\067\ufe6f\072\ufe6f\076\ufe6f\077\ufe6f\131\ufe6f\211\ufe6f\215" +
    "\ufe6f\221\ufe6f\224\ufe6f\250\ufe6f\256\ufe6f\327\ufe6f\001\002" +
    "\000\046\002\ufe6d\006\ufe6d\015\ufe6d\034\ufe6d\043\ufe6d\060" +
    "\ufe6d\067\ufe6d\072\ufe6d\076\ufe6d\077\ufe6d\131\ufe6d\211\ufe6d" +
    "\215\ufe6d\221\ufe6d\224\ufe6d\250\ufe6d\256\ufe6d\327\ufe6d\001" +
    "\002\000\046\002\ufe6b\006\ufe6b\015\ufe6b\034\ufe6b\043\ufe6b" +
    "\060\ufe6b\067\ufe6b\072\ufe6b\076\ufe6b\077\ufe6b\131\ufe6b\211" +
    "\ufe6b\215\ufe6b\221\ufe6b\224\ufe6b\250\ufe6b\256\ufe6b\327\ufe6b" +
    "\001\002\000\004\231\u0299\001\002\000\006\327\ufe5d\u0154" +
    "\ufe5d\001\002\000\004\u0159\u02b9\001\002\000\006\327\u02b6" +
    "\u0154\u02b7\001\002\000\004\u0141\u0297\001\002\000\004\231" +
    "\u0299\001\002\000\006\327\ufe59\u0154\ufe59\001\002\000\006" +
    "\u0141\072\u015d\u029d\001\002\000\016\112\u02ae\267\u02ab\327" +
    "\uff89\u0138\106\u0154\uff89\u0155\u02ac\001\002\000\004\u014c\u02a3" +
    "\001\002\000\006\327\ufe58\u0154\ufe58\001\002\000\004\u0141" +
    "\u029e\001\002\000\004\u014c\u029f\001\002\000\032\150\343" +
    "\323\231\u0100\240\u0105\243\u0110\246\u0111\215\u013c\242\u013d" +
    "\225\u013f\351\u0141\344\u0159\353\u015d\204\001\002\000\016" +
    "\112\ufe4f\267\ufe4f\327\ufe4f\u0138\ufe4f\u0154\ufe4f\u0155\ufe4f\001" +
    "\002\000\016\112\ufe55\267\ufe55\327\ufe55\u0138\ufe55\u0154\ufe55" +
    "\u0155\ufe55\001\002\000\016\112\ufe56\267\ufe56\327\ufe56\u0138" +
    "\ufe56\u0154\ufe56\u0155\ufe56\001\002\000\036\057\u02a7\150\343" +
    "\151\u02a8\323\231\u0100\240\u0105\243\u0110\246\u0111\215\u013c" +
    "\242\u013d\225\u013f\351\u0141\344\u0159\353\u015d\204\001\002" +
    "\000\016\112\ufe54\267\ufe54\327\ufe54\u0138\ufe54\u0154\ufe54\u0155" +
    "\ufe54\001\002\000\016\112\ufe53\267\ufe53\327\ufe53\u0138\ufe53" +
    "\u0154\ufe53\u0155\ufe53\001\002\000\044\112\uff99\267\uff99\327" +
    "\uff99\u0138\uff99\u0142\373\u0143\360\u0144\357\u0145\362\u0146\374" +
    "\u0147\364\u014b\370\u014c\371\u014d\367\u014e\361\u0150\372\u0154" +
    "\uff99\u0155\uff99\001\002\000\016\112\ufe51\267\ufe51\327\ufe51" +
    "\u0138\ufe51\u0154\ufe51\u0155\ufe51\001\002\000\016\112\ufe50\267" +
    "\ufe50\327\ufe50\u0138\ufe50\u0154\ufe50\u0155\ufe50\001\002\000\006" +
    "\327\ufe4d\u0154\ufe4d\001\002\000\006\327\ufe57\u0154\ufe57\001" +
    "\002\000\114\024\uffa6\037\uffa6\042\uffa6\050\uffa6\110\uffa6" +
    "\140\uffa6\150\145\152\uffa6\214\uffa6\230\uffa6\231\uffa6\236" +
    "\uffa6\323\uffa6\341\uffa6\345\uffa6\360\uffa6\376\uffa6\u0100\uffa6" +
    "\u0105\uffa6\u010d\uffa6\u010e\144\u0110\uffa6\u0111\uffa6\u0112\uffa6\u0116" +
    "\uffa6\u0118\uffa6\u0119\uffa6\u0120\uffa6\u0122\uffa6\u0123\uffa6\u0137\uffa6" +
    "\u013c\uffa6\u013d\uffa6\u013f\uffa6\u0141\uffa6\u0159\147\u015d\uffa6\001" +
    "\002\000\006\u0141\072\u015d\u029d\001\002\000\012\112\u02ae" +
    "\267\u02ab\327\ufe47\u0154\ufe47\001\002\000\014\160\120\161" +
    "\123\u0141\072\u0159\122\u015d\125\001\002\000\006\327\ufe49" +
    "\u0154\ufe49\001\002\000\006\327\ufe4b\u0154\ufe4b\001\002\000" +
    "\010\267\u02ab\327\ufe47\u0154\ufe47\001\002\000\006\327\ufe4a" +
    "\u0154\ufe4a\001\002\000\006\327\ufe4c\u0154\ufe4c\001\002\000" +
    "\006\327\ufe4e\u0154\ufe4e\001\002\000\006\327\ufe48\u0154\ufe48" +
    "\001\002\000\046\002\ufe46\006\ufe46\015\ufe46\034\ufe46\043" +
    "\ufe46\060\ufe46\067\ufe46\072\ufe46\076\ufe46\077\ufe46\131\ufe46" +
    "\211\ufe46\215\ufe46\221\ufe46\224\ufe46\250\ufe46\256\ufe46\327" +
    "\ufe46\001\002\000\046\002\ufe45\006\ufe45\015\ufe45\034\ufe45" +
    "\043\ufe45\060\ufe45\067\ufe45\072\ufe45\076\ufe45\077\ufe45\131" +
    "\ufe45\211\ufe45\215\ufe45\221\ufe45\224\ufe45\250\ufe45\256\ufe45" +
    "\327\ufe45\001\002\000\046\002\ufe5f\006\ufe5f\015\ufe5f\034" +
    "\ufe5f\043\ufe5f\060\ufe5f\067\ufe5f\072\ufe5f\076\ufe5f\077\ufe5f" +
    "\131\ufe5f\211\ufe5f\215\ufe5f\221\ufe5f\224\ufe5f\250\ufe5f\256" +
    "\ufe5f\327\ufe5f\001\002\000\026\323\231\u0100\240\u0105\243" +
    "\u0110\246\u0111\215\u013c\242\u013d\225\u0141\072\u0159\275\u015d" +
    "\204\001\002\000\004\u015a\u02bb\001\002\000\010\170\u02bc" +
    "\u0141\ufe5b\u015d\ufe5b\001\002\000\006\u0141\ufe5c\u015d\ufe5c\001" +
    "\002\000\006\u0141\072\u015d\u0296\001\002\000\006\327\ufe5e" +
    "\u0154\ufe5e\001\002\000\006\327\ufe5a\u0154\ufe5a\001\002\000" +
    "\004\002\001\001\002\000\042\002\uffee\006\026\015\045" +
    "\034\020\043\022\060\037\067\030\072\uffee\076\004\077" +
    "\042\131\023\215\017\221\010\224\011\250\013\256\036" +
    "\001\002\000\006\002\ufff0\072\ufff0\001\002\000\004\002" +
    "\ufffe\001\002\000\042\002\uffee\006\026\015\045\034\020" +
    "\043\022\060\037\067\030\072\uffee\076\004\077\042\131" +
    "\023\215\017\221\010\224\011\250\013\256\036\001\002" +
    "\000\006\002\ufff6\072\ufff6\001\002\000\044\002\uffec\006" +
    "\uffec\015\uffec\034\uffec\043\uffec\060\uffec\067\uffec\072\uffec" +
    "\076\uffec\077\uffec\131\uffec\215\uffec\221\uffec\224\uffec\250" +
    "\uffec\256\uffec\327\043\001\002\000\042\002\uffee\006\026" +
    "\015\045\034\020\043\022\060\037\067\030\072\uffee\076" +
    "\004\077\042\131\023\215\017\221\010\224\011\250\013" +
    "\256\036\001\002\000\006\002\ufffb\072\ufffb\001\002\000" +
    "\006\327\057\u0154\060\001\002\000\006\125\u02d1\u0141\ufd5c" +
    "\001\002\000\006\125\u02d1\u0141\ufd5c\001\002\000\006\125" +
    "\u02d1\u0141\ufd5c\001\002\000\006\125\u02d1\u0141\ufd5c\001\002" +
    "\000\006\125\u02d1\u0141\ufd5c\001\002\000\006\125\u02d1\u0141" +
    "\ufd5c\001\002\000\006\125\u02d1\u0141\ufd5c\001\002\000\004" +
    "\100\u02d8\001\002\000\004\u0141\u02d3\001\002\000\010\327" +
    "\ufd59\u0154\ufd59\u0156\u02d5\001\002\000\006\327\ufd5e\u0154\ufd5e" +
    "\001\002\000\004\u0141\u02d7\001\002\000\006\327\ufd5b\u0154" +
    "\ufd5b\001\002\000\006\327\ufd5a\u0154\ufd5a\001\002\000\004" +
    "\u0141\ufd5d\001\002\000\004\u0141\u02da\001\002\000\006\327" +
    "\ufd62\u0154\ufd62\001\002\000\004\u0141\u02d3\001\002\000\006" +
    "\327\ufd60\u0154\ufd60\001\002\000\004\u0141\u02d3\001\002\000" +
    "\006\327\ufd61\u0154\ufd61\001\002\000\004\u0141\072\001\002" +
    "\000\010\327\ufd56\u0154\ufd56\u0155\u02e2\001\002\000\006\327" +
    "\ufd64\u0154\ufd64\001\002\000\004\u0141\072\001\002\000\006" +
    "\327\ufd58\u0154\ufd58\001\002\000\006\327\ufd57\u0154\ufd57\001" +
    "\002\000\004\u0141\u02e7\001\002\000\006\327\ufd63\u0154\ufd63" +
    "\001\002\000\010\327\ufd53\u0154\ufd53\u0155\u02e8\001\002\000" +
    "\004\u0141\u02e7\001\002\000\006\327\ufd55\u0154\ufd55\001\002" +
    "\000\006\327\ufd54\u0154\ufd54\001\002\000\004\u0141\u02d3\001" +
    "\002\000\006\327\ufd5f\u0154\ufd5f\001\002\000\044\002\ufd65" +
    "\006\ufd65\015\ufd65\034\ufd65\043\ufd65\060\ufd65\067\ufd65\072" +
    "\ufd65\076\ufd65\077\ufd65\131\ufd65\215\ufd65\221\ufd65\224\ufd65" +
    "\250\ufd65\256\ufd65\327\ufd65\001\002\000\042\002\uffee\006" +
    "\026\015\045\034\020\043\022\060\037\067\030\072\uffee" +
    "\076\004\077\042\131\023\215\017\221\010\224\011\250" +
    "\013\256\036\001\002\000\006\002\ufff2\072\ufff2\001\002" +
    "\000\004\u0141\u032f\001\002\000\006\045\u048c\u0141\u048e\001" +
    "\002\000\004\u0141\072\001\002\000\004\u0141\u0368\001\002" +
    "\000\006\327\ufd3f\u0154\ufd3f\001\002\000\004\u0141\u032f\001" +
    "\002\000\004\u0141\u02fa\001\002\000\006\327\057\u0154\060" +
    "\001\002\000\044\002\ufd42\006\ufd42\015\ufd42\034\ufd42\043" +
    "\ufd42\060\ufd42\067\ufd42\072\ufd42\076\ufd42\077\ufd42\131\ufd42" +
    "\215\ufd42\221\ufd42\224\ufd42\250\ufd42\256\ufd42\327\ufd42\001" +
    "\002\000\046\002\ufe36\006\ufe36\015\ufe36\034\ufe36\043\ufe36" +
    "\060\ufe36\067\ufe36\072\ufe36\076\ufe36\077\ufe36\131\ufe36\215" +
    "\ufe36\221\ufe36\224\ufe36\250\ufe36\256\ufe36\327\ufe36\u0154\ufe36" +
    "\001\002\000\006\u0156\u02fc\u0159\ufd7d\001\002\000\004\u0159" +
    "\u02fe\001\002\000\004\u0141\u02fd\001\002\000\004\u0159\ufd7e" +
    "\001\002\000\006\u015a\ufd7b\u015d\u0300\001\002\000\004\u015a" +
    "\u0310\001\002\000\004\u0141\u0301\001\002\000\040\011\u0302" +
    "\312\ufd79\322\ufd79\330\ufd79\345\ufd79\356\ufd79\361\ufd79\364" +
    "\ufd79\u0107\ufd79\u0113\ufd79\u011d\ufd79\u0120\ufd79\u012d\ufd79\u012e\ufd79" +
    "\u0141\ufd79\001\002\000\040\015\ufd7a\312\ufd7a\322\ufd7a\330" +
    "\ufd7a\345\ufd7a\356\ufd7a\361\ufd7a\364\ufd7a\u0107\ufd7a\u0113\ufd7a" +
    "\u011d\ufd7a\u0120\ufd7a\u012d\ufd7a\u012e\ufd7a\u0141\ufd7a\001\002\000" +
    "\036\312\u01de\322\u01db\330\u01d6\345\u01df\356\u01d9\361\u01cf" +
    "\364\u01d1\u0107\u01d3\u0113\u01d2\u011d\u01d0\u0120\u01d4\u012d\u01d5\u012e" +
    "\u01d7\u0141\u01da\001\002\000\010\u014c\u0306\u0155\ufd77\u015a\ufd77" +
    "\001\002\000\006\u0155\u030d\u015a\ufd6c\001\002\000\014\151" +
    "\u030a\u013c\u030b\u013d\u0309\u013e\u0308\u013f\u030c\001\002\000\006" +
    "\u0155\ufd78\u015a\ufd78\001\002\000\022\011\ufe41\106\ufe41\271" +
    "\ufe41\327\ufe41\u0138\ufe41\u0154\ufe41\u0155\ufe41\u015a\ufe41\001\002" +
    "\000\022\011\ufe43\106\ufe43\271\ufe43\327\ufe43\u0138\ufe43\u0154" +
    "\ufe43\u0155\ufe43\u015a\ufe43\001\002\000\022\011\ufe40\106\ufe40" +
    "\271\ufe40\327\ufe40\u0138\ufe40\u0154\ufe40\u0155\ufe40\u015a\ufe40\001" +
    "\002\000\022\011\ufe42\106\ufe42\271\ufe42\327\ufe42\u0138\ufe42" +
    "\u0154\ufe42\u0155\ufe42\u015a\ufe42\001\002\000\022\011\ufe44\106" +
    "\ufe44\271\ufe44\327\ufe44\u0138\ufe44\u0154\ufe44\u0155\ufe44\u015a\ufe44" +
    "\001\002\000\006\u015a\ufd7b\u015d\u0300\001\002\000\004\u015a" +
    "\ufd7c\001\002\000\004\u015a\ufd6d\001\002\000\004\u013b\u0311" +
    "\001\002\000\036\312\u01de\322\u01db\330\u01d6\345\u01df\356" +
    "\u01d9\361\u01cf\364\u01d1\u0107\u01d3\u0113\u01d2\u011d\u01d0\u0120\u01d4" +
    "\u012d\u01d5\u012e\u01d7\u0141\u01da\001\002\000\010\011\u0302\015" +
    "\ufd79\271\u0316\001\002\000\046\002\ufd75\006\ufd75\015\ufd75" +
    "\034\ufd75\043\ufd75\060\ufd75\067\ufd75\072\ufd75\076\ufd75\077" +
    "\ufd75\131\ufd75\215\ufd75\221\ufd75\224\ufd75\250\ufd75\256\ufd75" +
    "\327\ufd75\u0154\ufd75\001\002\000\046\002\ufd7f\006\ufd7f\015" +
    "\ufd7f\034\ufd7f\043\ufd7f\060\ufd7f\067\ufd7f\072\ufd7f\076\ufd7f" +
    "\077\ufd7f\131\ufd7f\215\ufd7f\221\ufd7f\224\ufd7f\250\ufd7f\256" +
    "\ufd7f\327\ufd7f\u0154\ufd7f\001\002\000\004\015\u031d\001\002" +
    "\000\004\u013b\u0317\001\002\000\004\151\u0318\001\002\000" +
    "\004\156\u0319\001\002\000\004\151\u031a\001\002\000\004" +
    "\355\u031b\001\002\000\006\011\u0302\015\ufd79\001\002\000" +
    "\046\002\ufd76\006\ufd76\015\ufd76\034\ufd76\043\ufd76\060\ufd76" +
    "\067\ufd76\072\ufd76\076\ufd76\077\ufd76\131\ufd76\215\ufd76\221" +
    "\ufd76\224\ufd76\250\ufd76\256\ufd76\327\ufd76\u0154\ufd76\001\002" +
    "\000\012\060\037\131\023\224\011\256\036\001\002\000" +
    "\014\060\037\131\023\211\ufd6e\224\011\256\036\001\002" +
    "\000\014\060\ufd71\131\ufd71\211\ufd71\224\ufd71\256\ufd71\001" +
    "\002\000\006\327\057\u0154\060\001\002\000\014\060\ufd72" +
    "\131\ufd72\211\ufd72\224\ufd72\256\ufd72\001\002\000\014\060" +
    "\ufd70\131\ufd70\211\ufd70\224\ufd70\256\ufd70\001\002\000\014" +
    "\060\ufd73\131\ufd73\211\ufd73\224\ufd73\256\ufd73\001\002\000" +
    "\004\211\u0327\001\002\000\014\060\037\131\023\211\ufd6e" +
    "\224\011\256\036\001\002\000\004\211\ufd6f\001\002\000" +
    "\026\323\231\u0100\240\u0105\243\u0110\246\u0111\215\u013c\242" +
    "\u013d\225\u0141\072\u0159\275\u015d\204\001\002\000\004\072" +
    "\u0329\001\002\000\006\327\057\u0154\060\001\002\000\046" +
    "\002\ufd74\006\ufd74\015\ufd74\034\ufd74\043\ufd74\060\ufd74\067" +
    "\ufd74\072\ufd74\076\ufd74\077\ufd74\131\ufd74\215\ufd74\221\ufd74" +
    "\224\ufd74\250\ufd74\256\ufd74\327\ufd74\u0154\ufd74\001\002\000" +
    "\006\072\ufd69\u0154\u032d\001\002\000\004\072\ufd6b\001\002" +
    "\000\004\072\ufd6a\001\002\000\046\002\ufe39\006\ufe39\015" +
    "\ufe39\034\ufe39\043\ufe39\060\ufe39\067\ufe39\072\ufe39\076\ufe39" +
    "\077\ufe39\131\ufe39\215\ufe39\221\ufe39\224\ufe39\250\ufe39\256" +
    "\ufe39\327\ufe39\u0154\ufe39\001\002\000\010\u0154\u0334\u0156\u0333" +
    "\u015d\u0335\001\002\000\046\002\ufe27\006\ufe27\015\ufe27\034" +
    "\ufe27\043\ufe27\060\ufe27\067\ufe27\072\ufe27\076\ufe27\077\ufe27" +
    "\131\ufe27\215\ufe27\221\ufe27\224\ufe27\250\ufe27\256\ufe27\327" +
    "\ufe27\u0154\ufe27\001\002\000\046\002\ufe29\006\ufe29\015\ufe29" +
    "\034\ufe29\043\ufe29\060\ufe29\067\ufe29\072\ufe29\076\ufe29\077" +
    "\ufe29\131\ufe29\215\ufe29\221\ufe29\224\ufe29\250\ufe29\256\ufe29" +
    "\327\ufe29\u0154\ufe29\001\002\000\046\002\ufe2b\006\ufe2b\015" +
    "\ufe2b\034\ufe2b\043\ufe2b\060\ufe2b\067\ufe2b\072\ufe2b\076\ufe2b" +
    "\077\ufe2b\131\ufe2b\215\ufe2b\221\ufe2b\224\ufe2b\250\ufe2b\256" +
    "\ufe2b\327\ufe2b\u0154\ufe2b\001\002\000\004\u0141\u0365\001\002" +
    "\000\004\u013c\u0363\001\002\000\004\u0141\u0336\001\002\000" +
    "\040\011\u0337\312\ufe24\322\ufe24\330\ufe24\345\ufe24\356\ufe24" +
    "\361\ufe24\364\ufe24\u0107\ufe24\u0113\ufe24\u011d\ufe24\u0120\ufe24\u012d" +
    "\ufe24\u012e\ufe24\u0141\ufe24\001\002\000\036\312\ufe25\322\ufe25" +
    "\330\ufe25\345\ufe25\356\ufe25\361\ufe25\364\ufe25\u0107\ufe25\u0113" +
    "\ufe25\u011d\ufe25\u0120\ufe25\u012d\ufe25\u012e\ufe25\u0141\ufe25\001\002" +
    "\000\036\312\u01de\322\u01db\330\u01d6\345\u01df\356\u01d9\361" +
    "\u01cf\364\u01d1\u0107\u01d3\u0113\u01d2\u011d\u01d0\u0120\u01d4\u012d\u01d5" +
    "\u012e\u01d7\u0141\u01da\001\002\000\020\011\u0340\106\u033c\263" +
    "\u0342\271\u0341\u0138\u033d\u014c\u033f\u0155\u033e\001\002\000\046" +
    "\002\ufe26\006\ufe26\015\ufe26\034\ufe26\043\ufe26\060\ufe26\067" +
    "\ufe26\072\ufe26\076\ufe26\077\ufe26\131\ufe26\215\ufe26\221\ufe26" +
    "\224\ufe26\250\ufe26\256\ufe26\327\ufe26\u0154\ufe26\001\002\000" +
    "\046\002\ufe1c\006\ufe1c\015\ufe1c\034\ufe1c\043\ufe1c\060\ufe1c" +
    "\067\ufe1c\072\ufe1c\076\ufe1c\077\ufe1c\131\ufe1c\215\ufe1c\221" +
    "\ufe1c\224\ufe1c\250\ufe1c\256\ufe1c\327\ufe1c\u0154\ufe1c\001\002" +
    "\000\004\206\u0361\001\002\000\012\011\u0340\106\u033c\271" +
    "\u0341\u0155\u033e\001\002\000\004\u015d\u0335\001\002\000\014" +
    "\151\u030a\u013c\u030b\u013d\u0309\u013e\u0308\u013f\u030c\001\002\000" +
    "\014\015\u0350\060\ufe12\131\ufe12\224\ufe12\256\ufe12\001\002" +
    "\000\006\076\u034a\077\u0349\001\002\000\016\011\u0340\106" +
    "\u033c\271\u0341\u0138\u033d\u014c\u033f\u0155\u033e\001\002\000\046" +
    "\002\ufe1e\006\ufe1e\015\ufe1e\034\ufe1e\043\ufe1e\060\ufe1e\067" +
    "\ufe1e\072\ufe1e\076\ufe1e\077\ufe1e\131\ufe1e\215\ufe1e\221\ufe1e" +
    "\224\ufe1e\250\ufe1e\256\ufe1e\327\ufe1e\u0154\ufe1e\001\002\000" +
    "\046\002\ufe15\006\ufe15\015\ufe15\034\ufe15\043\ufe15\060\ufe15" +
    "\067\ufe15\072\ufe15\076\ufe15\077\ufe15\131\ufe15\215\ufe15\221" +
    "\ufe15\224\ufe15\250\ufe15\256\ufe15\327\ufe15\u0154\ufe15\001\002" +
    "\000\046\002\ufe20\006\ufe20\015\ufe20\034\ufe20\043\ufe20\060" +
    "\ufe20\067\ufe20\072\ufe20\076\ufe20\077\ufe20\131\ufe20\215\ufe20" +
    "\221\ufe20\224\ufe20\250\ufe20\256\ufe20\327\ufe20\u0154\ufe20\001" +
    "\002\000\046\002\ufe22\006\ufe22\015\ufe22\034\ufe22\043\ufe22" +
    "\060\ufe22\067\ufe22\072\ufe22\076\ufe22\077\ufe22\131\ufe22\215" +
    "\ufe22\221\ufe22\224\ufe22\250\ufe22\256\ufe22\327\ufe22\u0154\ufe22" +
    "\001\002\000\046\002\ufe1a\006\ufe1a\015\ufe1a\034\ufe1a\043" +
    "\ufe1a\060\ufe1a\067\ufe1a\072\ufe1a\076\ufe1a\077\ufe1a\131\ufe1a" +
    "\215\ufe1a\221\ufe1a\224\ufe1a\250\ufe1a\256\ufe1a\327\ufe1a\u0154" +
    "\ufe1a\001\002\000\046\002\ufe23\006\ufe23\015\ufe23\034\ufe23" +
    "\043\ufe23\060\ufe23\067\ufe23\072\ufe23\076\ufe23\077\ufe23\131" +
    "\ufe23\215\ufe23\221\ufe23\224\ufe23\250\ufe23\256\ufe23\327\ufe23" +
    "\u0154\ufe23\001\002\000\004\011\ufe19\001\002\000\004\011" +
    "\ufe18\001\002\000\004\011\u034c\001\002\000\004\u013f\u034d" +
    "\001\002\000\006\011\ufe17\106\ufe17\001\002\000\006\011" +
    "\u0340\106\u033c\001\002\000\046\002\ufe1b\006\ufe1b\015\ufe1b" +
    "\034\ufe1b\043\ufe1b\060\ufe1b\067\ufe1b\072\ufe1b\076\ufe1b\077" +
    "\ufe1b\131\ufe1b\215\ufe1b\221\ufe1b\224\ufe1b\250\ufe1b\256\ufe1b" +
    "\327\ufe1b\u0154\ufe1b\001\002\000\012\060\ufe13\131\ufe13\224" +
    "\ufe13\256\ufe13\001\002\000\012\060\037\131\023\224\011" +
    "\256\036\001\002\000\014\060\ufe0f\072\ufe0f\131\ufe0f\224" +
    "\ufe0f\256\ufe0f\001\002\000\006\327\057\u0154\060\001\002" +
    "\000\014\060\037\072\u0359\131\023\224\011\256\036\001" +
    "\002\000\014\060\ufe10\072\ufe10\131\ufe10\224\ufe10\256\ufe10" +
    "\001\002\000\014\060\ufe0e\072\ufe0e\131\ufe0e\224\ufe0e\256" +
    "\ufe0e\001\002\000\006\327\057\u0154\060\001\002\000\014" +
    "\060\037\072\u0359\131\023\224\011\256\036\001\002\000" +
    "\006\327\ufe0c\u0154\ufe0c\001\002\000\006\327\ufe0d\u0154\ufe0d" +
    "\001\002\000\046\002\ufe14\006\ufe14\015\ufe14\034\ufe14\043" +
    "\ufe14\060\ufe14\067\ufe14\072\ufe14\076\ufe14\077\ufe14\131\ufe14" +
    "\215\ufe14\221\ufe14\224\ufe14\250\ufe14\256\ufe14\327\ufe14\u0154" +
    "\ufe14\001\002\000\014\060\ufe11\072\ufe11\131\ufe11\224\ufe11" +
    "\256\ufe11\001\002\000\014\011\u0340\106\u033c\271\u0341\u0138" +
    "\u033d\u0155\u033e\001\002\000\046\002\ufe21\006\ufe21\015\ufe21" +
    "\034\ufe21\043\ufe21\060\ufe21\067\ufe21\072\ufe21\076\ufe21\077" +
    "\ufe21\131\ufe21\215\ufe21\221\ufe21\224\ufe21\250\ufe21\256\ufe21" +
    "\327\ufe21\u0154\ufe21\001\002\000\046\002\ufe1d\006\ufe1d\015" +
    "\ufe1d\034\ufe1d\043\ufe1d\060\ufe1d\067\ufe1d\072\ufe1d\076\ufe1d" +
    "\077\ufe1d\131\ufe1d\215\ufe1d\221\ufe1d\224\ufe1d\250\ufe1d\256" +
    "\ufe1d\327\ufe1d\u0154\ufe1d\001\002\000\046\002\ufe1f\006\ufe1f" +
    "\015\ufe1f\034\ufe1f\043\ufe1f\060\ufe1f\067\ufe1f\072\ufe1f\076" +
    "\ufe1f\077\ufe1f\131\ufe1f\215\ufe1f\221\ufe1f\224\ufe1f\250\ufe1f" +
    "\256\ufe1f\327\ufe1f\u0154\ufe1f\001\002\000\004\011\u0340\001" +
    "\002\000\046\002\ufe16\006\ufe16\015\ufe16\034\ufe16\043\ufe16" +
    "\060\ufe16\067\ufe16\072\ufe16\076\ufe16\077\ufe16\131\ufe16\215" +
    "\ufe16\221\ufe16\224\ufe16\250\ufe16\256\ufe16\327\ufe16\u0154\ufe16" +
    "\001\002\000\004\u015d\u0335\001\002\000\046\002\ufe28\006" +
    "\ufe28\015\ufe28\034\ufe28\043\ufe28\060\ufe28\067\ufe28\072\ufe28" +
    "\076\ufe28\077\ufe28\131\ufe28\215\ufe28\221\ufe28\224\ufe28\250" +
    "\ufe28\256\ufe28\327\ufe28\u0154\ufe28\001\002\000\006\u0154\u0334" +
    "\u015d\u0335\001\002\000\046\002\ufe2a\006\ufe2a\015\ufe2a\034" +
    "\ufe2a\043\ufe2a\060\ufe2a\067\ufe2a\072\ufe2a\076\ufe2a\077\ufe2a" +
    "\131\ufe2a\215\ufe2a\221\ufe2a\224\ufe2a\250\ufe2a\256\ufe2a\327" +
    "\ufe2a\u0154\ufe2a\001\002\000\046\002\ufe37\006\ufe37\015\ufe37" +
    "\034\ufe37\043\ufe37\060\ufe37\067\ufe37\072\ufe37\076\ufe37\077" +
    "\ufe37\131\ufe37\215\ufe37\221\ufe37\224\ufe37\250\ufe37\256\ufe37" +
    "\327\ufe37\u0154\ufe37\001\002\000\010\011\ufe09\u0156\u036a\u0159" +
    "\ufe09\001\002\000\006\011\u036d\u0159\u036e\001\002\000\004" +
    "\u0141\u036b\001\002\000\006\011\ufe0a\u0159\ufe0a\001\002\000" +
    "\046\002\ufe0b\006\ufe0b\015\ufe0b\034\ufe0b\043\ufe0b\060\ufe0b" +
    "\067\ufe0b\072\ufe0b\076\ufe0b\077\ufe0b\131\ufe0b\215\ufe0b\221" +
    "\ufe0b\224\ufe0b\250\ufe0b\256\ufe0b\327\ufe0b\u0154\ufe0b\001\002" +
    "\000\004\224\011\001\002\000\006\u0141\u036f\u015a\ufe05\001" +
    "\002\000\006\u0155\u037a\u015a\ufe03\001\002\000\004\u015a\u0371" +
    "\001\002\000\004\011\u0372\001\002\000\004\224\011\001" +
    "\002\000\010\271\u0375\327\057\u0154\060\001\002\000\046" +
    "\002\ufe01\006\ufe01\015\ufe01\034\ufe01\043\ufe01\060\ufe01\067" +
    "\ufe01\072\ufe01\076\ufe01\077\ufe01\131\ufe01\215\ufe01\221\ufe01" +
    "\224\ufe01\250\ufe01\256\ufe01\327\ufe01\u0154\ufe01\001\002\000" +
    "\004\025\u0377\001\002\000\046\002\ufe08\006\ufe08\015\ufe08" +
    "\034\ufe08\043\ufe08\060\ufe08\067\ufe08\072\ufe08\076\ufe08\077" +
    "\ufe08\131\ufe08\215\ufe08\221\ufe08\224\ufe08\250\ufe08\256\ufe08" +
    "\327\ufe08\u0154\ufe08\001\002\000\004\163\u0378\001\002\000" +
    "\006\327\057\u0154\060\001\002\000\046\002\ufe02\006\ufe02" +
    "\015\ufe02\034\ufe02\043\ufe02\060\ufe02\067\ufe02\072\ufe02\076" +
    "\ufe02\077\ufe02\131\ufe02\215\ufe02\221\ufe02\224\ufe02\250\ufe02" +
    "\256\ufe02\327\ufe02\u0154\ufe02\001\002\000\004\u0141\u037c\001" +
    "\002\000\004\u015a\ufe06\001\002\000\006\u0155\u037a\u015a\ufe03" +
    "\001\002\000\004\u015a\ufe04\001\002\000\010\271\u0375\327" +
    "\057\u0154\060\001\002\000\046\002\ufe07\006\ufe07\015\ufe07" +
    "\034\ufe07\043\ufe07\060\ufe07\067\ufe07\072\ufe07\076\ufe07\077" +
    "\ufe07\131\ufe07\215\ufe07\221\ufe07\224\ufe07\250\ufe07\256\ufe07" +
    "\327\ufe07\u0154\ufe07\001\002\000\016\004\u0386\006\u0384\025" +
    "\u0383\067\u0387\146\u0382\271\u0385\001\002\000\006\327\ufd41" +
    "\u0154\ufd41\001\002\000\004\036\u048a\001\002\000\004\036" +
    "\u0488\001\002\000\004\033\u0486\001\002\000\006\025\u0480" +
    "\146\u047f\001\002\000\022\025\ufdd2\036\u039d\057\ufdd2\107" +
    "\ufdd2\174\ufdd2\254\ufdd2\373\ufdd2\u0141\u03a0\001\002\000\012" +
    "\033\u038b\036\u038c\125\u038f\u0141\u038e\001\002\000\006\327" +
    "\ufd3e\u0154\ufd3e\001\002\000\006\327\ufd20\u0154\ufd20\001\002" +
    "\000\006\327\ufd22\u0154\ufd22\001\002\000\006\125\u0394\u0141" +
    "\ufd1c\001\002\000\010\033\u038b\125\u038f\u0141\u038e\001\002" +
    "\000\006\327\ufd3b\u0154\ufd3b\001\002\000\006\327\ufd1f\u0154" +
    "\ufd1f\001\002\000\004\100\u0390\001\002\000\006\033\u038b" +
    "\u0141\u038e\001\002\000\006\327\ufd21\u0154\ufd21\001\002\000" +
    "\006\327\ufd23\u0154\ufd23\001\002\000\004\u0141\u0396\001\002" +
    "\000\004\100\u0395\001\002\000\004\u0141\ufd1d\001\002\000" +
    "\010\327\ufd19\u0154\ufd19\u0155\u0398\001\002\000\006\327\ufd1e" +
    "\u0154\ufd1e\001\002\000\004\u0141\u039a\001\002\000\006\327" +
    "\ufd1b\u0154\ufd1b\001\002\000\010\327\ufd19\u0154\ufd19\u0155\u0398" +
    "\001\002\000\006\327\ufd1a\u0154\ufd1a\001\002\000\010\327" +
    "\ufd24\u0154\ufd24\u0155\u047a\001\002\000\004\u0141\u047d\001\002" +
    "\000\006\327\ufd3c\u0154\ufd3c\001\002\000\010\327\ufd24\u0154" +
    "\ufd24\u0155\u047a\001\002\000\036\312\u01de\322\u01db\330\u01d6" +
    "\345\u01df\356\u01d9\361\u01cf\364\u01d1\u0107\u01d3\u0113\u01d2\u011d" +
    "\u01d0\u0120\u01d4\u012d\u01d5\u012e\u01d7\u0141\u01da\001\002\000\016" +
    "\025\u03a4\057\u03a2\107\u03a3\174\u03a5\254\u03a8\373\u03a6\001" +
    "\002\000\014\u013c\u0405\u013d\u0404\u013f\u0407\u0141\u0406\u015d\u0408" +
    "\001\002\000\004\136\u03e3\001\002\000\006\150\u03d9\u0159" +
    "\u03db\001\002\000\004\136\u03d6\001\002\000\004\u0159\u03c3" +
    "\001\002\000\012\327\ufdd4\u0154\ufdd4\u0155\ufdd4\u015a\ufdd4\001" +
    "\002\000\006\030\u03a9\u0159\ufdc9\001\002\000\004\u0159\ufdca" +
    "\001\002\000\004\u0159\u03ac\001\002\000\012\327\ufdd0\u0154" +
    "\ufdd0\u0155\ufdd0\u015a\ufdd0\001\002\000\004\u0141\u03ad\001\002" +
    "\000\012\012\u03af\062\u03ae\u0155\ufdc6\u015a\ufdc6\001\002\000" +
    "\006\u0155\ufdc7\u015a\ufdc7\001\002\000\006\u0155\ufdc8\u015a\ufdc8" +
    "\001\002\000\006\u0155\u03b1\u015a\ufdc4\001\002\000\004\u0141" +
    "\u03c1\001\002\000\004\u015a\u03b3\001\002\000\020\156\u03b6" +
    "\271\u03b7\327\ufdc1\u0141\u03b8\u0154\ufdc1\u0155\ufdc1\u015a\ufdc1\001" +
    "\002\000\012\327\ufdc2\u0154\ufdc2\u0155\ufdc2\u015a\ufdc2\001\002" +
    "\000\012\327\ufdcb\u0154\ufdcb\u0155\ufdcb\u015a\ufdcb\001\002\000" +
    "\004\u0141\u03bd\001\002\000\004\105\u03b9\001\002\000\012" +
    "\327\ufdbf\u0154\ufdbf\u0155\ufdbf\u015a\ufdbf\001\002\000\004\u014c" +
    "\u03ba\001\002\000\004\u013c\u03bb\001\002\000\006\156\u03b6" +
    "\u0141\u03b8\001\002\000\012\327\ufdc3\u0154\ufdc3\u0155\ufdc3\u015a" +
    "\ufdc3\001\002\000\004\u0159\u03be\001\002\000\004\u0141\u03bf" +
    "\001\002\000\004\u015a\u03c0\001\002\000\012\327\ufdc0\u0154" +
    "\ufdc0\u0155\ufdc0\u015a\ufdc0\001\002\000\006\u0155\u03b1\u015a\ufdc4" +
    "\001\002\000\004\u015a\ufdc5\001\002\000\004\u0141\u03c5\001" +
    "\002\000\012\327\ufdce\u0154\ufdce\u0155\ufdce\u015a\ufdce\001\002" +
    "\000\004\243\u03c6\001\002\000\004\u0141\u03c7\001\002\000" +
    "\006\u0155\u03c8\u015a\ufdaf\001\002\000\004\u0141\u03d2\001\002" +
    "\000\004\u015a\u03ca\001\002\000\004\156\u03cb\001\002\000" +
    "\004\060\u03cd\001\002\000\012\327\ufdb1\u0154\ufdb1\u0155\ufdb1" +
    "\u015a\ufdb1\001\002\000\006\023\u03cf\u0125\u03d0\001\002\000" +
    "\012\327\ufdae\u0154\ufdae\u0155\ufdae\u015a\ufdae\001\002\000\012" +
    "\327\ufdac\u0154\ufdac\u0155\ufdac\u015a\ufdac\001\002\000\004\276" +
    "\u03d1\001\002\000\012\327\ufdad\u0154\ufdad\u0155\ufdad\u015a\ufdad" +
    "\001\002\000\004\243\u03d3\001\002\000\004\u0141\u03d4\001" +
    "\002\000\006\u0155\u03c8\u015a\ufdaf\001\002\000\004\u015a\ufdb0" +
    "\001\002\000\006\030\u03a9\u0159\ufdc9\001\002\000\004\u0159" +
    "\u03ac\001\002\000\012\327\ufdd1\u0154\ufdd1\u0155\ufdd1\u015a\ufdd1" +
    "\001\002\000\004\106\u03de\001\002\000\012\327\ufdcc\u0154" +
    "\ufdcc\u0155\ufdcc\u015a\ufdcc\001\002\000\114\024\uffa6\037\uffa6" +
    "\042\uffa6\050\uffa6\110\uffa6\140\uffa6\150\145\152\uffa6\214" +
    "\uffa6\230\uffa6\231\uffa6\236\uffa6\323\uffa6\341\uffa6\345\uffa6" +
    "\360\uffa6\376\uffa6\u0100\uffa6\u0105\uffa6\u010d\uffa6\u010e\144\u0110" +
    "\uffa6\u0111\uffa6\u0112\uffa6\u0116\uffa6\u0118\uffa6\u0119\uffa6\u0120\uffa6" +
    "\u0122\uffa6\u0123\uffa6\u0137\uffa6\u013c\uffa6\u013d\uffa6\u013f\uffa6\u0141" +
    "\uffa6\u0159\147\u015d\uffa6\001\002\000\004\u015a\u03dd\001\002" +
    "\000\012\327\ufdaa\u0154\ufdaa\u0155\ufdaa\u015a\ufdaa\001\002\000" +
    "\004\206\u03df\001\002\000\004\u0159\u03e0\001\002\000\114" +
    "\024\uffa6\037\uffa6\042\uffa6\050\uffa6\110\uffa6\140\uffa6\150" +
    "\145\152\uffa6\214\uffa6\230\uffa6\231\uffa6\236\uffa6\323\uffa6" +
    "\341\uffa6\345\uffa6\360\uffa6\376\uffa6\u0100\uffa6\u0105\uffa6\u010d" +
    "\uffa6\u010e\144\u0110\uffa6\u0111\uffa6\u0112\uffa6\u0116\uffa6\u0118\uffa6" +
    "\u0119\uffa6\u0120\uffa6\u0122\uffa6\u0123\uffa6\u0137\uffa6\u013c\uffa6\u013d" +
    "\uffa6\u013f\uffa6\u0141\uffa6\u0159\147\u015d\uffa6\001\002\000\004" +
    "\u015a\u03e2\001\002\000\012\327\ufdab\u0154\ufdab\u0155\ufdab\u015a" +
    "\ufdab\001\002\000\004\u0159\u03e5\001\002\000\012\327\ufdcf" +
    "\u0154\ufdcf\u0155\ufdcf\u015a\ufdcf\001\002\000\004\u0141\u03e6\001" +
    "\002\000\006\u0155\u03b1\u015a\ufdc4\001\002\000\004\u015a\u03e8" +
    "\001\002\000\004\205\u03e9\001\002\000\004\u0141\u03ea\001" +
    "\002\000\006\156\u03eb\u0159\u03ee\001\002\000\006\060\u03f4" +
    "\256\u03f5\001\002\000\012\327\ufdbc\u0154\ufdbc\u0155\ufdbc\u015a" +
    "\ufdbc\001\002\000\012\327\ufdbe\u0154\ufdbe\u0155\ufdbe\u015a\ufdbe" +
    "\001\002\000\004\u0141\u03ef\001\002\000\006\u0155\u03b1\u015a" +
    "\ufdc4\001\002\000\004\u015a\u03f1\001\002\000\004\156\u03eb" +
    "\001\002\000\012\327\ufdbd\u0154\ufdbd\u0155\ufdbd\u015a\ufdbd\001" +
    "\002\000\010\023\u03f8\231\u03f7\u0125\u03f9\001\002\000\010" +
    "\023\ufdba\231\ufdba\u0125\ufdba\001\002\000\010\023\ufdb9\231" +
    "\ufdb9\u0125\ufdb9\001\002\000\014\150\u03fe\327\ufdb2\u0154\ufdb2" +
    "\u0155\ufdb2\u015a\ufdb2\001\002\000\006\057\u03fb\151\u03fd\001" +
    "\002\000\014\150\ufdb7\327\ufdb7\u0154\ufdb7\u0155\ufdb7\u015a\ufdb7" +
    "\001\002\000\004\276\u03fa\001\002\000\014\150\ufdb8\327" +
    "\ufdb8\u0154\ufdb8\u0155\ufdb8\u015a\ufdb8\001\002\000\014\150\ufdb4" +
    "\327\ufdb4\u0154\ufdb4\u0155\ufdb4\u015a\ufdb4\001\002\000\014\150" +
    "\ufdb6\327\ufdb6\u0154\ufdb6\u0155\ufdb6\u015a\ufdb6\001\002\000\014" +
    "\150\ufdb5\327\ufdb5\u0154\ufdb5\u0155\ufdb5\u015a\ufdb5\001\002\000" +
    "\004\106\u0400\001\002\000\012\327\ufdbb\u0154\ufdbb\u0155\ufdbb" +
    "\u015a\ufdbb\001\002\000\004\206\u0401\001\002\000\012\327" +
    "\ufdb3\u0154\ufdb3\u0155\ufdb3\u015a\ufdb3\001\002\000\014\106\u040b" +
    "\327\ufda5\u0154\ufda5\u0155\ufda5\u015a\ufda5\001\002\000\012\327" +
    "\ufdcd\u0154\ufdcd\u0155\ufdcd\u015a\ufdcd\001\002\000\014\106\ufdd5" +
    "\327\ufdd5\u0154\ufdd5\u0155\ufdd5\u015a\ufdd5\001\002\000\014\106" +
    "\ufdd6\327\ufdd6\u0154\ufdd6\u0155\ufdd6\u015a\ufdd6\001\002\000\014" +
    "\106\ufdd8\327\ufdd8\u0154\ufdd8\u0155\ufdd8\u015a\ufdd8\001\002\000" +
    "\014\106\ufdd7\327\ufdd7\u0154\ufdd7\u0155\ufdd7\u015a\ufdd7\001\002" +
    "\000\004\u0141\u0409\001\002\000\014\106\ufdd9\327\ufdd9\u0154" +
    "\ufdd9\u0155\ufdd9\u015a\ufdd9\001\002\000\012\327\ufda7\u0154\ufda7" +
    "\u0155\ufda7\u015a\ufda7\001\002\000\004\u0141\u040c\001\002\000" +
    "\014\271\u040d\327\ufda8\u0154\ufda8\u0155\ufda8\u015a\ufda8\001\002" +
    "\000\004\262\u040f\001\002\000\012\327\ufda6\u0154\ufda6\u0155" +
    "\ufda6\u015a\ufda6\001\002\000\012\327\ufda9\u0154\ufda9\u0155\ufda9" +
    "\u015a\ufda9\001\002\000\044\025\ufdfe\032\u041f\036\u0418\057" +
    "\ufdfe\107\ufdfe\122\u0411\150\u041e\151\u0415\174\ufdfe\205\ufdfe" +
    "\217\u0419\254\ufdfe\271\u041d\327\ufd9c\u0154\ufd9c\u0155\ufd9c\u015a" +
    "\ufd9c\001\002\000\040\025\ufdfe\036\u0418\057\ufdfe\107\ufdfe" +
    "\150\u0471\151\ufdfe\174\ufdfe\205\ufdfe\217\u0419\254\ufdfe\327" +
    "\ufd92\u0154\ufd92\u0155\ufd92\u0159\u0470\u015a\ufd92\001\002\000\012" +
    "\327\ufd93\u0154\ufd93\u0155\ufd93\u015a\ufd93\001\002\000\022\025" +
    "\ufdfb\057\ufdfb\107\ufdfb\150\u0429\151\u042b\174\ufdfb\205\ufdfb" +
    "\254\ufdfb\001\002\000\012\327\ufd94\u0154\ufd94\u0155\ufd94\u015a" +
    "\ufd94\001\002\000\042\025\ufdfe\036\u0418\057\ufdfe\107\ufdfe" +
    "\122\u0411\150\ufdfe\151\ufdfe\174\ufdfe\205\ufdfe\217\u0419\254" +
    "\ufdfe\271\u041d\327\ufd9c\u0154\ufd9c\u0155\ufd9c\u015a\ufd9c\001\002" +
    "\000\012\327\ufd9a\u0154\ufd9a\u0155\ufd9a\u015a\ufd9a\001\002\000" +
    "\012\327\ufd9e\u0154\ufd9e\u0155\ufd9e\u015a\ufd9e\001\002\000\004" +
    "\u0141\u0427\001\002\000\034\025\ufdfe\036\u0418\057\ufdfe\107" +
    "\ufdfe\150\ufdfe\151\ufdfe\174\ufdfe\205\ufdfe\254\ufdfe\327\ufd92" +
    "\u0154\ufd92\u0155\ufd92\u015a\ufd92\001\002\000\012\327\ufd9f\u0154" +
    "\ufd9f\u0155\ufd9f\u015a\ufd9f\001\002\000\012\327\ufda2\u0154\ufda2" +
    "\u0155\ufda2\u015a\ufda2\001\002\000\012\327\ufda4\u0154\ufda4\u0155" +
    "\ufda4\u015a\ufda4\001\002\000\004\262\u0424\001\002\000\004" +
    "\151\u0422\001\002\000\004\u0141\u0420\001\002\000\042\025" +
    "\ufdfe\036\u0418\057\ufdfe\107\ufdfe\122\u0411\150\u041e\151\u0415" +
    "\174\ufdfe\205\ufdfe\217\u0419\254\ufdfe\271\u041d\327\ufd9c\u0154" +
    "\ufd9c\u0155\ufd9c\u015a\ufd9c\001\002\000\012\327\ufda3\u0154\ufda3" +
    "\u0155\ufda3\u015a\ufda3\001\002\000\042\025\ufdfe\036\u0418\057" +
    "\ufdfe\107\ufdfe\122\u0411\150\ufdfe\151\ufdfe\174\ufdfe\205\ufdfe" +
    "\217\u0419\254\ufdfe\271\u041d\327\ufd9c\u0154\ufd9c\u0155\ufd9c\u015a" +
    "\ufd9c\001\002\000\012\327\ufda0\u0154\ufda0\u0155\ufda0\u015a\ufda0" +
    "\001\002\000\036\025\ufdfe\036\u0418\057\ufdfe\107\ufdfe\150" +
    "\ufdfe\151\ufdfe\174\ufdfe\205\ufdfe\217\u0419\254\ufdfe\327\ufd92" +
    "\u0154\ufd92\u0155\ufd92\u015a\ufd92\001\002\000\012\327\ufd9b\u0154" +
    "\ufd9b\u0155\ufd9b\u015a\ufd9b\001\002\000\012\327\ufd95\u0154\ufd95" +
    "\u0155\ufd95\u015a\ufd95\001\002\000\022\025\ufdff\057\ufdff\107" +
    "\ufdff\150\ufdff\151\ufdff\174\ufdff\205\ufdff\254\ufdff\001\002" +
    "\000\012\327\ufda1\u0154\ufda1\u0155\ufda1\u015a\ufda1\001\002\000" +
    "\004\151\u046c\001\002\000\016\025\u042e\057\u042c\107\u042d" +
    "\174\u042f\205\ufdeb\254\u0433\001\002\000\016\025\ufdfd\057" +
    "\ufdfd\107\ufdfd\174\ufdfd\205\ufdfd\254\ufdfd\001\002\000\024" +
    "\327\ufdda\u013c\u0405\u013d\u0404\u013f\u0407\u0141\u0406\u0154\ufdda\u0155" +
    "\ufdda\u015a\ufdda\u015d\u0408\001\002\000\004\136\u0469\001\002" +
    "\000\006\150\u0462\u0159\ufddc\001\002\000\004\136\u0460\001" +
    "\002\000\012\327\ufe00\u0154\ufe00\u0155\ufe00\u015a\ufe00\001\002" +
    "\000\004\205\u0449\001\002\000\012\327\ufdf8\u0154\ufdf8\u0155" +
    "\ufdf8\u015a\ufdf8\001\002\000\020\030\u0436\156\u0437\271\u0438" +
    "\327\ufdee\u0154\ufdee\u0155\ufdee\u015a\ufdee\001\002\000\012\327" +
    "\ufdf4\u0154\ufdf4\u0155\ufdf4\u015a\ufdf4\001\002\000\012\327\ufdf9" +
    "\u0154\ufdf9\u0155\ufdf9\u015a\ufdf9\001\002\000\016\156\u0437\271" +
    "\u0438\327\ufdee\u0154\ufdee\u0155\ufdee\u015a\ufdee\001\002\000\004" +
    "\u0141\u0444\001\002\000\006\105\u043b\u0159\u043a\001\002\000" +
    "\012\327\ufdf2\u0154\ufdf2\u0155\ufdf2\u015a\ufdf2\001\002\000\004" +
    "\105\u0440\001\002\000\004\u014c\u043e\001\002\000\014\156" +
    "\u0437\327\ufdee\u0154\ufdee\u0155\ufdee\u015a\ufdee\001\002\000\012" +
    "\327\ufdf3\u0154\ufdf3\u0155\ufdf3\u015a\ufdf3\001\002\000\004\u013c" +
    "\u043f\001\002\000\014\156\ufdf1\327\ufdf1\u0154\ufdf1\u0155\ufdf1" +
    "\u015a\ufdf1\001\002\000\004\u014c\u0441\001\002\000\004\u013c" +
    "\u0442\001\002\000\004\u015a\u0443\001\002\000\014\156\ufdf0" +
    "\327\ufdf0\u0154\ufdf0\u0155\ufdf0\u015a\ufdf0\001\002\000\004\u0159" +
    "\u0445\001\002\000\004\u0141\u0446\001\002\000\004\u015a\u0447" +
    "\001\002\000\012\327\ufdef\u0154\ufdef\u0155\ufdef\u015a\ufdef\001" +
    "\002\000\012\327\ufdf5\u0154\ufdf5\u0155\ufdf5\u015a\ufdf5\001\002" +
    "\000\004\u0141\u044a\001\002\000\020\156\ufde9\327\ufde9\u0154" +
    "\ufde9\u0155\ufde9\u0156\u044c\u0159\ufde9\u015a\ufde9\001\002\000\016" +
    "\156\u044e\327\ufde5\u0154\ufde5\u0155\ufde5\u0159\u044f\u015a\ufde5\001" +
    "\002\000\004\u0141\u044d\001\002\000\016\156\ufdea\327\ufdea" +
    "\u0154\ufdea\u0155\ufdea\u0159\ufdea\u015a\ufdea\001\002\000\006\060" +
    "\u0455\256\u0457\001\002\000\004\u0141\u0452\001\002\000\012" +
    "\327\ufde7\u0154\ufde7\u0155\ufde7\u015a\ufde7\001\002\000\012\327" +
    "\ufded\u0154\ufded\u0155\ufded\u015a\ufded\001\002\000\004\u015a\u0453" +
    "\001\002\000\014\156\u044e\327\ufde5\u0154\ufde5\u0155\ufde5\u015a" +
    "\ufde5\001\002\000\012\327\ufde8\u0154\ufde8\u0155\ufde8\u015a\ufde8" +
    "\001\002\000\010\023\ufde4\231\ufde4\u0125\ufde4\001\002\000" +
    "\010\023\u045a\231\u0459\u0125\u045b\001\002\000\010\023\ufde3" +
    "\231\ufde3\u0125\ufde3\001\002\000\012\327\ufde6\u0154\ufde6\u0155" +
    "\ufde6\u015a\ufde6\001\002\000\006\057\u045d\151\u045f\001\002" +
    "\000\012\327\ufde1\u0154\ufde1\u0155\ufde1\u015a\ufde1\001\002\000" +
    "\004\276\u045c\001\002\000\012\327\ufde2\u0154\ufde2\u0155\ufde2" +
    "\u015a\ufde2\001\002\000\012\327\ufdde\u0154\ufdde\u0155\ufdde\u015a" +
    "\ufdde\001\002\000\012\327\ufde0\u0154\ufde0\u0155\ufde0\u015a\ufde0" +
    "\001\002\000\012\327\ufddf\u0154\ufddf\u0155\ufddf\u015a\ufddf\001" +
    "\002\000\020\030\u0436\156\u0437\271\u0438\327\ufdee\u0154\ufdee" +
    "\u0155\ufdee\u015a\ufdee\001\002\000\012\327\ufdfa\u0154\ufdfa\u0155" +
    "\ufdfa\u015a\ufdfa\001\002\000\004\106\u0467\001\002\000\004" +
    "\u0159\u0464\001\002\000\114\024\uffa6\037\uffa6\042\uffa6\050" +
    "\uffa6\110\uffa6\140\uffa6\150\145\152\uffa6\214\uffa6\230\uffa6" +
    "\231\uffa6\236\uffa6\323\uffa6\341\uffa6\345\uffa6\360\uffa6\376" +
    "\uffa6\u0100\uffa6\u0105\uffa6\u010d\uffa6\u010e\144\u0110\uffa6\u0111\uffa6" +
    "\u0112\uffa6\u0116\uffa6\u0118\uffa6\u0119\uffa6\u0120\uffa6\u0122\uffa6\u0123" +
    "\uffa6\u0137\uffa6\u013c\uffa6\u013d\uffa6\u013f\uffa6\u0141\uffa6\u0159\147" +
    "\u015d\uffa6\001\002\000\004\u015a\u0466\001\002\000\012\327" +
    "\ufdf6\u0154\ufdf6\u0155\ufdf6\u015a\ufdf6\001\002\000\004\206\u0468" +
    "\001\002\000\004\u0159\ufddd\001\002\000\004\205\ufdec\001" +
    "\002\000\012\327\ufddb\u0154\ufddb\u0155\ufddb\u015a\ufddb\001\002" +
    "\000\012\327\ufdf7\u0154\ufdf7\u0155\ufdf7\u015a\ufdf7\001\002\000" +
    "\016\025\ufdfc\057\ufdfc\107\ufdfc\174\ufdfc\205\ufdfc\254\ufdfc" +
    "\001\002\000\012\327\ufd96\u0154\ufd96\u0155\ufd96\u015a\ufd96\001" +
    "\002\000\012\327\ufd98\u0154\ufd98\u0155\ufd98\u015a\ufd98\001\002" +
    "\000\012\327\ufd9d\u0154\ufd9d\u0155\ufd9d\u015a\ufd9d\001\002\000" +
    "\026\323\231\u0100\240\u0105\243\u0110\246\u0111\215\u013c\242" +
    "\u013d\225\u0141\072\u0159\275\u015d\204\001\002\000\004\106" +
    "\u0472\001\002\000\004\206\u0473\001\002\000\036\025\ufdfe" +
    "\036\u0418\057\ufdfe\107\ufdfe\150\ufdfe\151\ufdfe\174\ufdfe\205" +
    "\ufdfe\217\u0419\254\ufdfe\327\ufd92\u0154\ufd92\u0155\ufd92\u015a\ufd92" +
    "\001\002\000\012\327\ufd97\u0154\ufd97\u0155\ufd97\u015a\ufd97\001" +
    "\002\000\004\u0155\u0476\001\002\000\026\323\231\u0100\240" +
    "\u0105\243\u0110\246\u0111\215\u013c\242\u013d\225\u0141\072\u0159" +
    "\275\u015d\204\001\002\000\004\u015a\u0478\001\002\000\036" +
    "\025\ufdfe\036\u0418\057\ufdfe\107\ufdfe\150\u0471\151\ufdfe\174" +
    "\ufdfe\205\ufdfe\217\u0419\254\ufdfe\327\ufd92\u0154\ufd92\u0155\ufd92" +
    "\u015a\ufd92\001\002\000\012\327\ufd99\u0154\ufd99\u0155\ufd99\u015a" +
    "\ufd99\001\002\000\022\025\ufdd2\036\u039d\057\ufdd2\107\ufdd2" +
    "\174\ufdd2\254\ufdd2\373\ufdd2\u0141\u03a0\001\002\000\006\327" +
    "\ufd26\u0154\ufd26\001\002\000\006\327\ufd25\u0154\ufd25\001\002" +
    "\000\016\025\ufdd3\057\ufdd3\107\ufdd3\174\ufdd3\254\ufdd3\373" +
    "\ufdd3\001\002\000\006\327\ufd27\u0154\ufd27\001\002\000\004" +
    "\036\ufd17\001\002\000\004\036\ufd18\001\002\000\004\036" +
    "\u0482\001\002\000\006\005\u0483\u0141\u0485\001\002\000\006" +
    "\327\ufd16\u0154\ufd16\001\002\000\006\327\ufd3a\u0154\ufd3a\001" +
    "\002\000\006\327\ufd15\u0154\ufd15\001\002\000\004\u0141\u0487" +
    "\001\002\000\006\327\ufd3d\u0154\ufd3d\001\002\000\006\005" +
    "\u0483\u0141\u0485\001\002\000\006\327\ufd39\u0154\ufd39\001\002" +
    "\000\006\005\u0483\u0141\u0485\001\002\000\006\327\ufd38\u0154" +
    "\ufd38\001\002\000\006\004\ufd13\032\ufd13\001\002\000\006" +
    "\004\u0490\032\u048f\001\002\000\006\004\ufd14\032\ufd14\001" +
    "\002\000\004\u0141\u04a2\001\002\000\004\104\u0492\001\002" +
    "\000\006\327\ufd40\u0154\ufd40\001\002\000\004\u0159\u0493\001" +
    "\002\000\004\u011c\u0495\001\002\000\006\327\ufd11\u0154\ufd11" +
    "\001\002\000\004\u014c\u0496\001\002\000\004\u013f\u0497\001" +
    "\002\000\004\u0155\u0498\001\002\000\004\104\u0499\001\002" +
    "\000\004\u014c\u049a\001\002\000\004\u013f\u049b\001\002\000" +
    "\006\u0155\u049d\u015a\ufe2c\001\002\000\004\u015a\u04a1\001\002" +
    "\000\004\354\u049e\001\002\000\004\u014c\u049f\001\002\000" +
    "\004\u013c\u04a0\001\002\000\004\u015a\ufe2d\001\002\000\012" +
    "\032\ufe2e\327\ufe2e\u0154\ufe2e\u0155\ufe2e\001\002\000\006\327" +
    "\ufd12\u0154\ufd12\001\002\000\046\002\ufe38\006\ufe38\015\ufe38" +
    "\034\ufe38\043\ufe38\060\ufe38\067\ufe38\072\ufe38\076\ufe38\077" +
    "\ufe38\131\ufe38\215\ufe38\221\ufe38\224\ufe38\250\ufe38\256\ufe38" +
    "\327\ufe38\u0154\ufe38\001\002\000\042\002\uffee\006\026\015" +
    "\045\034\020\043\022\060\037\067\030\072\uffee\076\004" +
    "\077\042\131\023\215\017\221\010\224\011\250\013\256" +
    "\036\001\002\000\006\002\uffef\072\uffef\001\002\000\046" +
    "\002\uff79\006\uff79\015\uff79\034\uff79\043\uff79\060\uff79\067" +
    "\uff79\072\uff79\076\uff79\077\uff79\131\uff79\211\uff79\215\uff79" +
    "\221\uff79\224\uff79\250\uff79\256\uff79\327\uff79\001\002\000" +
    "\014\057\u04b4\224\011\262\u04bb\u0138\106\u0159\u027e\001\002" +
    "\000\046\002\uff7b\006\uff7b\015\uff7b\034\uff7b\043\uff7b\060" +
    "\uff7b\067\uff7b\072\uff7b\076\uff7b\077\uff7b\131\uff7b\211\uff7b" +
    "\215\uff7b\221\uff7b\224\uff7b\250\uff7b\256\uff7b\327\uff7b\001" +
    "\002\000\004\u0159\u04ad\001\002\000\004\u0141\072\001\002" +
    "\000\046\002\uff75\006\uff75\015\uff75\034\uff75\043\uff75\060" +
    "\uff75\067\uff75\072\uff75\076\uff75\077\uff75\131\uff75\211\uff75" +
    "\215\uff75\221\uff75\224\uff75\250\uff75\256\uff75\327\uff75\001" +
    "\002\000\046\002\uff76\006\uff76\015\uff76\034\uff76\043\uff76" +
    "\060\uff76\067\uff76\072\uff76\076\uff76\077\uff76\131\uff76\211" +
    "\uff76\215\uff76\221\uff76\224\uff76\250\uff76\256\uff76\327\uff76" +
    "\001\002\000\026\323\231\u0100\240\u0105\243\u0110\246\u0111" +
    "\215\u013c\242\u013d\225\u0141\072\u0159\275\u015d\204\001\002" +
    "\000\004\u015a\u04af\001\002\000\010\133\u04aa\170\u04b2\u0141" +
    "\072\001\002\000\046\002\uff77\006\uff77\015\uff77\034\uff77" +
    "\043\uff77\060\uff77\067\uff77\072\uff77\076\uff77\077\uff77\131" +
    "\uff77\211\uff77\215\uff77\221\uff77\224\uff77\250\uff77\256\uff77" +
    "\327\uff77\001\002\000\046\002\uff7a\006\uff7a\015\uff7a\034" +
    "\uff7a\043\uff7a\060\uff7a\067\uff7a\072\uff7a\076\uff7a\077\uff7a" +
    "\131\uff7a\211\uff7a\215\uff7a\221\uff7a\224\uff7a\250\uff7a\256" +
    "\uff7a\327\uff7a\001\002\000\006\133\u04aa\u0141\072\001\002" +
    "\000\046\002\uff78\006\uff78\015\uff78\034\uff78\043\uff78\060" +
    "\uff78\067\uff78\072\uff78\076\uff78\077\uff78\131\uff78\211\uff78" +
    "\215\uff78\221\uff78\224\uff78\250\uff78\256\uff78\327\uff78\001" +
    "\002\000\004\262\u04d3\001\002\000\012\057\u04b4\224\011" +
    "\262\u04bb\u0138\106\001\002\000\046\002\uff70\006\uff70\015" +
    "\uff70\034\uff70\043\uff70\060\uff70\067\uff70\072\uff70\076\uff70" +
    "\077\uff70\131\uff70\211\uff70\215\uff70\221\uff70\224\uff70\250" +
    "\uff70\256\uff70\327\uff70\001\002\000\010\057\u04b4\224\011" +
    "\262\u04bb\001\002\000\046\002\uff72\006\uff72\015\uff72\034" +
    "\uff72\043\uff72\060\uff72\067\uff72\072\uff72\076\uff72\077\uff72" +
    "\131\uff72\211\uff72\215\uff72\221\uff72\224\uff72\250\uff72\256" +
    "\uff72\327\uff72\001\002\000\046\002\uff74\006\uff74\015\uff74" +
    "\034\uff74\043\uff74\060\uff74\067\uff74\072\uff74\076\uff74\077" +
    "\uff74\131\uff74\211\uff74\215\uff74\221\uff74\224\uff74\250\uff74" +
    "\256\uff74\327\uff74\001\002\000\006\327\u04cb\u0154\u04cc\001" +
    "\002\000\004\u0159\u04bc\001\002\000\036\057\u04c1\151\u04c2" +
    "\323\231\u0100\240\u0105\243\u0110\246\u0111\215\u013c\242\u013d" +
    "\225\u013e\u04bd\u013f\u04bf\u0141\072\u0159\275\u015d\204\001\002" +
    "\000\006\u0155\uff7c\u015a\uff7c\001\002\000\006\u0155\u04c6\u015a" +
    "\u04c7\001\002\000\006\u0155\uff7d\u015a\uff7d\001\002\000\006" +
    "\u0155\uff7e\u015a\uff7e\001\002\000\006\u0155\uff6b\u015a\uff6b\001" +
    "\002\000\006\u0155\uff6a\u015a\uff6a\001\002\000\046\002\uff6f" +
    "\006\uff6f\015\uff6f\034\uff6f\043\uff6f\060\uff6f\067\uff6f\072" +
    "\uff6f\076\uff6f\077\uff6f\131\uff6f\211\uff6f\215\uff6f\221\uff6f" +
    "\224\uff6f\250\uff6f\256\uff6f\327\uff6f\001\002\000\006\u0155" +
    "\uff69\u015a\uff69\001\002\000\046\002\uff6c\006\uff6c\015\uff6c" +
    "\034\uff6c\043\uff6c\060\uff6c\067\uff6c\072\uff6c\076\uff6c\077" +
    "\uff6c\131\uff6c\211\uff6c\215\uff6c\221\uff6c\224\uff6c\250\uff6c" +
    "\256\uff6c\327\uff6c\001\002\000\036\057\u04c1\151\u04c2\323" +
    "\231\u0100\240\u0105\243\u0110\246\u0111\215\u013c\242\u013d\225" +
    "\u013e\u04bd\u013f\u04bf\u0141\072\u0159\275\u015d\204\001\002\000" +
    "\010\327\u04cb\u0154\u04cc\u0155\u04c9\001\002\000\046\002\uff67" +
    "\006\uff67\015\uff67\034\uff67\043\uff67\060\uff67\067\uff67\072" +
    "\uff67\076\uff67\077\uff67\131\uff67\211\uff67\215\uff67\221\uff67" +
    "\224\uff67\250\uff67\256\uff67\327\uff67\001\002\000\004\u0159" +
    "\u04cd\001\002\000\046\002\uff65\006\uff65\015\uff65\034\uff65" +
    "\043\uff65\060\uff65\067\uff65\072\uff65\076\uff65\077\uff65\131" +
    "\uff65\211\uff65\215\uff65\221\uff65\224\uff65\250\uff65\256\uff65" +
    "\327\uff65\001\002\000\046\002\uff63\006\uff63\015\uff63\034" +
    "\uff63\043\uff63\060\uff63\067\uff63\072\uff63\076\uff63\077\uff63" +
    "\131\uff63\211\uff63\215\uff63\221\uff63\224\uff63\250\uff63\256" +
    "\uff63\327\uff63\001\002\000\046\002\uff64\006\uff64\015\uff64" +
    "\034\uff64\043\uff64\060\uff64\067\uff64\072\uff64\076\uff64\077" +
    "\uff64\131\uff64\211\uff64\215\uff64\221\uff64\224\uff64\250", 
    "\uff64", 
    "\256", 
    "\uff64", 
    "\327", 
    "\uff64", 
    "\001", 
    "\002", 
    "\000", 
    "\036", 
    "\057", 
    "\u04c1", 
    "\151", 
    "\u04c2", 
    "\323", 
    "\231", 
    "\u0100", 
    "\240", 
    "\u0105", 
    "\243", 
    "\u0110", 
    "\246", 
    "\u0111", 
    "\215", 
    "\u013c", 
    "\242", 
    "\u013d", 
    "\225", 
    "\u013e", 
    "\u04bd", 
    "\u013f", 
    "\u04bf", 
    "\u0141", 
    "\072", 
    "\u0159", 
    "\275", 
    "\u015d", 
    "\204", 
    "\001", 
    "\002", 
    "\000", 
    "\046", 
    "\002", 
    "\uff66", 
    "\006", 
    "\uff66", 
    "\015", 
    "\uff66", 
    "\034", 
    "\uff66", 
    "\043", 
    "\uff66", 
    "\060", 
    "\uff66", 
    "\067", 
    "\uff66", 
    "\072", 
    "\uff66", 
    "\076", 
    "\uff66", 
    "\077", 
    "\uff66", 
    "\131", 
    "\uff66", 
    "\211", 
    "\uff66", 
    "\215", 
    "\uff66", 
    "\221", 
    "\uff66", 
    "\224", 
    "\uff66", 
    "\250", 
    "\uff66", 
    "\256", 
    "\uff66", 
    "\327", 
    "\uff66", 
    "\001", 
    "\002", 
    "\000", 
    "\046", 
    "\002", 
    "\uff68", 
    "\006", 
    "\uff68", 
    "\015", 
    "\uff68", 
    "\034", 
    "\uff68", 
    "\043", 
    "\uff68", 
    "\060", 
    "\uff68", 
    "\067", 
    "\uff68", 
    "\072", 
    "\uff68", 
    "\076", 
    "\uff68", 
    "\077", 
    "\uff68", 
    "\131", 
    "\uff68", 
    "\211", 
    "\uff68", 
    "\215", 
    "\uff68", 
    "\221", 
    "\uff68", 
    "\224", 
    "\uff68", 
    "\250", 
    "\uff68", 
    "\256", 
    "\uff68", 
    "\327", 
    "\uff68", 
    "\001", 
    "\002", 
    "\000", 
    "\046", 
    "\002", 
    "\uff6e", 
    "\006", 
    "\uff6e", 
    "\015", 
    "\uff6e", 
    "\034", 
    "\uff6e", 
    "\043", 
    "\uff6e", 
    "\060", 
    "\uff6e", 
    "\067", 
    "\uff6e", 
    "\072", 
    "\uff6e", 
    "\076", 
    "\uff6e", 
    "\077", 
    "\uff6e", 
    "\131", 
    "\uff6e", 
    "\211", 
    "\uff6e", 
    "\215", 
    "\uff6e", 
    "\221", 
    "\uff6e", 
    "\224", 
    "\uff6e", 
    "\250", 
    "\uff6e", 
    "\256", 
    "\uff6e", 
    "\327", 
    "\uff6e", 
    "\001", 
    "\002", 
    "\000", 
    "\046", 
    "\002", 
    "\uff71", 
    "\006", 
    "\uff71", 
    "\015", 
    "\uff71", 
    "\034", 
    "\uff71", 
    "\043", 
    "\uff71", 
    "\060", 
    "\uff71", 
    "\067", 
    "\uff71", 
    "\072", 
    "\uff71", 
    "\076", 
    "\uff71", 
    "\077", 
    "\uff71", 
    "\131", 
    "\uff71", 
    "\211", 
    "\uff71", 
    "\215", 
    "\uff71", 
    "\221", 
    "\uff71", 
    "\224", 
    "\uff71", 
    "\250", 
    "\uff71", 
    "\256", 
    "\uff71", 
    "\327", 
    "\uff71", 
    "\001", 
    "\002", 
    "\000", 
    "\046", 
    "\002", 
    "\uff73", 
    "\006", 
    "\uff73", 
    "\015", 
    "\uff73", 
    "\034", 
    "\uff73", 
    "\043", 
    "\uff73", 
    "\060", 
    "\uff73", 
    "\067", 
    "\uff73", 
    "\072", 
    "\uff73", 
    "\076", 
    "\uff73", 
    "\077", 
    "\uff73", 
    "\131", 
    "\uff73", 
    "\211", 
    "\uff73", 
    "\215", 
    "\uff73", 
    "\221", 
    "\uff73", 
    "\224", 
    "\uff73", 
    "\250", 
    "\uff73", 
    "\256", 
    "\uff73", 
    "\327", 
    "\uff73", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\327", 
    "\u04cb", 
    "\u0154", 
    "\u04cc", 
    "\001", 
    "\002", 
    "\000", 
    "\046", 
    "\002", 
    "\uff6d", 
    "\006", 
    "\uff6d", 
    "\015", 
    "\uff6d", 
    "\034", 
    "\uff6d", 
    "\043", 
    "\uff6d", 
    "\060", 
    "\uff6d", 
    "\067", 
    "\uff6d", 
    "\072", 
    "\uff6d", 
    "\076", 
    "\uff6d", 
    "\077", 
    "\uff6d", 
    "\131", 
    "\uff6d", 
    "\211", 
    "\uff6d", 
    "\215", 
    "\uff6d", 
    "\221", 
    "\uff6d", 
    "\224", 
    "\uff6d", 
    "\250", 
    "\uff6d", 
    "\256", 
    "\uff6d", 
    "\327", 
    "\uff6d", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\u0141", 
    "\u04f3", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\u0141", 
    "\u04f1", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\u0141", 
    "\072", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\006", 
    "\u04db", 
    "\001", 
    "\002", 
    "\000", 
    "\044", 
    "\002", 
    "\ufe3c", 
    "\006", 
    "\ufe3c", 
    "\015", 
    "\ufe3c", 
    "\034", 
    "\ufe3c", 
    "\043", 
    "\ufe3c", 
    "\060", 
    "\ufe3c", 
    "\067", 
    "\ufe3c", 
    "\072", 
    "\ufe3c", 
    "\076", 
    "\ufe3c", 
    "\077", 
    "\ufe3c", 
    "\131", 
    "\ufe3c", 
    "\215", 
    "\ufe3c", 
    "\221", 
    "\ufe3c", 
    "\224", 
    "\ufe3c", 
    "\250", 
    "\ufe3c", 
    "\256", 
    "\ufe3c", 
    "\327", 
    "\ufe3c", 
    "\001", 
    "\002", 
    "\000", 
    "\044", 
    "\002", 
    "\ufe3f", 
    "\006", 
    "\ufe3f", 
    "\015", 
    "\ufe3f", 
    "\034", 
    "\ufe3f", 
    "\043", 
    "\ufe3f", 
    "\060", 
    "\ufe3f", 
    "\067", 
    "\ufe3f", 
    "\072", 
    "\ufe3f", 
    "\076", 
    "\ufe3f", 
    "\077", 
    "\ufe3f", 
    "\131", 
    "\ufe3f", 
    "\215", 
    "\ufe3f", 
    "\221", 
    "\ufe3f", 
    "\224", 
    "\ufe3f", 
    "\250", 
    "\ufe3f", 
    "\256", 
    "\ufe3f", 
    "\327", 
    "\ufe3f", 
    "\001", 
    "\002", 
    "\000", 
    "\012", 
    "\114", 
    "\u02f6", 
    "\176", 
    "\u02f5", 
    "\177", 
    "\u02f0", 
    "\264", 
    "\u02f3", 
    "\001", 
    "\002", 
    "\000", 
    "\044", 
    "\002", 
    "\ufe3d", 
    "\006", 
    "\ufe3d", 
    "\015", 
    "\ufe3d", 
    "\034", 
    "\ufe3d", 
    "\043", 
    "\ufe3d", 
    "\060", 
    "\ufe3d", 
    "\067", 
    "\ufe3d", 
    "\072", 
    "\ufe3d", 
    "\076", 
    "\ufe3d", 
    "\077", 
    "\ufe3d", 
    "\131", 
    "\ufe3d", 
    "\215", 
    "\ufe3d", 
    "\221", 
    "\ufe3d", 
    "\224", 
    "\ufe3d", 
    "\250", 
    "\ufe3d", 
    "\256", 
    "\ufe3d", 
    "\327", 
    "\ufe3d", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\u0159", 
    "\u04df", 
    "\001", 
    "\002", 
    "\000", 
    "\044", 
    "\002", 
    "\ufe3a", 
    "\006", 
    "\ufe3a", 
    "\015", 
    "\ufe3a", 
    "\034", 
    "\ufe3a", 
    "\043", 
    "\ufe3a", 
    "\060", 
    "\ufe3a", 
    "\067", 
    "\ufe3a", 
    "\072", 
    "\ufe3a", 
    "\076", 
    "\ufe3a", 
    "\077", 
    "\ufe3a", 
    "\131", 
    "\ufe3a", 
    "\215", 
    "\ufe3a", 
    "\221", 
    "\ufe3a", 
    "\224", 
    "\ufe3a", 
    "\250", 
    "\ufe3a", 
    "\256", 
    "\ufe3a", 
    "\327", 
    "\ufe3a", 
    "\001", 
    "\002", 
    "\000", 
    "\022", 
    "\025", 
    "\ufdd2", 
    "\036", 
    "\u039d", 
    "\057", 
    "\ufdd2", 
    "\107", 
    "\ufdd2", 
    "\174", 
    "\ufdd2", 
    "\254", 
    "\ufdd2", 
    "\373", 
    "\ufdd2", 
    "\u0141", 
    "\u03a0", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\u0155", 
    "\ufd87", 
    "\u015a", 
    "\ufd87", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\u0155", 
    "\u04e4", 
    "\u015a", 
    "\ufd84", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\u0155", 
    "\ufd86", 
    "\u015a", 
    "\ufd86", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\u015a", 
    "\u04e7", 
    "\001", 
    "\002", 
    "\000", 
    "\022", 
    "\025", 
    "\ufdd2", 
    "\036", 
    "\u039d", 
    "\057", 
    "\ufdd2", 
    "\107", 
    "\ufdd2", 
    "\174", 
    "\ufdd2", 
    "\254", 
    "\ufdd2", 
    "\373", 
    "\ufdd2", 
    "\u0141", 
    "\u03a0", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\u0155", 
    "\u04e4", 
    "\u015a", 
    "\ufd84", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\u015a", 
    "\ufd85", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\156", 
    "\u04e9", 
    "\327", 
    "\ufd82", 
    "\u0154", 
    "\ufd82", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\327", 
    "\057", 
    "\u0154", 
    "\060", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\174", 
    "\u04eb", 
    "\u0141", 
    "\u04ec", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\327", 
    "\ufd83", 
    "\u0154", 
    "\ufd83", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\327", 
    "\ufd80", 
    "\u0154", 
    "\ufd80", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\u0159", 
    "\u04ed", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\u0141", 
    "\u04ee", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\u015a", 
    "\u04ef", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\327", 
    "\ufd81", 
    "\u0154", 
    "\ufd81", 
    "\001", 
    "\002", 
    "\000", 
    "\044", 
    "\002", 
    "\ufd88", 
    "\006", 
    "\ufd88", 
    "\015", 
    "\ufd88", 
    "\034", 
    "\ufd88", 
    "\043", 
    "\ufd88", 
    "\060", 
    "\ufd88", 
    "\067", 
    "\ufd88", 
    "\072", 
    "\ufd88", 
    "\076", 
    "\ufd88", 
    "\077", 
    "\ufd88", 
    "\131", 
    "\ufd88", 
    "\215", 
    "\ufd88", 
    "\221", 
    "\ufd88", 
    "\224", 
    "\ufd88", 
    "\250", 
    "\ufd88", 
    "\256", 
    "\ufd88", 
    "\327", 
    "\ufd88", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\327", 
    "\057", 
    "\u0154", 
    "\060", 
    "\001", 
    "\002", 
    "\000", 
    "\044", 
    "\002", 
    "\ufe3b", 
    "\006", 
    "\ufe3b", 
    "\015", 
    "\ufe3b", 
    "\034", 
    "\ufe3b", 
    "\043", 
    "\ufe3b", 
    "\060", 
    "\ufe3b", 
    "\067", 
    "\ufe3b", 
    "\072", 
    "\ufe3b", 
    "\076", 
    "\ufe3b", 
    "\077", 
    "\ufe3b", 
    "\131", 
    "\ufe3b", 
    "\215", 
    "\ufe3b", 
    "\221", 
    "\ufe3b", 
    "\224", 
    "\ufe3b", 
    "\250", 
    "\ufe3b", 
    "\256", 
    "\ufe3b", 
    "\327", 
    "\ufe3b", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\156", 
    "\u04f4", 
    "\327", 
    "\ufe34", 
    "\u0154", 
    "\ufe34", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\174", 
    "\u04f7", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\327", 
    "\057", 
    "\u0154", 
    "\060", 
    "\001", 
    "\002", 
    "\000", 
    "\044", 
    "\002", 
    "\ufe3e", 
    "\006", 
    "\ufe3e", 
    "\015", 
    "\ufe3e", 
    "\034", 
    "\ufe3e", 
    "\043", 
    "\ufe3e", 
    "\060", 
    "\ufe3e", 
    "\067", 
    "\ufe3e", 
    "\072", 
    "\ufe3e", 
    "\076", 
    "\ufe3e", 
    "\077", 
    "\ufe3e", 
    "\131", 
    "\ufe3e", 
    "\215", 
    "\ufe3e", 
    "\221", 
    "\ufe3e", 
    "\224", 
    "\ufe3e", 
    "\250", 
    "\ufe3e", 
    "\256", 
    "\ufe3e", 
    "\327", 
    "\ufe3e", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\u0159", 
    "\u0493", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\032", 
    "\u04f9", 
    "\327", 
    "\ufe31", 
    "\u0154", 
    "\ufe31", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\u0141", 
    "\u04fb", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\327", 
    "\ufe35", 
    "\u0154", 
    "\ufe35", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\327", 
    "\ufe32", 
    "\u0154", 
    "\ufe32", 
    "\001", 
    "\002", 
    "\000", 
    "\012", 
    "\032", 
    "\ufe2f", 
    "\327", 
    "\ufe2f", 
    "\u0154", 
    "\ufe2f", 
    "\u0155", 
    "\u04fe", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\032", 
    "\ufe33", 
    "\327", 
    "\ufe33", 
    "\u0154", 
    "\ufe33", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\u0159", 
    "\u0493", 
    "\001", 
    "\002", 
    "\000", 
    "\012", 
    "\032", 
    "\ufe2f", 
    "\327", 
    "\ufe2f", 
    "\u0154", 
    "\ufe2f", 
    "\u0155", 
    "\u04fe", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\032", 
    "\ufe30", 
    "\327", 
    "\ufe30", 
    "\u0154", 
    "\ufe30", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\072", 
    "\u0502", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\327", 
    "\057", 
    "\u0154", 
    "\060", 
    "\001", 
    "\002", 
    "\000", 
    "\042", 
    "\002", 
    "\ufffc", 
    "\003", 
    "\033", 
    "\006", 
    "\026", 
    "\015", 
    "\021", 
    "\034", 
    "\020", 
    "\043", 
    "\022", 
    "\060", 
    "\037", 
    "\067", 
    "\030", 
    "\076", 
    "\004", 
    "\077", 
    "\042", 
    "\131", 
    "\023", 
    "\215", 
    "\017", 
    "\221", 
    "\010", 
    "\224", 
    "\011", 
    "\250", 
    "\013", 
    "\256", 
    "\036", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\002", 
    "\000", 
    "\001", 
    "\002", 
    "\000", 
    "\012", 
    "\327", 
    "\ufd47", 
    "\u0141", 
    "\u0508", 
    "\u0154", 
    "\ufd47", 
    "\u015d", 
    "\u0509", 
    "\001", 
    "\002", 
    "\000", 
    "\012", 
    "\327", 
    "\ufd4b", 
    "\u0141", 
    "\ufd4b", 
    "\u0154", 
    "\ufd4b", 
    "\u015d", 
    "\ufd4b", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\327", 
    "\057", 
    "\u0154", 
    "\060", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\327", 
    "\ufd49", 
    "\u0154", 
    "\ufd49", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\u0141", 
    "\u050a", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\327", 
    "\ufd48", 
    "\u0154", 
    "\ufd48", 
    "\001", 
    "\002", 
    "\000", 
    "\044", 
    "\002", 
    "\ufd4c", 
    "\006", 
    "\ufd4c", 
    "\015", 
    "\ufd4c", 
    "\034", 
    "\ufd4c", 
    "\043", 
    "\ufd4c", 
    "\060", 
    "\ufd4c", 
    "\067", 
    "\ufd4c", 
    "\072", 
    "\ufd4c", 
    "\076", 
    "\ufd4c", 
    "\077", 
    "\ufd4c", 
    "\131", 
    "\ufd4c", 
    "\215", 
    "\ufd4c", 
    "\221", 
    "\ufd4c", 
    "\224", 
    "\ufd4c", 
    "\250", 
    "\ufd4c", 
    "\256", 
    "\ufd4c", 
    "\327", 
    "\ufd4c", 
    "\001", 
    "\002", 
    "\000", 
    "\012", 
    "\327", 
    "\ufd4d", 
    "\u0141", 
    "\054", 
    "\u0154", 
    "\ufd4d", 
    "\u015d", 
    "\053", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\327", 
    "\057", 
    "\u0154", 
    "\060", 
    "\001", 
    "\002", 
    "\000", 
    "\044", 
    "\002", 
    "\ufd46", 
    "\006", 
    "\ufd46", 
    "\015", 
    "\ufd46", 
    "\034", 
    "\ufd46", 
    "\043", 
    "\ufd46", 
    "\060", 
    "\ufd46", 
    "\067", 
    "\ufd46", 
    "\072", 
    "\ufd46", 
    "\076", 
    "\ufd46", 
    "\077", 
    "\ufd46", 
    "\131", 
    "\ufd46", 
    "\215", 
    "\ufd46", 
    "\221", 
    "\ufd46", 
    "\224", 
    "\ufd46", 
    "\250", 
    "\ufd46", 
    "\256", 
    "\ufd46", 
    "\327", 
    "\ufd46", 
    "\001", 
    "\002", 
    "\000", 
    "\042", 
    "\002", 
    "\uffee", 
    "\006", 
    "\026", 
    "\015", 
    "\045", 
    "\034", 
    "\020", 
    "\043", 
    "\022", 
    "\060", 
    "\037", 
    "\067", 
    "\030", 
    "\072", 
    "\uffee", 
    "\076", 
    "\004", 
    "\077", 
    "\042", 
    "\131", 
    "\023", 
    "\215", 
    "\017", 
    "\221", 
    "\010", 
    "\224", 
    "\011", 
    "\250", 
    "\013", 
    "\256", 
    "\036", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\002", 
    "\ufff3", 
    "\072", 
    "\ufff3", 
    "\001", 
    "\002", 
    "\000", 
    "\042", 
    "\002", 
    "\uffee", 
    "\006", 
    "\026", 
    "\015", 
    "\045", 
    "\034", 
    "\020", 
    "\043", 
    "\022", 
    "\060", 
    "\037", 
    "\067", 
    "\030", 
    "\072", 
    "\uffee", 
    "\076", 
    "\004", 
    "\077", 
    "\042", 
    "\131", 
    "\023", 
    "\215", 
    "\017", 
    "\221", 
    "\010", 
    "\224", 
    "\011", 
    "\250", 
    "\013", 
    "\256", 
    "\036", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\002", 
    "\ufff8", 
    "\072", 
    "\ufff8", 
    "\001", 
    "\002", 
    "\000", 
    "\042", 
    "\002", 
    "\uffee", 
    "\006", 
    "\026", 
    "\015", 
    "\045", 
    "\034", 
    "\020", 
    "\043", 
    "\022", 
    "\060", 
    "\037", 
    "\067", 
    "\030", 
    "\072", 
    "\uffee", 
    "\076", 
    "\004", 
    "\077", 
    "\042", 
    "\131", 
    "\023", 
    "\215", 
    "\017", 
    "\221", 
    "\010", 
    "\224", 
    "\011", 
    "\250", 
    "\013", 
    "\256", 
    "\036", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\002", 
    "\ufff7", 
    "\072", 
    "\ufff7", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\u0141", 
    "\072", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\327", 
    "\ufd66", 
    "\u0154", 
    "\ufd66", 
    "\u0155", 
    "\u0518", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\327", 
    "\ufd66", 
    "\u0154", 
    "\ufd66", 
    "\u0155", 
    "\u0518", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\u0141", 
    "\072", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\327", 
    "\ufd67", 
    "\u0154", 
    "\ufd67", 
    "\u0155", 
    "\ufd67", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\327", 
    "\057", 
    "\u0154", 
    "\060", 
    "\001", 
    "\002", 
    "\000", 
    "\044", 
    "\002", 
    "\ufd68", 
    "\006", 
    "\ufd68", 
    "\015", 
    "\ufd68", 
    "\034", 
    "\ufd68", 
    "\043", 
    "\ufd68", 
    "\060", 
    "\ufd68", 
    "\067", 
    "\ufd68", 
    "\072", 
    "\ufd68", 
    "\076", 
    "\ufd68", 
    "\077", 
    "\ufd68", 
    "\131", 
    "\ufd68", 
    "\215", 
    "\ufd68", 
    "\221", 
    "\ufd68", 
    "\224", 
    "\ufd68", 
    "\250", 
    "\ufd68", 
    "\256", 
    "\ufd68", 
    "\327", 
    "\ufd68", 
    "\001", 
    "\002", 
    "\000", 
    "\042", 
    "\002", 
    "\uffee", 
    "\006", 
    "\026", 
    "\015", 
    "\045", 
    "\034", 
    "\020", 
    "\043", 
    "\022", 
    "\060", 
    "\037", 
    "\067", 
    "\030", 
    "\072", 
    "\uffee", 
    "\076", 
    "\004", 
    "\077", 
    "\042", 
    "\131", 
    "\023", 
    "\215", 
    "\017", 
    "\221", 
    "\010", 
    "\224", 
    "\011", 
    "\250", 
    "\013", 
    "\256", 
    "\036", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\002", 
    "\ufffa", 
    "\072", 
    "\ufffa", 
    "\001", 
    "\002", 
    "\000", 
    "\102", 
    "\024", 
    "\ufe8b", 
    "\042", 
    "\ufe8b", 
    "\050", 
    "\ufe8b", 
    "\140", 
    "\ufe8b", 
    "\150", 
    "\ufe8b", 
    "\214", 
    "\ufe8b", 
    "\231", 
    "\ufe8b", 
    "\244", 
    "\ufe8b", 
    "\323", 
    "\ufe8b", 
    "\341", 
    "\ufe8b", 
    "\345", 
    "\ufe8b", 
    "\360", 
    "\ufe8b", 
    "\376", 
    "\ufe8b", 
    "\u0100", 
    "\ufe8b", 
    "\u0105", 
    "\ufe8b", 
    "\u010d", 
    "\ufe8b", 
    "\u0110", 
    "\ufe8b", 
    "\u0111", 
    "\ufe8b", 
    "\u0112", 
    "\ufe8b", 
    "\u0116", 
    "\ufe8b", 
    "\u0118", 
    "\ufe8b", 
    "\u0119", 
    "\ufe8b", 
    "\u0120", 
    "\ufe8b", 
    "\u0123", 
    "\ufe8b", 
    "\u0137", 
    "\ufe8b", 
    "\u013c", 
    "\ufe8b", 
    "\u013d", 
    "\ufe8b", 
    "\u013f", 
    "\ufe8b", 
    "\u0141", 
    "\ufe8b", 
    "\u0144", 
    "\ufe8b", 
    "\u0159", 
    "\ufe8b", 
    "\u015d", 
    "\ufe8b", 
    "\001", 
    "\002", 
    "\000", 
    "\102", 
    "\024", 
    "\200", 
    "\042", 
    "\203", 
    "\050", 
    "\236", 
    "\140", 
    "\217", 
    "\150", 
    "\343", 
    "\214", 
    "\244", 
    "\231", 
    "\250", 
    "\244", 
    "\u0524", 
    "\323", 
    "\231", 
    "\341", 
    "\171", 
    "\345", 
    "\174", 
    "\360", 
    "\172", 
    "\376", 
    "\173", 
    "\u0100", 
    "\240", 
    "\u0105", 
    "\243", 
    "\u010d", 
    "\201", 
    "\u0110", 
    "\246", 
    "\u0111", 
    "\215", 
    "\u0112", 
    "\214", 
    "\u0116", 
    "\247", 
    "\u0118", 
    "\211", 
    "\u0119", 
    "\177", 
    "\u0120", 
    "\233", 
    "\u0123", 
    "\245", 
    "\u0137", 
    "\216", 
    "\u013c", 
    "\242", 
    "\u013d", 
    "\225", 
    "\u013f", 
    "\351", 
    "\u0141", 
    "\u0163", 
    "\u0144", 
    "\u0166", 
    "\u0159", 
    "\353", 
    "\u015d", 
    "\u015e", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\271", 
    "\ufe8e", 
    "\327", 
    "\ufe8e", 
    "\u0154", 
    "\ufe8e", 
    "\001", 
    "\002", 
    "\000", 
    "\102", 
    "\024", 
    "\ufe8c", 
    "\042", 
    "\ufe8c", 
    "\050", 
    "\ufe8c", 
    "\140", 
    "\ufe8c", 
    "\150", 
    "\ufe8c", 
    "\214", 
    "\ufe8c", 
    "\231", 
    "\ufe8c", 
    "\244", 
    "\ufe8c", 
    "\323", 
    "\ufe8c", 
    "\341", 
    "\ufe8c", 
    "\345", 
    "\ufe8c", 
    "\360", 
    "\ufe8c", 
    "\376", 
    "\ufe8c", 
    "\u0100", 
    "\ufe8c", 
    "\u0105", 
    "\ufe8c", 
    "\u010d", 
    "\ufe8c", 
    "\u0110", 
    "\ufe8c", 
    "\u0111", 
    "\ufe8c", 
    "\u0112", 
    "\ufe8c", 
    "\u0116", 
    "\ufe8c", 
    "\u0118", 
    "\ufe8c", 
    "\u0119", 
    "\ufe8c", 
    "\u0120", 
    "\ufe8c", 
    "\u0123", 
    "\ufe8c", 
    "\u0137", 
    "\ufe8c", 
    "\u013c", 
    "\ufe8c", 
    "\u013d", 
    "\ufe8c", 
    "\u013f", 
    "\ufe8c", 
    "\u0141", 
    "\ufe8c", 
    "\u0144", 
    "\ufe8c", 
    "\u0159", 
    "\ufe8c", 
    "\u015d", 
    "\ufe8c", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\271", 
    "\ufe88", 
    "\327", 
    "\ufe88", 
    "\u0154", 
    "\ufe88", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\271", 
    "\ufe8d", 
    "\327", 
    "\ufe8d", 
    "\u0154", 
    "\ufe8d", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\u0159", 
    "\u0547", 
    "\001", 
    "\002", 
    "\000", 
    "\026", 
    "\112", 
    "\u0531", 
    "\117", 
    "\u0530", 
    "\120", 
    "\u052d", 
    "\133", 
    "\u052a", 
    "\165", 
    "\u0532", 
    "\267", 
    "\u0527", 
    "\271", 
    "\ufe75", 
    "\327", 
    "\ufe75", 
    "\u0154", 
    "\ufe75", 
    "\u0155", 
    "\u052f", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\271", 
    "\ufe77", 
    "\327", 
    "\ufe77", 
    "\u0154", 
    "\ufe77", 
    "\001", 
    "\002", 
    "\000", 
    "\114", 
    "\024", 
    "\uffa6", 
    "\037", 
    "\uffa6", 
    "\042", 
    "\uffa6", 
    "\050", 
    "\uffa6", 
    "\110", 
    "\uffa6", 
    "\140", 
    "\uffa6", 
    "\150", 
    "\145", 
    "\152", 
    "\uffa6", 
    "\214", 
    "\uffa6", 
    "\230", 
    "\uffa6", 
    "\231", 
    "\uffa6", 
    "\236", 
    "\uffa6", 
    "\323", 
    "\uffa6", 
    "\341", 
    "\uffa6", 
    "\345", 
    "\uffa6", 
    "\360", 
    "\uffa6", 
    "\376", 
    "\uffa6", 
    "\u0100", 
    "\uffa6", 
    "\u0105", 
    "\uffa6", 
    "\u010d", 
    "\uffa6", 
    "\u010e", 
    "\144", 
    "\u0110", 
    "\uffa6", 
    "\u0111", 
    "\uffa6", 
    "\u0112", 
    "\uffa6", 
    "\u0116", 
    "\uffa6", 
    "\u0118", 
    "\uffa6", 
    "\u0119", 
    "\uffa6", 
    "\u0120", 
    "\uffa6", 
    "\u0122", 
    "\uffa6", 
    "\u0123", 
    "\uffa6", 
    "\u0137", 
    "\uffa6", 
    "\u013c", 
    "\uffa6", 
    "\u013d", 
    "\uffa6", 
    "\u013f", 
    "\uffa6", 
    "\u0141", 
    "\uffa6", 
    "\u0159", 
    "\147", 
    "\u015d", 
    "\uffa6", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\271", 
    "\ufe79", 
    "\327", 
    "\ufe79", 
    "\u0154", 
    "\ufe79", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\271", 
    "\ufe7b", 
    "\327", 
    "\ufe7b", 
    "\u0154", 
    "\ufe7b", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\u0141", 
    "\072", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\271", 
    "\ufe7d", 
    "\327", 
    "\ufe7d", 
    "\u0154", 
    "\ufe7d", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\271", 
    "\ufe80", 
    "\327", 
    "\ufe80", 
    "\u0154", 
    "\ufe80", 
    "\001", 
    "\002", 
    "\000", 
    "\114", 
    "\024", 
    "\uffa6", 
    "\037", 
    "\uffa6", 
    "\042", 
    "\uffa6", 
    "\050", 
    "\uffa6", 
    "\110", 
    "\uffa6", 
    "\140", 
    "\uffa6", 
    "\150", 
    "\145", 
    "\152", 
    "\uffa6", 
    "\214", 
    "\uffa6", 
    "\230", 
    "\uffa6", 
    "\231", 
    "\uffa6", 
    "\236", 
    "\uffa6", 
    "\323", 
    "\uffa6", 
    "\341", 
    "\uffa6", 
    "\345", 
    "\uffa6", 
    "\360", 
    "\uffa6", 
    "\376", 
    "\uffa6", 
    "\u0100", 
    "\uffa6", 
    "\u0105", 
    "\uffa6", 
    "\u010d", 
    "\uffa6", 
    "\u010e", 
    "\144", 
    "\u0110", 
    "\uffa6", 
    "\u0111", 
    "\uffa6", 
    "\u0112", 
    "\uffa6", 
    "\u0116", 
    "\uffa6", 
    "\u0118", 
    "\uffa6", 
    "\u0119", 
    "\uffa6", 
    "\u0120", 
    "\uffa6", 
    "\u0122", 
    "\uffa6", 
    "\u0123", 
    "\uffa6", 
    "\u0137", 
    "\uffa6", 
    "\u013c", 
    "\uffa6", 
    "\u013d", 
    "\uffa6", 
    "\u013f", 
    "\uffa6", 
    "\u0141", 
    "\uffa6", 
    "\u0159", 
    "\147", 
    "\u015d", 
    "\uffa6", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\271", 
    "\ufe82", 
    "\327", 
    "\ufe82", 
    "\u0154", 
    "\ufe82", 
    "\001", 
    "\002", 
    "\000", 
    "\100", 
    "\024", 
    "\200", 
    "\042", 
    "\203", 
    "\050", 
    "\236", 
    "\140", 
    "\217", 
    "\150", 
    "\343", 
    "\214", 
    "\244", 
    "\231", 
    "\250", 
    "\323", 
    "\231", 
    "\341", 
    "\171", 
    "\345", 
    "\174", 
    "\360", 
    "\172", 
    "\376", 
    "\173", 
    "\u0100", 
    "\240", 
    "\u0105", 
    "\243", 
    "\u010d", 
    "\201", 
    "\u0110", 
    "\246", 
    "\u0111", 
    "\215", 
    "\u0112", 
    "\214", 
    "\u0116", 
    "\247", 
    "\u0118", 
    "\211", 
    "\u0119", 
    "\177", 
    "\u0120", 
    "\233", 
    "\u0123", 
    "\245", 
    "\u0137", 
    "\216", 
    "\u013c", 
    "\242", 
    "\u013d", 
    "\225", 
    "\u013f", 
    "\351", 
    "\u0141", 
    "\u0163", 
    "\u0144", 
    "\u0166", 
    "\u0159", 
    "\353", 
    "\u015d", 
    "\u015e", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\022", 
    "\u0538", 
    "\001", 
    "\002", 
    "\000", 
    "\014", 
    "\160", 
    "\120", 
    "\161", 
    "\123", 
    "\u0141", 
    "\072", 
    "\u0159", 
    "\122", 
    "\u015d", 
    "\125", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\022", 
    "\u0534", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\271", 
    "\ufe84", 
    "\327", 
    "\ufe84", 
    "\u0154", 
    "\ufe84", 
    "\001", 
    "\002", 
    "\000", 
    "\100", 
    "\024", 
    "\200", 
    "\042", 
    "\203", 
    "\050", 
    "\236", 
    "\140", 
    "\217", 
    "\150", 
    "\343", 
    "\214", 
    "\244", 
    "\231", 
    "\250", 
    "\323", 
    "\231", 
    "\341", 
    "\171", 
    "\345", 
    "\174", 
    "\360", 
    "\172", 
    "\376", 
    "\173", 
    "\u0100", 
    "\240", 
    "\u0105", 
    "\243", 
    "\u010d", 
    "\201", 
    "\u0110", 
    "\246", 
    "\u0111", 
    "\215", 
    "\u0112", 
    "\214", 
    "\u0116", 
    "\247", 
    "\u0118", 
    "\211", 
    "\u0119", 
    "\177", 
    "\u0120", 
    "\233", 
    "\u0123", 
    "\245", 
    "\u0137", 
    "\216", 
    "\u013c", 
    "\242", 
    "\u013d", 
    "\225", 
    "\u013f", 
    "\351", 
    "\u0141", 
    "\u0163", 
    "\u0144", 
    "\u0166", 
    "\u0159", 
    "\353", 
    "\u015d", 
    "\u015e", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\271", 
    "\ufe76", 
    "\327", 
    "\ufe76", 
    "\u0154", 
    "\ufe76", 
    "\001", 
    "\002", 
    "\000", 
    "\020", 
    "\117", 
    "\u0530", 
    "\120", 
    "\u052d", 
    "\165", 
    "\u0532", 
    "\267", 
    "\u0527", 
    "\271", 
    "\ufe75", 
    "\327", 
    "\ufe75", 
    "\u0154", 
    "\ufe75", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\271", 
    "\ufe7e", 
    "\327", 
    "\ufe7e", 
    "\u0154", 
    "\ufe7e", 
    "\001", 
    "\002", 
    "\000", 
    "\032", 
    "\150", 
    "\343", 
    "\323", 
    "\231", 
    "\u0100", 
    "\240", 
    "\u0105", 
    "\243", 
    "\u0110", 
    "\246", 
    "\u0111", 
    "\215", 
    "\u013c", 
    "\242", 
    "\u013d", 
    "\225", 
    "\u013f", 
    "\351", 
    "\u0141", 
    "\344", 
    "\u0159", 
    "\353", 
    "\u015d", 
    "\204", 
    "\001", 
    "\002", 
    "\000", 
    "\016", 
    "\120", 
    "\ufe73", 
    "\165", 
    "\ufe73", 
    "\271", 
    "\ufe73", 
    "\327", 
    "\ufe73", 
    "\u0154", 
    "\ufe73", 
    "\u0155", 
    "\u053a", 
    "\001", 
    "\002", 
    "\000", 
    "\032", 
    "\150", 
    "\343", 
    "\323", 
    "\231", 
    "\u0100", 
    "\240", 
    "\u0105", 
    "\243", 
    "\u0110", 
    "\246", 
    "\u0111", 
    "\215", 
    "\u013c", 
    "\242", 
    "\u013d", 
    "\225", 
    "\u013f", 
    "\351", 
    "\u0141", 
    "\344", 
    "\u0159", 
    "\353", 
    "\u015d", 
    "\204", 
    "\001", 
    "\002", 
    "\000", 
    "\014", 
    "\120", 
    "\u052d", 
    "\165", 
    "\u0532", 
    "\271", 
    "\ufe75", 
    "\327", 
    "\ufe75", 
    "\u0154", 
    "\ufe75", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\271", 
    "\ufe7a", 
    "\327", 
    "\ufe7a", 
    "\u0154", 
    "\ufe7a", 
    "\001", 
    "\002", 
    "\000", 
    "\016", 
    "\120", 
    "\ufe73", 
    "\165", 
    "\ufe73", 
    "\271", 
    "\ufe73", 
    "\327", 
    "\ufe73", 
    "\u0154", 
    "\ufe73", 
    "\u0155", 
    "\u053a", 
    "\001", 
    "\002", 
    "\000", 
    "\014", 
    "\120", 
    "\ufe74", 
    "\165", 
    "\ufe74", 
    "\271", 
    "\ufe74", 
    "\327", 
    "\ufe74", 
    "\u0154", 
    "\ufe74", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\271", 
    "\ufe83", 
    "\327", 
    "\ufe83", 
    "\u0154", 
    "\ufe83", 
    "\001", 
    "\002", 
    "\000", 
    "\012", 
    "\165", 
    "\u0532", 
    "\271", 
    "\ufe75", 
    "\327", 
    "\ufe75", 
    "\u0154", 
    "\ufe75", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\271", 
    "\ufe78", 
    "\327", 
    "\ufe78", 
    "\u0154", 
    "\ufe78", 
    "\001", 
    "\002", 
    "\000", 
    "\022", 
    "\112", 
    "\u0531", 
    "\117", 
    "\u0530", 
    "\120", 
    "\u052d", 
    "\165", 
    "\u0532", 
    "\267", 
    "\u0527", 
    "\271", 
    "\ufe75", 
    "\327", 
    "\ufe75", 
    "\u0154", 
    "\ufe75", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\271", 
    "\ufe81", 
    "\327", 
    "\ufe81", 
    "\u0154", 
    "\ufe81", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\271", 
    "\ufe7f", 
    "\327", 
    "\ufe7f", 
    "\u0154", 
    "\ufe7f", 
    "\001", 
    "\002", 
    "\000", 
    "\016", 
    "\117", 
    "\u0530", 
    "\120", 
    "\u052d", 
    "\165", 
    "\u0532", 
    "\271", 
    "\ufe75", 
    "\327", 
    "\ufe75", 
    "\u0154", 
    "\ufe75", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\271", 
    "\ufe7c", 
    "\327", 
    "\ufe7c", 
    "\u0154", 
    "\ufe7c", 
    "\001", 
    "\002", 
    "\000", 
    "\026", 
    "\323", 
    "\231", 
    "\u0100", 
    "\240", 
    "\u0105", 
    "\243", 
    "\u0110", 
    "\246", 
    "\u0111", 
    "\215", 
    "\u013c", 
    "\242", 
    "\u013d", 
    "\225", 
    "\u0141", 
    "\072", 
    "\u0159", 
    "\275", 
    "\u015d", 
    "\204", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\271", 
    "\ufe89", 
    "\327", 
    "\ufe89", 
    "\u0154", 
    "\ufe89", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\u015a", 
    "\u054a", 
    "\001", 
    "\002", 
    "\000", 
    "\102", 
    "\024", 
    "\200", 
    "\042", 
    "\203", 
    "\050", 
    "\236", 
    "\140", 
    "\217", 
    "\150", 
    "\343", 
    "\170", 
    "\u054b", 
    "\214", 
    "\244", 
    "\231", 
    "\250", 
    "\323", 
    "\231", 
    "\341", 
    "\171", 
    "\345", 
    "\174", 
    "\360", 
    "\172", 
    "\376", 
    "\173", 
    "\u0100", 
    "\240", 
    "\u0105", 
    "\243", 
    "\u010d", 
    "\201", 
    "\u0110", 
    "\246", 
    "\u0111", 
    "\215", 
    "\u0112", 
    "\214", 
    "\u0116", 
    "\247", 
    "\u0118", 
    "\211", 
    "\u0119", 
    "\177", 
    "\u0120", 
    "\233", 
    "\u0123", 
    "\245", 
    "\u0137", 
    "\216", 
    "\u013c", 
    "\242", 
    "\u013d", 
    "\225", 
    "\u013f", 
    "\351", 
    "\u0141", 
    "\u0163", 
    "\u0144", 
    "\u0166", 
    "\u0159", 
    "\353", 
    "\u015d", 
    "\u015e", 
    "\001", 
    "\002", 
    "\000", 
    "\100", 
    "\024", 
    "\200", 
    "\042", 
    "\203", 
    "\050", 
    "\236", 
    "\140", 
    "\217", 
    "\150", 
    "\343", 
    "\214", 
    "\244", 
    "\231", 
    "\250", 
    "\323", 
    "\231", 
    "\341", 
    "\171", 
    "\345", 
    "\174", 
    "\360", 
    "\172", 
    "\376", 
    "\173", 
    "\u0100", 
    "\240", 
    "\u0105", 
    "\243", 
    "\u010d", 
    "\201", 
    "\u0110", 
    "\246", 
    "\u0111", 
    "\215", 
    "\u0112", 
    "\214", 
    "\u0116", 
    "\247", 
    "\u0118", 
    "\211", 
    "\u0119", 
    "\177", 
    "\u0120", 
    "\233", 
    "\u0123", 
    "\245", 
    "\u0137", 
    "\216", 
    "\u013c", 
    "\242", 
    "\u013d", 
    "\225", 
    "\u013f", 
    "\351", 
    "\u0141", 
    "\u0163", 
    "\u0144", 
    "\u0166", 
    "\u0159", 
    "\353", 
    "\u015d", 
    "\u015e", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\271", 
    "\ufe85", 
    "\327", 
    "\ufe85", 
    "\u0154", 
    "\ufe85", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\271", 
    "\ufe87", 
    "\327", 
    "\ufe87", 
    "\u0154", 
    "\ufe87", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\271", 
    "\ufe86", 
    "\327", 
    "\ufe86", 
    "\u0154", 
    "\ufe86", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\u0141", 
    "\u0552", 
    "\u015d", 
    "\u0551", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\327", 
    "\057", 
    "\u0154", 
    "\060", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\u0141", 
    "\u0553", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\327", 
    "\ufd44", 
    "\u0154", 
    "\ufd44", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\327", 
    "\ufd43", 
    "\u0154", 
    "\ufd43", 
    "\001", 
    "\002", 
    "\000", 
    "\044", 
    "\002", 
    "\ufd45", 
    "\006", 
    "\ufd45", 
    "\015", 
    "\ufd45", 
    "\034", 
    "\ufd45", 
    "\043", 
    "\ufd45", 
    "\060", 
    "\ufd45", 
    "\067", 
    "\ufd45", 
    "\072", 
    "\ufd45", 
    "\076", 
    "\ufd45", 
    "\077", 
    "\ufd45", 
    "\131", 
    "\ufd45", 
    "\215", 
    "\ufd45", 
    "\221", 
    "\ufd45", 
    "\224", 
    "\ufd45", 
    "\250", 
    "\ufd45", 
    "\256", 
    "\ufd45", 
    "\327", 
    "\ufd45", 
    "\001", 
    "\002", 
    "\000", 
    "\042", 
    "\002", 
    "\uffee", 
    "\006", 
    "\026", 
    "\015", 
    "\045", 
    "\034", 
    "\020", 
    "\043", 
    "\022", 
    "\060", 
    "\037", 
    "\067", 
    "\030", 
    "\072", 
    "\uffee", 
    "\076", 
    "\004", 
    "\077", 
    "\042", 
    "\131", 
    "\023", 
    "\215", 
    "\017", 
    "\221", 
    "\010", 
    "\224", 
    "\011", 
    "\250", 
    "\013", 
    "\256", 
    "\036", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\002", 
    "\ufff1", 
    "\072", 
    "\ufff1", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\u0141", 
    "\072", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\u0141", 
    "\u0559", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\u0141", 
    "\ufd0d", 
    "\001", 
    "\002", 
    "\000", 
    "\030", 
    "\057", 
    "\u055e", 
    "\151", 
    "\u030a", 
    "\327", 
    "\ufd07", 
    "\u013c", 
    "\u030b", 
    "\u013d", 
    "\u0309", 
    "\u013e", 
    "\u0308", 
    "\u013f", 
    "\u030c", 
    "\u0141", 
    "\u055f", 
    "\u0154", 
    "\ufd07", 
    "\u0155", 
    "\ufd07", 
    "\u015d", 
    "\u0560", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\327", 
    "\ufd03", 
    "\u0154", 
    "\ufd03", 
    "\u0155", 
    "\u0569", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\327", 
    "\ufd0a", 
    "\u0154", 
    "\ufd0a", 
    "\u0155", 
    "\ufd0a", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\327", 
    "\ufd01", 
    "\u0154", 
    "\ufd01", 
    "\u0155", 
    "\ufd01", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\327", 
    "\ufd08", 
    "\u0154", 
    "\ufd08", 
    "\u0155", 
    "\ufd08", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\327", 
    "\ufd0b", 
    "\u0154", 
    "\ufd0b", 
    "\u0155", 
    "\ufd0b", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\u0141", 
    "\u0561", 
    "\001", 
    "\002", 
    "\000", 
    "\014", 
    "\327", 
    "\ufd05", 
    "\u0138", 
    "\u0562", 
    "\u014c", 
    "\u0564", 
    "\u0154", 
    "\ufd05", 
    "\u0155", 
    "\ufd05", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\327", 
    "\ufd06", 
    "\u0154", 
    "\ufd06", 
    "\u0155", 
    "\ufd06", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\327", 
    "\ufd09", 
    "\u0154", 
    "\ufd09", 
    "\u0155", 
    "\ufd09", 
    "\001", 
    "\002", 
    "\000", 
    "\030", 
    "\057", 
    "\u055e", 
    "\151", 
    "\u030a", 
    "\327", 
    "\ufd07", 
    "\u013c", 
    "\u030b", 
    "\u013d", 
    "\u0309", 
    "\u013e", 
    "\u0308", 
    "\u013f", 
    "\u030c", 
    "\u0141", 
    "\u055f", 
    "\u0154", 
    "\ufd07", 
    "\u0155", 
    "\ufd07", 
    "\u015d", 
    "\u0566", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\327", 
    "\ufd02", 
    "\u0154", 
    "\ufd02", 
    "\u0155", 
    "\ufd02", 
    "\001", 
    "\002", 
    "\000", 
    "\004", 
    "\u0141", 
    "\u0567", 
    "\001", 
    "\002", 
    "\000", 
    "\012", 
    "\327", 
    "\ufd05", 
    "\u0138", 
    "\u0562", 
    "\u0154", 
    "\ufd05", 
    "\u0155", 
    "\ufd05", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\327", 
    "\057", 
    "\u0154", 
    "\060", 
    "\001", 
    "\002", 
    "\000", 
    "\030", 
    "\057", 
    "\u055e", 
    "\151", 
    "\u030a", 
    "\327", 
    "\ufd07", 
    "\u013c", 
    "\u030b", 
    "\u013d", 
    "\u0309", 
    "\u013e", 
    "\u0308", 
    "\u013f", 
    "\u030c", 
    "\u0141", 
    "\u055f", 
    "\u0154", 
    "\ufd07", 
    "\u0155", 
    "\ufd07", 
    "\u015d", 
    "\u0560", 
    "\001", 
    "\002", 
    "\000", 
    "\010", 
    "\327", 
    "\ufd03", 
    "\u0154", 
    "\ufd03", 
    "\u0155", 
    "\u0569", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\327", 
    "\ufd04", 
    "\u0154", 
    "\ufd04", 
    "\001", 
    "\002", 
    "\000", 
    "\044", 
    "\002", 
    "\ufd10", 
    "\006", 
    "\ufd10", 
    "\015", 
    "\ufd10", 
    "\034", 
    "\ufd10", 
    "\043", 
    "\ufd10", 
    "\060", 
    "\ufd10", 
    "\067", 
    "\ufd10", 
    "\072", 
    "\ufd10", 
    "\076", 
    "\ufd10", 
    "\077", 
    "\ufd10", 
    "\131", 
    "\ufd10", 
    "\215", 
    "\ufd10", 
    "\221", 
    "\ufd10", 
    "\224", 
    "\ufd10", 
    "\250", 
    "\ufd10", 
    "\256", 
    "\ufd10", 
    "\327", 
    "\ufd10", 
    "\001", 
    "\002", 
    "\000", 
    "\042", 
    "\002", 
    "\uffee", 
    "\006", 
    "\026", 
    "\015", 
    "\045", 
    "\034", 
    "\020", 
    "\043", 
    "\022", 
    "\060", 
    "\037", 
    "\067", 
    "\030", 
    "\072", 
    "\uffee", 
    "\076", 
    "\004", 
    "\077", 
    "\042", 
    "\131", 
    "\023", 
    "\215", 
    "\017", 
    "\221", 
    "\010", 
    "\224", 
    "\011", 
    "\250", 
    "\013", 
    "\256", 
    "\036", 
    "\001", 
    "\002", 
    "\000", 
    "\006", 
    "\002", 
    "\ufff5", 
    "\072", 
    "\ufff5", 
    "\001", 
    "\002", 
    "" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u056c\000\042\003\034\004\023\127\030\224\011\241" +
    "\040\253\014\317\013\u0129\031\u012b\004\u0134\006\u0136\026" +
    "\u0137\015\u013a\037\u013d\033\u0154\024\u0155\005\001\001\000" +
    "\002\001\001\000\004\002\u056c\001\001\000\004\u0156\u0556" +
    "\001\001\000\004\002\u0554\001\001\000\004\u013b\u054e\001" +
    "\001\000\006\130\u051f\131\u051e\001\001\000\004\002\u051b" +
    "\001\001\000\002\001\001\000\004\002\u0512\001\001\000" +
    "\004\002\u0510\001\001\000\004\002\u050e\001\001\000\004" +
    "\u013b\u050b\001\001\000\006\u0138\u0504\u013b\u0505\001\001\000" +
    "\042\004\u0500\127\030\224\011\241\040\253\014\317\013" +
    "\u0129\031\u012b\004\u0134\006\u0136\026\u0137\015\u013a\037\u013b" +
    "\046\u013d\033\u0154\024\u0155\005\001\001\000\006\320\u04d9" +
    "\321\u04d8\001\001\000\012\201\u04a6\225\u04a7\227\u04a5\230" +
    "\u04aa\001\001\000\002\001\001\000\004\002\u04a3\001\001" +
    "\000\006\321\u02f3\u013e\u02f6\001\001\000\004\002\u02ed\001" +
    "\001\000\004\u012c\u02c8\001\001\000\004\205\u02c5\001\001" +
    "\000\004\002\u02c3\001\001\000\042\003\u02c2\004\023\127" +
    "\030\224\011\241\040\253\014\317\013\u0129\031\u012b\004" +
    "\u0134\006\u0136\026\u0137\015\u013a\037\u013d\033\u0154\024\u0155" +
    "\005\001\001\000\004\002\u02c0\001\001\000\002\001\001" +
    "\000\010\201\u0291\254\u0294\256\u0292\001\001\000\012\201" +
    "\062\242\067\244\064\245\063\001\001\000\004\002\060" +
    "\001\001\000\004\002\043\001\001\000\002\001\001\000" +
    "\002\001\001\000\040\004\045\127\030\224\011\241\040" +
    "\253\014\317\013\u0129\031\u012b\004\u0134\006\u0136\026\u0137" +
    "\015\u013a\037\u013d\033\u0154\024\u0155\005\001\001\000\004" +
    "\u013b\046\001\001\000\002\001\001\000\004\u013c\051\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\205\055" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\040\004\061\127\030\224\011\241\040\253\014\317" +
    "\013\u0129\031\u012b\004\u0134\006\u0136\026\u0137\015\u013a\037" +
    "\u013d\033\u0154\024\u0155\005\001\001\000\002\001\001\000" +
    "\014\214\112\246\u0290\247\107\251\106\252\111\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\201\062\245" +
    "\u028f\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\202\072\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\203\075\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\204\100\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\014\214\112" +
    "\246\110\247\107\251\106\252\111\001\001\000\012\155" +
    "\u0286\156\147\172\145\176\142\001\001\000\022\037\276" +
    "\150\u026a\152\234\154\233\201\273\206\u0267\207\u0269\212" +
    "\u026b\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\010\247\u0266\251\106\252" +
    "\111\001\001\000\002\001\001\000\012\075\116\105\123" +
    "\112\125\201\120\001\001\000\002\001\001\000\004\113" +
    "\u0265\001\001\000\002\001\001\000\004\113\u0255\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\250\u0249\251" +
    "\u024b\252\111\001\001\000\002\001\001\000\012\101\136" +
    "\102\133\103\132\106\135\001\001\000\004\104\u0243\001" +
    "\001\000\002\001\001\000\004\104\u023f\001\001\000\004" +
    "\104\u023e\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\012\075\116\110\137" +
    "\112\140\201\120\001\001\000\002\001\001\000\002\001" +
    "\001\000\012\155\150\156\147\172\145\176\142\001\001" +
    "\000\032\017\250\025\201\030\240\033\231\037\225\071" +
    "\205\150\221\152\234\154\233\160\u023a\161\211\201\207" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\172\164\176\142\001\001\000\004\157\162" +
    "\001\001\000\014\101\154\102\133\103\132\107\153\111" +
    "\152\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\012\075\116\110\155\112\140\201\120\001" +
    "\001\000\002\001\001\000\002\001\001\000\014\101\154" +
    "\102\133\103\132\107\153\111\160\001\001\000\002\001" +
    "\001\000\012\155\163\156\147\172\145\176\142\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\173\166\001\001\000\002\001\001\000\036\017\250" +
    "\025\201\030\240\033\231\037\225\071\205\150\221\152" +
    "\234\154\233\160\226\161\211\174\175\175\174\201\207" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\030\037\276\054\u0204\056\345\057" +
    "\344\070\347\072\u0206\073\u0205\150\351\152\234\154\233" +
    "\201\273\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\034\017\250\025\201\030\240\033\231\037" +
    "\225\071\205\150\221\152\234\154\233\160\226\161\211" +
    "\175\u01c3\201\207\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\065\u019b\162\u019d\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\020\037\276\150\302\152" +
    "\234\154\233\172\u0135\176\142\201\273\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\173\u0134\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\153\u0117\001\001\000\004\151\u0111\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\027" +
    "\254\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\026\261\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\050\267\051\270\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\016\037\276\052\271\150\272\152\234\154\233\201" +
    "\273\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\014\037\276\150\302\152\234\154\233\201" +
    "\273\001\001\000\006\053\277\202\072\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\203" +
    "\075\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\031\311\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\031\315\001\001\000" +
    "\002\001\001\000\014\037\276\150\317\152\234\154\233" +
    "\201\273\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\044\324\045\322\001\001\000\016\037\276\046\332" +
    "\150\330\152\234\154\233\201\273\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\047\334\202" +
    "\072\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\203\075\001\001\000\006\050\337\051" +
    "\270\001\001\000\002\001\001\000\002\001\001\000\024" +
    "\037\276\054\346\056\345\057\344\070\347\150\351\152" +
    "\234\154\233\201\273\001\001\000\002\001\001\000\004" +
    "\202\072\001\001\000\002\001\001\000\004\067\u010b\001" +
    "\001\000\002\001\001\000\024\037\276\054\u0101\056\345" +
    "\057\344\070\347\150\351\152\234\154\233\201\273\001" +
    "\001\000\002\001\001\000\012\055\364\062\365\065\355" +
    "\067\362\001\001\000\024\037\276\054\353\056\345\057" +
    "\344\070\347\150\354\152\234\154\233\201\273\001\001" +
    "\000\002\001\001\000\012\055\364\062\365\065\355\067" +
    "\362\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\016\037\276\057\376\150\375" +
    "\152\234\154\233\201\273\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\202\072" +
    "\001\001\000\002\001\001\000\010\060\u0104\065\u0102\066" +
    "\u0106\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\024\037\276\054\u0109\056\345\057\344\070\347" +
    "\150\351\152\234\154\233\201\273\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\056\u010c\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\012\037" +
    "\276\152\u0114\154\233\201\273\001\001\000\012\037\276" +
    "\152\u0112\154\233\201\273\001\001\000\002\001\001\000" +
    "\004\151\u0113\001\001\000\002\001\001\000\004\151\u0115" +
    "\001\001\000\002\001\001\000\010\037\276\154\u011b\201" +
    "\273\001\001\000\002\001\001\000\010\037\276\154\u0119" +
    "\201\273\001\001\000\004\153\u011a\001\001\000\002\001" +
    "\001\000\004\153\u011c\001\001\000\002\001\001\000\014" +
    "\037\276\150\u011e\152\234\154\233\201\273\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\040\u0123\041\u0122" +
    "\001\001\000\002\001\001\000\016\037\276\042\u0127\150" +
    "\u0126\152\234\154\233\201\273\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\043\u0129\202\072\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\203\075\001\001\000" +
    "\006\167\u012d\201\u012e\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\014\155\u0132\156\147\170" +
    "\u0131\172\145\176\142\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\020\037\276\150\302\152\234\154\233\172\164" +
    "\176\142\201\273\001\001\000\004\173\u0138\001\001\000" +
    "\002\001\001\000\004\031\u013a\001\001\000\002\001\001" +
    "\000\014\037\276\150\u013c\152\234\154\233\201\273\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\026\u013f" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\050" +
    "\u0142\051\270\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\031\u0145\001\001\000\002\001\001\000\004\031" +
    "\u0147\001\001\000\002\001\001\000\004\031\u0149\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\034\u0151\035\u0150\036\u014e\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\035\u0155\036\u0154" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\036\u0158\001\001\000\002\001\001\000\002" +
    "\001\001\000\042\005\u0161\006\u015f\017\u0166\025\u015c\030" +
    "\u0164\037\u0160\054\u015b\056\345\057\344\070\347\071\u015e" +
    "\115\u0163\150\351\152\234\154\233\201\273\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\011\u0197\001\001\000\002\001\001\000" +
    "\010\116\u0192\117\u0191\121\u018d\001\001\000\006\007\u0167" +
    "\202\072\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\016" +
    "\014\u0189\037\276\150\u017c\152\234\154\233\201\273\001" +
    "\001\000\004\010\u016d\001\001\000\026\012\u016b\037\276" +
    "\054\u016c\056\345\057\344\070\347\150\351\152\234\154" +
    "\233\201\273\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\010\011\u0175\013\u0174\203\075\001" +
    "\001\000\002\001\001\000\002\001\001\000\016\014\u0185" +
    "\037\276\150\u017c\152\234\154\233\201\273\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\011\u0179\016\u0177\204\100\001\001\000" +
    "\002\001\001\000\016\014\u017d\037\276\150\u017c\152\234" +
    "\154\233\201\273\001\001\000\002\001\001\000\004\015" +
    "\u0184\001\001\000\004\015\u0183\001\001\000\004\015\u0181" +
    "\001\001\000\002\001\001\000\004\011\u017f\001\001\000" +
    "\002\001\001\000\016\014\u0182\037\276\150\u017c\152\234" +
    "\154\233\201\273\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\011\u0187\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\011\u018b\001\001\000\002" +
    "\001\001\000\004\120\u0194\001\001\000\002\001\001\000" +
    "\042\005\u0161\006\u015f\017\u0166\025\u015c\030\u0164\037\u0160" +
    "\054\u015b\056\345\057\344\070\347\071\u015e\115\u0193\150" +
    "\351\152\234\154\233\201\273\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\121\u0196\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\036\006\u019a\017\u0166\025\u015c\030\u0164\037\u0160\054\u015b" +
    "\056\345\057\344\070\347\071\u015e\150\351\152\234\154" +
    "\233\201\273\001\001\000\002\001\001\000\030\017\250" +
    "\025\201\030\240\033\231\037\225\071\205\150\221\152" +
    "\234\154\233\161\u01bc\201\207\001\001\000\030\017\250" +
    "\025\201\030\240\033\231\037\225\071\205\150\221\152" +
    "\234\154\233\161\u01ba\201\207\001\001\000\002\001\001" +
    "\000\030\017\250\025\201\030\240\033\231\037\225\071" +
    "\205\150\221\152\234\154\233\161\u01b7\201\207\001\001" +
    "\000\004\163\u01ac\001\001\000\030\017\250\025\201\030" +
    "\240\033\231\037\225\071\205\150\221\152\234\154\233" +
    "\161\u01a5\201\207\001\001\000\004\164\u01a3\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\166\u01a6\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\030\017\250\025\201\030\240\033\231" +
    "\037\225\071\205\150\221\152\234\154\233\161\u01b5\201" +
    "\207\001\001\000\030\017\250\025\201\030\240\033\231" +
    "\037\225\071\205\150\221\152\234\154\233\161\u01b0\201" +
    "\207\001\001\000\030\017\250\025\201\030\240\033\231" +
    "\037\225\071\205\150\221\152\234\154\233\161\u01ad\201" +
    "\207\001\001\000\002\001\001\000\002\001\001\000\030" +
    "\017\250\025\201\030\240\033\231\037\225\071\205\150" +
    "\221\152\234\154\233\161\u01af\201\207\001\001\000\002" +
    "\001\001\000\004\165\u01b2\001\001\000\030\017\250\025" +
    "\201\030\240\033\231\037\225\071\205\150\221\152\234" +
    "\154\233\161\u01b3\201\207\001\001\000\002\001\001\000" +
    "\004\165\u01b4\001\001\000\002\001\001\000\004\166\u01b6" +
    "\001\001\000\002\001\001\000\002\001\001\000\030\017" +
    "\250\025\201\030\240\033\231\037\225\071\205\150\221" +
    "\152\234\154\233\161\u01b9\201\207\001\001\000\002\001" +
    "\001\000\004\165\u01bb\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\031\u01be\001\001\000\004\032\u01c0\001" +
    "\001\000\004\031\u01c2\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\167" +
    "\u01c5\201\u012e\001\001\000\002\001\001\000\004\171\u01c9" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\010\021\u01d7\122\u01db\124\u01dc\001\001\000\004\125" +
    "\u01ff\001\001\000\004\125\u01fe\001\001\000\004\125\u01fd" +
    "\001\001\000\004\125\u01fc\001\001\000\004\125\u01fb\001" +
    "\001\000\004\125\u01fa\001\001\000\004\125\u01f9\001\001" +
    "\000\004\125\u01f8\001\001\000\004\125\u01f7\001\001\000" +
    "\002\001\001\000\004\125\u01f6\001\001\000\004\123\u01f4" +
    "\001\001\000\004\125\u01f2\001\001\000\004\022\u01e8\001" +
    "\001\000\002\001\001\000\004\125\u01e7\001\001\000\004" +
    "\125\u01e0\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\126\u01e3\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\026\023\u01ec\037\276\054\u01ed\056\345" +
    "\057\344\070\347\150\351\152\234\154\233\201\273\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\024\u01ef\001\001\000\014\037" +
    "\276\150\u01f1\152\234\154\233\201\273\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\031\u0201\001\001\000\002\001\001\000\002" +
    "\001\001\000\024\037\276\054\u0208\056\345\057\344\070" +
    "\347\150\351\152\234\154\233\201\273\001\001\000\004" +
    "\073\u0207\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\024\037\276\054\u020a" +
    "\056\345\057\344\070\347\150\351\152\234\154\233\201" +
    "\273\001\001\000\006\073\u020e\074\u020c\001\001\000\024" +
    "\037\276\054\u020f\056\345\057\344\070\347\150\351\152" +
    "\234\154\233\201\273\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\026\u0212\001\001\000\002\001\001\000\002" +
    "\001\001\000\014\037\276\150\u0215\152\234\154\233\201" +
    "\273\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\031\u0218\001\001\000\002\001\001\000\014\037\276\150" +
    "\u021a\152\234\154\233\201\273\001\001\000\002\001\001" +
    "\000\014\037\276\150\u021c\152\234\154\233\201\273\001" +
    "\001\000\002\001\001\000\002\001\001\000\014\037\276" +
    "\150\u021f\152\234\154\233\201\273\001\001\000\002\001" +
    "\001\000\002\001\001\000\026\020\u0222\037\276\054\u0223" +
    "\056\345\057\344\070\347\150\351\152\234\154\233\201" +
    "\273\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\122\u0225\124\u01dc\001\001\000\004\022\u0226\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\177\u022a\001\001" +
    "\000\004\200\u022e\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\173\u023b\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\014\101\154" +
    "\102\133\103\132\107\153\111\u0242\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\113\u0247\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\012\075\116\105\u024c\112\125" +
    "\201\120\001\001\000\002\001\001\000\010\250\u024d\251" +
    "\u024b\252\111\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\076\u0258\114\u0257\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\016\037\276\077\u025b\150\u025a" +
    "\152\234\154\233\201\273\001\001\000\004\100\u025f\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\215" +
    "\u0276\001\001\000\004\202\072\001\001\000\004\210\u026d" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\211\u0270\001\001\000\022" +
    "\037\276\150\u026a\152\234\154\233\201\273\206\u0271\207" +
    "\u0269\212\u026b\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\213\u0273\001\001\000\002\001\001\000\004\203" +
    "\075\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\216\u0278\001\001\000\002\001\001\000\006\217\u0285\220" +
    "\u027e\001\001\000\002\001\001\000\006\217\u027c\220\u027e" +
    "\001\001\000\002\001\001\000\004\221\u0280\001\001\000" +
    "\002\001\001\000\004\222\u0283\001\001\000\002\001\001" +
    "\000\004\221\u0284\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\252\u0287" +
    "\001\001\000\002\001\001\000\014\037\276\150\u0289\152" +
    "\234\154\233\201\273\001\001\000\002\001\001\000\012" +
    "\201\062\243\u028d\244\u028c\245\063\001\001\000\010\201" +
    "\062\244\u028e\245\063\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\257\u02be\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\272\u02b7\001\001\000\002\001\001\000" +
    "\004\257\u0297\001\001\000\002\001\001\000\010\201\u029a" +
    "\260\u029b\261\u0299\001\001\000\014\214\u02ac\266\u02a9\267" +
    "\u02a8\273\u02af\274\u02ae\001\001\000\004\262\u02a1\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\026\037\276\054\u029f\056\345\057\344\070\347\150\351" +
    "\152\234\154\233\201\273\265\u02a0\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\026\037\276" +
    "\054\u02a4\056\345\057\344\070\347\150\u02a5\152\234\154" +
    "\233\201\273\264\u02a3\001\001\000\002\001\001\000\002" +
    "\001\001\000\012\055\364\062\365\065\355\067\362\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\012\155\u02b4\156\147\172\145\176" +
    "\142\001\001\000\010\201\u029a\260\u02b3\261\u0299\001\001" +
    "\000\006\273\u02b2\274\u02ae\001\001\000\012\075\116\105" +
    "\u02b0\112\125\201\120\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\274\u02b1\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\014\037" +
    "\276\150\u02b9\152\234\154\233\201\273\001\001\000\002" +
    "\001\001\000\004\255\u02bc\001\001\000\002\001\001\000" +
    "\006\201\u0291\256\u02bd\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\040\004\u02c1\127\030\224" +
    "\011\241\040\253\014\317\013\u0129\031\u012b\004\u0134\006" +
    "\u0136\026\u0137\015\u013a\037\u013d\033\u0154\024\u0155\005\001" +
    "\001\000\002\001\001\000\002\001\001\000\040\004\u02c4" +
    "\127\030\224\011\241\040\253\014\317\013\u0129\031\u012b" +
    "\004\u0134\006\u0136\026\u0137\015\u013a\037\u013d\033\u0154\024" +
    "\u0155\005\001\001\000\002\001\001\000\004\002\u02c6\001" +
    "\001\000\040\004\u02c7\127\030\224\011\241\040\253\014" +
    "\317\013\u0129\031\u012b\004\u0134\006\u0136\026\u0137\015\u013a" +
    "\037\u013d\033\u0154\024\u0155\005\001\001\000\002\001\001" +
    "\000\004\205\u02ec\001\001\000\004\u012d\u02ea\001\001\000" +
    "\004\u012d\u02e4\001\001\000\004\u012d\u02de\001\001\000\004" +
    "\u012d\u02dc\001\001\000\004\u012d\u02da\001\001\000\004\u012d" +
    "\u02d8\001\001\000\004\u012d\u02d1\001\001\000\002\001\001" +
    "\000\004\u012e\u02d3\001\001\000\004\u012f\u02d5\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\u012e\u02db\001\001\000\002\001\001\000\004" +
    "\u012e\u02dd\001\001\000\002\001\001\000\006\201\u02df\u0130" +
    "\u02e0\001\001\000\004\u0131\u02e2\001\001\000\002\001\001" +
    "\000\006\201\u02df\u0130\u02e3\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\u0132\u02e5\001\001\000\002\001\001" +
    "\000\004\u0133\u02e8\001\001\000\004\u0132\u02e9\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\u012e\u02eb\001\001" +
    "\000\002\001\001\000\002\001\001\000\040\004\u02ee\127" +
    "\030\224\011\241\040\253\014\317\013\u0129\031\u012b\004" +
    "\u0134\006\u0136\026\u0137\015\u013a\037\u013d\033\u0154\024\u0155" +
    "\005\001\001\000\002\001\001\000\004\275\u04a2\001\001" +
    "\000\004\u0151\u048c\001\001\000\006\201\u037f\u013f\u0380\001" +
    "\001\000\004\330\u0366\001\001\000\002\001\001\000\004" +
    "\275\u032d\001\001\000\004\u011d\u02f8\001\001\000\004\205" +
    "\u02f7\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\u011e\u02fa\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\u011f\u02fe\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\u0120\u0302\001\001\000\002\001" +
    "\001\000\006\122\u0303\124\u01dc\001\001\000\004\u0121\u0304" +
    "\001\001\000\004\u0126\u030d\001\001\000\004\316\u0306\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\u011f\u030e\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\122\u0311\124\u01dc\001\001\000" +
    "\010\u0120\u0314\u0122\u0313\u0123\u0312\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\u0120\u0314\u0123\u031b\001\001\000\002\001" +
    "\001\000\014\127\u031f\224\u0320\241\u031e\253\u0321\u0124\u031d" +
    "\001\001\000\016\127\u031f\224\u0320\241\u031e\253\u0321\u0124" +
    "\u0324\u0125\u0323\001\001\000\002\001\001\000\004\205\u0322" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\u0127\u0327\001\001\000\016\127\u031f\224\u0320" +
    "\241\u031e\253\u0321\u0124\u0324\u0125\u0325\001\001\000\002\001" +
    "\001\000\014\037\276\150\u032a\152\234\154\233\201\273" +
    "\001\001\000\002\001\001\000\004\205\u0329\001\001\000" +
    "\002\001\001\000\004\u0128\u032b\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\276\u0331\277" +
    "\u0330\300\u032f\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\301\u0337\001\001\000\002\001\001" +
    "\000\006\122\u0338\124\u01dc\001\001\000\020\302\u0339\303" +
    "\u0345\304\u0344\305\u0342\306\u033a\311\u0346\312\u0343\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\012\305\u035f\306\u033a\311\u0346\312\u0343\001\001\000\004" +
    "\300\u035e\001\001\000\004\316\u035c\001\001\000\004\313" +
    "\u0350\001\001\000\004\307\u034a\001\001\000\016\303\u0347" +
    "\304\u0344\305\u0342\306\u033a\311\u0346\312\u0343\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\310\u034d" +
    "\001\001\000\002\001\001\000\006\311\u034e\312\u0343\001" +
    "\001\000\002\001\001\000\002\001\001\000\014\127\u0352" +
    "\224\u0354\241\u0351\253\u0355\314\u0353\001\001\000\002\001" +
    "\001\000\004\205\u035b\001\001\000\016\127\u0352\224\u0354" +
    "\241\u0351\253\u0355\314\u0357\315\u0356\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\205\u035a\001\001\000\016" +
    "\127\u0352\224\u0354\241\u0351\253\u0355\314\u0357\315\u0359\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\014\304\u035d\305\u0342\306\u033a\311" +
    "\u0346\312\u0343\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\312\u0361\001\001\000\002\001" +
    "\001\000\004\300\u0363\001\001\000\002\001\001\000\006" +
    "\277\u0365\300\u032f\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\331\u0368\001\001\000\004\332\u036b\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\127\u037d\001\001\000\004\333\u036f\001\001\000\004" +
    "\334\u037a\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\127\u0372\001\001\000\006\205\u0373\335\u0375\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\205\u0378\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\334\u037c\001" +
    "\001\000\002\001\001\000\006\205\u0373\335\u037e\001\001" +
    "\000\002\001\001\000\004\u0140\u0387\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\u014f\u0480\001\001\000\012\361\u039e\362\u03a0\u0109" +
    "\u039b\u0148\u039d\001\001\000\010\u014a\u0389\u014b\u0388\u0153\u038c" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\u014c\u0392\001\001\000\006\u014a\u0391\u014b\u0388" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\u014b\u0390\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\u014d\u0396\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\u014e\u0398\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\u014e\u039a\001" +
    "\001\000\002\001\001\000\004\u0149\u047d\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\u0149\u047a\001\001\000" +
    "\006\122\u040f\124\u01dc\001\001\000\004\363\u03a6\001\001" +
    "\000\006\360\u0401\u0107\u0402\001\001\000\002\001\001\000" +
    "\004\u0105\u03d9\001\001\000\002\001\001\000\004\u0101\u03c3" +
    "\001\001\000\002\001\001\000\004\365\u03a9\001\001\000" +
    "\002\001\001\000\004\364\u03aa\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\366\u03af\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\367\u03b1\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\370\u03b4\371\u03b3\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\371\u03bb\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\367\u03c1\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\u0102\u03c8\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\u0103\u03cb\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\u0104\u03cd\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\u0102\u03d4" +
    "\001\001\000\002\001\001\000\004\365\u03d6\001\001\000" +
    "\004\364\u03d7\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\012\155\u03db\156\147\172\145\176" +
    "\142\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\012\155\u03e0\156\147\172" +
    "\145\176\142\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\372\u03e3\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\367\u03e6\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\373\u03ec\374\u03eb\001" +
    "\001\000\004\375\u03f2\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\367\u03ef\001\001\000" +
    "\002\001\001\000\004\374\u03f1\001\001\000\002\001\001" +
    "\000\004\376\u03f5\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\u0100\u03fe\001\001\000\004\377\u03fb\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\u0108\u0409\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\u0106\u040d\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\022\336\u0411" +
    "\337\u0412\u010a\u041b\u010b\u041a\u010c\u0419\u010e\u0416\u0111\u0415\u0112" +
    "\u0413\001\001\000\016\336\u0411\337\u0412\u010f\u046e\u0110\u046d" +
    "\u0111\u046c\u0112\u0413\001\001\000\002\001\001\000\004\340" +
    "\u0429\001\001\000\002\001\001\000\016\336\u0411\337\u0412" +
    "\u010c\u0427\u010e\u0416\u0111\u0415\u0112\u0413\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\010\336\u0411" +
    "\337\u0412\u0112\u0425\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\020\336\u0411\337\u0412\u010b\u0420\u010c" +
    "\u0419\u010e\u0416\u0111\u0415\u0112\u0413\001\001\000\002\001\001" +
    "\000\016\336\u0411\337\u0412\u010c\u0422\u010e\u0416\u0111\u0415\u0112" +
    "\u0413\001\001\000\002\001\001\000\012\336\u0411\337\u0412" +
    "\u0111\u0424\u0112\u0413\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\010\341\u042f\346\u0431\347\u0430\001\001\000\002\001" +
    "\001\000\006\357\u046a\360\u0469\001\001\000\002\001\001" +
    "\000\004\356\u0462\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\010\342\u0434" +
    "\343\u0433\345\u0438\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\343\u0447\345\u0438\001\001\000\002\001\001" +
    "\000\004\344\u043b\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\345\u043c\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\350\u044a\001\001\000\006\351\u0450\352\u044f\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\353\u0455\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\352\u0453\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\354\u0457\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\355\u045d\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\010\342\u0460" +
    "\343\u0433\345\u0438\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\012\155\u0464\156\147\172\145" +
    "\176\142\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\014\037\276" +
    "\150\u0474\152\234\154\233\201\273\001\001\000\002\001" +
    "\001\000\002\001\001\000\012\336\u0411\337\u0412\u0111\u0473" +
    "\u0112\u0413\001\001\000\002\001\001\000\002\001\001\000" +
    "\014\037\276\150\u0476\152\234\154\233\201\273\001\001" +
    "\000\002\001\001\000\014\336\u0411\337\u0412\u0110\u0478\u0111" +
    "\u046c\u0112\u0413\001\001\000\002\001\001\000\012\361\u039e" +
    "\362\u03a0\u0109\u039b\u0148\u047b\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\u0150" +
    "\u0483\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\u0150" +
    "\u0488\001\001\000\002\001\001\000\004\u0150\u048a\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\u0152\u0490\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\326\u0493\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\327\u049b\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\040\004\u04a4\127\030\224\011\241\040\253" +
    "\014\317\013\u0129\031\u012b\004\u0134\006\u0136\026\u0137\015" +
    "\u013a\037\u013d\033\u0154\024\u0155\005\001\001\000\002\001" +
    "\001\000\002\001\001\000\016\127\u04b9\214\u04b6\220\u04b4" +
    "\231\u04b8\232\u04b7\233\u04b5\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\201\u04a6\230\u04ab\001\001\000\002" +
    "\001\001\000\002\001\001\000\014\037\276\150\u04ad\152" +
    "\234\154\233\201\273\001\001\000\002\001\001\000\012" +
    "\201\u04a6\226\u04b0\227\u04af\230\u04aa\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\201\u04a6\227\u04b2\230\u04aa" +
    "\001\001\000\002\001\001\000\002\001\001\000\012\127" +
    "\u04b9\214\u04b6\232\u04d1\233\u04b5\001\001\000\002\001\001" +
    "\000\006\127\u04b9\233\u04d0\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\240\u04cf\001\001\000\002\001\001" +
    "\000\022\037\276\150\u04bf\152\234\154\233\201\273\223" +
    "\u04c3\234\u04c2\235\u04bd\001\001\000\002\001\001\000\004" +
    "\236\u04c4\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\022\037\276\150\u04bf\152" +
    "\234\154\233\201\273\223\u04c3\234\u04ce\235\u04bd\001\001" +
    "\000\006\237\u04c7\240\u04c9\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\022\037\276\150\u04bf\152\234\154\233\201" +
    "\273\223\u04c3\234\u04cd\235\u04bd\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\240\u04d3\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\201\u04dc\u0113" +
    "\u04dd\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\321\u04db\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\012\361\u04e1\362\u03a0" +
    "\u0109\u04df\u0114\u04e0\001\001\000\002\001\001\000\004\u0115" +
    "\u04e2\001\001\000\002\001\001\000\002\001\001\000\012" +
    "\361\u04e1\362\u03a0\u0109\u04df\u0114\u04e4\001\001\000\004\u0115" +
    "\u04e5\001\001\000\002\001\001\000\004\u0116\u04e7\001\001" +
    "\000\004\205\u04ef\001\001\000\004\u0117\u04e9\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\205\u04f1\001\001\000\002\001\001\000\004" +
    "\322\u04f4\001\001\000\004\323\u04f7\001\001\000\004\205" +
    "\u04f5\001\001\000\002\001\001\000\004\326\u04fb\001\001" +
    "\000\004\324\u04f9\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\325\u04fc\001\001\000\002" +
    "\001\001\000\004\326\u04fe\001\001\000\004\325\u04ff\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\205\u0502" +
    "\001\001\000\042\003\u0503\004\023\127\030\224\011\241" +
    "\040\253\014\317\013\u0129\031\u012b\004\u0134\006\u0136\026" +
    "\u0137\015\u013a\037\u013d\033\u0154\024\u0155\005\001\001\000" +
    "\002\001\001\000\004\u0139\u0506\001\001\000\002\001\001" +
    "\000\004\205\u050a\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\u013c\u050c" +
    "\001\001\000\004\205\u050d\001\001\000\002\001\001\000" +
    "\040\004\u050f\127\030\224\011\241\040\253\014\317\013" +
    "\u0129\031\u012b\004\u0134\006\u0136\026\u0137\015\u013a\037\u013d" +
    "\033\u0154\024\u0155\005\001\001\000\002\001\001\000\040" +
    "\004\u0511\127\030\224\011\241\040\253\014\317\013\u0129" +
    "\031\u012b\004\u0134\006\u0136\026\u0137\015\u013a\037\u013d\033" +
    "\u0154\024\u0155\005\001\001\000\002\001\001\000\040\004" +
    "\u0513\127\030\224\011\241\040\253\014\317\013\u0129\031" +
    "\u012b\004\u0134\006\u0136\026\u0137\015\u013a\037\u013d\033\u0154" +
    "\024\u0155\005\001\001\000\002\001\001\000\004\201\u0515" +
    "\001\001\000\004\u012a\u0516\001\001\000\004\u012a\u0519\001" +
    "\001\000\004\201\u0518\001\001\000\002\001\001\000\004" +
    "\205\u051a\001\001\000\002\001\001\000\040\004\u051c\127" +
    "\030\224\011\241\040\253\014\317\013\u0129\031\u012b\004" +
    "\u0134\006\u0136\026\u0137\015\u013a\037\u013d\033\u0154\024\u0155" +
    "\005\001\001\000\002\001\001\000\002\001\001\000\044" +
    "\005\u0524\006\u015f\017\u0166\025\u015c\030\u0164\037\u0160\054" +
    "\u015b\056\345\057\344\070\347\071\u015e\132\u0522\135\u0521" +
    "\150\351\152\234\154\233\201\273\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\133\u0547\001\001\000\020\136\u052d\140\u052b\141" +
    "\u052a\142\u0528\143\u0527\144\u0525\147\u0532\001\001\000\002" +
    "\001\001\000\012\155\u0544\156\147\172\145\176\142\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\137\u0542" +
    "\201\u0541\001\001\000\002\001\001\000\002\001\001\000" +
    "\012\155\u053f\156\147\172\145\176\142\001\001\000\002" +
    "\001\001\000\042\005\u0524\006\u015f\017\u0166\025\u015c\030" +
    "\u0164\037\u0160\054\u015b\056\345\057\344\070\347\071\u015e" +
    "\135\u053e\150\351\152\234\154\233\201\273\001\001\000" +
    "\002\001\001\000\012\075\116\105\u0535\112\125\201\120" +
    "\001\001\000\002\001\001\000\002\001\001\000\042\005" +
    "\u0161\006\u015f\017\u0166\025\u015c\030\u0164\037\u0160\054\u015b" +
    "\056\345\057\344\070\347\071\u015e\115\u0534\150\351\152" +
    "\234\154\233\201\273\001\001\000\002\001\001\000\012" +
    "\141\u0536\142\u0528\143\u0527\144\u0525\001\001\000\002\001" +
    "\001\000\024\037\276\054\u0538\056\345\057\344\070\347" +
    "\150\351\152\234\154\233\201\273\001\001\000\004\145" +
    "\u053a\001\001\000\024\037\276\054\u053c\056\345\057\344" +
    "\070\347\150\351\152\234\154\233\201\273\001\001\000" +
    "\006\143\u053b\144\u0525\001\001\000\002\001\001\000\004" +
    "\145\u053d\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\144\u0540\001\001\000\002\001\001\000\014\140\u0543" +
    "\141\u052a\142\u0528\143\u0527\144\u0525\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\142\u0545\143\u0527\144\u0525" +
    "\001\001\000\002\001\001\000\014\037\276\150\u0548\152" +
    "\234\154\233\201\273\001\001\000\002\001\001\000\002" +
    "\001\001\000\044\005\u0524\006\u015f\017\u0166\025\u015c\030" +
    "\u0164\037\u0160\054\u015b\056\345\057\344\070\347\071\u015e" +
    "\134\u054c\135\u054b\150\351\152\234\154\233\201\273\001" +
    "\001\000\042\005\u0524\006\u015f\017\u0166\025\u015c\030\u0164" +
    "\037\u0160\054\u015b\056\345\057\344\070\347\071\u015e\135" +
    "\u054d\150\351\152\234\154\233\201\273\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\u0135" +
    "\u054f\001\001\000\004\205\u0553\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\040\004\u0555\127\030\224\011\241\040\253\014\317\013" +
    "\u0129\031\u012b\004\u0134\006\u0136\026\u0137\015\u013a\037\u013d" +
    "\033\u0154\024\u0155\005\001\001\000\002\001\001\000\004" +
    "\201\u0559\001\001\000\002\001\001\000\002\001\001\000" +
    "\010\316\u055b\u0158\u055c\u015a\u055a\001\001\000\004\u0159\u0567" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\u0157\u0562" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\316" +
    "\u055b\u0158\u0564\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\u0157\u0562\001\001\000\004\205\u056b\001\001\000" +
    "\010\316\u055b\u0158\u055c\u015a\u0569\001\001\000\004\u0159\u056a" +
    "\001\001\000\002\001\001\000\002\001\001\000\040\004" +
    "\u056d\127\030\224\011\241\040\253\014\317\013\u0129\031" +
    "\u012b\004\u0134\006\u0136\026\u0137\015\u013a\037\u013d\033\u0154" +
    "\024\u0155\005\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


  /** User initialization code. */
  public void user_init() throws java.lang.Exception
    {
 
    try {
        BufferedReader buffered = new BufferedReader(new FileReader(MiniSql.ubicacionArchivo));
        analizadorFlex = new Lexemas(buffered);
    } catch (IOException ex) {
        ex.printStackTrace();
    }

    }

  /** Scan to get the next Symbol. */
  public java_cup.runtime.Symbol scan()
    throws java.lang.Exception
    {
 
    return analizadorFlex.next_token(); 

    }


Lexemas analizadorFlex = null;

public void syntax_error(Symbol cur_token){
    Errores.SyntaxErrorCup((MyToken) cur_token.value);
}

public void report_error(String message, Object info) {
    StringBuilder m = new StringBuilder("Error");
    if (info instanceof java_cup.runtime.Symbol) {
        java_cup.runtime.Symbol s = ((java_cup.runtime.Symbol) info);
        m.append(" " + s.value.toString());
        if (s.left >= 0) {                
            m.append(" in line "+(s.left));
            if (s.right >= 0)
                m.append(", column "+(s.right));
        }
    }
    m.append(" : "+message);
    System.err.println(m);
}


/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$parser$actions {
  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$parser$do_action_part00000000(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIALB EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INICIALB ::= BEGIN INICIAL END FIN_AN INICIALB 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIALB",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // INICIALB ::= INICIAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIALB",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // INICIALB ::= error INICIALB 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIALB",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // INICIALB ::= error 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIALB",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // INICIALB ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIALB",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // INICIAL ::= SELECT1 FIN_AN GOOP INICIAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIAL",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // INICIAL ::= INSERT0 GOOP INICIAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIAL",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // INICIAL ::= DELETE1 GOOP INICIAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIAL",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // INICIAL ::= UPDATE0 GOOP INICIAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIAL",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // INICIAL ::= CRT GOOP INICIAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIAL",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // INICIAL ::= TRUNCATE1 GOOP INICIAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIAL",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // INICIAL ::= DROP0 GOOP INICIAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIAL",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // INICIAL ::= BEGINTRAN GOOP INICIAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIAL",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // INICIAL ::= COMMITTRAN GOOP INICIAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIAL",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // INICIAL ::= ROLLBACKTRAN GOOP INICIAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIAL",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // INICIAL ::= SAVETRAN GOOP INICIAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIAL",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // INICIAL ::= ALTER0 GOOP INICIAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIAL",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // INICIAL ::= EX GOOP INICIAL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIAL",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // INICIAL ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INICIAL",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // GOOP ::= GO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("GOOP",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // GOOP ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("GOOP",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // SEXP ::= SEXP3 SEXP2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEXP",102, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // SEXP2 ::= Mas SEXP3 SEXP2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEXP2",103, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // SEXP2 ::= Menos SEXP3 SEXP2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEXP2",103, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // SEXP2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEXP2",103, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // SEXP3 ::= SEXP5 SEXP4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEXP3",104, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // SEXP4 ::= Multiplicacion SEXP5 SEXP4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEXP4",105, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // SEXP4 ::= Division SEXP5 SEXP4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEXP4",105, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // SEXP4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEXP4",105, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // SEXP5 ::= ParentesisAbrir SEXP ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEXP5",106, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // SEXP5 ::= DatoEntero 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEXP5",106, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // SEXP5 ::= DatoFloat 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEXP5",106, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // SEXP5 ::= Arroba Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEXP5",106, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // SEXP5 ::= AGG_FN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEXP5",106, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // SEXP5 ::= OBJECT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEXP5",106, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // FIN_AN ::= PuntoComa 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FIN_AN",131, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // FIN_AN ::= GO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FIN_AN",131, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // OBJECT ::= Identificador OBJECT1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OBJECT",127, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // OBJECT1 ::= Punto Identificador OBJECT2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OBJECT1",128, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // OBJECT1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OBJECT1",128, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // OBJECT2 ::= Punto Identificador OBJECT3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OBJECT2",129, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // OBJECT2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OBJECT2",129, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // OBJECT3 ::= Punto Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OBJECT3",130, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // OBJECT3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OBJECT3",130, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // SH_COND ::= SH_COND1 SH_COND2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SH_COND",107, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // SH_COND1 ::= MATCH ParentesisAbrir GSP ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SH_COND1",108, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // SH_COND1 ::= SH_CONDWM 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SH_COND1",108, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // SH_COND2 ::= AND SH_COND 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SH_COND2",109, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // SH_COND2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SH_COND2",109, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // PREDICATE ::= PREDICATE1 PREDICATE2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE",110, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // PREDICATE ::= CONTAINS ParentesisAbrir PREDICATE7 Coma PREDICATE8 ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE",110, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // PREDICATE ::= FREETEXT ParentesisAbrir PREDICATE7 Coma PREDICATE9 ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE",110, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // PREDICATE1 ::= OBJECT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE1",111, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // PREDICATE1 ::= DatoString 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE1",111, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // PREDICATE1 ::= SEXP 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE1",111, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // PREDICATE1 ::= CASEW 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE1",111, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // PREDICATE1 ::= AGG_FN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE1",111, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // PREDICATE1 ::= STR_FN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE1",111, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // PREDICATE1 ::= DT_FN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE1",111, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // PREDICATE1 ::= CONV 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE1",111, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // PREDICATE1 ::= OTH_FN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE1",111, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // PREDICATE2 ::= COMPARE_OPR PREDICATE1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE2",112, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // PREDICATE2 ::= NOT PREDICATE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE2",112, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // PREDICATE2 ::= LIKE PREDICATE1 PREDICATE6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE2",112, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // PREDICATE2 ::= BETWEEN PREDICATE1 AND PREDICATE1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE2",112, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // PREDICATE2 ::= IS PREDICATE4 NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE2",112, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // PREDICATE2 ::= IN PREDICATE1 PREDICATE5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE2",112, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // PREDICATE3 ::= LIKE PREDICATE1 PREDICATE6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE3",113, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // PREDICATE3 ::= BETWEEN PREDICATE1 AND PREDICATE1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE3",113, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // PREDICATE3 ::= IN PREDICATE1 PREDICATE5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE3",113, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // PREDICATE4 ::= NOT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE4",114, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // PREDICATE4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE4",114, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // PREDICATE5 ::= Coma PREDICATE1 PREDICATE5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE5",115, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // PREDICATE5 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE5",115, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // PREDICATE6 ::= ESCAPE DatoString 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE6",116, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // PREDICATE6 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE6",116, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // PREDICATE7 ::= Multiplicacion 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE7",117, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // PREDICATE7 ::= OBJECT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE7",117, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // PREDICATE8 ::= SH_COND 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE8",118, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // PREDICATE9 ::= DatoString 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE9",119, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // PREDICATE9 ::= Arroba Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PREDICATE9",119, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // SH_CONDWM ::= SH_CONDWM4 PREDICATE SH_CONDWM1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SH_CONDWM",120, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // SH_CONDWM ::= ParentesisAbrir SH_CONDWM ParentesisCerrar SH_CONDWM1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SH_CONDWM",120, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // SH_CONDWM1 ::= OR SH_CONDWM2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SH_CONDWM1",121, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // SH_CONDWM1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SH_CONDWM1",121, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // SH_CONDWM2 ::= NOT SH_CONDWM3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SH_CONDWM2",122, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // SH_CONDWM2 ::= SH_CONDWM3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SH_CONDWM2",122, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // SH_CONDWM3 ::= PREDICATE SH_CONDWM1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SH_CONDWM3",123, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // SH_CONDWM3 ::= ParentesisAbrir SH_CONDWM ParentesisCerrar SH_CONDWM1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SH_CONDWM3",123, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // SH_CONDWM4 ::= NOT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SH_CONDWM4",124, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // SH_CONDWM4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SH_CONDWM4",124, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // GSP ::= Identificador GSP1 Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("GSP",125, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // GSP1 ::= Menor Menos ParentesisAbrir Identificador ParentesisCerrar Menos 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("GSP1",126, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // GSP1 ::= Menos ParentesisAbrir Identificador ParentesisCerrar Menos Mayor 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("GSP1",126, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // EXPRESSION ::= SEXP EXPRESSION1 EXPRESSION3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION",42, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // EXPRESSION ::= EXPRESSION2 SUM_OPR EXPRESSION2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION",42, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // EXPRESSION ::= NOT_OPR EXPRESSION EXPRESSION4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION",42, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // EXPRESSION ::= EXPRESSION3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION",42, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // EXPRESSION1 ::= AR_OPR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION1",43, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // EXPRESSION1 ::= COMPARE_OPR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION1",43, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // EXPRESSION1 ::= SUM_OPR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION1",43, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // EXPRESSION2 ::= DatoString 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION2",44, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // EXPRESSION2 ::= Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION2",44, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // EXPRESSION3 ::= SEXP 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION3",45, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // EXPRESSION3 ::= Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION3",45, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // EXPRESSION3 ::= DatoString 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION3",45, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // EXPRESSION4 ::= COMPARE_OPR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION4",46, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // EXPRESSION4 ::= LOGIC_OPR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION4",46, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // DML ::= DML2 DML3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DML",132, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // DML2 ::= COLNAME 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DML2",133, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // DML2 ::= SEXP 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DML2",133, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // DML3 ::= AS Identificador DML4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DML3",134, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // DML3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DML3",134, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // DML4 ::= Coma DML 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DML4",135, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // DML4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DML4",135, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // COLNAME ::= Identificador Punto COLNAME1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLNAME",136, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // COLNAME1 ::= Multiplicacion 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLNAME1",137, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // COLNAME1 ::= Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLNAME1",137, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // OUTCL ::= OUTPUT DML OUTCL1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OUTCL",138, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // OUTCL ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OUTCL",138, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // OUTCL1 ::= INTO OUTCL2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OUTCL1",139, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // OUTCL1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OUTCL1",139, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // OUTCL2 ::= Arroba Identificador OUTCL3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OUTCL2",140, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // OUTCL2 ::= Identificador OUTCL3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OUTCL2",140, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // OUTCL3 ::= COLST 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OUTCL3",141, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // OUTCL3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OUTCL3",141, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // COLST ::= ParentesisAbrir COLST1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLST",142, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // COLST1 ::= Identificador COLST2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLST1",143, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // COLST2 ::= Coma COLST1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLST2",144, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // COLST2 ::= ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COLST2",144, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // EXPR_INSERT ::= SEXP 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPR_INSERT",145, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // EXPR_INSERT ::= DatoString 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPR_INSERT",145, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // EXPR_INSERT ::= DatoBit 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPR_INSERT",145, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // INSERT0 ::= INSERT INSERT1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT0",146, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // INSERT1 ::= TOP ParentesisAbrir SEXP ParentesisCerrar INSERT2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT1",147, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // INSERT1 ::= INSERT3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT1",147, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // INSERT2 ::= PERCENT INSERT3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT2",148, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // INSERT2 ::= INSERT3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT2",148, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // INSERT3 ::= INTO INSERT4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT3",149, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // INSERT3 ::= INSERT4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT3",149, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // INSERT4 ::= OBJECT INSERT5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT4",150, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // INSERT5 ::= COLST INSERT6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT5",151, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // INSERT5 ::= INSERT6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT5",151, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // INSERT6 ::= OUTCL INSERT7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT6",152, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // INSERT6 ::= INSERT7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT6",152, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // INSERT7 ::= VALUES ParentesisAbrir INSERT8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT7",153, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // INSERT7 ::= SELECT1 INSERT9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT7",153, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // INSERT7 ::= DEFAULT VALUES INSERT9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT7",153, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // INSERT8 ::= INSERT10 INSERT11 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT8",154, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // INSERT10 ::= DEFAULT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT10",155, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // INSERT10 ::= NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT10",155, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // INSERT10 ::= EXPR_INSERT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT10",155, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // INSERT11 ::= Coma INSERT8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT11",156, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // INSERT11 ::= ParentesisCerrar INSERT12 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT11",156, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // INSERT12 ::= Coma ParentesisAbrir INSERT8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT12",157, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // INSERT12 ::= INSERT9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT12",157, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // INSERT9 ::= PuntoComa 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT9",158, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // INSERT9 ::= GO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("INSERT9",158, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // SELIST ::= SELIST1 SELIST5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // SELIST ::= Multiplicacion 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // SELIST ::= Arroba Identificador Igual SELIST1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // SELIST1 ::= Identificador SELIST2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST1",4, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // SELIST1 ::= EXPRESSION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST1",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // SELIST1 ::= AGG_FN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST1",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // SELIST1 ::= STR_FN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST1",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // SELIST1 ::= DT_FN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST1",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // SELIST1 ::= CONV 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST1",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // SELIST1 ::= CASEW 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST1",4, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // SELIST2 ::= Punto SELIST3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST2",5, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // SELIST2 ::= Igual SELIST6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST2",5, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // SELIST2 ::= ParentesisAbrir SELIST8 ParentesisCerrar SELIST5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST2",5, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // SELIST2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST2",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // SELIST3 ::= Multiplicacion 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST3",6, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // SELIST3 ::= Identificador SELIST7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST3",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // SELIST5 ::= AS Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST5",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // SELIST5 ::= Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST5",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // SELIST5 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST5",7, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // SELIST6 ::= EXPRESSION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST6",8, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // SELIST7 ::= Punto Identificador SELIST10 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST7",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // SELIST7 ::= ParentesisAbrir SELIST8 ParentesisCerrar SELIST5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST7",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // SELIST7 ::= SELIST5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST7",9, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // SELIST8 ::= SEXP SELIST9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST8",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // SELIST8 ::= DatoString SELIST9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST8",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // SELIST8 ::= DatoBit SELIST9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST8",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // SELIST8 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST8",10, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // SELIST9 ::= Coma SELIST8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST9",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 187: // SELIST9 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST9",11, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 188: // SELIST10 ::= ParentesisAbrir SELIST8 ParentesisCerrar SELIST5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST10",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 189: // SELIST10 ::= SELIST5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELIST10",12, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 190: // CONV ::= CAST ParentesisAbrir CONV1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CONV",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 191: // CONV ::= CONVERT ParentesisAbrir CONV2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CONV",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 192: // CONV1 ::= EXPRESSION AS DATATYPE CONV3 ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CONV1",14, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 193: // CONV2 ::= DATATYPE CONV3 CONV4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CONV2",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 194: // CONV3 ::= ParentesisAbrir DatoEntero ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CONV3",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 195: // CONV3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CONV3",16, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 196: // CONV4 ::= EXPRESSION CONV5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CONV4",17, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 197: // CONV5 ::= Coma SEXP 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CONV5",18, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 198: // CONV5 ::= ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CONV5",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 199: // DT_FN ::= CURRENT_TIMESTAMP 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DT_FN",19, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 200: // DT_FN ::= DAY ParentesisAbrir DT_FN1 ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DT_FN",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 201: // DT_FN ::= MONTH ParentesisAbrir DT_FN1 ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DT_FN",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 202: // DT_FN ::= YEAR ParentesisAbrir DT_FN1 ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DT_FN",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 203: // DT_FN ::= SET LANGUAGE DT_FN2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DT_FN",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 204: // DT_FN1 ::= DatoString 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DT_FN1",20, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 205: // DT_FN1 ::= Arroba Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DT_FN1",20, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 206: // DT_FN2 ::= Arroba Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DT_FN2",21, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 207: // DT_FN2 ::= Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DT_FN2",21, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 208: // STR_FN ::= LOWER ParentesisAbrir STR_FN1 ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("STR_FN",22, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 209: // STR_FN ::= TRANSLATE ParentesisAbrir STR_FN1 Coma STR_FN1 Coma STR_FN1 ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("STR_FN",22, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 210: // STR_FN ::= UPPER ParentesisAbrir STR_FN1 ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("STR_FN",22, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 211: // STR_FN ::= CHAR ParentesisAbrir SEXP ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("STR_FN",22, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 212: // STR_FN ::= LEFT ParentesisAbrir STR_FN1 Coma SEXP ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("STR_FN",22, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 213: // STR_FN ::= TRIM ParentesisAbrir STR_FN1 STR_FN2 ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("STR_FN",22, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 214: // STR_FN ::= NCHAR ParentesisAbrir SEXP ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("STR_FN",22, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 215: // STR_FN ::= RIGHT ParentesisAbrir STR_FN1 Coma SEXP ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("STR_FN",22, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 216: // STR_FN ::= SPACE ParentesisAbrir SEXP ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("STR_FN",22, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 217: // STR_FN ::= SUBSTRING ParentesisAbrir STR_FN1 Coma SEXP Coma SEXP ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("STR_FN",22, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 218: // STR_FN1 ::= Arroba Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("STR_FN1",23, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 219: // STR_FN1 ::= DatoString 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("STR_FN1",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 220: // STR_FN1 ::= Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("STR_FN1",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 221: // STR_FN2 ::= FROM STR_FN1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("STR_FN2",24, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 222: // STR_FN2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("STR_FN2",24, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 223: // OTH_FN ::= NEXT VALUE FOR Identificador OTH_FN1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OTH_FN",25, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 224: // OTH_FN ::= SYSTEM_USER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OTH_FN",25, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 225: // OTH_FN ::= SESSION_USER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OTH_FN",25, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 226: // OTH_FN ::= NULLIF ParentesisAbrir EXPRESSION Coma EXPRESSION ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OTH_FN",25, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 227: // OTH_FN1 ::= Punto Identificador OTH_FN2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OTH_FN1",26, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 228: // OTH_FN1 ::= OTH_FN2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OTH_FN1",26, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 229: // OTH_FN2 ::= Punto Identificador OTH_FN3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OTH_FN2",27, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 230: // OTH_FN2 ::= OTH_FN3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OTH_FN2",27, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 231: // OTH_FN3 ::= OVER ORDER BY ORDERB 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("OTH_FN3",28, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 232: // AGG_FN ::= AVG ParentesisAbrir SEL_AVG ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("AGG_FN",29, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 233: // AGG_FN ::= COUNT ParentesisAbrir SEL_COUNT ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("AGG_FN",29, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 234: // AGG_FN ::= MAX ParentesisAbrir SEL_AGR ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("AGG_FN",29, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 235: // AGG_FN ::= MIN ParentesisAbrir SEL_AGR ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("AGG_FN",29, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 236: // AGG_FN ::= SUM ParentesisAbrir SEL_AGR ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("AGG_FN",29, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 237: // SEL_AVG ::= SEL_AVG1 SEL_AVG2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_AVG",30, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 238: // SEL_AVG1 ::= ALL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_AVG1",31, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 239: // SEL_AVG1 ::= DISTINCT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_AVG1",31, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 240: // SEL_AVG1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_AVG1",31, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 241: // SEL_AVG2 ::= SEXP 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_AVG2",32, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 242: // SEL_AVG2 ::= Identificador SEL_AVG3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_AVG2",32, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 243: // SEL_AVG3 ::= Punto Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_AVG3",33, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 244: // SEL_AVG3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_AVG3",33, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 245: // SEL_COUNT ::= SEL_COUNT1 SEL_COUNT2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_COUNT",34, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 246: // SEL_COUNT1 ::= ALL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_COUNT1",35, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 247: // SEL_COUNT1 ::= DISTINCT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_COUNT1",35, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 248: // SEL_COUNT1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_COUNT1",35, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 249: // SEL_COUNT2 ::= Multiplicacion 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_COUNT2",36, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 250: // SEL_COUNT2 ::= Identificador SEL_COUNT3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_COUNT2",36, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 251: // SEL_COUNT2 ::= SEXP 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_COUNT2",36, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 252: // SEL_COUNT3 ::= Punto Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_COUNT3",37, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 253: // SEL_COUNT3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_COUNT3",37, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 254: // SEL_AGR ::= SEL_AGR1 SEL_AGR2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_AGR",38, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 255: // SEL_AGR1 ::= ALL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_AGR1",39, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 256: // SEL_AGR1 ::= DISTINCT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_AGR1",39, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 257: // SEL_AGR1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_AGR1",39, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 258: // SEL_AGR2 ::= Identificador SEL_AGR3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_AGR2",40, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 259: // SEL_AGR2 ::= SEXP 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_AGR2",40, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 260: // SEL_AGR3 ::= Punto Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_AGR3",41, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 261: // SEL_AGR3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SEL_AGR3",41, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 262: // EXPRESSION ::= SEXP EXPRESSION1 EXPRESSION3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION",42, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 263: // EXPRESSION ::= EXPRESSION2 SUM_OPR EXPRESSION2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION",42, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 264: // EXPRESSION ::= NOT_OPR EXPRESSION EXPRESSION4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION",42, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 265: // EXPRESSION ::= EXPRESSION3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION",42, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 266: // EXPRESSION ::= ParentesisAbrir EXPRESSION ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION",42, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 267: // EXPRESSION1 ::= AR_OPR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION1",43, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 268: // EXPRESSION1 ::= COMPARE_OPR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION1",43, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 269: // EXPRESSION1 ::= SUM_OPR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION1",43, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 270: // EXPRESSION2 ::= DatoString 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION2",44, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 271: // EXPRESSION2 ::= Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION2",44, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 272: // EXPRESSION3 ::= SEXP 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION3",45, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 273: // EXPRESSION3 ::= Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION3",45, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 274: // EXPRESSION3 ::= DatoString 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION3",45, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 275: // EXPRESSION4 ::= COMPARE_OPR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION4",46, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 276: // EXPRESSION4 ::= LOGIC_OPR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EXPRESSION4",46, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 277: // BIN_OPR ::= AR_OPR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("BIN_OPR",47, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 278: // BIN_OPR ::= ASIG_OPR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("BIN_OPR",47, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 279: // BIN_OPR ::= BIT_OPR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("BIN_OPR",47, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 280: // BIN_OPR ::= COMPARE_OPR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("BIN_OPR",47, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 281: // BIN_OPR ::= LOGIC_OPR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("BIN_OPR",47, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 282: // AR_OPR ::= Menos 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("AR_OPR",48, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 283: // AR_OPR ::= Multiplicacion 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("AR_OPR",48, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 284: // AR_OPR ::= Division 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("AR_OPR",48, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 285: // AR_OPR ::= Modulo 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("AR_OPR",48, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 286: // SUM_OPR ::= Mas 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SUM_OPR",53, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 287: // ASIG_OPR ::= Igual 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ASIG_OPR",49, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 288: // BIT_OPR ::= AND 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("BIT_OPR",50, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 289: // BIT_OPR ::= OR 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("BIT_OPR",50, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 290: // NOT_OPR ::= NOT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("NOT_OPR",54, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 291: // COMPARE_OPR ::= Mayor 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMPARE_OPR",51, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 292: // COMPARE_OPR ::= Menor 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMPARE_OPR",51, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 293: // COMPARE_OPR ::= MayorIgual 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMPARE_OPR",51, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 294: // COMPARE_OPR ::= MenorIgual 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMPARE_OPR",51, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 295: // COMPARE_OPR ::= Diferente 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMPARE_OPR",51, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 296: // COMPARE_OPR ::= Igual 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMPARE_OPR",51, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 297: // LOGIC_OPR ::= BETWEEN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("LOGIC_OPR",52, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 298: // LOGIC_OPR ::= IN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("LOGIC_OPR",52, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 299: // LOGIC_OPR ::= LIKE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("LOGIC_OPR",52, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parser$act_num+"found in internal parse table");

        }
    } /* end of method */
  /** Method 1 with the actual generated action code for actions 300 to 600. */
  public final java_cup.runtime.Symbol CUP$parser$do_action_part00000001(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 300: // CASEW ::= CASE CASEW1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CASEW",55, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 301: // CASEW1 ::= EXPRESSION CASEW2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CASEW1",56, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 302: // CASEW1 ::= CASEW2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CASEW1",56, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 303: // CASEW2 ::= WHEN EXPRESSION THEN EXPRESSION CASEW3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CASEW2",57, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 304: // CASEW3 ::= ELSE EXPRESSION END 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CASEW3",58, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 305: // CASEW3 ::= CASEW2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CASEW3",58, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 306: // CASEW3 ::= END 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CASEW3",58, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 307: // ROWSET ::= OPENDATASOURCE ParentesisAbrir DatoString Coma DatoString ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ROWSET",59, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 308: // ROWSET ::= OPENQUERY ParentesisAbrir Identificador Coma DatoString ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ROWSET",59, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 309: // SAM_CL ::= TABLESAMPLE ParentesisAbrir SAM_CL1 ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SAM_CL",60, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 310: // SAM_CL1 ::= SEXP SAM_CL2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SAM_CL1",61, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 311: // SAM_CL2 ::= PERCENT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SAM_CL2",62, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 312: // SAM_CL2 ::= ROWS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SAM_CL2",62, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 313: // SAM_CL2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SAM_CL2",62, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 314: // JOIN_TYPE ::= JOIN_TYPE1 JOIN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOIN_TYPE",63, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 315: // JOIN_TYPE1 ::= INNER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOIN_TYPE1",64, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 316: // JOIN_TYPE1 ::= JOIN_TYPE2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOIN_TYPE1",64, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 317: // JOIN_TYPE1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOIN_TYPE1",64, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 318: // JOIN_TYPE2 ::= LEFT JOIN_TYPE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOIN_TYPE2",65, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 319: // JOIN_TYPE2 ::= RIGHT JOIN_TYPE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOIN_TYPE2",65, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 320: // JOIN_TYPE2 ::= FULL JOIN_TYPE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOIN_TYPE2",65, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 321: // JOIN_TYPE2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOIN_TYPE2",65, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 322: // JOIN_TYPE3 ::= OUTER 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOIN_TYPE3",66, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 323: // JOIN_TYPE3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOIN_TYPE3",66, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 324: // JOINTB ::= TB_SOURCE JOINTB1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOINTB",67, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 325: // JOINTB ::= ParentesisAbrir JOIN ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOINTB",67, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 326: // JOINTB1 ::= JOIN_TYPE JOINTB3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOINTB1",68, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 327: // JOINTB1 ::= CROSS Coma JOIN JOINTB4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOINTB1",68, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 328: // JOINTB1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOINTB1",68, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 329: // JOINTB2 ::= JOIN_TYPE JOINTB3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOINTB2",69, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 330: // JOINTB2 ::= CROSS Coma JOIN JOINTB4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOINTB2",69, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 331: // JOINTB3 ::= TB_SOURCE ON SH_COND JOINTB4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOINTB3",70, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 332: // JOINTB4 ::= JOINTB2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOINTB4",71, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 333: // JOINTB4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("JOINTB4",71, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 334: // TB_SOURCE ::= OBJECT TB_SOURCE1 TB_SOURCE2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_SOURCE",72, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 335: // TB_SOURCE ::= ROWSET TB_SOURCE1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_SOURCE",72, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 336: // TB_SOURCE ::= Arroba Identificador TB_SOURCE1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_SOURCE",72, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 337: // TB_SOURCE1 ::= AS Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_SOURCE1",73, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 338: // TB_SOURCE1 ::= Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_SOURCE1",73, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 339: // TB_SOURCE1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_SOURCE1",73, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 340: // TB_SOURCE2 ::= SAM_CL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_SOURCE2",74, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 341: // TB_SOURCE2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_SOURCE2",74, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 342: // ORDERB ::= SELIST ORDER1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ORDERB",75, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 343: // ORDER1 ::= ORDER2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ORDER1",76, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 344: // ORDER1 ::= Coma ORDERB 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ORDER1",76, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 345: // ORDER2 ::= COLLATE ORDER3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ORDER2",77, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 346: // ORDER2 ::= ORDER4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ORDER2",77, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 347: // ORDER3 ::= Identificador ORDER4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ORDER3",78, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 348: // ORDER4 ::= ASC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ORDER4",79, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 349: // ORDER4 ::= DESC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ORDER4",79, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 350: // ORDER4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ORDER4",79, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 351: // DATATYPE ::= Identificador DATATYPE2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE",80, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 352: // DATATYPE ::= DATATYPE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE",80, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 353: // DATATYPE2 ::= Punto Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE2",81, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 354: // DATATYPE3 ::= BIT DATATYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE3",82, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 355: // DATATYPE3 ::= INT DATATYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE3",82, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 356: // DATATYPE3 ::= INTEGER DATATYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE3",82, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 357: // DATATYPE3 ::= FLOAT DATATYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE3",82, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 358: // DATATYPE3 ::= VARCHAR DATATYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE3",82, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 359: // DATATYPE3 ::= DATE DATATYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE3",82, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 360: // DATATYPE3 ::= REAL DATATYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE3",82, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 361: // DATATYPE3 ::= DECIMAL DATATYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE3",82, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 362: // DATATYPE3 ::= NUMERIC DATATYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE3",82, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 363: // DATATYPE3 ::= SMALLINT DATATYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE3",82, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 364: // DATATYPE3 ::= TIME DATATYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE3",82, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 365: // DATATYPE3 ::= CHAR DATATYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE3",82, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 366: // DATATYPE3 ::= NCHAR DATATYPE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE3",82, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 367: // DATATYPE4 ::= ParentesisAbrir DatoEntero DATATYPE5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE4",83, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 368: // DATATYPE4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE4",83, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 369: // DATATYPE5 ::= Coma DatoEntero ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE5",84, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 370: // DATATYPE5 ::= ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATATYPE5",84, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 371: // SELECT1 ::= SELECT SELECT2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT1",85, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 372: // SELECT2 ::= SELECT3 SELECT4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT2",86, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 373: // SELECT3 ::= ALL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT3",87, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 374: // SELECT3 ::= DISTINCT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT3",87, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 375: // SELECT3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT3",87, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 376: // SELECT4 ::= TOP SELECT5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT4",88, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 377: // SELECT4 ::= SELECT7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT4",88, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 378: // SELECT5 ::= ParentesisAbrir SEXP ParentesisCerrar SELECT6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT5",89, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 379: // SELECT6 ::= PERCENT SELECT7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT6",90, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 380: // SELECT6 ::= SELECT7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT6",90, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 381: // SELECT7 ::= SELIST SELECT20 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT7",91, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 382: // SELECT20 ::= Coma SELECT7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT20",101, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 383: // SELECT20 ::= SELECT8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT20",101, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 384: // SELECT8 ::= INTO SELECT9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT8",92, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 385: // SELECT8 ::= SELECT11 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT8",92, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 386: // SELECT9 ::= OBJECT SELECT11 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT9",93, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 387: // SELECT11 ::= FROM JOINTB SELECT12 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT11",94, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 388: // SELECT11 ::= SELECT12 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT11",94, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 389: // SELECT12 ::= WHERE SH_COND SELECT13 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT12",95, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 390: // SELECT12 ::= SELECT13 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT12",95, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 391: // SELECT13 ::= GROUP BY EXPRESSION SELECT18 SELECT14 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT13",96, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 392: // SELECT13 ::= SELECT14 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT13",96, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 393: // SELECT14 ::= HAVING SH_COND SELECT15 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT14",97, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 394: // SELECT14 ::= SELECT15 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT14",97, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 395: // SELECT15 ::= ORDER BY ORDERB 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT15",98, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 396: // SELECT15 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT15",98, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 397: // SELECT18 ::= Coma EXPRESSION SELECT18 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT18",99, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 398: // SELECT18 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SELECT18",99, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 399: // DELETE1 ::= DELETE DEL2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DELETE1",159, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 400: // DEL2 ::= TOP ParentesisAbrir SEXP ParentesisCerrar DEL3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL2",160, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 401: // DEL2 ::= DEL4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL2",160, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 402: // DEL3 ::= PERCENT DEL4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL3",161, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 403: // DEL3 ::= DEL4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL3",161, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 404: // DEL4 ::= FROM DEL5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL4",162, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 405: // DEL4 ::= DEL5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL4",162, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 406: // DEL5 ::= OBJECT DEL6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL5",163, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 407: // DEL5 ::= Arroba Identificador DEL6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL5",163, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 408: // DEL6 ::= OUTCL DEL7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL6",164, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 409: // DEL6 ::= DEL7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL6",164, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 410: // DEL7 ::= FROM JOINTB DEL8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL7",165, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 411: // DEL7 ::= DEL9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL7",165, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 412: // DEL8 ::= Coma JOINTB DEL8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL8",166, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 413: // DEL8 ::= DEL9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL8",166, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 414: // DEL9 ::= WHERE SH_COND DEL10 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL9",167, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 415: // DEL9 ::= DEL10 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL9",167, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 416: // DEL10 ::= PuntoComa 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL10",168, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 417: // DEL10 ::= GO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEL10",168, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 418: // UPDATE0 ::= UPDATE UPDATE1 UPDATE15 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE0",169, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 419: // UPDATE1 ::= TOP ParentesisAbrir SEXP ParentesisCerrar UPDATE2 UPDATE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE1",170, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 420: // UPDATE1 ::= UPDATE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE1",170, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 421: // UPDATE2 ::= PERCENT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE2",171, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 422: // UPDATE2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE2",171, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 423: // UPDATE3 ::= OBJECT UPDATE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE3",172, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 424: // UPDATE3 ::= Arroba Identificador UPDATE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE3",172, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 425: // UPDATE4 ::= SET UPDATE5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE4",173, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 426: // UPDATE5 ::= UPDATE6 UPDATE11 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE5",174, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 427: // UPDATE6 ::= OBJECT UPDATE7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE6",175, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 428: // UPDATE6 ::= Arroba Identificador Igual UPDATE10 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE6",175, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 429: // UPDATE7 ::= Igual UPDATE9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE7",176, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 430: // UPDATE9 ::= EXPRESSION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE9",178, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 431: // UPDATE9 ::= SEXP 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE9",178, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 432: // UPDATE9 ::= DEFAULT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE9",178, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 433: // UPDATE9 ::= NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE9",178, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 434: // UPDATE10 ::= EXPRESSION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE10",179, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 435: // UPDATE11 ::= Coma UPDATE5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE11",180, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 436: // UPDATE11 ::= UPDATE12 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE11",180, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 437: // UPDATE12 ::= OUTCL UPDATE16 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE12",181, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 438: // UPDATE12 ::= UPDATE16 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE12",181, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 439: // UPDATE16 ::= FROM JOINTB UPDATE17 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE16",185, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 440: // UPDATE16 ::= UPDATE17 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE16",185, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 441: // UPDATE17 ::= WHERE SH_COND 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE17",186, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 442: // UPDATE17 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE17",186, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 443: // UPDATE15 ::= GO 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE15",184, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 444: // UPDATE15 ::= PuntoComa 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("UPDATE15",184, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 445: // DEFV ::= DatoString 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEFV",204, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 446: // DEFV ::= DatoFloat 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEFV",204, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 447: // DEFV ::= DatoEntero 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEFV",204, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 448: // DEFV ::= DatoBit 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEFV",204, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 449: // DEFV ::= NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DEFV",204, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 450: // CRT ::= CREATE CRT1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CRT",205, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 451: // CRT1 ::= DATABASE Identificador DATABASE1 FIN_AN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CRT1",206, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 452: // CRT1 ::= OR ALTER CRT2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CRT1",206, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 453: // CRT1 ::= CRT2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CRT1",206, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 454: // CRT1 ::= USER Identificador FIN_AN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CRT1",206, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 455: // CRT1 ::= TABLE TABLE1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CRT1",206, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 456: // CRT2 ::= PROC PROCEDURE1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CRT2",207, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 457: // CRT2 ::= PROCEDURE PROCEDURE1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CRT2",207, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 458: // CRT2 ::= VIEW VIEW1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CRT2",207, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 459: // CRT2 ::= FUNCTION FUNCTION1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CRT2",207, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 460: // DATABASE1 ::= ON DATABASE2 DATABASE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATABASE1",208, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 461: // DATABASE1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATABASE1",208, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 462: // DATABASE2 ::= PRIMARY FLSPC DATABASE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATABASE2",209, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 463: // DATABASE3 ::= COLLATE Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATABASE3",210, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 464: // DATABASE3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATABASE3",210, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 465: // DATABASE4 ::= Coma FLSPC DATABASE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATABASE4",211, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 466: // DATABASE4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DATABASE4",211, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 467: // FLSPC ::= ParentesisAbrir NAMES Igual DatoString Coma FILE Igual DatoString FLSPC1 ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FLSPC",212, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 468: // FLSPC1 ::= Coma SIZE Igual DatoEntero 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FLSPC1",213, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 469: // FLSPC1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FLSPC1",213, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 470: // PROCEDURE1 ::= Identificador PROCEDURE2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE1",187, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 471: // PROCEDURE2 ::= Punto Identificador PROCEDURE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE2",188, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 472: // PROCEDURE2 ::= PROCEDURE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE2",188, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 473: // PROCEDURE3 ::= PuntoComa DatoEntero PROCEDURE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE3",189, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 474: // PROCEDURE3 ::= PROCEDURE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE3",189, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 475: // PROCEDURE4 ::= Arroba Identificador PROCEDURE5 DATATYPE PROCEDURE6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE4",190, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 476: // PROCEDURE5 ::= AS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE5",191, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 477: // PROCEDURE5 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE5",191, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 478: // PROCEDURE6 ::= VARYING PROCEDURE7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE6",192, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 479: // PROCEDURE6 ::= PROCEDURE7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE6",192, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 480: // PROCEDURE7 ::= Igual DEFV PROCEDURE8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE7",193, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 481: // PROCEDURE7 ::= PROCEDURE8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE7",193, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 482: // PROCEDURE8 ::= OUTPUT PROCEDURE9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE8",194, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 483: // PROCEDURE8 ::= PROCEDURE9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE8",194, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 484: // PROCEDURE9 ::= Coma PROCEDURE4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE9",195, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 485: // PROCEDURE9 ::= PROCEDURE10 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE9",195, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 486: // PROCEDURE10 ::= WITH PROCEDURE11 AS PROCEDURE12 PROCEDURE13 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE10",196, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 487: // PROCEDURE10 ::= PROCEDURE13 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE10",196, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 488: // PROCEDURE11 ::= EXECUTE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE11",197, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 489: // PROCEDURE11 ::= EXEC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE11",197, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 490: // PROCEDURE12 ::= DatoString 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE12",198, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 491: // PROCEDURE13 ::= FOR REPLICATION PROCEDURE14 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE13",199, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 492: // PROCEDURE13 ::= PROCEDURE14 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE13",199, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 493: // PROCEDURE14 ::= AS PROCEDURE15 PROCEDURE16 PROCEDURE17 FIN_AN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE14",200, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 494: // PROCEDURE15 ::= BEGIN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE15",201, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 495: // PROCEDURE15 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE15",201, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 496: // PROCEDURE16 ::= SELECT1 FIN_AN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE16",202, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 497: // PROCEDURE16 ::= INSERT0 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE16",202, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 498: // PROCEDURE16 ::= DELETE1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE16",202, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 499: // PROCEDURE16 ::= UPDATE0 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE16",202, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 500: // PROCEDURE17 ::= PROCEDURE16 PROCEDURE17 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE17",203, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 501: // PROCEDURE17 ::= END 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("PROCEDURE17",203, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 502: // VIEW1 ::= Identificador VIEW2 VIEW3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("VIEW1",214, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 503: // VIEW2 ::= Punto Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("VIEW2",215, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 504: // VIEW2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("VIEW2",215, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 505: // VIEW3 ::= ParentesisAbrir VIEW4 ParentesisCerrar AS SELECT1 VIEW6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("VIEW3",216, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 506: // VIEW3 ::= AS SELECT1 VIEW6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("VIEW3",216, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 507: // VIEW4 ::= Identificador VIEW5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("VIEW4",217, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 508: // VIEW4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("VIEW4",217, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 509: // VIEW5 ::= Coma Identificador VIEW5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("VIEW5",218, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 510: // VIEW5 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("VIEW5",218, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 511: // VIEW6 ::= WITH CHECK OPTION FIN_AN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("VIEW6",219, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 512: // VIEW6 ::= FIN_AN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("VIEW6",219, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 513: // COL_CST ::= COL_CST1 COL_CST2 COL_CST3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST",220, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 514: // COL_CST1 ::= CONSTRAINT Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST1",221, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 515: // COL_CST1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST1",221, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 516: // COL_CST2 ::= NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST2",222, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 517: // COL_CST2 ::= NOT NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST2",222, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 518: // COL_CST2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST2",222, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 519: // COL_CST3 ::= PRIMARY KEY COL_CST4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST3",223, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 520: // COL_CST3 ::= UNIQUE COL_CST4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST3",223, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 521: // COL_CST3 ::= COL_CST8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST3",223, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 522: // COL_CST3 ::= DEFAULT COL_CST17 
            {
              Object RESULT =null;
		 System.out.println("termino DEFAULT"); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST3",223, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 523: // COL_CST3 ::= CHECK COL_CST16 ParentesisAbrir SH_COND ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST3",223, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 524: // COL_CST4 ::= CLUSTERED COL_CST5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST4",224, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 525: // COL_CST4 ::= COL_CST5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST4",224, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 526: // COL_CST5 ::= WITH COL_CST6 COL_CST7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST5",225, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 527: // COL_CST5 ::= COL_CST7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST5",225, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 528: // COL_CST6 ::= FILLFACTOR Igual DatoEntero 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST6",226, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 529: // COL_CST6 ::= ParentesisAbrir FILLFACTOR Igual DatoEntero ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST6",226, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 530: // COL_CST7 ::= ON Identificador ParentesisAbrir Identificador ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST7",227, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 531: // COL_CST7 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST7",227, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 532: // COL_CST8 ::= COL_CST9 REFERENCES Identificador COL_CST10 COL_CST11 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST8",228, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 533: // COL_CST9 ::= FOREIGN KEY 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST9",229, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 534: // COL_CST9 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST9",229, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 535: // COL_CST10 ::= Punto Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST10",230, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 536: // COL_CST10 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST10",230, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 537: // COL_CST11 ::= ParentesisAbrir Identificador ParentesisCerrar COL_CST12 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST11",231, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 538: // COL_CST11 ::= COL_CST12 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST11",231, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 539: // COL_CST12 ::= ON COL_CST13 COL_CST14 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST12",232, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 540: // COL_CST12 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST12",232, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 541: // COL_CST13 ::= DELETE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST13",233, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 542: // COL_CST13 ::= UPDATE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST13",233, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 543: // COL_CST14 ::= NO ACTION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST14",234, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 544: // COL_CST14 ::= CASCADE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST14",234, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 545: // COL_CST14 ::= SET COL_CST15 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST14",234, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 546: // COL_CST15 ::= NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST15",235, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 547: // COL_CST15 ::= DEFAULT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST15",235, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 548: // COL_CST16 ::= NOT FOR REPLICATION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST16",236, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 549: // COL_CST16 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST16",236, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 550: // COL_CST17 ::= CONST_EXP 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST17",237, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 551: // COL_CST17 ::= 
            {
              Object RESULT =null;
		 System.out.println("DEFAULT VACIO"); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_CST17",237, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 552: // CONST_EXP ::= Arroba Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CONST_EXP",238, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 553: // CONST_EXP ::= Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CONST_EXP",238, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 554: // CONST_EXP ::= DatoString 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CONST_EXP",238, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 555: // CONST_EXP ::= DatoEntero 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CONST_EXP",238, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 556: // CONST_EXP ::= DatoFloat 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("CONST_EXP",238, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 557: // TB_CST ::= TB_CST1 TB_CST2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST",239, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 558: // TB_CST1 ::= CONSTRAINT Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST1",240, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 559: // TB_CST1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST1",240, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 560: // TB_CST2 ::= PRIMARY KEY TB_CST4 TB_CST3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST2",241, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 561: // TB_CST2 ::= UNIQUE TB_CST4 TB_CST3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST2",241, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 562: // TB_CST2 ::= FOREIGN KEY TB_CST9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST2",241, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 563: // TB_CST2 ::= CONNECTION TB_CST16 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST2",241, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 564: // TB_CST2 ::= DEFAULT TB_CST22 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST2",241, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 565: // TB_CST2 ::= CHECK TB_CST20 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST2",241, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 566: // TB_CST3 ::= ParentesisAbrir Identificador TB_CST5 TB_CST6 ParentesisCerrar TB_CST7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST3",242, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 567: // TB_CST4 ::= CLUSTERED 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST4",243, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 568: // TB_CST4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST4",243, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 569: // TB_CST5 ::= ASC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST5",244, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 570: // TB_CST5 ::= DESC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST5",244, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 571: // TB_CST5 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST5",244, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 572: // TB_CST6 ::= Coma Identificador TB_CST6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST6",245, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 573: // TB_CST6 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST6",245, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 574: // TB_CST7 ::= WITH FILLFACTOR Igual DatoEntero TB_CST8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST7",246, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 575: // TB_CST7 ::= TB_CST8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST7",246, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 576: // TB_CST7 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST7",246, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 577: // TB_CST8 ::= ON Identificador ParentesisAbrir Identificador ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST8",247, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 578: // TB_CST8 ::= Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST8",247, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 579: // TB_CST9 ::= ParentesisAbrir Identificador TB_CST6 ParentesisCerrar REFERENCES Identificador TB_CST10 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST9",248, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 580: // TB_CST10 ::= ParentesisAbrir Identificador TB_CST6 ParentesisCerrar TB_CST11 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST10",249, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 581: // TB_CST10 ::= TB_CST11 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST10",249, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 582: // TB_CST11 ::= ON TB_CST12 TB_CST13 TB_CST15 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST11",250, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 583: // TB_CST12 ::= DELETE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST12",251, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 584: // TB_CST12 ::= UPDATE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST12",251, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 585: // TB_CST13 ::= NO ACTION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST13",252, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 586: // TB_CST13 ::= CASCADE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST13",252, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 587: // TB_CST13 ::= SET TB_CST14 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST13",252, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 588: // TB_CST14 ::= NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST14",253, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 589: // TB_CST14 ::= DEFAULT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST14",253, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 590: // TB_CST15 ::= NOT FOR REPLICATION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST15",254, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 591: // TB_CST15 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST15",254, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 592: // TB_CST16 ::= ParentesisAbrir Identificador TO Identificador TB_CST17 ParentesisCerrar TB_CST18 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST16",255, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 593: // TB_CST17 ::= Coma Identificador TO Identificador TB_CST17 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST17",256, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 594: // TB_CST17 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST17",256, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 595: // TB_CST18 ::= ON DELETE TB_CST19 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST18",257, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 596: // TB_CST19 ::= NO ACTION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST19",258, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 597: // TB_CST19 ::= CASCADE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST19",258, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 598: // TB_CST20 ::= NOT FOR REPLICATION ParentesisAbrir SH_COND ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST20",259, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 599: // TB_CST20 ::= ParentesisAbrir SH_COND ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST20",259, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parser$act_num+"found in internal parse table");

        }
    } /* end of method */
  /** Method 2 with the actual generated action code for actions 600 to 900. */
  public final java_cup.runtime.Symbol CUP$parser$do_action_part00000002(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 600: // TB_CST21 ::= WITH VALUES 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST21",260, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 601: // TB_CST21 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST21",260, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 602: // TB_CST22 ::= CONST_EXP TB_CST23 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST22",261, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 603: // TB_CST23 ::= FOR Identificador TB_CST21 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST23",262, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 604: // TB_CST23 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_CST23",262, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 605: // COL_DEF ::= Identificador DATATYPE COL_DEF1 
            {
              Object RESULT =null;
		 System.out.println("termino coldef"); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF",263, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 606: // COL_DEF1 ::= COLLATE Identificador COL_DEF2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF1",264, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 607: // COL_DEF1 ::= COL_DEF2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF1",264, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 608: // COL_DEF2 ::= NULL COL_DEF3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF2",265, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 609: // COL_DEF2 ::= NOT NULL COL_DEF3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF2",265, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 610: // COL_DEF2 ::= COL_DEF3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF2",265, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 611: // COL_DEF3 ::= COL_DEF5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF3",266, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 612: // COL_DEF3 ::= IDENTITY COL_DEF6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF3",266, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 613: // COL_DEF3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF3",266, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 614: // COL_DEF5 ::= WITH VALUES COL_DEF8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF5",268, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 615: // COL_DEF5 ::= COL_DEF8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF5",268, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 616: // COL_DEF6 ::= ParentesisAbrir SEXP Coma SEXP ParentesisCerrar COL_DEF7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF6",269, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 617: // COL_DEF6 ::= COL_DEF7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF6",269, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 618: // COL_DEF7 ::= NOT FOR REPLICATION COL_DEF8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF7",270, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 619: // COL_DEF7 ::= COL_DEF8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF7",270, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 620: // COL_DEF8 ::= ROWGUIDCOL COL_DEF10 
            {
              Object RESULT =null;
		 System.out.println("termino ROWGUID"); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF8",271, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 621: // COL_DEF8 ::= COL_DEF10 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF8",271, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 622: // COL_DEF10 ::= COL_CST 
            {
              Object RESULT =null;
		 System.out.println("termino colcst abajo"); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF10",272, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 623: // COL_DEF10 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COL_DEF10",272, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 624: // TB_IX ::= INDEX Identificador ParentesisAbrir TB_IX1 ParentesisCerrar TB_IX4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_IX",278, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 625: // TB_IX1 ::= Identificador TB_IX2 TB_IX3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_IX1",279, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 626: // TB_IX2 ::= ASC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_IX2",280, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 627: // TB_IX2 ::= DEC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_IX2",280, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 628: // TB_IX2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_IX2",280, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 629: // TB_IX3 ::= Coma TB_IX2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_IX3",281, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 630: // TB_IX3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_IX3",281, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 631: // TB_IX4 ::= WITH FILLFACTOR Igual DatoEntero 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_IX4",282, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 632: // TB_IX4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TB_IX4",282, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 633: // TABLE1 ::= OBJECT ParentesisAbrir TABLE2 TABLE3 ParentesisCerrar TABLE4 FIN_AN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TABLE1",273, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 634: // TABLE2 ::= COL_DEF 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TABLE2",274, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 635: // TABLE2 ::= TB_CST 
            {
              Object RESULT =null;
		 System.out.println("termino tbcst"); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TABLE2",274, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 636: // TABLE3 ::= Coma TABLE2 TABLE3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TABLE3",275, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 637: // TABLE3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TABLE3",275, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 638: // TABLE4 ::= ON TABLE5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TABLE4",276, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 639: // TABLE4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TABLE4",276, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 640: // TABLE5 ::= Identificador ParentesisAbrir Identificador ParentesisCerrar 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TABLE5",277, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 641: // TABLE5 ::= PRIMARY 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TABLE5",277, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 642: // FUNCTION1 ::= Identificador FUNCTION2 ParentesisAbrir FUNCTION3 ParentesisCerrar RETURNS DATATYPE FUNCTION6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION1",283, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 643: // FUNCTION2 ::= Punto Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION2",284, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 644: // FUNCTION2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION2",284, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 645: // FUNCTION3 ::= Arroba Identificador FUNCTION4 DATATYPE FUNCTION5 FUNCTION10 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION3",285, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 646: // FUNCTION3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION3",285, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 647: // FUNCTION4 ::= AS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION4",286, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 648: // FUNCTION4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION4",286, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 649: // FUNCTION5 ::= Igual DEFV 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION5",287, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 650: // FUNCTION5 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION5",287, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 651: // FUNCTION6 ::= WITH RETURNS NULL ON NULL INPUT FUNCTION7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION6",288, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 652: // FUNCTION6 ::= FUNCTION7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION6",288, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 653: // FUNCTION7 ::= FUNCTION4 BEGIN FUNCTION8 FUNCTION9 FUNCTION11 END FIN_AN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION7",289, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 654: // FUNCTION8 ::= SELECT1 FIN_AN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION8",290, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 655: // FUNCTION8 ::= INSERT0 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION8",290, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 656: // FUNCTION8 ::= DELETE1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION8",290, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 657: // FUNCTION8 ::= UPDATE0 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION8",290, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 658: // FUNCTION9 ::= FUNCTION8 FUNCTION9 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION9",291, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 659: // FUNCTION9 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION9",291, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 660: // FUNCTION10 ::= Coma FUNCTION3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION10",292, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 661: // FUNCTION10 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION10",292, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 662: // FUNCTION11 ::= RETURN SEXP FUNCTION12 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION11",293, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 663: // FUNCTION12 ::= PuntoComa 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION12",294, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 664: // FUNCTION12 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("FUNCTION12",294, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 665: // TRUNCATE1 ::= TRUNCATE TABLE OBJECT TRUNCATE2 TRUNCATE2 FIN_AN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TRUNCATE1",295, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 666: // TRUNCATE2 ::= Coma OBJECT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TRUNCATE2",296, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 667: // TRUNCATE2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("TRUNCATE2",296, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 668: // DROP0 ::= DROP DROP1 FIN_AN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROP0",297, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 669: // DROP1 ::= TABLE DROP2 DROP5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROP1",298, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 670: // DROP1 ::= DATABASE DROP2 DROP7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROP1",298, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 671: // DROP1 ::= USER DROP2 Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROP1",298, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 672: // DROP1 ::= VIEW DROP2 DROP3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROP1",298, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 673: // DROP1 ::= PROC DROP2 DROP3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROP1",298, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 674: // DROP1 ::= PROCEDURE DROP2 DROP3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROP1",298, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 675: // DROP1 ::= FUNCTION DROP2 DROP3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROP1",298, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 676: // DROP2 ::= IF EXISTS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROP2",299, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 677: // DROP2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROP2",299, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 678: // DROP3 ::= Identificador DROP4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROP3",300, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 679: // DROP4 ::= Punto Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROP4",301, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 680: // DROP4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROP4",301, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 681: // DROP5 ::= OBJECT DROP6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROP5",302, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 682: // DROP6 ::= Coma DROP5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROP6",303, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 683: // DROP6 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROP6",303, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 684: // DROP7 ::= Identificador DROP8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROP7",304, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 685: // DROP8 ::= Coma DROP7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROP8",305, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 686: // DROP8 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("DROP8",305, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 687: // BEGINTRAN ::= BEGIN BEGINTRAN1 BEGINTRAN2 FIN_AN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("BEGINTRAN",312, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 688: // BEGINTRAN1 ::= TRAN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("BEGINTRAN1",313, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 689: // BEGINTRAN1 ::= TRANSACTION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("BEGINTRAN1",313, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 690: // BEGINTRAN2 ::= Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("BEGINTRAN2",314, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 691: // BEGINTRAN2 ::= Arroba Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("BEGINTRAN2",314, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 692: // BEGINTRAN2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("BEGINTRAN2",314, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 693: // COMMITTRAN ::= COMMIT COMMITTRAN1 COMMITTRAN2 FIN_AN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMMITTRAN",309, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 694: // COMMITTRAN1 ::= BEGINTRAN1 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMMITTRAN1",310, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 695: // COMMITTRAN1 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMMITTRAN1",310, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 696: // COMMITTRAN2 ::= Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMMITTRAN2",311, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 697: // COMMITTRAN2 ::= Arroba Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMMITTRAN2",311, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 698: // COMMITTRAN2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("COMMITTRAN2",311, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 699: // ROLLBACKTRAN ::= ROLLBACK BEGINTRAN1 BEGINTRAN2 FIN_AN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ROLLBACKTRAN",308, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 700: // SAVETRAN ::= SAVE BEGINTRAN1 SAVETRAN1 FIN_AN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SAVETRAN",306, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 701: // SAVETRAN1 ::= Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SAVETRAN1",307, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 702: // SAVETRAN1 ::= Arroba Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("SAVETRAN1",307, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 703: // ALTER0 ::= ALTER ALTER1 FIN_AN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER0",315, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 704: // ALTER1 ::= TABLE ALTER2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER1",316, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 705: // ALTER1 ::= DATABASE ALTER20 ALTER21 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER1",316, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 706: // ALTER1 ::= CRT2 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER1",316, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 707: // ALTER2 ::= OBJECT ALTER3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER2",317, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 708: // ALTER3 ::= ALTER COLUMN Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER3",318, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 709: // ALTER3 ::= ADD ALTER11 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER3",318, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 710: // ALTER3 ::= DROP ALTER22 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER3",318, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 711: // ALTER3 ::= WITH ALTER18 CONSTRAINT ALTER19 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER3",318, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 712: // ALTER3 ::= CHECK CONSTRAINT ALTER19 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER3",318, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 713: // ALTER3 ::= NOCHECK CONSTRAINT ALTER19 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER3",318, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 714: // ALTER4 ::= ParentesisAbrir ALTER5 ParentesisCerrar ALTER7 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER4",319, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 715: // ALTER4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER4",319, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 716: // ALTER5 ::= DatoEntero ALTER6 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER5",320, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 717: // ALTER5 ::= MAX 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER5",320, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 718: // ALTER6 ::= Coma DatoEntero 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER6",321, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 719: // ALTER6 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER6",321, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 720: // ALTER7 ::= COLLATE Identificador ALTER8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER7",322, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 721: // ALTER7 ::= ALTER8 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER7",322, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 722: // ALTER8 ::= NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER8",323, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 723: // ALTER8 ::= NOT NULL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER8",323, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 724: // ALTER8 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER8",323, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 725: // ALTER9 ::= DATATYPE ALTER4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER9",324, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 726: // ALTER9 ::= DROP ALTER10 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER9",324, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 727: // ALTER9 ::= ADD ALTER10 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER9",324, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 728: // ALTER10 ::= ROWGUIDCOL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER10",325, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 729: // ALTER10 ::= NOT FOR REPLICATION 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER10",325, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 730: // ALTER11 ::= COL_DEF ALTER12 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER11",326, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 731: // ALTER11 ::= TB_CST ALTER12 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER11",326, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 732: // ALTER12 ::= Coma ALTER11 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER12",327, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 733: // ALTER12 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER12",327, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 734: // ALTER22 ::= CONSTRAINT ALTER13 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER22",337, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 735: // ALTER22 ::= ALTER13 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER22",337, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 736: // ALTER13 ::= IF EXISTS ALTER14 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER13",328, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 737: // ALTER13 ::= ALTER14 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER13",328, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 738: // ALTER14 ::= Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER14",329, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 739: // ALTER14 ::= COLUMN ALTER15 ALTER16 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER14",329, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 740: // ALTER15 ::= IF EXISTS 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER15",330, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 741: // ALTER15 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER15",330, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 742: // ALTER16 ::= Identificador ALTER17 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER16",331, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 743: // ALTER17 ::= Coma Identificador ALTER17 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER17",332, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 744: // ALTER17 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER17",332, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 745: // ALTER18 ::= CHECK 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER18",333, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 746: // ALTER18 ::= NOCHECK 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER18",333, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 747: // ALTER19 ::= ALL 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER19",334, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 748: // ALTER19 ::= Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER19",334, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 749: // ALTER20 ::= Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER20",335, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 750: // ALTER20 ::= CURRENT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER20",335, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 751: // ALTER21 ::= COLLATE Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER21",336, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 752: // ALTER21 ::= ADD FILE FLSPC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("ALTER21",336, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 753: // EX ::= EX1 EX2 OBJECT EX6 EX5 FIN_AN 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EX",338, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 754: // EX1 ::= EXEC 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EX1",339, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 755: // EX1 ::= EXECUTE 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EX1",339, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 756: // EX2 ::= Arroba Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EX2",340, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 757: // EX2 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EX2",340, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 758: // EX3 ::= Identificador 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EX3",342, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 759: // EX3 ::= DEFV 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EX3",342, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 760: // EX3 ::= Arroba Identificador EX4 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EX3",342, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 761: // EX3 ::= DEFAULT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EX3",342, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 762: // EX3 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EX3",342, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 763: // EX4 ::= OUTPUT 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EX4",341, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 764: // EX4 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EX4",341, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 765: // EX5 ::= Coma EX6 EX5 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EX5",343, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 766: // EX5 ::= 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EX5",343, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 767: // EX6 ::= Arroba Identificador Igual EX3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EX6",344, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 768: // EX6 ::= EX3 
            {
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("EX6",344, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* select the action handler based on the action number */
      switch (CUP$parser$act_num/300)
        {
          /*. . . . . . . . 0 < #action < 300. . . . . . . . . . . .*/
          case 0: 
              return CUP$parser$do_action_part00000000(
                               CUP$parser$act_num,
                               CUP$parser$parser,
                               CUP$parser$stack,
                               CUP$parser$top);
          /*. . . . . . . . 300 < #action < 600. . . . . . . . . . . .*/
          case 1: 
              return CUP$parser$do_action_part00000001(
                               CUP$parser$act_num,
                               CUP$parser$parser,
                               CUP$parser$stack,
                               CUP$parser$top);
          /*. . . . . . . . 600 < #action < 900. . . . . . . . . . . .*/
          case 2: 
              return CUP$parser$do_action_part00000002(
                               CUP$parser$act_num,
                               CUP$parser$parser,
                               CUP$parser$stack,
                               CUP$parser$top);
          /* . . . no valid action number: . . .*/
          default:
            throw new Exception("Invalid action number found in internal parse table");

        }      /* end of switch */
    }
}

}
