package AnalizadorSintactico.Ascendente;

import java_cup.runtime.*;
import AnalizadorSintactico.Ascendente.Lexemas;
import MiniSql.MiniSql;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.lang.*;
import MiniSql.Errores;
import AnalizadorLexico.MyToken;
import TablaSimbolos.Manejadores.*;
import java.util.*;

parser code {:
Lexemas analizadorFlex = null;

public void syntax_error(Symbol cur_token){
    Errores.SyntaxErrorCup((MyToken) cur_token.value);
}

public void report_error(String message, Object info) {
    StringBuilder m = new StringBuilder("Error");
    if (info instanceof java_cup.runtime.Symbol) {
        java_cup.runtime.Symbol s = ((java_cup.runtime.Symbol) info);
        m.append(" " + s.value.toString());
        if (s.left >= 0) {                
            m.append(" in line "+(s.left));
            if (s.right >= 0)
                m.append(", column "+(s.right));
        }
    }
    m.append(" : "+message);
    System.err.println(m);
}
public SymbolDriver Manejador = new SymbolDriver();
public boolean isentero;
public boolean isreal;
public boolean isstring;
public Variable varActual = null;
public boolean error;


:}

/* define how to connect to the scanner! */
init with {: 
    try {
        //SymbolDriver Manejador = new SymbolDriver();
        BufferedReader buffered = new BufferedReader(new FileReader(MiniSql.ubicacionArchivo));
        analizadorFlex = new Lexemas(buffered);
    } catch (IOException ex) {
        ex.printStackTrace();
    }
:};
scan with {: 
    return analizadorFlex.next_token(); 
:};

/* Terminals (tokens returned by the scanner). */
terminal MyToken            ADD,ALL,ALTER,AND,ANY,AS,ASC,AUTHORIZATION,BACKUP,BEGIN,BETWEEN,BREAK,BROWSE,BULK,BY,CASCADE,CASE,CHECK,CHECKPOINT,CLOSE,CLUSTERED,NONCLUSTERED,COALESCE,COLLATE,COLUMN,COMMIT,COMPUTE,CONSTRAINT,CONTAINS,CONTAINSTABLE,CONTINUE,CONVERT,CREATE,CROSS,CURRENT,CURRENT_DATE,CURRENT_TIME,CURRENT_TIMESTAMP,CURRENT_USER,CURSOR,DATABASE,DBCC,DEALLOCATE,DECLARE,DEFAULT,DELETE,DENY,DESC,DISK,DISTINCT,DISTRIBUTED,DOUBLE,DROP,DUMP,ELSE,END,ERRLVL,ESCAPE,EXCEPT,EXEC,EXECUTE,EXISTS,EXIT,EXTERNAL,FETCH,FILE,FILLFACTOR,FOR,FOREIGN,FREETEXT,FREETEXTTABLE,FROM,FULL,FUNCTION,GOTO,GRANT,GROUP,HAVING,HOLDLOCK,IDENTITY,IDENTITY_INSERT,IDENTITYCOL,IF,IN,INDEX,INNER,INSERT,INTERSECT,INTO,IS,JOIN,KEY,KILL,LEFT,LIKE,LINENO,LOAD,MERGE,NATIONAL,NOCHECK,NOCLUSTERED,NOT,NULL,NULLIF,OF,OFF,OFFSETS,ON,OPEN,OPENDATASOURCE,OPENQUERY,OPENXML,OPTION,OR,ORDER,OUTER,OVER,PERCENT,PIVOT,PLAN,PRECISION,PRIMARY,PRINT,PROC,PROCEDURE,PUBLIC,RAISERROR,READ,READTEXT,RECONFIGURE,REFERENCES,REPLICATION,RESTORE,RESTRICT,RETURN,REVERT,REVOKE,RIGHT,ROLLBACK,ROWCOUNT,ROWGUIDCOL,RULE,SAVE,SCHEMA,SECURITYAUDIT,SELECT,SEMANTICKEYPHRASETABLE,SEMANTICSIMILARITYDETAILSTABLE,SEMANTICSIMILARITYTABLE,SESSION_USER,SET,SETUSER,SHUTDOWN,SOME,STATISTICS,SYSTEM_USER,TABLE,TABLESAMPLE,TEXTSIZE,THEN,TO,TOP,TRAN,TRANSACTION,TRIGGER,TRUNCATE,TRY_CONVERT,TSEQUAL,UNION,UNIQUE,UNPIVOT,UPDATE,UPDATETEXT,USE,USER,VALUES,VARYING,VIEW,WAITFOR,WHEN,WHERE,WHILE,WITH,WITHIN,WRITETEXT,ABSOLUTE,OVERLAPS,ACTION,PAD,ADA,PARTIAL,PASCAL,EXTRACT,POSITION,ALLOCATE,FALSO,PREPARE,FIRST,PRESERVE,FLOAT,ARE,PRIOR,PRIVILEGES,FORTRAN,ASSERTION,FOUND,AT,REAL,AVG,GET,GLOBAL,RELATIVE,GO,BIT,BIT_LENGTH,BOTH,ROWS,HOUR,CASCADED,SCROLL,IMMEDIATE,SECOND,CAST,SECTION,CATALOG,INCLUDE,CHAR,SESSION,CHAR_LENGTH,INDICATOR,CHARACTER,INITIALLY,CHARACTER_LENGTH,SIZE,INPUT,SMALLINT,INSENSITIVE,SPACE,INT,SQL,COLLATION,INTEGER,SQLCA,SQLCODE,INTERVAL,SQLERROR,CONNECT,SQLSTATE,CONNECTION,SQLWARNING,ISOLATION,SUBSTRING,CONSTRAINTS,SUM,LANGUAGE,CORRESPONDING,LAST,TEMPORARY,COUNT,LEADING,TIME,LEVEL,TIMESTAMP,TIMEZONE_HOUR,LOCAL,TIMEZONE_MINUTE,LOWER,MATCH,TRAILING,MAX,MIN,TRANSLATE,DATE,MINUTE,TRANSLATION,DAY,MODULE,TRIM,MONTH,VERDADERO,DEC,NAMES,DECIMAL,NATURAL,UNKNOWN,NCHAR,DEFERRABLE,NEXT,UPPER,DEFERRED,NO,USAGE,NONE,USING,DESCRIBE,VALUE,DESCRIPTOR,DIAGNOSTICS,NUMERIC,VARCHAR,DISCONNECT,OCTET_LENGTH,DOMAIN,ONLY,WHENEVER,WORK,ENDEXEC,WRITE,YEAR,OUTPUT,ZONE,EXCEPTION,RETURNS,DatoEntero,DatoFloat,DatoBit,DatoString,StringNoCerrado,Identificador,Mas,Menos,Multiplicacion,Division,Modulo,MenorIgual,Corchetes,Llaves,Parentesis,MayorIgual,Igual,Mayor,Menor,IgualIgual,Diferente,And,Or,Not,PuntoComa,Coma,Punto,CorcheteAbrir,CorcheteCerrar,ParentesisAbrir,ParentesisCerrar,LlaveAbrir,LlaveCerrar,Arroba,DobleNumeral,Numeral,REORGANIZE,DISABLE,RESUME,PAUSE,ABORT,MAX_DURATION,REBUILD,MAXDOP,WAIT_AT_LOW_PRIORITY,CALLER,SELF,MINUTES,LOB_COMPACTION,COMPRESS_ALL_ROW_GROUPS,ALLOW_ROW_LOCKS,ALLOW_PAGE_LOCKS,OPTIMIZE_FOR_SEQUENTIAL_KEY,IGNORE_DUP_KEY,STATISTICS_NORECOMPUTE,ENCRYPTION,CALLED,SCHEMABINDING,OWNER,PARTITIONS,PARTITION,VIEW_METADATA,NAME,DEFAULT_SCHEMA,LOGIN,PASSWORD,DEFAULT_LANGUAGE,ALLOW_ENCRYPTED_VALUE_MODIFICATIONS,OLD_PASSWORD,ABORT_AFTER_WAIT,BLOCKERS,ROWSET,SPARSE,RANDOMIZED,DETERMINISTIC,ENCRYPTED,ALGORITHM,FILESTREAM,COLUMN_ENCRYPTION_KEY,ENCRYPTION_TYPE,PERSISTED,HIDDEN,MASKED,SWITCH,ENABLE,ONLINE,OFFLINE,GENERATED,ALWAYS,ROW,START,PERIOD,SYSTEM_TIME,PAD_INDEX,STATISTICS_INCREMENTAL,COMPRESSION_DELAY,DATA_COMPRESSION,PAGE,COLUMNSTORE,COLUMNSTORE_ARCHIVE,CHANGE_TRACKING,TRACK_COLUMNS_UPDATED,SYSTEM_VERSIONING,FILESTREAM_ON,HISTORY_TABLE,DATA_CONSISTENCY_CHECK,HISTORY_RETENTION_PERIOD,INFINITE,DAYS,WEEKS,MONTHS,YEARS,WEEK,LOCK_ESCALATION,AUTO,FILETABLE_NAMESPACE,FILETABLE_DIRECTORY,REMOTE_DATA_ARCHIVE,OFF_WITHOUT_DATA_RECOVERY,MIGRATION_STATE,FILTER_PREDICATE,INBOUND,OUTBOUND,PAUSED,MOVE,LOOK, MODIFY, ACCELERATED_DATABASE_RECOVERY, PERSISTENT_VERSION_STORE_FILEGROUP, AUTO_CLOSE, AUTO_CREATE_STATISTICS, AUTO_SHRINK, AUTO_UPDATE_STATISTICS, AUTO_UPDATE_STATISTICS_ASYNC, INCREMENTAL, FORCE_LAST_GOOD_PLAN, AUTO_CLEANUP, CHANGE_RETENTION, HOURS, CONTAINMENT, CURSOR_CLOSE_ON_COMMIT, CURSOR_DEFAULT, DATE_CORRELATION_OPTIMIZATION, SUSPEND, EMERGENCY, READ_ONLY, READ_WRITE, SINGLE_USER, RESTRICTED_USER, MULTI_USER, DELAYED_DURABILITY, DISABLED, ALLOWED, FORCED,DB_CHAINING,TRUSTWORTHY, DEFAULT_FULLTEXT_LANGUAGE, NESTED_TRIGGERS, TRANSFORM_NOISE_WORDS, TWO_DIGIT_YEAR_CUTOFF, NON_TRANSACTED_ACCESS, DIRECTORY_NAME, HADR, MIXED_PAGE_ALLOCATION, PARAMETERIZATION, SIMPLE, CLEAR, OPERATION_MODE, CLEANUP_POLICY, DATA_FLUSH_INTERVAL_SECONDS, MAX_STORAGE_SIZE_MB, INTERVAL_LENGTH_MINUTES, SIZE_BASED_CLEANUP_MODE, QUERY_CAPTURE_MODE, MAX_PLANS_PER_QUERY, WAIT_STATS_CAPTURE_MODE, QUERY_CAPTURE_POLICY, STALE_CAPTURE_POLICY_THRESHOLD, EXECUTION_COUNT, TOTAL_COMPILE_CPU_TIME_MS, TOTAL_EXECUTION_CPU_TIME_MS, TORN_PAGE_DETECTION, PAGE_VERIFY, STALE_QUERY_THRESHOLD_DAYS, FEDERATED_SERVICE_ACCOUNT, ENABLE_BROKER, DISABLE_BROKER, NEW_BROKER, ERROR_BROKER_CONVERSATIONS, HONOR_BROKER_PRIORITY, ALLOW_SNAPSHOT_ISOLATION, READ_COMITTED_SNAPSHOT, MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT, ANSI_NULLS, ANSI_NULL_DEFAULT,ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, COMPATIBILITY_LEVEL, CONCAT_NULL_YIELDS_NULL, NUMERIC_ROUNDABORT, QUOTED_IDENTIFIER, RECURSIVE_TRIGGERS, TARGET_RECOVERY_TIME, NO_WAIT, TEMPORAL_HISTORY_RETENTION, CUSTOM, RECOVERY, BULK_LOGGED, CHECKSUM, SERVER, SECONDS, AFTER, CREDENTIAL, LOG, REMOVE, FILEGROUP, NEWNAME, FILENAME, MAXSIZE, FILEGROWTH, UNLIMITED, KB, MB, GB, TB , MEMORY_OPTIMIZED_DATA, AUTOGROW_SINGLE_FILE, AUTOGROW_ALL_FILES, READONLY, READWRITE,QUERY_STORE;

/* Non terminals */
non terminal SEXP,SEXP2,SEXP3,SEXP4,SEXP5,OBJECT,OBJECT1,OBJECT2,OBJECT3,EXPRESSION,EXPRESSION1,EXPRESSION2,EXPRESSION3,EXPRESSION4,DATATYPE,DATATYPE2,DATATYPE3,DATATYPE4,DATATYPE5,COLNAME,COLNAME1,BIN_OPR,AR_OPR,ASIG_OPR,BIT_OPR,COMPARE_OPR,LOGIC_OPR,SUM_OPR,NOT_OPR,DATABASE1,DATABASE2,DATABASE3,DEFV,PROCEDURE1,PROCEDURE2,PROCEDURE3,PROCEDURE4,PROCEDURE5,PROCEDURE6,PROCEDURE7,PROCEDURE8,PROCEDURE9,PROCEDURE10,PROCEDURE11,PROCEDURE12,PROCEDURE13,PROCEDURE14,PROCEDURE15,PROCEDURE16,PROCEDURE17,VIEW1,VIEW2,VIEW3,VIEW4,VIEW5,VIEW6,COL_CST,COL_CST1,COL_CST2,COL_CST3,COL_CST4,COL_CST5,COL_CST6,COL_CST7,COL_CST8,COL_CST9,COL_CST10,COL_CST11,COL_CST12,COL_CST13,COL_CST14,COL_CST15,COL_CST16,COL_CST17,CONST_EXP,TB_CST,TB_CST1,TB_CST2,TB_CST3,TB_CST4,TB_CST5,TB_CST6,TB_CST7,TB_CST8,TB_CST9,TB_CST10,TB_CST11,TB_CST12,TB_CST13,TB_CST14,TB_CST15,TB_CST16,TB_CST17,TB_CST18,TB_CST19,TB_CST20,TB_CST21,TB_CST22,TB_CST23,COL_DEF,COL_DEF1,COL_DEF2,COL_DEF3,COL_DEF4,COL_DEF5,COL_DEF6,COL_DEF7,COL_DEF8,COL_DEF10,COL_DEF11,COL_DEF12,COL_DEF12_1,COL_DEF13,TB_IX,TB_IX1,TB_IX2,TB_IX3,TB_IX4,TABLE1,TABLE2,TABLE3,TABLE4,TABLE5,FUNCTION1,FUNCTION2,FUNCTION3,FUNCTION4,FUNCTION5,FUNCTION6,FUNCTION7,FUNCTION8,FUNCTION9,FUNCTION10,FUNCTION11,FUNCTION12,FUNCTION13,FUNCTION14,TRUNCATE1,TRUNCATE2,ALTER0,ALTER1,ALTER2,ALTER3,ALTER4,ALTER5,ALTER6,ALTER7,ALTER8,ALTER9,ALTER10,ALTER11,ALTER12,ALTER13,ALTER14,ALTER15,ALTER16,ALTER17,ALTER18,ALTER19,ALTER20,ALTER21,ALTER22, ALTERV1,ALTERV2,ALTERV3,ALTERV4,ALTERV5,ALTERV6,ALTERUSER2,ALTERUSER3,ALTERUSER4,ALTERUSER5,ALTERUSER6,ALTERUSER7,ALTERI1,ALTERI2,ALTERI3,ALTERI4,ALTERI5,ALTERI6,ONOFF,RESINDEX1,RESINDEX2,LOWPRIORITY,ABORTAFTERW,MINOP,REORGANIZEOPTION1, SET_INDEX_OPTION, SET_INDEX_OPTION2,INICIALB,INICIAL,GOOP,FIN_AN,FLSPC,FLSPC1,DATABASE4,CRT2,USE1,DECLARE1,DECLARE2,DECLARE3,SET1,BEGINTRAN,BEGINTRAN1,BEGINTRAN2,COMMITTRAN,COMMITTRAN1,COMMITTRAN2,ROLLBACKTRAN,SAVETRAN,SAVETRAN1,PARTITION1,TRUNCATE3,TRUNCATE4,CRT3,COLST,COLST1,COLST2,SELECT1,SELECT2,SELECT3,SELECT4,SELECT5,SELECT6,SELECT7,SELECT8,SELECT9,SELECT11,SELECT12,SELECT13,SELECT14,SELECT15,SELECT18,SELECT19,SELECT20,EX,EX1,EX2,EX3,EX4,EX5,EX6,SH_COND,SH_COND1,SH_COND2,GSP,GSP1,SH_CONDWM,SH_CONDWM1,SH_CONDWM2,SH_CONDWM3,SH_CONDWM4,JOINTB,JOINTB1,JOINTB2,JOINTB3,JOINTB4,TB_SOURCE,TB_SOURCE1,TB_SOURCE2,SELIST,SELIST1,SELIST2,SELIST3,SELIST5,SELIST6,SELIST7,SELIST8,SELIST9,SELIST10,ORDERB,ORDER1,ORDER2,ORDER3,ORDER4,JOIN_TYPE,JOIN_TYPE1,JOIN_TYPE2,JOIN_TYPE3,SAM_CL,SAM_CL1,SAM_CL2,CASEW,CASEW1,CASEW2,CASEW3,AGG_FN,SEL_AVG,SEL_AVG1,SEL_AVG2,SEL_AVG3,SEL_COUNT,SEL_COUNT1,SEL_COUNT2,SEL_COUNT3,SEL_AGR,SEL_AGR1,SEL_AGR2,SEL_AGR3,STR_FN,STR_FN1,STR_FN2,CONV,CONV1,CONV2,CONV3,CONV4,CONV5,DT_FN,DT_FN1,DT_FN2,PREDICATE,PREDICATE1,PREDICATE2,PREDICATE3,PREDICATE4,PREDICATE5,PREDICATE6,PREDICATE7,PREDICATE8,PREDICATE9,ALTER8_1,ALTER10_1,ALTER10_2,ALTER10_3, ALTER_ADD,ALTER_ADD1,ALTER_ADD2,ALTER_ADD3,ALTER_ADD4,ALTER_ADD5,ALTER_ADD6,ALTER_ADD7,CHECKALTERTABLE, CHECKALTERTABLE2, CHECKALTERTABLE3,CHANGE_TR, CHANGE_TR2,SET_AL, SET_AL2, SET_AL3, SET_AL4, SET_AL5, SET_AL6, SET_AL7, SET_AL8, SET_AL9, SET_AL10,TABLE_OPTION, TABLE_OPTION2, FILETABLE_OPTION, FILETABLE_OPTION2,FILETABLE_OPTION3,STRETCH_CONFIGURATION, STRETCH_CONFIGURATION2, TABLE_STRETCH_OPTIONS, TABLE_STRETCH_OPTIONS2, TABLE_STRETCH_OPTIONS3, TABLE_STRETCH_OPTIONS4,DROP1, DROP3, DROP4, DROP5, DROP6, DROP7,DROP_CLUSTERED, DROP_CLUSTERED2, DROP_CLUSTERED3,COL_DEF14,SWITCH2, ALTERENDIS1,ALTER_SET1,ALTER11_1,CCD, CCD2, CCD3, CCD4, CCD5, CCD6, CCD7,CCD8,CCD9, CCD10, CCD11, CCD12, CCD13, CCD14, CCD15,INDEX_OP, INDEX_OP2, INDEX_OP3, INDEX_OP4, INDEX_OP5,EX7,ALTERD1, ALTERD2, ALTERD4, ALTERD3, OPTION_SPEC, ACC_DATA_REC, ACC_DATA_REC2, AUTO_OPTION, AUTO_OPTION2, AUTO_OPTION3, AUTOMATIC_TUNING, CHANGE_TRACKING_OPTION, CHANGE_TRACKING_OPTION2, CHANGE_TRACKING_OPTION3, CHANGE_TRACKING_OPTION_LIST, CHANGE_TRACKING_OPTION_LIST2, DHRMIN, CONTAINMENT_OPTION, CONTAINMENT_OPTION2, CURSOR_OPTION, CURSOR_OPTION2, DATABASE_MIRRORING, DATE_CORRELATION, DB_ENCRYPTION, DB_ENCRYPTION2, DB_STATE, DB_UPDATE,DB_USER, DELAYED_DURABILITY_OPTION, DELAYED_DURABILITY_OPTION2, EXTERNAL_ACCESS, EXTERNAL_ACCESS2, FILESTREAM_OPTION, FILESTREAM_OPTION2, HADR_OPTION, MIXED_PAGE, PARAMETERIZATION_OPTION, PARAMETERIZATION_OPTION2, QUERY_STORE_OPTIONS, QUERY_STORE_OPTIONS2, QUERY_STORE_OPTIONS3, QUERY_STORE_OPTION_LIST, QUERY_STORE_OPTION_LIST2, QUERY_STORE_OPTION_LIST3, QUERY_STORE_OPTION_LIST4, QUERY_STORE_OPTION_LIST5 , QUERY_CAPTURE_POLICY_OPTIONS, QUERY_CAPTURE_POLICY_OPTIONS2, RECOVERY_OPTION, RECOVERY_OPTION2,RECOVERY_OPTION3, REMOTE_DATA, SERVICE_BROKER, SNAPSHOT_OPTION, SQL_OPTION, SQL_OPTION2, TARGET_RECOVERY, TARGET_RECOVERY2, TERMINATION, TERMINATION2, TEMPORAL_HISTORY, REMOTE_DATA2, FILE_OPTIONS, ADD_FILES, ADD_FILES2, ADD_FILES3, FLSPC2, FLSPC3, FLSPC4, FLSPC5, FLSCP6, FLSCP7, TAM, TAM2, ADD_FILEGROUPS, ADD_FILEGROUPS2, ADD_FILEGROUPS3,FILEGROUP_UPD,TB_CST7_1,TB_CST7_2,ONOFF2,ONOFF2_1,EXPSENCILLA,DECLARE4,CONTENIDOFUNC;

precedence left Mas, Menos;
precedence left Multiplicacion, Division;
precedence left ParentesisAbrir;

start with INICIALB;

    INICIALB ::= BEGIN INICIAL END FIN_AN INICIALB
            | INICIAL 
            | error INICIALB
            | error
            | /* VACIO */ ;

    INICIAL ::= TRUNCATE1 GOOP INICIAL 
            | ALTER0 GOOP INICIAL 
            | USE1 FIN_AN INICIAL 
            | DECLARE1 FIN_AN INICIAL 
            | SET1 FIN_AN INICIAL
            | EX INICIAL
            | CREATE CRT2 FIN_AN INICIAL
            | BEGINTRAN INICIAL
            | SAVETRAN INICIAL
            | COMMITTRAN INICIAL
            | ROLLBACKTRAN INICIAL
            | /* VACIO */ ;
    GOOP ::= GO
            | /* VACIO */ ;
    USE1 ::= USE Identificador:o {:
    Manejador.agregarAmbito(o.get_lexema(),"database");
:};

    CONTENIDOFUNC ::= CREATE CRT2 CONTENIDOFUNC
                    | ALTER0 CONTENIDOFUNC
                    | DECLARE1 FIN_AN CONTENIDOFUNC
                    | SET1 FIN_AN CONTENIDOFUNC
                    | TRUNCATE1 CONTENIDOFUNC
                    | /* VACIO */
                    ;

// REEMPLAZO SEXP

    EXPSENCILLA ::= EXPSENCILLA:exp1 Mas EXPSENCILLA:exp2 {:if(error){RESULT = "";}else{if(isstring){if(isentero || isreal){
            error = true;RESULT = "";
    }else{RESULT = exp1.toString() + exp2.toString();}
    }else{if(isreal == false && isentero){isreal = false;
                                                                                                                                         RESULT=Integer.parseInt(exp1.toString())+Integer.parseInt(exp2.toString());
                                                                                                                                     }else{isentero = false;
                                                                                                                                           isreal = true;
                                                                                                                                           RESULT=Float.parseFloat(exp1.toString())+Float.parseFloat(exp2.toString());
                                                                                                                                          }
                                                                                                              }
                                                                                }
:}
                  | EXPSENCILLA:exp1 Menos EXPSENCILLA:exp2 {:if(error){RESULT = "";}else{if(isstring){error=true;RESULT = "";}else{if(isreal == false && isentero){isreal = false;
                                                                                                                                         RESULT=Integer.parseInt(exp1.toString())-Integer.parseInt(exp2.toString());
                                                                                                                                     }else{isentero = false;
                                                                                                                                           isreal = true;
                                                                                                                                           RESULT=Float.parseFloat(exp1.toString())-Float.parseFloat(exp2.toString());
                                                                                                                                          }
                                                                                                              }
                                                                                }
:}
                  | EXPSENCILLA:exp1 Multiplicacion EXPSENCILLA:exp2 {:if(error){RESULT = "";}else{if(isstring){error=true;}else{if(isreal == false && isentero){isreal = false;
                                                                                                                                         RESULT=Integer.parseInt(exp1.toString())*Integer.parseInt(exp2.toString());
                                                                                                                                     }else{isentero = false;
                                                                                                                                           isreal = true;
                                                                                                                                           RESULT=Float.parseFloat(exp1.toString())*Float.parseFloat(exp2.toString());
                                                                                                                                          }
                                                                                                              }
                                                                                }
:}
                  | EXPSENCILLA:exp1 Division EXPSENCILLA:exp2 {:if(error){RESULT = "";}else{if(isstring){error=true;RESULT = "";}else{if(isreal == false && isentero){isreal = false;
                                                                                                                                         RESULT=Integer.parseInt(exp1.toString())/Integer.parseInt(exp2.toString());
                                                                                                                                     }else{isentero = false;
                                                                                                                                           isreal = true;
                                                                                                                                           RESULT=Float.parseFloat(exp1.toString())/Float.parseFloat(exp2.toString());
                                                                                                                                          }
                                                                                                              }
                                                                                }
:}
                  | ParentesisAbrir EXPSENCILLA:exp ParentesisCerrar {:RESULT = exp;:}
                  | DatoEntero:e {:isentero = true; RESULT = Integer.parseInt(e.get_lexema());:}
                  | DatoFloat:f {:isreal = true; RESULT = Float.parseFloat(f.get_lexema());:}
                  | DatoString:s {:isstring = true; RESULT = s.get_lexema().replace("\'","");:}
                  | Arroba Identificador:o {:
varActual = Manejador.getVariable(o.get_lexema());
if(varActual.asignado){
    if(varActual.tipoDato.equals("SMALLINT") || varActual.tipoDato.equals("INT") || varActual.tipoDato.equals("INTEGER")){
        isentero = true;
        RESULT = varActual.valor;
    }else if(varActual.tipoDato.equals("FLOAT") ||varActual.tipoDato.equals("REAL") || varActual.tipoDato.equals("NUMERIC") || varActual.tipoDato.equals("DECIMAL")){
        isreal = true;
        RESULT = varActual.valor;
    }else{
        isstring = true;
        RESULT = varActual.valor;
    }
}else{
    error = true;
    RESULT = "";
}
                  :};

/* <begin_transaction> */
    BEGINTRAN ::= BEGIN BEGINTRAN1 BEGINTRAN2:b2 FIN_AN {:String res = b2.toString(); Manejador.crearTransaccion(res);:};
    BEGINTRAN1 ::= TRAN
            | TRANSACTION ;
    BEGINTRAN2 ::= Identificador:o {:RESULT = o.get_lexema() ;:}
            | Arroba Identificador:o {:varActual = Manejador.getVariable(o.get_lexema()); 
                                        if(varActual.asignado){
                                                RESULT = varActual.valor;
                                        }else{
                                                RESULT = "";
                                        }
                                         :}
            | /* VACIO */ {:RESULT = "";:};

/* <commit_transaction> */
    COMMITTRAN ::= COMMIT COMMITTRAN1 BEGINTRAN2:b2 FIN_AN {:String res = b2.toString();
                                                                if(res.equals("")){
                                                                        Manejador.commitTransaction();
                                                                }else{
                                                                        Manejador.commitTransaction(res);
                                                                }
    :};
    COMMITTRAN1 ::= BEGINTRAN1
            | /* VACIO */ ;
    COMMITTRAN2 ::= Identificador
            | Arroba Identificador
            | /* VACIO */ ;

    /* <rollback_transaction> */
    ROLLBACKTRAN ::= ROLLBACK BEGINTRAN1 BEGINTRAN2:b2 FIN_AN {:String res = b2.toString();
                                                                if(res.equals("")){
                                                                        Manejador.rollbackTransaction();
                                                                }else{
                                                                        Manejador.rollbackTransaction(res);
                                                                }
    :};

    /* <save_transaction> */
    SAVETRAN ::= SAVE BEGINTRAN1 SAVETRAN1:s1 FIN_AN {:String res = s1.toString(); Manejador.addCheckpoint(res);:};
    SAVETRAN1 ::= Identificador:o {:RESULT = o.get_lexema() ;:}
            | Arroba Identificador:o {:varActual = Manejador.getVariable(o.get_lexema()); 
                                        if(varActual.asignado){
                                                RESULT = varActual.valor;
                                        }else{
                                                RESULT = "";
                                        }
                                         :};


/*
non terminal SEXP,SEXP2,SEXP3,SEXP4,SEXP5
*/

/* <scalar_expression> */
    SEXP ::= SEXP3 SEXP2 ;
    SEXP2 ::= Mas SEXP3 SEXP2
                | Menos SEXP3 SEXP2
                | /* VACIO */ ;
    SEXP3 ::= SEXP5 SEXP4 ;
    SEXP4 ::= Multiplicacion SEXP5 SEXP4
                | Division SEXP5 SEXP4 
                | /* VACIO */ ;
    SEXP5 ::= ParentesisAbrir SEXP ParentesisCerrar
                | DatoEntero
                | DatoFloat:f 
                | Arroba Identificador
                | OBJECT;

/*
non terminal FIN_AN
*/

/* <fin_instruccion> */
    FIN_AN ::= PuntoComa
            | GO;

/*
non terminal OBJECT,OBJECT1,OBJECT2,OBJECT3
*/

/* <object> */
    OBJECT ::= Identificador:o OBJECT1:o1 {:RESULT = o.get_lexema() + o1.toString();:};

    OBJECT1 ::= Punto:p Identificador:o OBJECT2:o2 {:RESULT = p.get_lexema() + o.get_lexema();:}
            | /* VACIO */ {:RESULT = "";:}; 

    OBJECT2 ::= Punto:p Identificador:o OBJECT3:o3 {:RESULT = p.get_lexema() + o.get_lexema();:}
            | /* VACIO */ {:RESULT = "";:}; 

    OBJECT3 ::= Punto:p Identificador:o {:RESULT = p.get_lexema() + o.get_lexema();:}
            | /* VACIO */ {:RESULT = "";:}; 


/*
non terminal COLNAME,COLNAME1
*/

/* <column_name> */
    COLNAME ::= Identificador Punto COLNAME1 ;
    COLNAME1 ::= Multiplicacion
                    | Identificador ;

  

/*
non terminal EXPRESSION,EXPRESSION1,EXPRESSION2,EXPRESSION3,EXPRESSION4
*/

/* <expression> */
    EXPRESSION ::= SEXP EXPRESSION1 EXPRESSION3 
            | EXPRESSION2 SUM_OPR EXPRESSION2 //CONCATENACION 
            | NOT_OPR EXPRESSION EXPRESSION4 
            | EXPRESSION3
            | ParentesisAbrir EXPRESSION ParentesisCerrar;
    EXPRESSION1 ::= AR_OPR 
            | COMPARE_OPR 
            | SUM_OPR ;
    EXPRESSION2 ::= DatoString 
            | Identificador ;
    EXPRESSION3 ::= SEXP 
            | Identificador 
            | DatoString ;
    EXPRESSION4 ::= COMPARE_OPR 
            | LOGIC_OPR ;



/*
non terminal BIN_OPR,AR_OPR,ASIG_OPR,BIT_OPR,COMPARE_OPR,LOGIC_OPR,SUM_OPR,NOT_OPR
*/

/* <binary_operators> */
    BIN_OPR ::= AR_OPR
                | ASIG_OPR
                | BIT_OPR
                | COMPARE_OPR
                | LOGIC_OPR ;
    AR_OPR ::= Menos
                | Multiplicacion
                | Division
                | Modulo ;
    SUM_OPR ::= Mas ;
    ASIG_OPR ::= Igual ;
    BIT_OPR ::= AND
                | OR ;
    NOT_OPR ::= NOT;
    COMPARE_OPR ::= Mayor
                | Menor
                | MayorIgual
                | MenorIgual
                | Diferente 
                | Igual;
    LOGIC_OPR ::= BETWEEN
                | IN
                | LIKE ;

/*
non terminal DATATYPE,DATATYPE2,DATATYPE3,DATATYPE4,DATATYPE5
*/

/* <datatype> */
    DATATYPE ::= OBJECT 
                |DATATYPE3:f {:RESULT = f;:}
                ;
    DATATYPE3 ::= BIT:e DATATYPE4:d4 {:RESULT = e.get_lexema() + " " + d4;:} 
                |INT:e DATATYPE4:d4 {:RESULT = e.get_lexema() + " " + d4;:} 
                |INTEGER:e DATATYPE4:d4 {:RESULT = e.get_lexema() + " " + d4;:}
                |FLOAT:e DATATYPE4:d4 {:RESULT = e.get_lexema() + " " + d4;:} 
                |VARCHAR:e DATATYPE4:d4 {:RESULT = e.get_lexema() + " " + d4;:} 
                |DATE:e DATATYPE4:d4 {:RESULT = e.get_lexema() + " " + d4;:} 
                |REAL:e DATATYPE4:d4 {:RESULT = e.get_lexema() + " " + d4;:} 
                |DECIMAL:e DATATYPE4:d4 {:RESULT = e.get_lexema() + " " + d4;:} 
                |NUMERIC:e DATATYPE4:d4 {:RESULT = e.get_lexema() + " " + d4;:} 
                |SMALLINT:e DATATYPE4:d4 {:RESULT = e.get_lexema() + " " + d4;:} 
                |TIME:e DATATYPE4:d4 {:RESULT = e.get_lexema() + " " + d4;:} 
                |CHAR:e DATATYPE4:d4 {:RESULT = e.get_lexema() + " " + d4;:} 
                |NCHAR:e DATATYPE4:d4 {:RESULT = e.get_lexema() + " " + d4;:} 
                ;
    DATATYPE4 ::= ParentesisAbrir DatoEntero:d DATATYPE5:d5 {:
if(d5.equals("")){
    RESULT = d.get_lexema() + " 0";
}else{
    RESULT =d.get_lexema() + " " + d5;
} :}
                | {:RESULT = "0 " + "0";:}
                ;
    DATATYPE5 ::= Coma DatoEntero:d1 ParentesisCerrar {:RESULT = d1.get_lexema();:}
                | ParentesisCerrar {:RESULT = "";:}
                ;



/*
    non terminals DEFV
*/
/* <default_values> */
    DEFV ::= DatoString 
            | DatoFloat
            | DatoEntero
            | DatoBit
            | NULL 
            ;


/*
    non terminals DATABASE1,DATABASE2,DATABASE3
*/
/* <create_database> */
    DATABASE1 ::= ON DATABASE2 DATABASE3
            | /* VACIO */ 
            ;
    DATABASE2 ::= PRIMARY FLSPC DATABASE4
            ;
    DATABASE3 ::= COLLATE Identificador 
            | /* VACIO */ 
            ;
    DATABASE4 ::= Coma FLSPC DATABASE4
            | /* VACIO */ 
            ;

/*
    non terminals FLSPC
*/
/* <filespec> */
    FLSPC ::= ParentesisAbrir NAMES Igual DatoString Coma FILE Igual DatoString FLSPC1 ParentesisCerrar ;
    FLSPC1 ::= Coma SIZE Igual DatoEntero 
            | /* VACIO */ ;


/*
    non terminals PROCEDURE1,PROCEDURE2,PROCEDURE3,PROCEDURE4,PROCEDURE5,PROCEDURE6,PROCEDURE7,PROCEDURE8,PROCEDURE9,PROCEDURE10,PROCEDURE11,PROCEDURE12,PROCEDURE13,PROCEDURE14,PROCEDURE15,PROCEDURE16,PROCEDURE17
*/
/* <create_procedure> */
    PROCEDURE1 ::= Identificador PROCEDURE2 ;
    PROCEDURE2 ::= Punto Identificador PROCEDURE3
            | PROCEDURE3;
    PROCEDURE3 ::= PuntoComa DatoEntero PROCEDURE4
            | PROCEDURE4 ;
    PROCEDURE4 ::= Arroba Identificador PROCEDURE5 DATATYPE PROCEDURE6 ;
    PROCEDURE5 ::= AS
            | /* VACIO */ ;
    PROCEDURE6 ::= VARYING PROCEDURE7
            | PROCEDURE7 ;
    PROCEDURE7 ::= Igual DEFV PROCEDURE8
            | PROCEDURE8 ;
    PROCEDURE8 ::= OUTPUT PROCEDURE9
            | PROCEDURE9;
    PROCEDURE9 ::= Coma PROCEDURE4
            | PROCEDURE10;
    PROCEDURE10 ::= WITH PROCEDURE11 AS PROCEDURE12 PROCEDURE13
            | PROCEDURE13;
    PROCEDURE11 ::= EXECUTE
            | EXEC ;
    PROCEDURE12 ::= DatoString ;
    PROCEDURE13 ::= FOR REPLICATION PROCEDURE14
            | PROCEDURE14 ;
    PROCEDURE14 ::= AS PROCEDURE15 /*PROCEDURE16*/ PROCEDURE17 FIN_AN ;
    PROCEDURE15 ::= BEGIN
            | /* VACIO */ ;
    /*PROCEDURE16 ::= SELECT1 FIN_AN
            | INSERT0
            | DELETE1
            | UPDATE0;*/
    PROCEDURE17 ::= END;


/*
    non terminals VIEW1,VIEW2,VIEW3,VIEW4,VIEW5,VIEW6
*/
/* <create_view> */
    VIEW1 ::= Identificador VIEW2 VIEW3 ;
    VIEW2 ::= Punto Identificador
            | /* VACIO */ ;
    VIEW3 ::= ParentesisAbrir VIEW4 ParentesisCerrar AS /*SELECT1*/ VIEW6 
            | AS /*SELECT1*/ VIEW6;
    VIEW4 ::= Identificador VIEW5
            | /* VACIO */ ; 
    VIEW5 ::= Coma Identificador VIEW5
            | /* VACIO */ ;
    VIEW6 ::= WITH CHECK OPTION FIN_AN
            | FIN_AN ;


/*
    non terminal COL_CST,COL_CST1,COL_CST2,COL_CST3,COL_CST4,COL_CST5,COL_CST6,COL_CST7,COL_CST8,COL_CST9,COL_CST10,COL_CST11,COL_CST12,COL_CST13,COL_CST14,COL_CST15,COL_CST16
*/
/* <column_constraint> */
    COL_CST ::= COL_CST1 COL_CST2 COL_CST3; 
    COL_CST1 ::= CONSTRAINT Identificador
                | /* VACIO */ ;
    COL_CST2 ::= NULL
                | NOT NULL 
                | /* VACIO */;
    COL_CST3 ::= PRIMARY KEY COL_CST4
                | UNIQUE COL_CST4 
                | FOREIGN KEY COL_CST8
                | REFERENCES COL_CST9
                | DEFAULT COL_CST17                         
                | CHECK COL_CST16 ParentesisAbrir EXPRESSION ParentesisCerrar ;
    COL_CST4 ::= CLUSTERED COL_CST5
                | COL_CST5 ;
    COL_CST5 ::= WITH COL_CST6 COL_CST7
                | COL_CST7 ;
    COL_CST6 ::= FILLFACTOR Igual DatoEntero
                | ParentesisAbrir FILLFACTOR Igual DatoEntero ParentesisCerrar ;
    COL_CST7 ::= ON Identificador ParentesisAbrir Identificador ParentesisCerrar
                | /* VACIO */ ;
    COL_CST8 ::= REFERENCES Identificador COL_CST10 COL_CST11 ;
    COL_CST9 ::= Identificador COL_CST10 COL_CST11 ;
    COL_CST10 ::= Punto Identificador
                | /* VACIO */ ;
    COL_CST11 ::= ParentesisAbrir Identificador ParentesisCerrar COL_CST12
                | COL_CST12;
    COL_CST12 ::= ON COL_CST13 COL_CST14
                | /* VACIO */;
    COL_CST13 ::= DELETE
                | UPDATE ;
    COL_CST14 ::= NO ACTION
                | CASCADE
                | SET COL_CST15 ;
    COL_CST15 ::= NULL
                | DEFAULT ;
    COL_CST16 ::= NOT FOR REPLICATION
                | /* VACIO */ ;
    COL_CST17 ::= CONST_EXP 
                | /* VACIO */                              ;



/*
    non terminal CONST_EXP
*/
/* <constant_expression> */
    CONST_EXP ::= Arroba Identificador
                | Identificador
                | DatoString
                | DatoEntero
                | DatoFloat ;



/*
    non terminal TB_CST,TB_CST1,TB_CST2,TB_CST3,TB_CST4,TB_CST5,TB_CST6,TB_CST7,TB_CST8,TB_CST9,TB_CST10,TB_CST11,TB_CST12,TB_CST13,TB_CST14,TB_CST15,TB_CST16,TB_CST17,TB_CST18,TB_CST19,TB_CST20,TB_CST21
*/
/* <table_constraint> */   
    TB_CST ::= TB_CST1 TB_CST2 {::};
    TB_CST1 ::= CONSTRAINT Identificador {::}
                | /* VACIO */ ;
    TB_CST2 ::= PRIMARY KEY TB_CST4 TB_CST3
                | UNIQUE TB_CST4 TB_CST3
                | FOREIGN KEY TB_CST9
                | CONNECTION TB_CST16
                | DEFAULT TB_CST22
                | CHECK TB_CST20;
    TB_CST3 ::= ParentesisAbrir Identificador TB_CST5 TB_CST6 ParentesisCerrar TB_CST7 ;
    TB_CST4 ::= CLUSTERED
                | /* VACIO */ ;
    TB_CST5 ::= ASC
                | DESC 
                | /* VACIO */;
    TB_CST6 ::= Coma Identificador TB_CST6
                | /* VACIO */ ;
    TB_CST7 ::= WITH TB_CST7_1 
                | TB_CST8 
                | /* VACIO */ ;
    TB_CST7_1 ::= FILLFACTOR Igual DatoEntero TB_CST8
                | ParentesisAbrir INDEX_OP TB_CST7_2 ParentesisCerrar
                ;
    TB_CST7_2 ::= Coma INDEX_OP TB_CST7_2
                | /* VACIO */
                ;
    TB_CST8 ::= ON Identificador ParentesisAbrir Identificador ParentesisCerrar
                | Identificador ;
    TB_CST9 ::= ParentesisAbrir Identificador TB_CST6 ParentesisCerrar REFERENCES Identificador TB_CST10;
    TB_CST10 ::= ParentesisAbrir Identificador TB_CST6 ParentesisCerrar TB_CST11
                | TB_CST11;
    TB_CST11 ::= ON TB_CST12 TB_CST13 TB_CST15;
    TB_CST12 ::= DELETE
                | UPDATE ;
    TB_CST13 ::= NO ACTION
                | CASCADE
                | SET TB_CST14 ;
    TB_CST14 ::= NULL
                | DEFAULT ;
    TB_CST15 ::= NOT FOR REPLICATION
                | /* VACIO */ ;
    TB_CST16 ::= ParentesisAbrir Identificador TO Identificador TB_CST17 ParentesisCerrar TB_CST18;
    TB_CST17 ::= Coma Identificador TO Identificador TB_CST17
                | /* VACIO*/;
    TB_CST18 ::= ON DELETE TB_CST19;
    TB_CST19 ::= NO ACTION
                | CASCADE;
    TB_CST20 ::= NOT FOR REPLICATION ParentesisAbrir /*SH_COND*/ ParentesisCerrar
                | ParentesisAbrir /*SH_COND*/ ParentesisCerrar;
    TB_CST21 ::= WITH VALUES
                | /* VALUES */ ;
    TB_CST22 ::= CONST_EXP TB_CST23 ;
    TB_CST23 ::= FOR Identificador TB_CST21
                | /* VACIO */ ;
    



/*
    non terminal COL_DEF,COL_DEF1,COL_DEF2,COL_DEF3,COL_DEF4,COL_DEF5,COL_DEF6,COL_DEF7,COL_DEF8,COL_DEF10
*/
/* <column_definition> */
    COL_DEF ::= FILESTREAM COL_DEF1
            | COL_DEF1     {: :};
    COL_DEF1 ::= COLLATE Identificador COL_DEF2
                | COL_DEF2 ;
    COL_DEF2 ::= NULL COL_DEF3
                | NOT NULL COL_DEF3
                | COL_DEF3 
                | /* VACIO */
                ;
    COL_DEF3 ::= CONSTRAINT Identificador COL_DEF4
                | COL_DEF4
                | IDENTITY COL_DEF6
                ;
    COL_DEF4 ::= DEFAULT DEFV COL_DEF5
                |COL_DEF5
                ;
    COL_DEF5 ::= WITH VALUES COL_DEF8
                | COL_DEF8 ;
    COL_DEF6 ::= ParentesisAbrir DatoEntero Coma DatoEntero ParentesisCerrar COL_DEF7
                | COL_DEF7 ;
    COL_DEF7 ::= NOT FOR REPLICATION COL_DEF8
                | COL_DEF8 ;
    COL_DEF8 ::= ROWGUIDCOL COL_DEF11               {: :}
                | COL_DEF11 ;
    COL_DEF11 ::= SPARSE COL_DEF12
                | COL_DEF12
                ;
    COL_DEF12 ::= ENCRYPTED WITH ParentesisAbrir COLUMN_ENCRYPTION_KEY Igual Identificador Coma ENCRYPTION_TYPE Igual COL_DEF12_1
                | COL_DEF14
                ;
    COL_DEF12_1 ::= DETERMINISTIC COL_DEF13
                | RANDOMIZED COL_DEF13
                ;
    COL_DEF13 ::= Coma ALGORITHM Igual DatoString ParentesisCerrar COL_DEF14
                ;
    COL_DEF14 ::= MASKED WITH ParentesisAbrir FUNCTION Igual DatoString ParentesisCerrar COL_DEF10
                | COL_DEF10
                ;
    COL_DEF10 ::= COL_CST                        {:  :}
		        | /* VACIO */ ;
    


/*
    non terminals TB_IX,TB_IX1,TB_IX2,TB_IX3,TB_IX4
*/
/* <table_index> */
    TB_IX ::= INDEX Identificador ParentesisAbrir TB_IX1 ParentesisCerrar TB_IX4 ;
    TB_IX1 ::=  Identificador TB_IX2 TB_IX3 ;
    TB_IX2 ::= ASC
            | DEC
            | /* VACIO */ ; 
    TB_IX3 ::= Coma TB_IX2
            | /* VACIO */ ;
    TB_IX4 ::= WITH FILLFACTOR Igual DatoEntero 
            | /* VACIO */ ;


/*
    non terminals TABLE1,TABLE2,TABLE3,TABLE4,TABLE5
*/
/* <create_table> */
    TABLE1 ::= OBJECT ParentesisAbrir TABLE2 TABLE3 ParentesisCerrar TABLE4 FIN_AN;
    TABLE2 ::= COL_DEF
            | TB_CST                        {: :};
    TABLE3 ::= Coma TABLE2 TABLE3
            | /* VACIO */ ;
	TABLE4 ::= ON TABLE5
			| /* VACIO */ ;
	TABLE5 ::= Identificador ParentesisAbrir Identificador ParentesisCerrar
			| PRIMARY ;


/*
    non terminals FUNCTION1,FUNCTION2,FUNCTION3,FUNCTION4,FUNCTION5,FUNCTION6,FUNCTION7,FUNCTION8,FUNCTION9,FUNCTION10,FUNCTION11,FUNCTION12
*/
/* <create_function> */
	FUNCTION1 ::= OBJECT ParentesisAbrir FUNCTION3 ParentesisCerrar RETURNS DATATYPE FUNCTION6 ;


	FUNCTION3 ::= Arroba Identificador FUNCTION4 DATATYPE FUNCTION5 FUNCTION10
			| /* VACIO */ ;
	FUNCTION4 ::= AS
			| /* VACIO */ ;
	FUNCTION5 ::= Igual DEFV
			| /* VACIO */ ;
	FUNCTION6 ::= WITH FUNCTION13 FUNCTION7
			| FUNCTION7 
                        ;
	FUNCTION7 ::= FUNCTION4 BEGIN /*FUNCTION8 FUNCTION9*/ FUNCTION11 END FIN_AN ;
	/*FUNCTION8 ::= SELECT1 FIN_AN
            | INSERT0
            | DELETE1
            | UPDATE0;
	FUNCTION9 ::= FUNCTION8 FUNCTION9
			| /* VACIO  ;*/
        FUNCTION13 ::= ENCRYPTION
                        | SCHEMABINDING
                        | RETURNS NULL ON NULL INPUT
                        | CALLED ON NULL INPUT
                        | EXECUTE AS FUNCTION14
                        ;

        FUNCTION10 ::= Coma FUNCTION3
            | /* VACIO */ ;
        FUNCTION11 ::= RETURN EXPSENCILLA FUNCTION12 ;
        FUNCTION12 ::= PuntoComa
            | /* VACIO */ ;

        FUNCTION14 ::= CALLER
                        | SELF
                        | OWNER
                        | DatoString
                        ;


/*
    non terminals TRUNCATE1,TRUNCATE2
*/
/* <truncate> */
    TRUNCATE1 ::= TRUNCATE TABLE OBJECT:o TRUNCATE2 FIN_AN {: 
    String prueba = o.toString();
    String[] nombre = prueba.split("\\.");
     int i = nombre.length;
     Manejador.truncarTabla(nombre[i-1]);
    //funcion buscar, parametro nombre[i-1];
    
                                                                   :}
    ; 
    TRUNCATE2 ::= WITH ParentesisAbrir PARTITIONS ParentesisAbrir TRUNCATE3
                | /* VACIO */ ;

    TRUNCATE3 ::= DatoEntero TRUNCATE4;

    TRUNCATE4 ::= Coma TRUNCATE3
                | TO TRUNCATE3 
                | DatoEntero ;


/*
    non terminals CRT,CRT1,CRT2
*/
/* <create> */
    CRT2 ::= FUNCTION CRT3 FUNCTION1;
    CRT3 ::= OR ALTER  
          | /* VACIO */ ;

    COLST ::= ParentesisAbrir COLST1 ;
    COLST1 ::= Identificador COLST2 ;
    COLST2 ::= Coma COLST1
                | ParentesisCerrar ;

/*
    non terminal ALTER0,ALTER1,ALTER2,ALTER3,ALTER4,ALTER5,ALTER6,ALTER7,ALTER8,ALTER9,ALTER10,ALTER11,ALTER12,ALTER13,ALTER14,ALTER15,ALTER16,ALTER17,ALTER18,ALTER19,ALTER20,ALTER21,ALTER22, ALTERV1,ALTERV2,ALTERV3,ALTERV4,ALTERV5,ALTERV6,ALTERUSER2,ALTERUSER3,ALTERUSER4,ALTERUSER5,ALTERUSER6,ALTERUSER7,ALTERI1.ALTERI2,ALTERI3,ALTERI4,ALTERI5,ALTERI6,ONOFF,RESINDEX1,RESINDEX2,LOWPRIORITY,ABORTAFTERW,MINOP,REORGANIZEOPTION1, SET_INDEX_OPTION, SET_INDEX_OPTION2
*/
/* <alter> */
    ALTER0 ::= ALTER ALTER1 FIN_AN
                ;
    ALTER1 ::= TABLE ALTER2
            | DATABASE ALTERD1 ALTERD2 
            | FUNCTION FUNCTION1 
            | USER Identificador:o WITH ALTERUSER2{:
String nombre = o.get_lexema();
//funcion busqueda usuarios, parametro nombre

:}
            | VIEW OBJECT ALTERV1
            | INDEX ALTERI1
            ;

    ALTERD1 ::= Identificador
                |CURRENT
                ;

    ALTERD2 ::= MODIFY NAME Igual Identificador
                |COLLATE Identificador
                |FILE_OPTIONS
                |SET OPTION_SPEC ALTERD4 ALTERD3
                ;

    ALTERD4 ::= Coma OPTION_SPEC ALTERD4
                |
                ;

    ALTERD3 ::= WITH TERMINATION
                |
                ;

    OPTION_SPEC ::= ACC_DATA_REC
                |AUTO_OPTION
                |AUTOMATIC_TUNING
                |CHANGE_TRACKING_OPTION
                |CONTAINMENT_OPTION
                |CURSOR_OPTION
                |DATABASE_MIRRORING
                |DATE_CORRELATION
                |DB_ENCRYPTION
                |DB_STATE
                |DB_UPDATE
                |DB_USER
                |DELAYED_DURABILITY_OPTION
                |EXTERNAL_ACCESS
                |FILESTREAM ParentesisAbrir FILESTREAM_OPTION ParentesisCerrar
                |HADR_OPTION
                |MIXED_PAGE
                |PARAMETERIZATION_OPTION
                |QUERY_STORE_OPTIONS
                |RECOVERY_OPTION
                |REMOTE_DATA
                |SERVICE_BROKER
                |SNAPSHOT_OPTION
                |SQL_OPTION
                |TARGET_RECOVERY
                |TERMINATION
                |TEMPORAL_HISTORY
                ;

    ACC_DATA_REC ::= ACCELERATED_DATABASE_RECOVERY Igual ONOFF ACC_DATA_REC2
                        ;

    ACC_DATA_REC2 ::= ParentesisAbrir PERSISTENT_VERSION_STORE_FILEGROUP Igual Identificador ParentesisCerrar
                        |/* vacio */
                        ;

    AUTO_OPTION ::= AUTO_CLOSE ONOFF
                |AUTO_CREATE_STATISTICS AUTO_OPTION2
                |AUTO_SHRINK ONOFF
                |AUTO_UPDATE_STATISTICS ONOFF
                |AUTO_UPDATE_STATISTICS_ASYNC ONOFF
                ;

    AUTO_OPTION2 ::= OFF
                |ON AUTO_OPTION3
                ;

    AUTO_OPTION3 ::= ParentesisAbrir INCREMENTAL Igual ONOFF ParentesisCerrar
                |/* vacio */
                ;

    AUTOMATIC_TUNING ::= AUTOMATIC_TUNING ParentesisAbrir FORCE_LAST_GOOD_PLAN Igual ONOFF ParentesisCerrar
                        ;

    CHANGE_TRACKING_OPTION ::= CHANGE_TRACKING CHANGE_TRACKING_OPTION2
                        ;

    CHANGE_TRACKING_OPTION2 ::= Igual OFF
                                |Igual ON CHANGE_TRACKING_OPTION3
                                |ParentesisAbrir CHANGE_TRACKING_OPTION_LIST CHANGE_TRACKING_OPTION_LIST2 ParentesisCerrar
                                ;

    CHANGE_TRACKING_OPTION3 ::= ParentesisAbrir CHANGE_TRACKING_OPTION_LIST CHANGE_TRACKING_OPTION2 ParentesisCerrar
                                |/* vacio */
                                ;

    CHANGE_TRACKING_OPTION_LIST ::= AUTO_CLEANUP Igual ONOFF
                                |CHANGE_RETENTION Igual DatoEntero DHRMIN
                                ;

    CHANGE_TRACKING_OPTION_LIST2 ::= Coma CHANGE_TRACKING_OPTION_LIST CHANGE_TRACKING_OPTION_LIST2
                                |/* vacio */
                                ;

    DHRMIN ::= DAYS 
                |HOURS
                |MINUTES
                ;

    CONTAINMENT_OPTION ::= CONTAINMENT Igual CONTAINMENT_OPTION2
                        ;

    CONTAINMENT_OPTION2 ::= NONE
                        |PARTIAL
                        ;

    CURSOR_OPTION ::= CURSOR_CLOSE_ON_COMMIT ONOFF
                |CURSOR_DEFAULT CURSOR_OPTION2
                ;

    CURSOR_OPTION2 ::= LOCAL
                |GLOBAL
                ;

    DATABASE_MIRRORING ::= ALTER DATABASE Identificador
                        ;

    DATE_CORRELATION ::= DATE_CORRELATION_OPTIMIZATION ONOFF
                        ;

    DB_ENCRYPTION ::= ENCRYPTION DB_ENCRYPTION2
                        ;

    DB_ENCRYPTION2 ::= ON
                        |OFF
                        |SUSPEND
                        |RESUME
                        ;

    DB_STATE ::= ONLINE
                |OFFLINE
                |EMERGENCY
                ;
 
    DB_UPDATE ::= READ_ONLY
                |READ_WRITE
                ;

    DB_USER ::= SINGLE_USER
                |RESTRICTED_USER
                |MULTI_USER
                ;

    DELAYED_DURABILITY_OPTION ::= DELAYED_DURABILITY DELAYED_DURABILITY_OPTION2
                        ;

    DELAYED_DURABILITY_OPTION2 ::= DISABLED
                                |ALLOWED 
                                |FORCED 
                                ;
 
    EXTERNAL_ACCESS ::= DB_CHAINING ONOFF
                        |TRUSTWORTHY ONOFF
                        |DEFAULT_FULLTEXT_LANGUAGE Igual EXTERNAL_ACCESS2
                        |DEFAULT_LANGUAGE Igual EXTERNAL_ACCESS2
                        |NESTED_TRIGGERS Igual ONOFF
                        |TRANSFORM_NOISE_WORDS Igual ONOFF
                        |TWO_DIGIT_YEAR_CUTOFF Igual DatoEntero
                        ;

    FILESTREAM_OPTION ::= NON_TRANSACTED_ACCESS Igual FILESTREAM_OPTION2
                        ;

    FILESTREAM_OPTION2 ::= OFF 
                        |READ_ONLY
                        |FULL
                        |DIRECTORY_NAME Igual DatoString
                        |DIRECTORY_NAME Igual Identificador
                        ;

    HADR_OPTION ::= ALTER DATABASE SET HADR
                ;

    MIXED_PAGE ::= MIXED_PAGE_ALLOCATION ONOFF
                ;

    PARAMETERIZATION_OPTION ::= PARAMETERIZATION PARAMETERIZATION_OPTION2
                                ;

    PARAMETERIZATION_OPTION2 ::= SIMPLE 
                                |FORCED
                                ;

    QUERY_STORE_OPTIONS ::= QUERY_STORE Igual OFF
                        |QUERY_STORE Igual ON QUERY_STORE_OPTIONS2
                        |QUERY_STORE ParentesisAbrir QUERY_STORE_OPTION_LIST QUERY_STORE_OPTION_LIST2 ParentesisCerrar
                        |QUERY_STORE CLEAR QUERY_STORE_OPTIONS3
                        ;

    QUERY_STORE_OPTIONS2 ::= ParentesisAbrir QUERY_STORE_OPTION_LIST QUERY_STORE_OPTION_LIST2 ParentesisCerrar
                        |
                        ;

    QUERY_STORE_OPTIONS3 ::= ALL
                        |
                        ;

    QUERY_STORE_OPTION_LIST ::= OPERATION_MODE Igual QUERY_STORE_OPTION_LIST3
                                |CLEANUP_POLICY Igual ParentesisAbrir STALE_QUERY_THRESHOLD_DAYS Igual DatoEntero ParentesisCerrar
                                |DATA_FLUSH_INTERVAL_SECONDS Igual DatoEntero
                                |MAX_STORAGE_SIZE_MB Igual DatoEntero
                                |INTERVAL_LENGTH_MINUTES Igual DatoEntero
                                |SIZE_BASED_CLEANUP_MODE Igual QUERY_STORE_OPTION_LIST4
                                |QUERY_CAPTURE_MODE Igual QUERY_STORE_OPTION_LIST5
                                |MAX_PLANS_PER_QUERY Igual DatoEntero
                                |WAIT_STATS_CAPTURE_MODE Igual ONOFF
                                |QUERY_CAPTURE_POLICY Igual ParentesisAbrir QUERY_CAPTURE_POLICY_OPTIONS QUERY_CAPTURE_POLICY_OPTIONS2 ParentesisCerrar
                                ;

    QUERY_STORE_OPTION_LIST2 ::= Coma QUERY_STORE_OPTION_LIST QUERY_STORE_OPTION_LIST2
                                |
                                ;

    QUERY_STORE_OPTION_LIST3 ::= READ_WRITE
                                |READ_ONLY
                                ;

    QUERY_STORE_OPTION_LIST4 ::= AUTO
                                |OFF
                                ;

    QUERY_STORE_OPTION_LIST5 ::= ALL 
                                |AUTO
                                |CUSTOM
                                |NONE
                                ;

    QUERY_CAPTURE_POLICY_OPTIONS ::= STALE_CAPTURE_POLICY_THRESHOLD Igual DatoEntero DHRMIN
                                |EXECUTION_COUNT Igual DatoEntero
                                |TOTAL_COMPILE_CPU_TIME_MS Igual DatoEntero
                                |TOTAL_EXECUTION_CPU_TIME_MS Igual DatoEntero
                                ;

     QUERY_CAPTURE_POLICY_OPTIONS2 ::= Coma QUERY_CAPTURE_POLICY_OPTIONS QUERY_CAPTURE_POLICY_OPTIONS2
                                |
                                ;

 
    RECOVERY_OPTION ::= RECOVERY RECOVERY_OPTION2
                |TORN_PAGE_DETECTION ONOFF
                |PAGE_VERIFY RECOVERY_OPTION3
                ;

    RECOVERY_OPTION2 ::= FULL
                        |BULK_LOGGED
                        |SIMPLE
                        ;

    RECOVERY_OPTION3 ::= CHECKSUM
                        |TORN_PAGE_DETECTION
                        |NONE
                        ;

    REMOTE_DATA ::= REMOTE_DATA_ARCHIVE Igual ON ParentesisAbrir SERVER Igual Identificador Coma REMOTE_DATA2 ParentesisCerrar
                |REMOTE_DATA_ARCHIVE Igual OFF
                        ;

    SERVICE_BROKER ::= ENABLE_BROKER
                        |DISABLE_BROKER
                        |NEW_BROKER
                        |ERROR_BROKER_CONVERSATIONS
                        |HONOR_BROKER_PRIORITY ONOFF
                        ;

    SNAPSHOT_OPTION ::= ALLOW_SNAPSHOT_ISOLATION ONOFF
                        |READ_COMITTED_SNAPSHOT ONOFF
                        |MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT Igual ONOFF
                        ;

    SQL_OPTION ::= ANSI_NULL_DEFAULT ONOFF
                |ANSI_NULLS ONOFF
                |ANSI_PADDING ONOFF
                |ANSI_WARNINGS ONOFF
                |ARITHABORT ONOFF
                |COMPATIBILITY_LEVEL DatoEntero
                |CONCAT_NULL_YIELDS_NULL ONOFF
                |NUMERIC_ROUNDABORT ONOFF
                |QUOTED_IDENTIFIER ONOFF
                |RECURSIVE_TRIGGERS ONOFF
                ;

    /*estos son los unicos valores que deberian venir pero gg 
    SQL_OPTION2 ::= CIENTOCINCUENTA
                |CIENTOCUARENTA
                |CIENTOTREINTA
                |CIENTOVEINTE
                |CIENTODIEZ
                |CIEN
                ;
                */

    TARGET_RECOVERY ::= TARGET_RECOVERY_TIME Igual DatoEntero TARGET_RECOVERY2
                        ;

    TARGET_RECOVERY2 ::= SECONDS 
                        |MINUTES
                        ;

    TERMINATION ::= ROLLBACK AFTER DatoEntero TERMINATION2
                |ROLLBACK IMMEDIATE
                |NO_WAIT
                ;

     TERMINATION2 ::= SECONDS
                |
                ;

    TEMPORAL_HISTORY ::= TEMPORAL_HISTORY_RETENTION ONOFF
                ;
        

    REMOTE_DATA2 ::= CREDENTIAL Igual Identificador
                |FEDERATED_SERVICE_ACCOUNT Igual ONOFF
                ;

    FILE_OPTIONS ::= ADD_FILES
                |ADD_FILEGROUPS
                ;

    ADD_FILES ::= ADD FILE FLSPC ADD_FILES2 ADD_FILES3
                |ADD LOG FILE FLSPC ADD_FILES2
                |REMOVE FILE Identificador
                |MODIFY FILE FLSPC
                ;
    ADD_FILES2 ::= Coma FLSPC ADD_FILES2
                |/*vacio*/
                ;

    ADD_FILES3 ::= TO FILEGROUP Identificador
                |/* vacio */
                ;

    /*
    non terminals FLSPC
    */
/* <filespec> */
    FLSPC ::= ParentesisAbrir NAME Igual Identificador FLSPC1 ParentesisCerrar 
                ;
    
    
    FLSPC1 ::= Coma NEWNAME Igual Identificador FLSPC2
            |FLSPC2 
            ;

    FLSPC2 ::= Coma FILENAME Igual DatoString FLSPC3
                |FLSPC3
                ;

    FLSPC3 ::= Coma SIZE Igual DatoEntero TAM FLSPC4
                |FLSPC4
                ;

    FLSPC4 ::= Coma MAXSIZE Igual DatoEntero FLSCP7 FLSPC5
                |FLSPC5
                ;
   
    FLSPC5 ::= Coma FILEGROWTH Igual DatoEntero TAM2 FLSCP6
                |FLSCP6
                ;

    FLSCP6 ::= Coma OFFLINE
                |/* vacio */
                ;

    FLSCP7 ::= TAM
                |UNLIMITED
                ;

    TAM ::= KB
        |MB
        |GB 
        |TB 
        ;

    TAM2 ::= KB
        |MB
        |GB
        |TB
        |Modulo
        ;

    ADD_FILEGROUPS ::= ADD FILEGROUP Identificador ADD_FILEGROUPS2
                      |REMOVE FILEGROUP Identificador
                      |MODIFY FILEGROUP Identificador ADD_FILEGROUPS3
                      ;

    ADD_FILEGROUPS2 ::= CONTAINS FILESTREAM
                        |CONTAINS MEMORY_OPTIMIZED_DATA
                        |/* vacio */
                        ;
                
    ADD_FILEGROUPS3 ::= FILEGROUP_UPD
                        |DEFAULT
                        |NAME Igual Identificador
                        |AUTOGROW_SINGLE_FILE
                        |AUTOGROW_ALL_FILES
                        ;

    FILEGROUP_UPD ::= READONLY
                |READWRITE
                |READ_ONLY
                |READ_WRITE
                ;


    ALTERV1 ::= COLST ALTERV2
                | ALTERV2
                ;
    ALTERV2 ::= WITH ALTERV3 ALTERV4
                | ALTERV4
                ;
    ALTERV3 ::= ENCRYPTION ALTERV5
                | SCHEMABINDING ALTERV5 
                | VIEW_METADATA ALTERV5
                ;
    ALTERV5 ::= Coma ALTERV3
                |
                ;
    ALTERV4 ::= AS SELECT1 FIN_AN ALTERV6
                ;
    ALTERV6 ::= WITH CHECK OPTION
                | /* VACIO */ 
                ;
    ALTERUSER2 ::= NAME Igual Identificador:o ALTERUSER7 {:/* o.get_lexema(); mandamos el nuevo nombre de usuario (reemplazar) */:}
                | DEFAULT_SCHEMA Igual ALTERUSER3:o ALTERUSER7 {:/* o.toString(); mandamos como propiedad (DEFAULT_SCHEMA) como valor (ALTERUSER3) */:}
                | LOGIN Igual Identificador:o ALTERUSER7 {:/* o.get_lexema(); mandamos como propiedad (LOGIN) como valor (identificador) */:}
                | PASSWORD Igual DatoString:o ALTERUSER4 ALTERUSER7 {:/* o.get_lexema(); mandamos como propiedad (PASSWORD) como valor (DatoString) */:}
                | DEFAULT_LANGUAGE Igual ALTERUSER5:o ALTERUSER7 {:/* o.toString(); mandamos como propiedad (DEFAULT_LANGUAGE) como valor (ALTERUSER5) */:}
                | ALLOW_ENCRYPTED_VALUE_MODIFICATIONS Igual ONOFF:o ALTERUSER7  {:/* o.toString(); mandamos como propiedad (ALLOW_ENCRYPTED_VALUE_MODIFICATIONS) como valor (ONOFF) */:}
                ;
    ALTERUSER3 ::= Identificador:o {:RESULT = o.get_lexema();:}
                | NULL {:RESULT = "NULL";:}
                ;
    ALTERUSER4 ::= OLD_PASSWORD Igual DatoString:o
                |  /* VACIO */
                ;
    ALTERUSER5 ::= NONE {:RESULT = "NONE";:}
                | DatoEntero:o {:RESULT = o.get_lexema();:}
                | Identificador:o {:RESULT = o.get_lexema();:}
                ;
    ALTERUSER6 ::= ON 
                | OFF
                ;
    ALTERUSER7 ::= Coma ALTERUSER2
                | /* VACIO */
                ;
    ALTER2 ::= OBJECT ALTER3 
                ;
    ALTER3 ::= ALTER COLUMN Identificador ALTER9 
            | ADD ALTER_ADD 
            | DROP DROP1 
            | CHECKALTERTABLE 
            | SWITCH TO OBJECT SWITCH2 
            | ENABLE ALTERENDIS1 
            | DISABLE ALTERENDIS1 
            | SET ALTER_SET1 
            ;
    SWITCH2 ::= WITH ParentesisAbrir LOWPRIORITY ParentesisCerrar 
                | 
                ;
    ALTERENDIS1 ::= CHANGE_TR
                | FILETABLE_OPTION
                ;
    ALTER_SET1 ::= SET_AL
                | STRETCH_CONFIGURATION
                | TABLE_OPTION
                | FILETABLE_OPTION3
                ;
    ALTER7 ::= COLLATE Identificador ALTER8 ALTER8_1
            | ALTER8 ALTER8_1
            ;
    ALTER8_1 ::= SPARSE
            | /* VACIO */
            ;

    ALTER8 ::= NULL
            | NOT NULL
            | /* VACIO */ 
            ;
    ALTER9 ::= DATATYPE ALTER7
            | DROP ALTER10
            | ADD ALTER10 
            ;
    ALTER10 ::= ROWGUIDCOL
            | NOT FOR REPLICATION
            | PERSISTED //AGREGAR
            | SPARSE
            | HIDDEN //AGREGAR
            | MASKED /*AGREGAR*/ ALTER10_1 
            ;
    ALTER10_1 ::= WITH ParentesisAbrir ALTER10_2 
            | /* VACIO */
            ;
    ALTER10_2 ::= FUNCTION Igual DatoString ParentesisCerrar ALTER10_3
                | ONLINE Igual ONOFF ParentesisCerrar
                ;
    ALTER10_3 ::= WITH ParentesisAbrir ONLINE Igual ONOFF ParentesisCerrar
                | /* VACIO */
                ;
    ALTER_ADD ::= ALTER11 
                | ALTER_ADD1 
                ;
    ALTER_ADD1 ::= Identificador DatoString GENERATED ALWAYS AS ROW START ALTER_ADD2 ALTER_ADD5
                | ALTER_ADD2
                ;
    ALTER_ADD2 ::= HIDDEN ALTER_ADD3
                | ALTER_ADD3
                ;
    ALTER_ADD3 ::= NOT NULL ALTER_ADD4
                | ALTER_ADD4 
                ;
    ALTER_ADD4 ::= CONSTRAINT Identificador {::}
                | /* VACIO */ 
                ;
    ALTER_ADD5 ::= DEFAULT SEXP ALTER_ADD6 Coma Identificador DatoString GENERATED ALWAYS AS ROW END ALTER_ADD2 Coma DEFAULT SEXP ALTER_ADD6 Coma ALTER_ADD7
                ;
    ALTER_ADD6 ::= WITH VALUES 
                | /* VACIO */
                ;
    ALTER_ADD7 ::= PERIOD FOR SYSTEM_TIME ParentesisAbrir Identificador Coma Identificador ParentesisCerrar
                ;
    ALTER11 ::= Identificador ALTER11_1 ALTER12 {::}
            | TB_CST ALTER12  {::}
            ;
    ALTER11_1 ::= AS CCD
                | DATATYPE COL_DEF
                ;
    ALTER12 ::= Coma ALTER11
            | /* VACIO */ 
            ;
    ALTER22 ::= CONSTRAINT ALTER13
            | ALTER13 
            ;
    ALTER13 ::= IF EXISTS ALTER14
            | ALTER14 
            ;
    ALTER14 ::= Identificador
            | COLUMN ALTER15 ALTER16
            ;
    ALTER15 ::= IF EXISTS
            | /* VACIO */ 
            ;
    ALTER16 ::= Identificador ALTER17
                ;
    ALTER17 ::= Coma Identificador ALTER17
            | /* VACIO */ 
            ;
    ALTER18 ::= CHECK 
            | NOCHECK 
            ;
    ALTER19 ::= ALL
            | Identificador 
            ;
    ALTER20 ::= Identificador
            | CURRENT
             ;
    ALTER21 ::= COLLATE Identificador
            | ADD FILE FLSPC 
            ;
    CCD ::= PERSISTED CCD2 CCD3
        |CCD3
        ;

CCD2 ::= NOT NULL
        |
        ;

CCD3 ::= CONSTRAINT Identificador CCD4
        |CCD4
        |
        ;

CCD4 ::= PRIMARY KEY  CCD5
        |UNIQUE CCD5
        |FOREIGN KEY CCD8
        |REFERENCES Identificador CCD9
        |CHECK CCD14
        ;

CCD5 ::= CLUSTERED CCD6
        |NONCLUSTERED CCD6
        |CCD6
        ;

CCD6 ::= WITH CCD7 CCD8 
        |
        ;

CCD7 ::= FILLFACTOR Igual Identificador
        |ParentesisAbrir INDEX_OP INDEX_OP2 ParentesisCerrar
        ;

CCD8 ::= REFERENCES Identificador CCD9
        ;

CCD9 ::= ParentesisAbrir Identificador ParentesisCerrar
        |CCD10
        ;

CCD10 ::= ON DELETE CCD11 CCD12
        |CCD12
        ;

CCD11 ::= NO ACTION
        |CASCADE
        ;

CCD12 ::= ON UPDATE NO ACTION CCD13
        |CCD13
        ;

CCD13 ::= NOT FOR REPLICATION
        |
        ;

CCD14 ::= CCD15 ParentesisAbrir  EXPRESSION  ParentesisCerrar
        ;

CCD15 ::= NOT FOR REPLICATION
        |
        ;

INDEX_OP ::= PAD_INDEX Igual ONOFF
            |FILLFACTOR Igual DatoEntero
            |IGNORE_DUP_KEY Igual ONOFF
            |STATISTICS_NORECOMPUTE Igual ONOFF
            |STATISTICS_INCREMENTAL Igual ONOFF
            |ALLOW_ROW_LOCKS Igual ONOFF
            |ALLOW_PAGE_LOCKS Igual ONOFF
            |OPTIMIZE_FOR_SEQUENTIAL_KEY Igual ONOFF
            |COMPRESSION_DELAY Igual INDEX_OP3
            |DATA_COMPRESSION Igual INDEX_OP4
            |ONLINE Igual ONOFF2
            ;

ONOFF2 ::= ON ONOFF2_1
            | OFF
            ;

ONOFF2_1 ::= ParentesisAbrir LOWPRIORITY ParentesisCerrar
            | /* VACIO */
            ;

INDEX_OP2 ::= Coma INDEX_OP INDEX_OP2
            |
            ;

INDEX_OP3 ::= DatoEntero INDEX_OP5
        ;

INDEX_OP4 ::= NONE 
            |ROW 
            |PAGE 
            |COLUMNSTORE
            |COLUMNSTORE_ARCHIVE
            ;

INDEX_OP5 ::= MINUTES
            |
            ;
// CHECKALTERTABLE, CHECKALTERTABLE2, CHECKALTERTABLE3,

CHECKALTERTABLE ::= WITH ALTER18 ALTER18 CONSTRAINT CHECKALTERTABLE2
                    |ALTER18 CONSTRAINT CHECKALTERTABLE2
                    ;

CHECKALTERTABLE2 ::= ALL 
                    |Identificador CHECKALTERTABLE3
                    ;

CHECKALTERTABLE3 ::= Coma Identificador CHECKALTERTABLE3
                    |
                    ;

// CHANGE_TR, CHANGE_TR2,


CHANGE_TR ::= CHANGE_TRACKING CHANGE_TR2
            ;

CHANGE_TR2 ::= WITH ParentesisAbrir TRACK_COLUMNS_UPDATED Igual ONOFF ParentesisCerrar
            |
            ;


//SET_AL, SET_AL2, SET_AL3, SET_AL4, SET_AL5, SET_AL6, SET_AL7, SET_AL8, SET_AL9, SET_AL10,

SET_AL ::= ParentesisAbrir SET_AL2 ParentesisCerrar
        ;

SET_AL2 ::= FILESTREAM_ON Igual SET_AL3
            |SYSTEM_VERSIONING Igual SET_AL4
            |
            ;

SET_AL3 ::= Identificador
            |NULL
            |DEFAULT
            |DatoString
            |ON PRIMARY
            ;

SET_AL4 ::= OFF 
            |ON SET_AL5
            ;

SET_AL5 ::= ParentesisAbrir SET_AL6 ParentesisCerrar
            |
            ;

SET_AL6 ::= HISTORY_TABLE Igual OBJECT SET_AL7 SET_AL8
            ;

SET_AL7 ::= Coma DATA_CONSISTENCY_CHECK Igual ONOFF
            |
            ;

SET_AL8 ::= Coma HISTORY_RETENTION_PERIOD Igual SET_AL9
            |
            ;

SET_AL9 ::= INFINITE
            |DatoEntero SET_AL10
            ;

SET_AL10 ::= DAY 
            |DAYS 
            |WEEK
            |WEEKS
            |MONTH
            |MONTHS
            |YEAR
            |YEARS
            ;


// TABLE_OPTION, TABLE_OPTION2, FILETABLE_OPTION, FILETABLE_OPTION2,FILETABLE_OPTION3,

TABLE_OPTION ::= ParentesisAbrir LOCK_ESCALATION Igual TABLE_OPTION2 ParentesisCerrar
                ;

TABLE_OPTION2 ::= AUTO
                |TABLE
                |DISABLE
                ;

FILETABLE_OPTION ::= FILETABLE_NAMESPACE FILETABLE_OPTION2
                    ;

FILETABLE_OPTION2 ::= SET ParentesisAbrir FILETABLE_DIRECTORY Igual Identificador ParentesisCerrar
                    |
                    ;

FILETABLE_OPTION3 ::= ParentesisAbrir FILETABLE_DIRECTORY Igual Identificador ParentesisCerrar
                    |
                    ;

// STRETCH_CONFIGURATION, STRETCH_CONFIGURATION2, TABLE_STRETCH_OPTIONS, TABLE_STRETCH_OPTIONS2, TABLE_STRETCH_OPTIONS3, TABLE_STRETCH_OPTIONS4,

STRETCH_CONFIGURATION ::= ParentesisAbrir REMOTE_DATA_ARCHIVE STRETCH_CONFIGURATION2 ParentesisCerrar
                        ;

STRETCH_CONFIGURATION2 ::= Igual ON ParentesisAbrir TABLE_STRETCH_OPTIONS ParentesisCerrar
                        |Igual OFF_WITHOUT_DATA_RECOVERY ParentesisAbrir MIGRATION_STATE Igual PAUSED ParentesisCerrar
                        |ParentesisAbrir TABLE_STRETCH_OPTIONS STRETCH_CONFIGURATION2 ParentesisCerrar
                        ;

STRETCH_CONFIGURATION2 ::= Coma TABLE_STRETCH_OPTIONS STRETCH_CONFIGURATION2
                        |
                        ;

TABLE_STRETCH_OPTIONS ::= FILTER_PREDICATE Igual TABLE_STRETCH_OPTIONS2 Coma TABLE_STRETCH_OPTIONS3
                        |MIGRATION_STATE Igual TABLE_STRETCH_OPTIONS4
                        ;

TABLE_STRETCH_OPTIONS2 ::= NULL 
                        |EXPRESSION
                        ;

TABLE_STRETCH_OPTIONS3 ::= MIGRATION_STATE Igual TABLE_STRETCH_OPTIONS4
                        ;

TABLE_STRETCH_OPTIONS4 ::= OUTBOUND
                        |INBOUND
                        |PAUSED
                        ;


// DROP1, DROP3, DROP4, DROP5, DROP6, DROP7,DROP_CLUSTERED, DROP_CLUSTERED2, DROP_CLUSTERED3

DROP1 ::= CONSTRAINT DROP3 Identificador DROP4 DROP6 
        |COLUMN DROP3 Identificador DROP7 DROP5
        |PERIOD FOR SYSTEM_TIME DROP5
        ;

DROP6 ::= Coma Identificador DROP4 DROP6
        | Coma DROP1
        |
        ;

DROP7 ::= Coma Identificador DROP7
        | Coma DROP1
        |
        ;

DROP3 ::= IF EXISTS
        |
        ;

DROP4 ::= WITH ParentesisAbrir DROP_CLUSTERED DROP_CLUSTERED2 ParentesisCerrar
        |
        ;

DROP5 ::= Coma DROP1 
        |
        ;

DROP_CLUSTERED ::= MAXDOP Igual DatoEntero
                |ONLINE Igual ONOFF
                |MOVE TO DROP_CLUSTERED3
                ;

DROP_CLUSTERED2 ::= Coma DROP_CLUSTERED DROP_CLUSTERED2
                |
                ;

DROP_CLUSTERED3 ::= Identificador
                |DEFAULT
                |DatoString
                ;

    ALTERI1 ::= OBJECT:o ALTERI2 {:String prueba = o.toString();
    String[] nombre = prueba.split("\\.");
     int i = nombre.length;
    //funcion buscar, parametro nombre[i-1];
    :}
                |ALL ALTERI2 
                ;

        ALTERI2 ::= ON OBJECT ALTERI3
                ;

        ALTERI3 ::= REBUILD  /* AGREGAR A FLEX */ 
                |DISABLE /* AGREGAR A FLEX */
                |REORGANIZE /* AGREGAR A FLEX */  ALTERI4
                |SET ParentesisAbrir SET_INDEX_OPTION SET_INDEX_OPTION2 ParentesisCerrar
                |RESUME /* AGREGAR A FLEX */ ALTERI6
                |PAUSE  /* AGREGAR A FLEX */
                |ABORT /* AGREGAR A FLEX */
                ;

        ALTERI6 ::= WITH ParentesisAbrir RESINDEX1 ParentesisCerrar
                | /* VACIO */
                ;

        RESINDEX1 ::= MAXDOP /* AGREGAR A FLEX */ Igual DatoEntero RESINDEX2
                        | MAX_DURATION Igual DatoEntero MINOP RESINDEX2
                        | LOWPRIORITY RESINDEX2
                        ;
        
        RESINDEX2 ::= Coma RESINDEX1
                        | /* VACIO */
                        ; 
        
        LOWPRIORITY ::= WAIT_AT_LOW_PRIORITY  ParentesisAbrir MAX_DURATION  Igual DatoEntero MINOP Coma ABORT_AFTER_WAIT Igual ABORTAFTERW ParentesisCerrar
                        ;

        ABORTAFTERW ::= NONE
                        | SELF /* AGREGAR A FLEX */
                        | BLOCKERS
                        ;

        MINOP ::= MINUTES /* AGREGAR A FLEX */
                | /* VACIO */
                ;

        PARTITION1 ::= PARTITION Igual ALL ALTERI4
                |PARTITION Igual DatoEntero ALTERI5
                | /* VACIO */
                ;
                
        ALTERI4 ::= WITH ParentesisAbrir REORGANIZEOPTION1 ParentesisCerrar
                | /* VACIO */
                ;

        REORGANIZEOPTION1 ::= LOB_COMPACTION /* AGREGAR A FLEX */ Igual ONOFF
                                | COMPRESS_ALL_ROW_GROUPS /* AGREGAR A FLEX */ Igual ONOFF
                                ;

        SET_INDEX_OPTION ::= ALLOW_ROW_LOCKS /* AGREGAR A FLEX */ Igual ONOFF
                        |ALLOW_PAGE_LOCKS /* AGREGAR A FLEX */ Igual ONOFF
                        |OPTIMIZE_FOR_SEQUENTIAL_KEY /* AGREGAR A FLEX */ Igual ONOFF
                        |IGNORE_DUP_KEY /* AGREGAR A FLEX */ Igual ONOFF
                        |STATISTICS_NORECOMPUTE /* AGREGAR A FLEX */ Igual ONOFF
                        ;

        ONOFF ::= ON {:RESULT = "ON";:}
                | OFF {:RESULT = "OFF";:}
                ;

        SET_INDEX_OPTION2 ::= Coma SET_INDEX_OPTION SET_INDEX_OPTION2
                        |
                        ;


    /* <exec> */
    EX ::= EX1 EX3 EX4
            ;
    EX1 ::= EXEC
            | EXECUTE
            ;
    EX2 ::= PuntoComa DatoEntero
            | /* VACIO */
            ;
    EX3 ::= OBJECT EX2
            | Arroba Identificador
            ;
    EX4 ::= Arroba Identificador Igual EX6 EX7
            | EX5 EX7;
    EX5 ::= DEFV
            | DEFAULT
            | /* VACIO */
            ;
    EX6 ::= DEFV
            | DEFAULT
            ;
    EX7 ::= Coma EX4
            | /* VACIO */
            ;

    SH_COND ::= SH_COND1 SH_COND2 ;
    SH_COND1 ::= MATCH ParentesisAbrir GSP ParentesisCerrar 
                | SH_CONDWM ;
    SH_COND2 ::= AND SH_COND 
                | /* VACIO */ ;

/*
non terminal JOINTB,JOINTB1,JOINTB2,JOINTB3,JOINTB4
*/

/* <joined_table> */
    JOINTB ::= TB_SOURCE JOINTB1 
                | ParentesisAbrir JOIN ParentesisCerrar ;
    JOINTB1 ::= JOIN_TYPE JOINTB3
                | CROSS Coma JOIN JOINTB4
                | /* VACIO */ ;
    JOINTB2 ::= JOIN_TYPE JOINTB3
                | CROSS Coma JOIN JOINTB4 ;
    JOINTB3 ::= TB_SOURCE ON SH_COND JOINTB4 ;
    JOINTB4 ::= JOINTB2
                | /* VACIO */ ;

/*
non terminal SAM_CL,SAM_CL1,SAM_CL2
*/

/* <tablesample_clause> */
    SAM_CL ::= TABLESAMPLE ParentesisAbrir SAM_CL1 ParentesisCerrar ;
    SAM_CL1 ::= SEXP SAM_CL2 ;
    SAM_CL2 ::= PERCENT
                | ROWS
                | /* VACIO */ ;

/*
non terminal TB_SOURCE,TB_SOURCE1,TB_SOURCE2
*/

/* <table_source> */
    TB_SOURCE ::= OBJECT TB_SOURCE1 TB_SOURCE2 
                | ROWSET TB_SOURCE1
                | Arroba Identificador TB_SOURCE1 ;
    TB_SOURCE1 ::= AS Identificador 
                | Identificador
                | /* VACIO */ ;
    TB_SOURCE2 ::= SAM_CL
                | /* VACIO */ ;

/*
non terminal SELIST,SELIST1,SELIST2,SELIST3,SELIST5,SELIST6,SELIST7,SELIST8,SELIST9,SELIST10
*/

/*
non terminal ORDERB,ORDER1,ORDER2,ORDER3,ORDER4
*/

/* <order_by> */
    ORDERB ::= SELIST ORDER1 ;
    ORDER1 ::= ORDER2
                | Coma ORDERB ;
    ORDER2 ::= COLLATE ORDER3
                | ORDER4 ;
    ORDER3 ::= Identificador ORDER4 ;
    ORDER4 ::= ASC
                | DESC 
                | /* VACIO */;

/*<select_list>*/
    SELIST ::= SELIST1 SELIST5
                | Multiplicacion
                | Arroba Identificador Igual SELIST1 ;
    SELIST1 ::= Identificador SELIST2
                | EXPRESSION
                | AGG_FN
                | STR_FN
                | CONV
                | CASEW ;
    SELIST2 ::= Punto SELIST3
                | Igual SELIST6
                | ParentesisAbrir SELIST8 ParentesisCerrar SELIST5
                | /* VACIO */;
    SELIST3 ::= Multiplicacion
                | Identificador SELIST7;
    SELIST5 ::= AS Identificador
                | Identificador 
                | /* VACIO */;
    SELIST6 ::= EXPRESSION ;
    SELIST7 ::= Punto Identificador SELIST10
                | ParentesisAbrir SELIST8 ParentesisCerrar SELIST5
                | SELIST5 ;
    SELIST8 ::= SEXP SELIST9
                | DatoString SELIST9
                | DatoBit  SELIST9
                | /* VACIO */ ;
    SELIST9 ::= Coma SELIST8
                | /* VACIO */;
    SELIST10 ::= ParentesisAbrir SELIST8  ParentesisCerrar SELIST5
                | SELIST5 ;

/*
non terminal CASEW.CASEW1.CASEW2.CASEW3
*/

/* <case_when> */
    CASEW ::= CASE CASEW1;
    CASEW1 ::= EXPRESSION CASEW2    
                | CASEW2 ;
    CASEW2 ::= WHEN EXPRESSION THEN EXPRESSION CASEW3 ;
    CASEW3 ::= ELSE EXPRESSION END 
                | CASEW2 
                | END;

/*
non terminal CONV,CONV1,CONV2,CONV3,CONV4,CONV5
*/

/* <conversion_functions> */
    CONV ::= CAST ParentesisAbrir CONV1 
                | CONVERT ParentesisAbrir CONV2 ;
    CONV1 ::= EXPRESSION AS DATATYPE CONV3 ParentesisCerrar ;
    CONV2 ::= DATATYPE CONV3 CONV4 ;
    CONV3 ::= ParentesisAbrir DatoEntero ParentesisCerrar
                | /* VACIO */ ;
    CONV4 ::= EXPRESSION CONV5 ;
    CONV5 ::= Coma SEXP
                | ParentesisCerrar ;

/*
non terminal DT_FN,DT_FN1,DT_FN2
*/

/* <datetime_functions> */
    DT_FN ::= CURRENT_TIMESTAMP
                | DAY ParentesisAbrir DT_FN1 ParentesisCerrar
                | MONTH ParentesisAbrir DT_FN1 ParentesisCerrar
                | YEAR ParentesisAbrir DT_FN1 ParentesisCerrar
                | SET LANGUAGE DT_FN2 ;
    DT_FN1 ::= DatoString
                | Arroba Identificador ;
    DT_FN2 ::= Arroba Identificador
                | Identificador ;


/*
non terminal STR_FN,STR_FN1,STR_FN2
*/

/* <string_functions> */
    STR_FN ::= LOWER ParentesisAbrir STR_FN1 ParentesisCerrar
                | TRANSLATE ParentesisAbrir STR_FN1 Coma STR_FN1 Coma STR_FN1 ParentesisCerrar
                | UPPER ParentesisAbrir STR_FN1 ParentesisCerrar
                | CHAR ParentesisAbrir SEXP ParentesisCerrar
                | LEFT ParentesisAbrir STR_FN1 Coma SEXP ParentesisCerrar
                | TRIM ParentesisAbrir STR_FN1 STR_FN2 ParentesisCerrar
                | NCHAR ParentesisAbrir SEXP ParentesisCerrar
                | RIGHT ParentesisAbrir STR_FN1 Coma SEXP ParentesisCerrar
                | SPACE ParentesisAbrir SEXP ParentesisCerrar 
                | SUBSTRING ParentesisAbrir STR_FN1 Coma SEXP Coma SEXP ParentesisCerrar ;
    STR_FN1 ::= Arroba Identificador
                | DatoString
                | Identificador ;
    STR_FN2 ::= FROM STR_FN1
                | /* VACIO */ ;

/*
non terminal AGG_FN,SEL_AVG,SEL_AVG1,SEL_AVG2,SEL_AVG3,SEL_COUNT,SEL_COUNT1,SEL_COUNT2,SEL_COUNT3,SEL_AGR,SEL_AGR1,SEL_AGR2,SEL_AGR3
*/

/* <aggregate_functions> */
    AGG_FN ::= AVG ParentesisAbrir SEL_AVG ParentesisCerrar 
            | COUNT ParentesisAbrir SEL_COUNT ParentesisCerrar 
            | MAX ParentesisAbrir SEL_AGR ParentesisCerrar 
            | MIN ParentesisAbrir SEL_AGR ParentesisCerrar 
            | SUM ParentesisAbrir SEL_AGR ParentesisCerrar ;
    SEL_AVG ::= SEL_AVG1 SEL_AVG2 ;
    SEL_AVG1 ::= ALL 
            | DISTINCT 
            | /* VACIO */; 
    SEL_AVG2 ::= SEXP 
            | Identificador SEL_AVG3 ;
    SEL_AVG3 ::= Punto Identificador 
            | /* VACIO */; 
    SEL_COUNT ::= SEL_COUNT1 SEL_COUNT2 ;
    SEL_COUNT1 ::= ALL 
            | DISTINCT 
            | /* VACIO */; 
    SEL_COUNT2 ::= Multiplicacion 
            | Identificador SEL_COUNT3 
            | SEXP ;
    SEL_COUNT3 ::= Punto Identificador 
            | /* VACIO */; 
    SEL_AGR ::= SEL_AGR1 SEL_AGR2 ;
    SEL_AGR1 ::= ALL 
            | DISTINCT 
            | /* VACIO */;
    SEL_AGR2 ::= Identificador SEL_AGR3 
            | SEXP ; 
    SEL_AGR3 ::= Punto Identificador 
            | /* VACIO */; 


    /*
non terminal SELECT1,SELECT2,SELECT3,SELECT4,SELECT5,SELECT6,SELECT7,SELECT8,SELECT9,SELECT11,SELECT12,SELECT13,SELECT14,SELECT15,SELECT17,SELECT18,SELECT19,SELECT20
*/

/* <select> */
    SELECT1 ::= SELECT SELECT2;
    SELECT2 ::= SELECT3 SELECT4 ;
    SELECT3 ::= ALL 
                | DISTINCT 
                | /* VACIO */ ;
    SELECT4 ::= TOP SELECT5 
                | SELECT7 ;
    SELECT5 ::= ParentesisAbrir SEXP ParentesisCerrar SELECT6 ;
    SELECT6 ::= PERCENT SELECT7 
                | SELECT7 ;
    SELECT7 ::= SELIST SELECT20;
    SELECT20 ::= Coma SELECT7
                | SELECT8 ;
    SELECT8 ::= INTO SELECT9 
                | SELECT11 ;
    SELECT9 ::= OBJECT SELECT11 ;
    SELECT11 ::= FROM JOINTB SELECT12
                | SELECT12;
    SELECT12 ::= WHERE SH_COND SELECT13
                | SELECT13 ;
    SELECT13 ::= GROUP BY EXPRESSION SELECT18 SELECT14 
                | SELECT14 ;
    SELECT14 ::= HAVING SH_COND SELECT15 
                | SELECT15; 
    SELECT15 ::= ORDER BY ORDERB 
                | /* VACIO */;
    SELECT18 ::= Coma EXPRESSION SELECT18 
                | /* VACIO */ ;

    DECLARE1 ::= DECLARE Arroba Identificador:o DECLARE2 DATATYPE:e DECLARE3:d3 DECLARE4 {:
String[] data = e.toString().split(" ");
//Metodo agregar
//"0".equals(data[1]) && "0".equals(data[2])
//!"0".equals(data[1]) && "0".equals(data[2])
if(data[1].equals("0") && data[2].equals("0")){
        Manejador.definirVariable(o.get_lexema(),data[0],Integer.parseInt(data[1]),false,Integer.parseInt(data[2]),false);
}else if(!data[1].equals("0") && data[2].equals("0")){
        Manejador.definirVariable(o.get_lexema(),data[0],Integer.parseInt(data[1]),true,Integer.parseInt(data[2]),false);
}else{
        Manejador.definirVariable(o.get_lexema(),data[0],Integer.parseInt(data[1]),true,Integer.parseInt(data[2]),true);
}

if((data[0].equals("SMALLINT") || data[0].equals("INT") || data[0].equals("INTEGER")) && isentero){
        varActual = Manejador.getVariable(o.get_lexema());
        varActual.valor = Integer.parseInt(d3.toString());
        Manejador.setVariable(varActual);
}else if((data[0].equals("FLOAT") || data[0].equals("DECIMAL") || data[0].equals("NUMERIC") || data[0].equals("REAL")) && isreal){
        varActual = Manejador.getVariable(o.get_lexema());
        varActual.valor = Float.parseFloat(d3.toString());
        Manejador.setVariable(varActual);
}else if((data[0].equals("VARCHAR") || data[0].equals("CHAR")) && isstring){
        varActual = Manejador.getVariable(o.get_lexema());
        varActual.valor = d3.toString();
        Manejador.setVariable(varActual);
}else if(d3.toString().equals("")){
        //hace nada
}else{
        System.out.println("Error en la linea: " + o.getFila() +" columna: " + o.get_columnaFinal() +" el valor: " + d3.toString() + " no coincide con el tipo: " + data[0] + ", el argumento es invalido.");
}
//Metodo asignar
System.out.println(d3.toString());
error = false;
isentero = false;
isreal = false;
isstring = false;
:};

    DECLARE2 ::= AS
                | /* VACIO */
                ;
    DECLARE3 ::= Igual EXPSENCILLA:o {:
RESULT = o;:}
                | /* VACIO */ {:RESULT = "";:}
                ;
    DECLARE4 ::= Coma Arroba Identificador:o DECLARE2 DATATYPE:e DECLARE3:d3 DECLARE4 {:
String[] data = e.toString().split(" ");
//Metodo agregar
//"0".equals(data[1]) && "0".equals(data[2])
//!"0".equals(data[1]) && "0".equals(data[2])
if(data[1].equals("0") && data[2].equals("0")){
        Manejador.definirVariable(o.get_lexema(),data[0],Integer.parseInt(data[1]),false,Integer.parseInt(data[2]),false);
}else if(!data[1].equals("0") && data[2].equals("0")){
        Manejador.definirVariable(o.get_lexema(),data[0],Integer.parseInt(data[1]),true,Integer.parseInt(data[2]),false);
}else{
        Manejador.definirVariable(o.get_lexema(),data[0],Integer.parseInt(data[1]),true,Integer.parseInt(data[2]),true);
}


if((data[0].equals("SMALLINT") || data[0].equals("INT") || data[0].equals("INTEGER")) && isentero){
        varActual = Manejador.getVariable(o.get_lexema());
        varActual.valor = Integer.parseInt(d3.toString());
        Manejador.setVariable(varActual);
}else if((data[0].equals("FLOAT") || data[0].equals("DECIMAL") || data[0].equals("NUMERIC") || data[0].equals("REAL")) && isreal){
        varActual = Manejador.getVariable(o.get_lexema());
        varActual.valor = Float.parseFloat(d3.toString());
        Manejador.setVariable(varActual);
}else if((data[0].equals("VARCHAR") || data[0].equals("CHAR")) && isstring){
        varActual = Manejador.getVariable(o.get_lexema());
        varActual.valor = d3.toString();
        Manejador.setVariable(varActual);
}else if(d3.toString().equals("")){
        //hace nada
}else{
        System.out.println("Error en la linea: " + o.getFila() +" columna: " + o.get_columnaFinal() +" el valor: " + d3.toString() + " no coincide con el tipo: " + data[0] + ", el argumento es invalido.");
}
//Metodo asignar
System.out.println(d3.toString());
error = false;
isentero = false;
isreal = false;
isstring = false;
:}
                |
                ;

    SET1 ::= SET Arroba Identificador:o Igual EXPSENCILLA:d3 {:
        varActual = Manejador.getVariable(o.get_lexema());
        String tipo = varActual.tipoDato;
if((tipo.equals("SMALLINT") || tipo.equals("INT") || tipo.equals("INTEGER")) && isentero){
        varActual = Manejador.getVariable(o.get_lexema());
        varActual.valor = Integer.parseInt(d3.toString());
        Manejador.setVariable(varActual);
}else if((tipo.equals("FLOAT") || tipo.equals("DECIMAL") || tipo.equals("NUMERIC") || tipo.equals("REAL")) && isreal){
        varActual = Manejador.getVariable(o.get_lexema());
        varActual.valor = Float.parseFloat(d3.toString());
        Manejador.setVariable(varActual);
}else if((tipo.equals("VARCHAR") || tipo.equals("CHAR")) && isstring){
        varActual = Manejador.getVariable(o.get_lexema());
        varActual.valor = d3.toString();
        Manejador.setVariable(varActual);
}else if(d3.toString().equals("")){
        //hace nada
}else{
        System.out.println("Error en la linea: " + o.getFila() +" columna: " + o.get_columnaFinal() +" el valor: " + d3.toString() + " no coincide con el tipo: " + tipo + ", el argumento es invalido.");
}
error = false;
isentero = false;
isreal = false;
isstring = false;
    :};

    /*
non terminal GSP,GSP1
*/

/* <graph_search_pattern> */
    GSP ::= Identificador GSP1 Identificador ;
    GSP1 ::= Menor Menos ParentesisAbrir Identificador ParentesisCerrar Menos 
            | Menos ParentesisAbrir Identificador ParentesisCerrar Menos Mayor ;

/*
non terminal SH_CONDWM,SH_CONDWM1,SH_CONDWM2,SH_CONDWM3,SH_CONDWM4
*/

/* <search_condition_without_match> */
    SH_CONDWM ::= SH_CONDWM4 PREDICATE SH_CONDWM1 
                | ParentesisAbrir SH_CONDWM ParentesisCerrar SH_CONDWM1 ;
    SH_CONDWM1 ::= OR SH_CONDWM2 
                | ; 
    SH_CONDWM2 ::= NOT SH_CONDWM3 
                | SH_CONDWM3 ;
    SH_CONDWM3 ::= PREDICATE SH_CONDWM1 
                | ParentesisAbrir SH_CONDWM ParentesisCerrar SH_CONDWM1 ;
    SH_CONDWM4 ::= NOT
                | ;

/*
non terminal JOIN_TYPE,JOIN_TYPE1,JOIN_TYPE2,JOIN_TYPE3
*/

/* <join_type> */
    JOIN_TYPE ::= JOIN_TYPE1 JOIN ;
    JOIN_TYPE1 ::= INNER
                |JOIN_TYPE2 
                | /* VACIO */ ;
    JOIN_TYPE2 ::= LEFT JOIN_TYPE3
                | RIGHT JOIN_TYPE3
                | FULL JOIN_TYPE3
                | /* VACIO */ ;
    JOIN_TYPE3 ::= OUTER
                | /* VACIO */ ;

/*
non terminal PREDICATE,PREDICATE1,PREDICATE2,PREDICATE3,PREDICATE4,PREDICATE5,PREDICATE6,PREDICATE7,PREDICATE8,PREDICATE9
*/

/* <predicate> */
    PREDICATE ::= PREDICATE1 PREDICATE2 
                | CONTAINS ParentesisAbrir PREDICATE7 Coma PREDICATE8 ParentesisCerrar
                | FREETEXT ParentesisAbrir PREDICATE7 Coma PREDICATE9 ParentesisCerrar;
    PREDICATE1 ::= OBJECT 
                | DatoString
                | SEXP 
                | CASEW 
                | AGG_FN 
                | STR_FN 
                | DT_FN 
                | CONV ;
    PREDICATE2 ::= COMPARE_OPR PREDICATE1 
                | NOT PREDICATE3 
                | LIKE PREDICATE1 PREDICATE6 
                | BETWEEN PREDICATE1 AND PREDICATE1 
                | IS PREDICATE4 NULL 
                | IN PREDICATE1 PREDICATE5 ;
    PREDICATE3 ::= LIKE PREDICATE1 PREDICATE6 
                | BETWEEN PREDICATE1 AND PREDICATE1 
                | IN PREDICATE1 PREDICATE5 ;
    PREDICATE4 ::= NOT 
                | ;
    PREDICATE5 ::= Coma PREDICATE1 PREDICATE5 
                | ;
    PREDICATE6 ::= ESCAPE DatoString 
                | ; 
    PREDICATE7 ::= Multiplicacion 
                | OBJECT ;
    PREDICATE8 ::= SH_COND ;
    PREDICATE9 ::= DatoString 
                | Arroba Identificador ;