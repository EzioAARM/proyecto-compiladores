/* The following code was generated by JFlex 1.7.0 */

package AnalizadorLexico;
import java.util.List;
import java.util.ArrayList;
import java_cup.runtime.*;

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>Lexemas.flex</tt>
 */
public class Lexemas implements java_cup.runtime.Scanner {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;
  public static final int COMENTARIOMULTI = 2;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0,  0,  1, 1
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\20\1\16\1\23\1\23\1\21\22\0\1\22\1\32\1\0"+
    "\1\46\1\0\1\26\1\33\1\15\1\41\1\42\1\24\1\1\1\36"+
    "\1\2\1\7\1\25\1\3\1\3\10\3\1\0\1\35\1\27\1\30"+
    "\1\31\1\0\1\45\1\47\1\62\1\55\1\50\1\10\1\71\1\65"+
    "\1\56\1\60\1\73\1\63\1\14\1\67\1\12\1\57\1\64\1\74"+
    "\1\52\1\54\1\51\1\13\1\70\1\66\1\72\1\53\1\61\1\37"+
    "\1\0\1\40\1\0\1\5\1\0\4\4\1\11\25\4\1\43\1\34"+
    "\1\44\7\0\1\23\56\0\1\17\u05ab\0\12\6\206\0\12\6\306\0"+
    "\12\6\u019c\0\12\6\166\0\12\6\166\0\12\6\166\0\12\6\166\0"+
    "\12\6\166\0\12\6\166\0\12\6\166\0\12\6\166\0\12\6\166\0"+
    "\12\6\140\0\12\6\166\0\12\6\106\0\12\6\u0116\0\12\6\106\0"+
    "\12\6\u0746\0\12\6\46\0\12\6\u012c\0\12\6\200\0\12\6\246\0"+
    "\12\6\6\0\12\6\266\0\12\6\126\0\12\6\206\0\12\6\6\0"+
    "\12\6\u03ce\0\1\23\1\23\u85f6\0\12\6\u02a6\0\12\6\46\0\12\6"+
    "\306\0\12\6\26\0\12\6\126\0\12\6\u0196\0\12\6\u5316\0\12\6"+
    "\u0586\0\12\6\u0bbc\0\12\6\200\0\12\6\74\0\12\6\220\0\12\6"+
    "\u0116\0\12\6\u0156\0\12\6\166\0\12\6\u0176\0\12\6\146\0\12\6"+
    "\146\0\12\6\u01a6\0\12\6\u0366\0\12\6\u4e06\0\12\6\346\0\12\6"+
    "\u6c74\0\62\6\u1150\0\12\6\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\u16b5\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\2\0\1\1\1\2\1\3\1\4\1\5\1\1\1\6"+
    "\4\5\1\1\1\7\1\1\1\10\1\11\1\12\1\13"+
    "\1\14\1\15\1\16\1\17\1\20\1\21\2\1\1\22"+
    "\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32"+
    "\1\33\24\5\14\34\1\0\1\35\1\36\11\5\1\37"+
    "\7\5\1\40\1\41\2\40\1\0\1\42\1\43\1\44"+
    "\1\45\1\46\1\47\1\50\1\51\1\52\1\53\4\5"+
    "\1\54\1\5\1\55\17\5\1\56\33\5\1\57\1\5"+
    "\1\60\3\5\1\61\1\62\1\5\1\63\1\5\1\64"+
    "\5\5\1\65\16\5\1\66\24\5\1\0\1\67\1\0"+
    "\1\70\16\5\1\71\4\5\1\72\16\5\2\73\1\74"+
    "\1\75\1\5\1\76\1\5\1\77\1\100\1\101\1\5"+
    "\1\102\2\5\1\103\4\5\1\104\3\5\1\105\17\5"+
    "\1\106\20\5\1\107\4\5\1\110\12\5\1\111\31\5"+
    "\1\112\2\5\1\113\17\5\1\114\1\115\4\5\1\116"+
    "\7\5\1\117\14\5\1\120\2\5\1\121\14\5\1\122"+
    "\3\5\1\0\1\36\1\0\1\123\2\5\1\124\3\5"+
    "\1\125\1\5\1\126\1\127\5\5\1\130\6\5\1\131"+
    "\6\5\1\132\1\5\1\133\1\134\3\5\1\135\6\5"+
    "\1\136\2\5\1\137\4\5\1\140\1\141\1\5\1\142"+
    "\5\5\1\143\1\144\4\5\1\145\3\5\1\146\1\5"+
    "\1\147\1\150\1\5\1\151\1\152\7\5\1\153\2\5"+
    "\1\154\3\5\1\155\10\5\1\156\5\5\1\157\1\160"+
    "\13\5\1\161\1\162\4\5\1\163\14\5\1\164\1\5"+
    "\1\165\4\5\1\166\1\5\1\167\5\5\1\170\7\5"+
    "\1\171\2\5\1\172\3\5\1\173\1\5\1\174\2\5"+
    "\1\175\5\5\1\176\11\5\1\177\2\5\1\200\2\5"+
    "\1\201\1\202\11\5\1\203\2\5\1\204\3\5\1\205"+
    "\3\5\1\206\2\5\1\207\1\36\1\0\13\5\1\210"+
    "\1\211\2\5\1\212\3\5\1\213\1\214\1\5\1\215"+
    "\1\5\1\216\1\5\1\217\1\220\3\5\1\221\23\5"+
    "\1\222\26\5\1\223\15\5\1\224\3\5\1\225\5\5"+
    "\1\226\3\5\1\227\1\230\7\5\1\231\10\5\1\232"+
    "\1\5\1\233\7\5\1\234\1\235\7\5\1\236\4\5"+
    "\1\237\1\5\1\240\12\5\1\241\1\242\3\5\1\243"+
    "\1\5\1\244\1\245\1\5\1\246\1\5\1\247\1\250"+
    "\1\5\1\251\1\252\1\253\3\5\1\254\2\5\1\255"+
    "\1\5\1\256\1\257\1\5\1\260\3\5\1\261\1\0"+
    "\1\262\1\263\3\5\1\264\1\265\1\266\5\5\1\267"+
    "\2\5\1\270\2\5\1\271\3\5\1\272\1\5\1\273"+
    "\7\5\1\274\1\275\22\5\1\276\4\5\1\277\1\300"+
    "\5\5\1\301\4\5\1\302\4\5\1\303\1\304\7\5"+
    "\1\305\3\5\1\306\10\5\1\307\4\5\1\310\1\311"+
    "\1\5\1\312\4\5\1\313\7\5\1\314\6\5\1\315"+
    "\1\316\2\5\1\317\1\5\1\320\7\5\1\321\3\5"+
    "\1\322\1\323\1\324\1\5\1\325\7\5\1\0\1\326"+
    "\1\5\1\327\1\5\1\330\1\331\2\5\1\332\1\333"+
    "\1\334\1\5\1\335\10\5\1\336\1\337\2\5\1\340"+
    "\15\5\1\341\1\342\5\5\1\343\7\5\1\344\1\345"+
    "\1\5\1\346\10\5\1\347\1\5\1\350\1\5\1\351"+
    "\1\352\3\5\1\353\3\5\1\354\1\355\3\5\1\356"+
    "\3\5\1\357\2\5\1\360\3\5\1\361\1\5\1\362"+
    "\4\5\1\363\1\5\1\364\1\365\2\5\1\366\1\5"+
    "\1\367\2\5\1\370\3\5\1\371\1\372\2\5\1\373"+
    "\1\374\1\5\1\375\1\376\1\5\1\377\2\5\1\u0100"+
    "\1\5\1\u0101\1\5\1\u0102\1\5\1\u0103\1\5\1\u0104"+
    "\1\5\1\u0105\2\5\1\u0106\2\5\1\u0107\1\5\1\u0108"+
    "\2\5\1\u0109\3\5\1\u010a\1\u010b\1\u010c\4\5\1\u010d"+
    "\1\u010e\7\5\1\u010f\1\u0110\1\u0111\1\u0112\3\5\1\u0113"+
    "\4\5\1\u0114\1\u0115\2\5\1\u0116\1\5\1\u0117\3\5"+
    "\1\u0118\2\5\1\u0119\2\5\1\u011a\3\5\1\u011b\3\5"+
    "\1\u011c\1\5\1\u011d\1\5\1\u011e\1\u011f\1\5\1\u0120"+
    "\3\5\1\u0121\6\5\1\u0122\1\5\1\u0123\3\5\1\u0124"+
    "\4\5\1\u0125\5\5\1\u0126\6\5\1\u0127\2\5\1\u0128"+
    "\3\5\1\u0129\3\5\1\u012a\1\u012b\1\u012c\1\5\1\u012d"+
    "\2\5\1\u012e\1\u012f\1\5\1\u0130\1\u0131\1\5\1\u0132"+
    "\1\u0133\3\5\1\u0134\1\5\1\u0135\1\u0136\1\u0137\2\5"+
    "\1\u0138\10\5\1\u0139\1\u013a\4\5\1\u013b\1\5\1\u013c"+
    "\3\5\1\u013d\2\5\1\u013e\1\5\1\u013f\6\5\1\u0140"+
    "\1\u0141\1\5\1\u0142\1\u0143\1\5\1\u0144\1\u0145\1\u0146"+
    "\1\u0147\1\u0148\1\u0149\2\5\1\u014a\1\u014b\4\5\1\u014c"+
    "\3\5\1\u014d\2\5\1\u014e\3\5\1\u014f\1\5\1\u0150"+
    "\4\5\1\u0151\3\5\1\u0152\1\u0153\1\u0154\3\5\1\u0155"+
    "\3\5\1\u0156\1\u0157\1\5\1\u0158\4\5\1\u0159\1\u015a"+
    "\2\5\1\u015b\5\5\1\u015c\1\5\1\u015d\4\5\1\u015e"+
    "\3\5\1\u015f\2\5\1\u0160\15\5\1\u0161\1\5\1\u0162"+
    "\6\5\1\u0163";

  private static int [] zzUnpackAction() {
    int [] result = new int[1411];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\75\0\172\0\267\0\364\0\u0131\0\u016e\0\u01ab"+
    "\0\172\0\u01e8\0\u0225\0\u0262\0\u029f\0\u02dc\0\172\0\u0319"+
    "\0\172\0\172\0\172\0\172\0\u0356\0\172\0\u0393\0\u03d0"+
    "\0\u040d\0\u044a\0\u0487\0\u04c4\0\172\0\172\0\u0501\0\172"+
    "\0\u053e\0\172\0\u057b\0\172\0\172\0\u05b8\0\u05f5\0\u0632"+
    "\0\u066f\0\u06ac\0\u06e9\0\u0726\0\u0763\0\u07a0\0\u07dd\0\u081a"+
    "\0\u0857\0\u0894\0\u08d1\0\u090e\0\u094b\0\u0988\0\u09c5\0\u0a02"+
    "\0\u0a3f\0\u0a7c\0\172\0\u0ab9\0\u0393\0\u03d0\0\u040d\0\u044a"+
    "\0\u0487\0\u04c4\0\u0501\0\u053e\0\u057b\0\u05b8\0\u01ab\0\u0af6"+
    "\0\u0b33\0\u0b70\0\u0bad\0\u0bea\0\u0c27\0\u0c64\0\u0ca1\0\u0cde"+
    "\0\u0d1b\0\u0d58\0\u0d95\0\u0dd2\0\u0e0f\0\u0e4c\0\u0e89\0\u0ec6"+
    "\0\u0f03\0\u0f40\0\u02dc\0\172\0\172\0\u0319\0\u0f7d\0\172"+
    "\0\172\0\172\0\172\0\172\0\172\0\172\0\172\0\172"+
    "\0\172\0\u0fba\0\u0ff7\0\u1034\0\u1071\0\u016e\0\u10ae\0\u10eb"+
    "\0\u1128\0\u1165\0\u11a2\0\u11df\0\u121c\0\u1259\0\u1296\0\u12d3"+
    "\0\u1310\0\u134d\0\u138a\0\u13c7\0\u1404\0\u1441\0\u147e\0\u14bb"+
    "\0\u14f8\0\u1535\0\u1572\0\u15af\0\u15ec\0\u1629\0\u1666\0\u16a3"+
    "\0\u16e0\0\u171d\0\u175a\0\u1797\0\u17d4\0\u1811\0\u184e\0\u188b"+
    "\0\u18c8\0\u1905\0\u1942\0\u197f\0\u19bc\0\u19f9\0\u1a36\0\u1a73"+
    "\0\u1ab0\0\u1aed\0\u1b2a\0\u1b67\0\u1ba4\0\u1be1\0\u1c1e\0\u1c5b"+
    "\0\u1c98\0\u1cd5\0\u1d12\0\u1d4f\0\u1d8c\0\u1dc9\0\u016e\0\u1e06"+
    "\0\u1e43\0\u1e80\0\u1ebd\0\u1efa\0\u016e\0\u1f37\0\u1f74\0\u1fb1"+
    "\0\u1fee\0\u202b\0\u2068\0\u20a5\0\u20e2\0\u211f\0\u215c\0\u2199"+
    "\0\u21d6\0\u2213\0\u2250\0\u228d\0\u22ca\0\u2307\0\u2344\0\u2381"+
    "\0\u23be\0\u23fb\0\u2438\0\u2475\0\u24b2\0\u24ef\0\u252c\0\u2569"+
    "\0\u25a6\0\u25e3\0\u2620\0\u265d\0\u269a\0\u26d7\0\u2714\0\u2751"+
    "\0\u0ab9\0\172\0\u278e\0\u27cb\0\u2808\0\u2845\0\u2882\0\u28bf"+
    "\0\u28fc\0\u2939\0\u2976\0\u29b3\0\u29f0\0\u2a2d\0\u2a6a\0\u2aa7"+
    "\0\u2ae4\0\u2b21\0\u016e\0\u2b5e\0\u2b9b\0\u2bd8\0\u2c15\0\u2c52"+
    "\0\u2c8f\0\u2ccc\0\u2d09\0\u2d46\0\u2d83\0\u2dc0\0\u2dfd\0\u2e3a"+
    "\0\u2e77\0\u2eb4\0\u2ef1\0\u2f2e\0\u2f6b\0\u2fa8\0\172\0\u0f7d"+
    "\0\u016e\0\u016e\0\u2fe5\0\u3022\0\u305f\0\u016e\0\u016e\0\u016e"+
    "\0\u309c\0\u016e\0\u30d9\0\u3116\0\u016e\0\u3153\0\u3190\0\u31cd"+
    "\0\u320a\0\u3247\0\u3284\0\u32c1\0\u32fe\0\u016e\0\u333b\0\u3378"+
    "\0\u33b5\0\u33f2\0\u342f\0\u346c\0\u34a9\0\u34e6\0\u3523\0\u3560"+
    "\0\u359d\0\u35da\0\u3617\0\u3654\0\u3691\0\u016e\0\u36ce\0\u370b"+
    "\0\u3748\0\u3785\0\u37c2\0\u37ff\0\u383c\0\u3879\0\u38b6\0\u38f3"+
    "\0\u3930\0\u396d\0\u39aa\0\u39e7\0\u3a24\0\u3a61\0\u3a9e\0\u3adb"+
    "\0\u3b18\0\u3b55\0\u3b92\0\u016e\0\u3bcf\0\u3c0c\0\u3c49\0\u3c86"+
    "\0\u3cc3\0\u3d00\0\u3d3d\0\u3d7a\0\u3db7\0\u3df4\0\u3e31\0\u3e6e"+
    "\0\u3eab\0\u3ee8\0\u3f25\0\u3f62\0\u3f9f\0\u3fdc\0\u4019\0\u4056"+
    "\0\u4093\0\u40d0\0\u410d\0\u414a\0\u4187\0\u41c4\0\u4201\0\u423e"+
    "\0\u427b\0\u42b8\0\u42f5\0\u4332\0\u436f\0\u43ac\0\u43e9\0\u4426"+
    "\0\u4463\0\u44a0\0\u44dd\0\u451a\0\u4557\0\u4594\0\u45d1\0\u460e"+
    "\0\u464b\0\u4688\0\u46c5\0\u4702\0\u473f\0\u477c\0\u47b9\0\u47f6"+
    "\0\u4833\0\u4870\0\u48ad\0\u48ea\0\u016e\0\u4927\0\u4964\0\u49a1"+
    "\0\u49de\0\u016e\0\u4a1b\0\u4a58\0\u4a95\0\u4ad2\0\u4b0f\0\u4b4c"+
    "\0\u4b89\0\u016e\0\u4bc6\0\u4c03\0\u4c40\0\u4c7d\0\u4cba\0\u4cf7"+
    "\0\u4d34\0\u4d71\0\u4dae\0\u4deb\0\u4e28\0\u4e65\0\u016e\0\u4ea2"+
    "\0\u4edf\0\u4f1c\0\u4f59\0\u4f96\0\u4fd3\0\u5010\0\u504d\0\u508a"+
    "\0\u50c7\0\u5104\0\u5141\0\u517e\0\u51bb\0\u51f8\0\u5235\0\u5272"+
    "\0\u52af\0\u52ec\0\u5329\0\u5366\0\u53a3\0\u016e\0\u53e0\0\u541d"+
    "\0\u545a\0\u5497\0\u54d4\0\u5511\0\u016e\0\u554e\0\u016e\0\u558b"+
    "\0\u55c8\0\u5605\0\u5642\0\u567f\0\u56bc\0\u016e\0\u56f9\0\u5736"+
    "\0\u5773\0\u57b0\0\u57ed\0\u582a\0\u016e\0\u5867\0\u58a4\0\u58e1"+
    "\0\u591e\0\u595b\0\u5998\0\u016e\0\u59d5\0\u016e\0\u016e\0\u5a12"+
    "\0\u5a4f\0\u5a8c\0\u016e\0\u5ac9\0\u5b06\0\u5b43\0\u5b80\0\u5bbd"+
    "\0\u5bfa\0\u016e\0\u5c37\0\u5c74\0\u5cb1\0\u5cee\0\u5d2b\0\u5d68"+
    "\0\u5da5\0\u016e\0\u016e\0\u5de2\0\u016e\0\u5e1f\0\u5e5c\0\u5e99"+
    "\0\u5ed6\0\u5f13\0\u016e\0\u016e\0\u5f50\0\u5f8d\0\u5fca\0\u6007"+
    "\0\u6044\0\u6081\0\u60be\0\u60fb\0\u016e\0\u6138\0\u016e\0\u6175"+
    "\0\u61b2\0\u016e\0\u61ef\0\u622c\0\u6269\0\u62a6\0\u62e3\0\u6320"+
    "\0\u635d\0\u639a\0\u016e\0\u63d7\0\u6414\0\u016e\0\u6451\0\u648e"+
    "\0\u64cb\0\u016e\0\u6508\0\u6545\0\u6582\0\u65bf\0\u65fc\0\u6639"+
    "\0\u6676\0\u66b3\0\u016e\0\u66f0\0\u672d\0\u676a\0\u67a7\0\u67e4"+
    "\0\u016e\0\u016e\0\u6821\0\u685e\0\u689b\0\u68d8\0\u6915\0\u6952"+
    "\0\u698f\0\u69cc\0\u6a09\0\u6a46\0\u6a83\0\u016e\0\u016e\0\u6ac0"+
    "\0\u6afd\0\u6b3a\0\u6b77\0\u6bb4\0\u6bf1\0\u6c2e\0\u6c6b\0\u6ca8"+
    "\0\u6ce5\0\u6d22\0\u6d5f\0\u6d9c\0\u6dd9\0\u6e16\0\u6e53\0\u6e90"+
    "\0\u016e\0\u6ecd\0\u016e\0\u6f0a\0\u6f47\0\u6f84\0\u6fc1\0\u6ffe"+
    "\0\u703b\0\u7078\0\u70b5\0\u70f2\0\u712f\0\u716c\0\u71a9\0\u016e"+
    "\0\u71e6\0\u7223\0\u7260\0\u729d\0\u72da\0\u7317\0\u7354\0\u016e"+
    "\0\u7391\0\u73ce\0\u016e\0\u740b\0\u7448\0\u7485\0\u016e\0\u74c2"+
    "\0\u016e\0\u74ff\0\u753c\0\u016e\0\u7579\0\u75b6\0\u75f3\0\u7630"+
    "\0\u766d\0\u76aa\0\u76e7\0\u7724\0\u7761\0\u779e\0\u77db\0\u7818"+
    "\0\u7855\0\u7892\0\u78cf\0\u016e\0\u790c\0\u7949\0\u7986\0\u79c3"+
    "\0\u7a00\0\u016e\0\u7a3d\0\u7a7a\0\u7ab7\0\u7af4\0\u7b31\0\u7b6e"+
    "\0\u7bab\0\u7be8\0\u7c25\0\u7c62\0\u016e\0\u7c9f\0\u7cdc\0\u016e"+
    "\0\u7d19\0\u7d56\0\u7d93\0\u016e\0\u7dd0\0\u7e0d\0\u7e4a\0\u016e"+
    "\0\u7e87\0\u7ec4\0\u016e\0\u7f01\0\u7f3e\0\u7f7b\0\u7fb8\0\u7ff5"+
    "\0\u8032\0\u806f\0\u80ac\0\u80e9\0\u8126\0\u8163\0\u81a0\0\u81dd"+
    "\0\u016e\0\u016e\0\u821a\0\u8257\0\u016e\0\u8294\0\u82d1\0\u830e"+
    "\0\u016e\0\u016e\0\u834b\0\u016e\0\u8388\0\u016e\0\u83c5\0\u016e"+
    "\0\u016e\0\u8402\0\u843f\0\u847c\0\u016e\0\u84b9\0\u84f6\0\u8533"+
    "\0\u8570\0\u85ad\0\u85ea\0\u8627\0\u8664\0\u86a1\0\u86de\0\u871b"+
    "\0\u8758\0\u8795\0\u87d2\0\u880f\0\u884c\0\u8889\0\u88c6\0\u8903"+
    "\0\u8940\0\u897d\0\u89ba\0\u89f7\0\u8a34\0\u8a71\0\u8aae\0\u8aeb"+
    "\0\u8b28\0\u8b65\0\u8ba2\0\u8bdf\0\u8c1c\0\u8c59\0\u8c96\0\u8cd3"+
    "\0\u8d10\0\u8d4d\0\u8d8a\0\u8dc7\0\u8e04\0\u8e41\0\u8e7e\0\u016e"+
    "\0\u8ebb\0\u8ef8\0\u8f35\0\u8f72\0\u8faf\0\u8fec\0\u9029\0\u9066"+
    "\0\u90a3\0\u90e0\0\u911d\0\u915a\0\u9197\0\u016e\0\u91d4\0\u9211"+
    "\0\u924e\0\u016e\0\u928b\0\u92c8\0\u9305\0\u9342\0\u937f\0\u016e"+
    "\0\u93bc\0\u93f9\0\u9436\0\u016e\0\u9473\0\u94b0\0\u94ed\0\u952a"+
    "\0\u9567\0\u95a4\0\u95e1\0\u961e\0\u016e\0\u965b\0\u9698\0\u96d5"+
    "\0\u9712\0\u974f\0\u978c\0\u97c9\0\u9806\0\u016e\0\u9843\0\u016e"+
    "\0\u9880\0\u98bd\0\u98fa\0\u9937\0\u9974\0\u99b1\0\u99ee\0\u016e"+
    "\0\u016e\0\u9a2b\0\u9a68\0\u9aa5\0\u9ae2\0\u9b1f\0\u9b5c\0\u9b99"+
    "\0\u016e\0\u9bd6\0\u9c13\0\u9c50\0\u9c8d\0\u016e\0\u9cca\0\u016e"+
    "\0\u9d07\0\u9d44\0\u9d81\0\u9dbe\0\u9dfb\0\u9e38\0\u9e75\0\u9eb2"+
    "\0\u9eef\0\u9f2c\0\u016e\0\u016e\0\u9f69\0\u9fa6\0\u9fe3\0\u016e"+
    "\0\ua020\0\u016e\0\u016e\0\ua05d\0\ua09a\0\ua0d7\0\u016e\0\u016e"+
    "\0\ua114\0\u016e\0\u016e\0\u016e\0\ua151\0\ua18e\0\ua1cb\0\ua208"+
    "\0\ua245\0\ua282\0\u016e\0\ua2bf\0\u016e\0\u016e\0\ua2fc\0\u016e"+
    "\0\ua339\0\ua376\0\ua3b3\0\u016e\0\ua3f0\0\u016e\0\u016e\0\ua42d"+
    "\0\ua46a\0\ua4a7\0\ua4e4\0\u016e\0\u016e\0\ua521\0\ua55e\0\ua59b"+
    "\0\ua5d8\0\ua615\0\u016e\0\ua652\0\ua68f\0\ua6cc\0\ua709\0\ua746"+
    "\0\u016e\0\ua783\0\ua7c0\0\ua7fd\0\u016e\0\ua83a\0\u016e\0\ua877"+
    "\0\ua8b4\0\ua8f1\0\ua92e\0\ua96b\0\ua9a8\0\ua9e5\0\u016e\0\u016e"+
    "\0\uaa22\0\uaa5f\0\uaa9c\0\uaad9\0\uab16\0\uab53\0\uab90\0\uabcd"+
    "\0\uac0a\0\uac47\0\uac84\0\uacc1\0\uacfe\0\uad3b\0\uad78\0\uadb5"+
    "\0\uadf2\0\uae2f\0\u016e\0\uae6c\0\uaea9\0\uaee6\0\uaf23\0\u016e"+
    "\0\u016e\0\uaf60\0\uaf9d\0\uafda\0\ub017\0\ub054\0\u016e\0\ub091"+
    "\0\ub0ce\0\ub10b\0\ub148\0\u016e\0\ub185\0\ub1c2\0\ub1ff\0\ub23c"+
    "\0\u016e\0\u016e\0\ub279\0\ub2b6\0\ub2f3\0\ub330\0\ub36d\0\ub3aa"+
    "\0\ub3e7\0\u016e\0\ub424\0\ub461\0\ub49e\0\u016e\0\ub4db\0\ub518"+
    "\0\ub555\0\ub592\0\ub5cf\0\ub60c\0\ub649\0\ub686\0\u016e\0\ub6c3"+
    "\0\ub700\0\ub73d\0\ub77a\0\u016e\0\u016e\0\ub7b7\0\u016e\0\ub7f4"+
    "\0\ub831\0\ub86e\0\ub8ab\0\u016e\0\ub8e8\0\ub925\0\ub962\0\ub99f"+
    "\0\ub9dc\0\uba19\0\uba56\0\u016e\0\uba93\0\ubad0\0\ubb0d\0\ubb4a"+
    "\0\ubb87\0\ubbc4\0\u016e\0\u016e\0\ubc01\0\ubc3e\0\u016e\0\ubc7b"+
    "\0\u016e\0\ubcb8\0\ubcf5\0\ubd32\0\ubd6f\0\ubdac\0\ubde9\0\ube26"+
    "\0\u016e\0\ube63\0\ubea0\0\ubedd\0\u016e\0\u016e\0\u016e\0\ubf1a"+
    "\0\u016e\0\ubf57\0\ubf94\0\ubfd1\0\uc00e\0\uc04b\0\uc088\0\uc0c5"+
    "\0\uc102\0\u016e\0\uc13f\0\u016e\0\uc17c\0\u016e\0\u016e\0\uc1b9"+
    "\0\uc1f6\0\u016e\0\u016e\0\u016e\0\uc233\0\u016e\0\uc270\0\uc2ad"+
    "\0\uc2ea\0\uc327\0\uc364\0\uc3a1\0\uc3de\0\uc41b\0\u016e\0\u016e"+
    "\0\uc458\0\uc495\0\u016e\0\uc4d2\0\uc50f\0\uc54c\0\uc589\0\uc5c6"+
    "\0\uc603\0\uc640\0\uc67d\0\uc6ba\0\uc6f7\0\uc734\0\uc771\0\uc7ae"+
    "\0\u016e\0\u016e\0\uc7eb\0\uc828\0\uc865\0\uc8a2\0\uc8df\0\u016e"+
    "\0\uc91c\0\uc959\0\uc996\0\uc9d3\0\uca10\0\uca4d\0\uca8a\0\u016e"+
    "\0\ucac7\0\ucb04\0\u016e\0\ucb41\0\ucb7e\0\ucbbb\0\ucbf8\0\ucc35"+
    "\0\ucc72\0\uccaf\0\uccec\0\u016e\0\ucd29\0\ucd66\0\ucda3\0\u016e"+
    "\0\ucde0\0\uce1d\0\uce5a\0\uce97\0\uced4\0\ucf11\0\ucf4e\0\ucf8b"+
    "\0\u016e\0\u016e\0\ucfc8\0\ud005\0\ud042\0\u016e\0\ud07f\0\ud0bc"+
    "\0\ud0f9\0\u016e\0\ud136\0\ud173\0\u016e\0\ud1b0\0\ud1ed\0\ud22a"+
    "\0\u016e\0\ud267\0\u016e\0\ud2a4\0\ud2e1\0\ud31e\0\ud35b\0\u016e"+
    "\0\ud398\0\u016e\0\u016e\0\ud3d5\0\ud412\0\u016e\0\ud44f\0\u016e"+
    "\0\ud48c\0\ud4c9\0\u016e\0\ud506\0\ud543\0\ud580\0\u016e\0\u016e"+
    "\0\ud5bd\0\ud5fa\0\u016e\0\u016e\0\ud637\0\172\0\u016e\0\ud674"+
    "\0\u016e\0\ud6b1\0\ud6ee\0\u016e\0\ud72b\0\u016e\0\ud768\0\u016e"+
    "\0\ud7a5\0\u016e\0\ud7e2\0\u016e\0\ud81f\0\u016e\0\ud85c\0\ud899"+
    "\0\u016e\0\ud8d6\0\ud913\0\u016e\0\ud950\0\u016e\0\ud98d\0\ud9ca"+
    "\0\u016e\0\uda07\0\uda44\0\uda81\0\u016e\0\u016e\0\u016e\0\udabe"+
    "\0\udafb\0\udb38\0\udb75\0\u016e\0\u016e\0\udbb2\0\udbef\0\udc2c"+
    "\0\udc69\0\udca6\0\udce3\0\udd20\0\u016e\0\u016e\0\u016e\0\u016e"+
    "\0\udd5d\0\udd9a\0\uddd7\0\u016e\0\ude14\0\ude51\0\ude8e\0\udecb"+
    "\0\udf08\0\u016e\0\udf45\0\udf82\0\u016e\0\udfbf\0\u016e\0\udffc"+
    "\0\ue039\0\ue076\0\u016e\0\ue0b3\0\ue0f0\0\u016e\0\ue12d\0\ue16a"+
    "\0\ue1a7\0\ue1e4\0\ue221\0\ue25e\0\u016e\0\ue29b\0\ue2d8\0\ue315"+
    "\0\u016e\0\ue352\0\u016e\0\ue38f\0\u016e\0\ue3cc\0\ue409\0\u016e"+
    "\0\ue446\0\ue483\0\ue4c0\0\u016e\0\ue4fd\0\ue53a\0\ue577\0\ue5b4"+
    "\0\ue5f1\0\ue62e\0\u016e\0\ue66b\0\u016e\0\ue6a8\0\ue6e5\0\ue722"+
    "\0\u016e\0\ue75f\0\ue79c\0\ue7d9\0\ue816\0\u016e\0\ue853\0\ue890"+
    "\0\ue8cd\0\ue90a\0\ue947\0\u016e\0\ue984\0\ue9c1\0\ue9fe\0\uea3b"+
    "\0\uea78\0\ueab5\0\u016e\0\ueaf2\0\ueb2f\0\ueb6c\0\ueba9\0\uebe6"+
    "\0\uec23\0\u016e\0\uec60\0\uec9d\0\uecda\0\u016e\0\u016e\0\u016e"+
    "\0\ued17\0\u016e\0\ued54\0\ued91\0\u016e\0\u016e\0\uedce\0\u016e"+
    "\0\u016e\0\uee0b\0\u016e\0\u016e\0\uee48\0\uee85\0\ueec2\0\u016e"+
    "\0\ueeff\0\u016e\0\u016e\0\u016e\0\uef3c\0\uef79\0\u016e\0\uefb6"+
    "\0\ueff3\0\uf030\0\uf06d\0\uf0aa\0\uf0e7\0\uf124\0\uf161\0\u016e"+
    "\0\u016e\0\uf19e\0\uf1db\0\uf218\0\uf255\0\u016e\0\uf292\0\u016e"+
    "\0\uf2cf\0\uf30c\0\uf349\0\u016e\0\uf386\0\uf3c3\0\u016e\0\uf400"+
    "\0\uf43d\0\uf47a\0\uf4b7\0\uf4f4\0\uf531\0\uf56e\0\uf5ab\0\u016e"+
    "\0\u016e\0\uf5e8\0\u016e\0\u016e\0\uf625\0\u016e\0\u016e\0\u016e"+
    "\0\u016e\0\u016e\0\u016e\0\uf662\0\uf69f\0\u016e\0\u016e\0\uf6dc"+
    "\0\uf719\0\uf756\0\uf793\0\u016e\0\uf7d0\0\uf80d\0\uf84a\0\u016e"+
    "\0\uf887\0\uf8c4\0\u016e\0\uf901\0\uf93e\0\uf97b\0\u016e\0\uf9b8"+
    "\0\u016e\0\uf9f5\0\ufa32\0\ufa6f\0\ufaac\0\u016e\0\ufae9\0\ufb26"+
    "\0\ufb63\0\u016e\0\u016e\0\ufba0\0\ufbdd\0\ufc1a\0\ufc57\0\u016e"+
    "\0\ufc94\0\ufcd1\0\ufd0e\0\u016e\0\u016e\0\ufd4b\0\u016e\0\ufd88"+
    "\0\ufdc5\0\ufe02\0\ufe3f\0\u016e\0\u016e\0\ufe7c\0\ufeb9\0\u016e"+
    "\0\ufef6\0\uff33\0\uff70\0\uffad\0\uffea\0\u016e\1\47\0\u016e"+
    "\1\144\1\241\1\336\1\u011b\0\u016e\1\u0158\1\u0195\1\u01d2"+
    "\0\u016e\1\u020f\1\u024c\0\u016e\1\u0289\1\u02c6\1\u0303\1\u0340"+
    "\1\u037d\1\u03ba\1\u03f7\1\u0434\1\u0471\1\u04ae\1\u04eb\1\u0528"+
    "\1\u0565\0\u016e\1\u05a2\0\u016e\1\u05df\1\u061c\1\u0659\1\u0696"+
    "\1\u06d3\1\u0710\0\u016e";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[1411];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\3\1\4\1\5\1\6\1\7\1\3\1\10\1\11"+
    "\1\12\1\7\1\13\1\14\1\15\1\16\1\17\1\20"+
    "\1\21\1\22\1\23\1\3\1\24\1\25\1\26\1\27"+
    "\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37"+
    "\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47"+
    "\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57"+
    "\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67"+
    "\1\70\1\71\1\7\1\72\1\7\21\73\1\3\1\73"+
    "\1\3\1\74\2\73\1\75\1\76\1\77\1\100\1\101"+
    "\1\102\2\73\1\103\1\73\1\104\1\73\1\105\2\73"+
    "\1\106\26\73\100\0\1\6\2\0\1\107\70\0\1\110"+
    "\1\6\2\0\1\107\71\0\1\6\2\0\1\107\1\111"+
    "\70\0\3\7\2\0\5\7\32\0\26\7\3\0\1\107"+
    "\2\0\1\107\1\111\70\0\3\7\2\0\2\7\1\112"+
    "\1\7\1\113\32\0\3\7\1\114\1\7\1\115\15\7"+
    "\1\116\2\7\3\0\3\7\2\0\1\117\2\7\1\120"+
    "\1\7\32\0\1\121\5\7\1\122\1\7\1\123\15\7"+
    "\3\0\3\7\2\0\2\7\1\124\2\7\32\0\5\7"+
    "\1\125\7\7\1\126\10\7\3\0\3\7\2\0\1\127"+
    "\4\7\32\0\1\130\7\7\1\131\1\132\14\7\15\133"+
    "\1\134\1\135\56\133\16\136\1\135\1\134\55\136\24\0"+
    "\1\137\100\0\1\140\74\0\1\141\74\0\1\142\74\0"+
    "\1\143\77\0\1\144\75\0\1\145\100\0\1\146\76\0"+
    "\1\147\76\0\1\150\76\0\1\151\31\0\3\7\2\0"+
    "\2\7\1\152\1\153\1\154\32\0\1\7\1\155\1\156"+
    "\1\157\1\7\1\160\1\161\4\7\1\162\5\7\1\163"+
    "\4\7\3\0\3\7\2\0\1\164\2\7\1\165\1\7"+
    "\32\0\1\166\2\7\1\167\4\7\1\170\1\171\1\7"+
    "\1\172\12\7\3\0\3\7\2\0\1\173\4\7\32\0"+
    "\1\174\2\7\1\175\1\7\1\176\1\7\1\177\1\200"+
    "\1\201\14\7\3\0\3\7\2\0\1\202\2\7\1\203"+
    "\1\7\32\0\1\204\7\7\1\205\1\206\14\7\3\0"+
    "\3\7\2\0\1\207\4\7\32\0\26\7\3\0\3\7"+
    "\2\0\1\210\2\7\1\211\1\7\32\0\1\212\1\7"+
    "\1\213\1\7\1\214\1\7\1\215\1\216\1\217\1\220"+
    "\3\7\1\221\2\7\1\222\4\7\1\223\3\0\3\7"+
    "\2\0\3\7\1\224\1\225\32\0\1\226\2\7\1\227"+
    "\3\7\1\230\1\231\15\7\3\0\3\7\2\0\5\7"+
    "\32\0\1\232\7\7\1\233\15\7\3\0\3\7\2\0"+
    "\2\7\1\234\1\235\1\7\32\0\3\7\1\236\2\7"+
    "\1\237\6\7\1\240\3\7\1\241\1\242\3\7\3\0"+
    "\3\7\2\0\2\7\1\243\2\7\32\0\1\7\1\244"+
    "\3\7\1\245\12\7\1\246\1\7\1\247\3\7\3\0"+
    "\3\7\2\0\5\7\32\0\10\7\1\250\15\7\3\0"+
    "\3\7\2\0\1\251\2\7\1\252\1\7\32\0\1\253"+
    "\2\7\1\254\1\255\3\7\1\256\1\257\14\7\3\0"+
    "\3\7\2\0\1\260\4\7\32\0\11\7\1\261\14\7"+
    "\3\0\3\7\2\0\1\262\2\7\1\263\1\264\32\0"+
    "\1\265\2\7\1\266\4\7\1\267\1\270\14\7\3\0"+
    "\3\7\2\0\1\271\3\7\1\272\32\0\3\7\1\273"+
    "\4\7\1\274\15\7\3\0\3\7\2\0\5\7\32\0"+
    "\1\275\2\7\1\276\3\7\1\277\1\300\1\301\14\7"+
    "\3\0\3\7\2\0\1\302\4\7\32\0\1\303\7\7"+
    "\1\304\1\305\14\7\3\0\3\7\2\0\1\306\4\7"+
    "\32\0\1\307\10\7\1\310\14\7\3\0\3\7\2\0"+
    "\1\311\2\7\1\312\1\313\32\0\1\314\2\7\1\315"+
    "\4\7\1\316\1\317\14\7\3\0\3\7\2\0\5\7"+
    "\32\0\10\7\1\320\15\7\24\0\1\321\1\322\47\0"+
    "\16\110\1\0\2\110\1\0\1\110\1\0\51\110\3\0"+
    "\1\111\2\0\1\111\1\0\2\323\66\0\3\7\2\0"+
    "\5\7\32\0\1\7\1\324\24\7\3\0\3\7\2\0"+
    "\5\7\32\0\5\7\1\325\20\7\3\0\3\7\2\0"+
    "\5\7\32\0\3\7\1\326\22\7\3\0\3\7\2\0"+
    "\5\7\32\0\6\7\1\327\17\7\3\0\3\7\2\0"+
    "\1\330\4\7\32\0\2\7\1\331\3\7\1\332\2\7"+
    "\1\333\14\7\3\0\3\7\2\0\5\7\32\0\23\7"+
    "\1\334\2\7\3\0\3\7\2\0\4\7\1\335\32\0"+
    "\20\7\1\336\5\7\3\0\3\7\2\0\5\7\32\0"+
    "\2\7\1\337\15\7\1\340\5\7\3\0\3\7\2\0"+
    "\5\7\32\0\7\7\1\341\16\7\3\0\3\7\2\0"+
    "\2\7\1\342\2\7\32\0\2\7\1\343\3\7\1\344"+
    "\17\7\3\0\3\7\2\0\5\7\32\0\11\7\1\345"+
    "\2\7\1\346\1\347\10\7\3\0\3\7\2\0\1\350"+
    "\4\7\32\0\1\351\10\7\1\352\14\7\3\0\3\7"+
    "\2\0\5\7\32\0\1\7\1\353\13\7\1\354\10\7"+
    "\3\0\3\7\2\0\5\7\32\0\1\355\20\7\1\356"+
    "\1\357\3\7\3\0\3\7\2\0\2\7\1\360\2\7"+
    "\32\0\5\7\1\361\20\7\3\0\3\7\2\0\5\7"+
    "\32\0\1\362\5\7\1\363\10\7\1\364\6\7\3\0"+
    "\3\7\2\0\2\7\1\365\2\7\32\0\14\7\1\366"+
    "\11\7\16\367\1\0\2\367\1\0\1\367\1\0\1\370"+
    "\50\367\3\0\3\7\2\0\5\7\32\0\1\7\1\371"+
    "\2\7\1\372\21\7\3\0\3\7\2\0\5\7\32\0"+
    "\2\7\1\373\23\7\3\0\3\7\2\0\4\7\1\374"+
    "\32\0\2\7\1\375\23\7\3\0\3\7\2\0\5\7"+
    "\32\0\1\376\1\377\24\7\3\0\3\7\2\0\1\u0100"+
    "\4\7\32\0\26\7\3\0\3\7\2\0\5\7\32\0"+
    "\5\7\1\u0101\1\u0102\17\7\3\0\3\7\2\0\5\7"+
    "\32\0\2\7\1\u0103\23\7\3\0\3\7\2\0\5\7"+
    "\32\0\5\7\1\u0104\20\7\3\0\3\7\2\0\5\7"+
    "\32\0\16\7\1\u0105\7\7\3\0\3\7\2\0\2\7"+
    "\1\u0106\1\7\1\u0107\32\0\1\u0108\4\7\1\u0109\1\u010a"+
    "\13\7\1\u010b\3\7\3\0\3\7\2\0\5\7\32\0"+
    "\20\7\1\u010c\5\7\3\0\3\7\2\0\5\7\32\0"+
    "\2\7\1\u010d\1\7\1\u010e\21\7\3\0\3\7\2\0"+
    "\5\7\32\0\10\7\1\u010f\15\7\3\0\3\7\2\0"+
    "\3\7\1\u0110\1\7\32\0\20\7\1\u0111\5\7\3\0"+
    "\3\7\2\0\5\7\32\0\1\u0112\4\7\1\u0113\20\7"+
    "\3\0\3\7\2\0\5\7\32\0\6\7\1\u0114\17\7"+
    "\3\0\3\7\2\0\5\7\32\0\20\7\1\u0115\2\7"+
    "\1\u0116\2\7\3\0\3\7\2\0\5\7\32\0\13\7"+
    "\1\u0117\12\7\3\0\3\7\2\0\3\7\1\u0118\1\7"+
    "\32\0\1\u0119\3\7\1\u011a\4\7\1\u011b\14\7\3\0"+
    "\3\7\2\0\1\u011c\4\7\32\0\26\7\3\0\3\7"+
    "\2\0\1\u011d\4\7\32\0\26\7\3\0\3\7\2\0"+
    "\5\7\32\0\15\7\1\u011e\10\7\3\0\3\7\2\0"+
    "\5\7\32\0\20\7\1\u011f\5\7\3\0\3\7\2\0"+
    "\4\7\1\u0120\32\0\1\u0121\1\7\1\u0122\2\7\1\u0123"+
    "\1\u0124\6\7\1\u0125\3\7\1\u0126\1\u0127\3\7\3\0"+
    "\3\7\2\0\4\7\1\u0128\32\0\26\7\3\0\3\7"+
    "\2\0\5\7\32\0\11\7\1\u0129\14\7\3\0\3\7"+
    "\2\0\4\7\1\u012a\32\0\17\7\1\u012b\6\7\3\0"+
    "\3\7\2\0\5\7\32\0\16\7\1\u012c\7\7\3\0"+
    "\3\7\2\0\5\7\32\0\1\u012d\25\7\3\0\3\7"+
    "\2\0\4\7\1\u012e\32\0\2\7\1\u012f\2\7\1\u0130"+
    "\1\u0131\11\7\1\u0132\5\7\3\0\3\7\2\0\5\7"+
    "\32\0\13\7\1\u0133\4\7\1\u0134\5\7\3\0\3\7"+
    "\2\0\5\7\32\0\21\7\1\u0135\4\7\3\0\3\7"+
    "\2\0\5\7\32\0\1\u0136\25\7\3\0\3\7\2\0"+
    "\5\7\32\0\5\7\1\u0137\20\7\3\0\3\7\2\0"+
    "\5\7\32\0\3\7\1\u0138\3\7\1\u0139\16\7\3\0"+
    "\3\7\2\0\3\7\1\u013a\1\7\32\0\26\7\3\0"+
    "\3\7\2\0\5\7\32\0\20\7\1\u013b\5\7\3\0"+
    "\3\7\2\0\5\7\32\0\12\7\1\u013c\13\7\3\0"+
    "\3\7\2\0\5\7\32\0\1\u013d\25\7\3\0\3\7"+
    "\2\0\5\7\32\0\1\u013e\25\7\3\0\3\7\2\0"+
    "\4\7\1\u013f\32\0\26\7\3\0\3\7\2\0\5\7"+
    "\32\0\3\7\1\u0140\22\7\3\0\3\7\2\0\3\7"+
    "\1\u0141\1\7\32\0\10\7\1\u0142\15\7\3\0\3\7"+
    "\2\0\5\7\32\0\2\7\1\u0143\2\7\1\u0144\20\7"+
    "\3\0\3\7\2\0\1\u0145\4\7\32\0\10\7\1\u0146"+
    "\15\7\3\0\3\7\2\0\1\u0147\4\7\32\0\1\u0148"+
    "\25\7\3\0\3\7\2\0\2\7\1\u0149\1\u014a\1\u014b"+
    "\32\0\1\u014c\2\7\1\u014d\14\7\1\u014e\5\7\3\0"+
    "\3\7\2\0\5\7\32\0\21\7\1\u014f\4\7\3\0"+
    "\3\7\2\0\3\7\1\u0150\1\u0151\32\0\26\7\3\0"+
    "\3\7\2\0\4\7\1\u0152\32\0\26\7\3\0\3\7"+
    "\2\0\5\7\32\0\2\7\1\u0153\23\7\3\0\3\7"+
    "\2\0\5\7\32\0\1\7\1\u0154\24\7\3\0\3\7"+
    "\2\0\5\7\32\0\2\7\1\u0155\23\7\3\0\3\7"+
    "\2\0\1\u0156\4\7\32\0\2\7\1\u0157\23\7\3\0"+
    "\3\7\2\0\1\u0158\4\7\32\0\26\7\3\0\3\7"+
    "\2\0\5\7\32\0\22\7\1\u0159\3\7\3\0\3\7"+
    "\2\0\2\7\1\u015a\2\7\32\0\1\7\1\u015b\1\u015c"+
    "\2\7\1\u015d\1\u015e\2\7\1\u015f\3\7\1\u0160\10\7"+
    "\3\0\3\7\2\0\1\u0161\4\7\32\0\26\7\3\0"+
    "\3\7\2\0\5\7\32\0\10\7\1\u0162\15\7\3\0"+
    "\3\7\2\0\5\7\32\0\20\7\1\u0163\5\7\3\0"+
    "\3\7\2\0\2\7\1\u0164\2\7\32\0\26\7\3\0"+
    "\3\7\2\0\5\7\32\0\2\7\1\u0165\13\7\1\u0166"+
    "\7\7\3\0\3\7\2\0\4\7\1\u0167\32\0\26\7"+
    "\3\0\3\7\2\0\5\7\32\0\6\7\1\u0168\17\7"+
    "\3\0\3\7\2\0\1\u0169\4\7\32\0\10\7\1\u016a"+
    "\15\7\3\0\3\7\2\0\5\7\32\0\2\7\1\u016b"+
    "\23\7\3\0\3\7\2\0\5\7\32\0\2\7\1\u016c"+
    "\23\7\3\0\3\7\2\0\5\7\32\0\4\7\1\u016d"+
    "\21\7\3\0\3\7\2\0\4\7\1\u016e\32\0\26\7"+
    "\3\0\3\7\2\0\5\7\32\0\3\7\1\u016f\22\7"+
    "\3\0\3\7\2\0\5\7\32\0\13\7\1\u0170\12\7"+
    "\3\0\3\7\2\0\5\7\32\0\1\u0171\25\7\3\0"+
    "\3\7\2\0\5\7\32\0\1\7\1\u0172\1\7\1\u0173"+
    "\1\7\1\u0174\20\7\3\0\3\7\2\0\1\u0175\4\7"+
    "\32\0\10\7\1\u0176\1\u0177\14\7\3\0\3\7\2\0"+
    "\5\7\32\0\5\7\1\u0178\20\7\3\0\3\7\2\0"+
    "\5\7\32\0\21\7\1\u0179\4\7\3\0\3\7\2\0"+
    "\5\7\32\0\2\7\1\u017a\23\7\3\0\3\7\2\0"+
    "\5\7\32\0\10\7\1\u017b\15\7\3\0\3\7\2\0"+
    "\5\7\32\0\1\u017c\7\7\1\u017d\15\7\3\0\3\7"+
    "\2\0\5\7\32\0\2\7\1\u017e\23\7\3\0\3\7"+
    "\2\0\5\7\32\0\11\7\1\u017f\14\7\3\0\3\7"+
    "\2\0\5\7\32\0\11\7\1\u0180\14\7\3\0\3\7"+
    "\2\0\1\u0181\4\7\32\0\11\7\1\u0182\14\7\3\0"+
    "\3\7\2\0\5\7\32\0\3\7\1\u0183\22\7\3\0"+
    "\3\7\2\0\5\7\32\0\2\7\1\u0184\23\7\3\0"+
    "\3\7\2\0\5\7\32\0\3\7\1\u0185\22\7\3\0"+
    "\3\7\2\0\5\7\32\0\2\7\1\u0186\20\7\1\u0187"+
    "\2\7\3\0\3\7\2\0\2\7\1\u0188\2\7\32\0"+
    "\1\7\1\u0189\24\7\3\0\3\7\2\0\2\7\1\u018a"+
    "\2\7\32\0\26\7\3\0\3\7\2\0\5\7\32\0"+
    "\3\7\1\u018b\22\7\3\0\3\7\2\0\4\7\1\u018c"+
    "\32\0\3\7\1\u018d\22\7\3\0\3\7\2\0\1\u018e"+
    "\4\7\32\0\26\7\3\0\3\7\2\0\5\7\32\0"+
    "\2\7\1\u018f\23\7\3\0\3\7\2\0\2\7\1\u0190"+
    "\1\7\1\u0191\32\0\26\7\3\0\3\7\2\0\5\7"+
    "\32\0\10\7\1\u0192\15\7\3\0\3\7\2\0\4\7"+
    "\1\u0193\32\0\26\7\3\0\3\7\2\0\1\u0194\4\7"+
    "\32\0\10\7\1\u0195\15\7\3\0\3\7\2\0\3\7"+
    "\1\u0196\1\7\32\0\3\7\1\u0197\22\7\3\0\3\7"+
    "\2\0\4\7\1\u0198\32\0\3\7\1\u0199\22\7\3\0"+
    "\3\7\2\0\5\7\32\0\11\7\1\u019a\14\7\1\0"+
    "\2\u019b\1\u019c\2\0\1\u019c\70\0\1\u019d\3\7\2\0"+
    "\5\7\32\0\26\7\3\0\3\7\2\0\1\u019e\4\7"+
    "\32\0\26\7\3\0\3\7\2\0\4\7\1\u019f\32\0"+
    "\26\7\3\0\3\7\2\0\5\7\32\0\1\u01a0\25\7"+
    "\3\0\3\7\2\0\5\7\32\0\6\7\1\u01a1\17\7"+
    "\3\0\3\7\2\0\1\u01a2\4\7\32\0\3\7\1\u01a3"+
    "\22\7\3\0\3\7\2\0\1\u01a4\4\7\32\0\26\7"+
    "\3\0\3\7\2\0\5\7\32\0\2\7\1\u01a5\2\7"+
    "\1\u01a6\20\7\3\0\3\7\2\0\5\7\32\0\2\7"+
    "\1\u01a7\23\7\3\0\3\7\2\0\4\7\1\u01a8\32\0"+
    "\26\7\3\0\3\7\2\0\1\u01a9\4\7\32\0\26\7"+
    "\3\0\3\7\2\0\3\7\1\u01aa\1\7\32\0\11\7"+
    "\1\u01ab\14\7\3\0\3\7\2\0\1\u01ac\4\7\32\0"+
    "\26\7\3\0\3\7\2\0\5\7\32\0\1\u01ad\25\7"+
    "\3\0\3\7\2\0\1\u01ae\4\7\32\0\26\7\3\0"+
    "\3\7\2\0\4\7\1\u01af\32\0\7\7\1\u01b0\16\7"+
    "\3\0\3\7\2\0\5\7\32\0\10\7\1\u01b1\14\7"+
    "\1\u01b2\3\0\3\7\2\0\2\7\1\u01b3\2\7\32\0"+
    "\26\7\3\0\3\7\2\0\5\7\32\0\11\7\1\u01b4"+
    "\14\7\3\0\3\7\2\0\5\7\32\0\3\7\1\u01b5"+
    "\22\7\3\0\3\7\2\0\5\7\32\0\16\7\1\u01b6"+
    "\7\7\3\0\3\7\2\0\2\7\1\u01b7\2\7\32\0"+
    "\26\7\3\0\3\7\2\0\5\7\32\0\1\u01b8\25\7"+
    "\3\0\3\7\2\0\1\u01b9\4\7\32\0\26\7\3\0"+
    "\3\7\2\0\5\7\32\0\1\7\1\u01ba\24\7\3\0"+
    "\3\7\2\0\1\u01bb\4\7\32\0\26\7\3\0\3\7"+
    "\2\0\5\7\32\0\2\7\1\u01bc\23\7\3\0\3\7"+
    "\2\0\5\7\32\0\16\7\1\u01bd\7\7\3\0\3\7"+
    "\2\0\5\7\32\0\2\7\1\u01be\23\7\3\0\3\7"+
    "\2\0\5\7\32\0\1\7\1\u01bf\24\7\3\0\3\7"+
    "\2\0\5\7\32\0\1\u01c0\25\7\3\0\3\7\2\0"+
    "\1\u01c1\4\7\32\0\26\7\3\0\3\7\2\0\1\u01c2"+
    "\4\7\32\0\26\7\3\0\3\7\2\0\1\u01c3\4\7"+
    "\32\0\26\7\3\0\3\7\2\0\5\7\32\0\7\7"+
    "\1\u01c4\16\7\3\0\3\7\2\0\5\7\32\0\10\7"+
    "\1\u01c5\15\7\3\0\3\7\2\0\1\u01c6\4\7\32\0"+
    "\26\7\3\0\3\7\2\0\1\u01c7\4\7\32\0\26\7"+
    "\3\0\3\7\2\0\5\7\32\0\11\7\1\u01c8\14\7"+
    "\3\0\3\7\2\0\5\7\32\0\10\7\1\u01c9\15\7"+
    "\3\0\3\7\2\0\5\7\32\0\4\7\1\u01ca\21\7"+
    "\3\0\3\7\2\0\1\u01cb\4\7\32\0\26\7\3\0"+
    "\3\7\2\0\4\7\1\u01cc\32\0\26\7\3\0\3\7"+
    "\2\0\5\7\32\0\6\7\1\u01cd\17\7\3\0\3\7"+
    "\2\0\4\7\1\u01ce\32\0\11\7\1\u01cf\14\7\3\0"+
    "\3\7\2\0\1\u01d0\4\7\32\0\1\u01d1\25\7\3\0"+
    "\3\7\2\0\5\7\32\0\15\7\1\u01d2\10\7\3\0"+
    "\3\7\2\0\1\u01d3\4\7\32\0\1\u01d4\25\7\3\0"+
    "\3\7\2\0\5\7\32\0\15\7\1\u01d5\10\7\3\0"+
    "\3\7\2\0\5\7\32\0\13\7\1\u01d6\12\7\3\0"+
    "\3\7\2\0\5\7\32\0\1\u01d7\25\7\3\0\3\7"+
    "\2\0\5\7\32\0\16\7\1\u01d8\7\7\3\0\3\7"+
    "\2\0\5\7\32\0\2\7\1\u01d9\3\7\1\u01da\5\7"+
    "\1\u01db\11\7\3\0\3\7\2\0\5\7\32\0\6\7"+
    "\1\u01dc\17\7\3\0\3\7\2\0\5\7\32\0\15\7"+
    "\1\u01dd\10\7\3\0\3\7\2\0\5\7\32\0\2\7"+
    "\1\u01de\23\7\3\0\3\7\2\0\4\7\1\u01df\32\0"+
    "\26\7\3\0\3\7\2\0\2\7\1\u01e0\2\7\32\0"+
    "\26\7\3\0\3\7\2\0\2\7\1\u01e1\2\7\32\0"+
    "\11\7\1\u01e2\14\7\3\0\2\7\1\u01e3\2\0\5\7"+
    "\32\0\26\7\3\0\3\7\2\0\5\7\32\0\16\7"+
    "\1\u01e4\1\7\1\u01e5\5\7\3\0\3\7\2\0\5\7"+
    "\32\0\25\7\1\u01e6\3\0\3\7\2\0\2\7\1\u01e7"+
    "\2\7\32\0\26\7\3\0\3\7\2\0\1\u01e8\4\7"+
    "\32\0\26\7\3\0\3\7\2\0\5\7\32\0\1\u01e9"+
    "\25\7\3\0\3\7\2\0\4\7\1\u01ea\32\0\1\7"+
    "\1\u01eb\24\7\3\0\3\7\2\0\3\7\1\u01ec\1\7"+
    "\32\0\26\7\3\0\3\7\2\0\5\7\32\0\2\7"+
    "\1\u01ed\23\7\3\0\3\7\2\0\5\7\32\0\10\7"+
    "\1\u01ee\15\7\3\0\3\7\2\0\4\7\1\u01ef\32\0"+
    "\26\7\3\0\3\7\2\0\1\u01f0\4\7\32\0\10\7"+
    "\1\u01f1\15\7\3\0\3\7\2\0\1\u01f2\4\7\32\0"+
    "\26\7\3\0\3\7\2\0\1\u01f3\4\7\32\0\26\7"+
    "\3\0\3\7\2\0\5\7\32\0\5\7\1\u01f4\20\7"+
    "\3\0\3\7\2\0\4\7\1\u01f5\32\0\26\7\3\0"+
    "\3\7\2\0\5\7\32\0\5\7\1\u01f6\1\u01f7\7\7"+
    "\1\u01f8\7\7\3\0\3\7\2\0\5\7\32\0\7\7"+
    "\1\u01f9\16\7\3\0\3\7\2\0\5\7\32\0\3\7"+
    "\1\u01fa\22\7\3\0\3\7\2\0\1\u01fb\4\7\32\0"+
    "\26\7\3\0\3\7\2\0\3\7\1\u01fc\1\7\32\0"+
    "\26\7\3\0\3\7\2\0\5\7\32\0\5\7\1\u01fd"+
    "\20\7\3\0\3\7\2\0\3\7\1\u01fe\1\7\32\0"+
    "\2\7\1\u01ff\5\7\1\u0200\15\7\3\0\3\7\2\0"+
    "\5\7\32\0\1\u0201\25\7\3\0\3\7\2\0\5\7"+
    "\32\0\5\7\1\u0202\20\7\3\0\3\7\2\0\1\u0203"+
    "\4\7\32\0\26\7\3\0\3\7\2\0\5\7\32\0"+
    "\2\7\1\u0204\23\7\3\0\3\7\2\0\5\7\32\0"+
    "\2\7\1\u0205\23\7\3\0\3\7\2\0\5\7\32\0"+
    "\10\7\1\u0206\15\7\3\0\3\7\2\0\1\u0207\4\7"+
    "\32\0\26\7\3\0\3\7\2\0\5\7\32\0\2\7"+
    "\1\u0208\23\7\3\0\3\7\2\0\1\u0209\4\7\32\0"+
    "\26\7\3\0\3\7\2\0\1\u020a\4\7\32\0\26\7"+
    "\3\0\3\7\2\0\5\7\32\0\6\7\1\u020b\17\7"+
    "\3\0\3\7\2\0\4\7\1\u020c\32\0\26\7\3\0"+
    "\3\7\2\0\1\u020d\4\7\32\0\5\7\1\u020e\1\u020f"+
    "\10\7\1\u0210\6\7\3\0\3\7\2\0\5\7\32\0"+
    "\3\7\1\u0211\1\7\1\u0212\20\7\3\0\3\7\2\0"+
    "\5\7\32\0\5\7\1\u0213\20\7\3\0\3\7\2\0"+
    "\5\7\32\0\5\7\1\u0214\20\7\3\0\3\7\2\0"+
    "\5\7\32\0\1\u0215\25\7\3\0\3\7\2\0\1\u0216"+
    "\4\7\32\0\2\7\1\u0217\3\7\1\u0218\17\7\3\0"+
    "\3\7\2\0\5\7\32\0\1\u0219\25\7\3\0\3\7"+
    "\2\0\5\7\32\0\5\7\1\u021a\20\7\3\0\3\7"+
    "\2\0\5\7\32\0\6\7\1\u021b\17\7\3\0\3\7"+
    "\2\0\5\7\32\0\3\7\1\u021c\22\7\3\0\3\7"+
    "\2\0\2\7\1\u021d\2\7\32\0\2\7\1\u021e\2\7"+
    "\1\u021f\13\7\1\u0220\4\7\3\0\3\7\2\0\2\7"+
    "\1\u0221\2\7\32\0\26\7\3\0\3\7\2\0\3\7"+
    "\1\u0222\1\u0223\32\0\26\7\3\0\3\7\2\0\4\7"+
    "\1\u0224\32\0\26\7\3\0\3\7\2\0\5\7\32\0"+
    "\3\7\1\u0225\22\7\3\0\3\7\2\0\5\7\32\0"+
    "\15\7\1\u0226\2\7\1\u0227\5\7\3\0\3\7\2\0"+
    "\5\7\32\0\11\7\1\u0228\14\7\3\0\3\7\2\0"+
    "\5\7\32\0\3\7\1\u0229\22\7\3\0\3\7\2\0"+
    "\5\7\32\0\1\7\1\u022a\24\7\3\0\3\7\2\0"+
    "\5\7\32\0\4\7\1\u022b\21\7\3\0\3\7\2\0"+
    "\1\u022c\4\7\32\0\15\7\1\u022d\10\7\3\0\3\7"+
    "\2\0\1\u022e\4\7\32\0\26\7\3\0\3\7\2\0"+
    "\1\u022f\4\7\32\0\26\7\3\0\3\7\2\0\2\7"+
    "\1\u0230\2\7\32\0\26\7\3\0\3\7\2\0\5\7"+
    "\32\0\11\7\1\u0231\14\7\3\0\3\7\2\0\5\7"+
    "\32\0\3\7\1\u0232\22\7\3\0\3\7\2\0\5\7"+
    "\32\0\5\7\1\u0233\20\7\3\0\3\7\2\0\1\u0234"+
    "\4\7\32\0\26\7\3\0\3\7\2\0\1\u0235\4\7"+
    "\32\0\11\7\1\u0236\14\7\3\0\3\7\2\0\1\u0237"+
    "\4\7\32\0\10\7\1\u0238\15\7\3\0\3\7\2\0"+
    "\1\u0239\4\7\32\0\26\7\3\0\3\7\2\0\4\7"+
    "\1\u023a\32\0\26\7\3\0\3\7\2\0\5\7\32\0"+
    "\2\7\1\u023b\23\7\3\0\3\7\2\0\3\7\1\u023c"+
    "\1\7\32\0\26\7\3\0\3\7\2\0\2\7\1\u023d"+
    "\2\7\32\0\26\7\3\0\3\7\2\0\4\7\1\u023e"+
    "\32\0\26\7\3\0\3\7\2\0\1\u023f\4\7\32\0"+
    "\26\7\3\0\3\7\2\0\1\u0240\4\7\32\0\26\7"+
    "\3\0\3\7\2\0\5\7\32\0\17\7\1\u0241\6\7"+
    "\3\0\3\7\2\0\5\7\32\0\11\7\1\u0242\14\7"+
    "\3\0\3\7\2\0\5\7\32\0\14\7\1\u0243\11\7"+
    "\3\0\3\7\2\0\5\7\32\0\14\7\1\u0244\11\7"+
    "\3\0\3\7\2\0\5\7\32\0\1\u0245\25\7\3\0"+
    "\3\7\2\0\5\7\32\0\17\7\1\u0246\6\7\3\0"+
    "\3\7\2\0\5\7\32\0\7\7\1\u0247\16\7\3\0"+
    "\2\7\1\u0248\2\0\5\7\32\0\26\7\3\0\3\7"+
    "\2\0\4\7\1\u0249\32\0\26\7\3\0\3\7\2\0"+
    "\5\7\32\0\6\7\1\u024a\17\7\3\0\3\7\2\0"+
    "\4\7\1\u024b\32\0\26\7\3\0\3\7\2\0\2\7"+
    "\1\u024c\2\7\32\0\26\7\3\0\3\7\2\0\5\7"+
    "\32\0\2\7\1\u024d\23\7\3\0\3\7\2\0\5\7"+
    "\32\0\6\7\1\u024e\17\7\3\0\3\7\2\0\5\7"+
    "\32\0\5\7\1\u024f\1\u0250\6\7\1\u0251\10\7\3\0"+
    "\3\7\2\0\5\7\32\0\6\7\1\u0252\17\7\3\0"+
    "\3\7\2\0\2\7\1\u0253\2\7\32\0\10\7\1\u0254"+
    "\7\7\1\u0255\1\u0256\4\7\3\0\3\7\2\0\5\7"+
    "\32\0\11\7\1\u0257\14\7\3\0\3\7\2\0\5\7"+
    "\32\0\10\7\1\u0258\15\7\3\0\3\7\2\0\5\7"+
    "\32\0\13\7\1\u0259\12\7\3\0\3\7\2\0\2\7"+
    "\1\u025a\2\7\32\0\26\7\3\0\3\7\2\0\3\7"+
    "\1\u025b\1\7\32\0\26\7\3\0\3\7\2\0\5\7"+
    "\32\0\10\7\1\u025c\15\7\3\0\3\7\2\0\5\7"+
    "\32\0\2\7\1\u025d\23\7\3\0\3\7\2\0\5\7"+
    "\32\0\2\7\1\u025e\23\7\3\0\3\7\2\0\2\7"+
    "\1\u025f\2\7\32\0\3\7\1\u0260\22\7\3\0\3\7"+
    "\2\0\4\7\1\u0261\32\0\26\7\3\0\3\7\2\0"+
    "\5\7\32\0\14\7\1\u0262\11\7\3\0\3\7\2\0"+
    "\5\7\32\0\7\7\1\u0263\16\7\3\0\3\7\2\0"+
    "\5\7\32\0\16\7\1\u0264\7\7\3\0\3\7\2\0"+
    "\5\7\32\0\6\7\1\u0265\17\7\3\0\3\7\2\0"+
    "\5\7\32\0\2\7\1\u0266\23\7\3\0\3\7\2\0"+
    "\3\7\1\u0267\1\7\32\0\26\7\3\0\3\7\2\0"+
    "\3\7\1\u0268\1\7\32\0\26\7\3\0\3\7\2\0"+
    "\5\7\32\0\1\7\1\u0269\24\7\3\0\3\7\2\0"+
    "\3\7\1\u026a\1\7\32\0\26\7\3\0\3\7\2\0"+
    "\5\7\32\0\4\7\1\u026b\1\7\1\u026c\17\7\3\0"+
    "\3\7\2\0\5\7\32\0\17\7\1\u026d\6\7\3\0"+
    "\3\7\2\0\5\7\32\0\6\7\1\u026e\17\7\3\0"+
    "\3\7\2\0\5\7\32\0\6\7\1\u026f\17\7\3\0"+
    "\3\7\2\0\4\7\1\u0270\32\0\26\7\3\0\3\7"+
    "\2\0\5\7\32\0\1\u0271\25\7\3\0\3\7\2\0"+
    "\5\7\32\0\5\7\1\u0272\20\7\3\0\3\7\2\0"+
    "\1\u0273\4\7\32\0\26\7\3\0\3\7\2\0\5\7"+
    "\32\0\20\7\1\u0274\5\7\3\0\3\7\2\0\2\7"+
    "\1\u0275\2\7\32\0\26\7\3\0\3\7\2\0\1\u0276"+
    "\4\7\32\0\2\7\1\u0277\23\7\3\0\3\7\2\0"+
    "\1\u0278\3\7\1\u0279\32\0\26\7\3\0\3\7\2\0"+
    "\5\7\32\0\5\7\1\u027a\20\7\3\0\3\7\2\0"+
    "\2\7\1\u027b\2\7\32\0\26\7\3\0\1\u019c\2\0"+
    "\1\u019c\71\0\1\u019c\2\0\1\u019c\1\u027c\75\0\1\u027d"+
    "\67\0\3\7\2\0\5\7\32\0\21\7\1\u027e\4\7"+
    "\3\0\3\7\2\0\5\7\32\0\15\7\1\u027f\10\7"+
    "\3\0\3\7\2\0\3\7\1\u0280\1\7\32\0\26\7"+
    "\3\0\3\7\2\0\5\7\32\0\3\7\1\u0281\22\7"+
    "\3\0\3\7\2\0\5\7\32\0\1\u0282\25\7\3\0"+
    "\3\7\2\0\5\7\32\0\15\7\1\u0283\10\7\3\0"+
    "\3\7\2\0\5\7\32\0\2\7\1\u0284\23\7\3\0"+
    "\3\7\2\0\5\7\32\0\11\7\1\u0285\14\7\3\0"+
    "\3\7\2\0\5\7\32\0\3\7\1\u0286\22\7\3\0"+
    "\3\7\2\0\5\7\32\0\3\7\1\u0287\22\7\3\0"+
    "\3\7\2\0\5\7\32\0\10\7\1\u0288\15\7\3\0"+
    "\3\7\2\0\5\7\32\0\5\7\1\u0289\20\7\3\0"+
    "\3\7\2\0\5\7\32\0\3\7\1\u028a\22\7\3\0"+
    "\3\7\2\0\3\7\1\u028b\1\7\32\0\26\7\3\0"+
    "\3\7\2\0\1\u028c\4\7\32\0\26\7\3\0\3\7"+
    "\2\0\2\7\1\u028d\2\7\32\0\26\7\3\0\3\7"+
    "\2\0\3\7\1\u028e\1\7\32\0\26\7\3\0\3\7"+
    "\2\0\5\7\32\0\10\7\1\u028f\15\7\3\0\3\7"+
    "\2\0\5\7\32\0\21\7\1\u0290\4\7\3\0\3\7"+
    "\2\0\1\u0291\4\7\32\0\26\7\3\0\3\7\2\0"+
    "\5\7\32\0\16\7\1\u0292\7\7\3\0\3\7\2\0"+
    "\5\7\32\0\2\7\1\u0293\23\7\3\0\3\7\2\0"+
    "\5\7\32\0\3\7\1\u0294\22\7\3\0\3\7\2\0"+
    "\5\7\32\0\11\7\1\u0295\14\7\3\0\3\7\2\0"+
    "\4\7\1\u0296\32\0\26\7\3\0\3\7\2\0\3\7"+
    "\1\u0297\1\7\32\0\26\7\3\0\3\7\2\0\4\7"+
    "\1\u0298\32\0\26\7\3\0\3\7\2\0\5\7\32\0"+
    "\3\7\1\u0299\22\7\3\0\3\7\2\0\2\7\1\u029a"+
    "\2\7\32\0\26\7\3\0\3\7\2\0\5\7\32\0"+
    "\10\7\1\u029b\15\7\3\0\3\7\2\0\5\7\32\0"+
    "\6\7\1\u029c\17\7\3\0\3\7\2\0\5\7\32\0"+
    "\3\7\1\u029d\22\7\3\0\3\7\2\0\5\7\32\0"+
    "\3\7\1\u029e\22\7\3\0\3\7\2\0\5\7\32\0"+
    "\10\7\1\u029f\15\7\3\0\3\7\2\0\4\7\1\u02a0"+
    "\32\0\26\7\3\0\3\7\2\0\5\7\32\0\2\7"+
    "\1\u02a1\23\7\3\0\3\7\2\0\4\7\1\u02a2\32\0"+
    "\26\7\3\0\3\7\2\0\5\7\32\0\3\7\1\u02a3"+
    "\22\7\3\0\3\7\2\0\5\7\32\0\1\u02a4\25\7"+
    "\3\0\3\7\2\0\5\7\32\0\20\7\1\u02a5\5\7"+
    "\3\0\3\7\2\0\5\7\32\0\3\7\1\u02a6\22\7"+
    "\3\0\3\7\2\0\3\7\1\u02a7\1\7\32\0\26\7"+
    "\3\0\3\7\2\0\5\7\32\0\13\7\1\u02a8\12\7"+
    "\3\0\3\7\2\0\4\7\1\u02a9\32\0\26\7\3\0"+
    "\3\7\2\0\5\7\32\0\11\7\1\u02aa\14\7\3\0"+
    "\3\7\2\0\2\7\1\u02ab\2\7\32\0\26\7\3\0"+
    "\3\7\2\0\5\7\32\0\3\7\1\u02ac\5\7\1\u02ad"+
    "\14\7\3\0\3\7\2\0\5\7\32\0\10\7\1\u02ae"+
    "\15\7\3\0\3\7\2\0\5\7\32\0\10\7\1\u02af"+
    "\15\7\3\0\3\7\2\0\5\7\32\0\5\7\1\u02b0"+
    "\20\7\3\0\3\7\2\0\1\u02b1\4\7\32\0\26\7"+
    "\3\0\3\7\2\0\5\7\32\0\6\7\1\u02b2\17\7"+
    "\3\0\3\7\2\0\5\7\32\0\5\7\1\u02b3\20\7"+
    "\3\0\3\7\2\0\4\7\1\u02b4\32\0\26\7\3\0"+
    "\3\7\2\0\5\7\32\0\6\7\1\u02b5\17\7\3\0"+
    "\3\7\2\0\5\7\32\0\16\7\1\u02b6\7\7\3\0"+
    "\3\7\2\0\3\7\1\u02b7\1\7\32\0\26\7\3\0"+
    "\3\7\2\0\5\7\32\0\5\7\1\u02b8\4\7\1\u02b9"+
    "\13\7\3\0\3\7\2\0\5\7\32\0\2\7\1\u02ba"+
    "\23\7\3\0\3\7\2\0\5\7\32\0\2\7\1\u02bb"+
    "\23\7\3\0\3\7\2\0\5\7\32\0\3\7\1\u02bc"+
    "\22\7\3\0\3\7\2\0\5\7\32\0\3\7\1\u02bd"+
    "\4\7\1\u02be\15\7\3\0\3\7\2\0\2\7\1\u02bf"+
    "\2\7\32\0\26\7\3\0\3\7\2\0\5\7\32\0"+
    "\11\7\1\u02c0\14\7\3\0\3\7\2\0\5\7\32\0"+
    "\3\7\1\u02c1\22\7\3\0\3\7\2\0\5\7\32\0"+
    "\14\7\1\u02c2\11\7\3\0\3\7\2\0\5\7\32\0"+
    "\3\7\1\u02c3\22\7\3\0\3\7\2\0\1\u02c4\4\7"+
    "\32\0\26\7\3\0\3\7\2\0\5\7\32\0\13\7"+
    "\1\u02c5\12\7\3\0\3\7\2\0\5\7\32\0\10\7"+
    "\1\u02c6\15\7\3\0\3\7\2\0\3\7\1\u02c7\1\7"+
    "\32\0\26\7\3\0\3\7\2\0\5\7\32\0\2\7"+
    "\1\u02c8\23\7\3\0\3\7\2\0\5\7\32\0\6\7"+
    "\1\u02c9\17\7\3\0\3\7\2\0\5\7\32\0\5\7"+
    "\1\u02ca\20\7\3\0\3\7\2\0\5\7\32\0\11\7"+
    "\1\u02cb\14\7\3\0\3\7\2\0\5\7\32\0\3\7"+
    "\1\u02cc\22\7\3\0\3\7\2\0\5\7\32\0\11\7"+
    "\1\u02cd\14\7\3\0\3\7\2\0\2\7\1\u02ce\2\7"+
    "\32\0\26\7\3\0\3\7\2\0\2\7\1\u02cf\2\7"+
    "\32\0\26\7\3\0\3\7\2\0\5\7\32\0\2\7"+
    "\1\u02d0\23\7\3\0\3\7\2\0\5\7\32\0\11\7"+
    "\1\u02d1\14\7\3\0\3\7\2\0\1\u02d2\4\7\32\0"+
    "\26\7\3\0\3\7\2\0\4\7\1\u02d3\32\0\26\7"+
    "\3\0\3\7\2\0\5\7\32\0\20\7\1\u02d4\5\7"+
    "\3\0\3\7\2\0\5\7\32\0\1\7\1\u02d5\24\7"+
    "\3\0\3\7\2\0\1\u02d6\4\7\32\0\26\7\3\0"+
    "\3\7\2\0\4\7\1\u02d7\32\0\26\7\3\0\3\7"+
    "\2\0\5\7\32\0\3\7\1\u02d8\22\7\3\0\3\7"+
    "\2\0\5\7\32\0\2\7\1\u02d9\23\7\3\0\3\7"+
    "\2\0\5\7\32\0\1\u02da\7\7\1\u02db\15\7\3\0"+
    "\3\7\2\0\5\7\32\0\1\u02dc\25\7\3\0\3\7"+
    "\2\0\1\u02dd\4\7\32\0\26\7\3\0\3\7\2\0"+
    "\5\7\32\0\10\7\1\u02de\15\7\3\0\3\7\2\0"+
    "\5\7\32\0\2\7\1\u02df\23\7\3\0\3\7\2\0"+
    "\1\u02e0\4\7\32\0\26\7\3\0\3\7\2\0\4\7"+
    "\1\u02e1\32\0\26\7\3\0\3\7\2\0\5\7\32\0"+
    "\1\u02e2\25\7\3\0\3\7\2\0\5\7\32\0\2\7"+
    "\1\u02e3\23\7\3\0\3\7\2\0\5\7\32\0\5\7"+
    "\1\u02e4\20\7\3\0\3\7\2\0\5\7\32\0\14\7"+
    "\1\u02e5\11\7\3\0\2\7\1\u02e6\2\0\5\7\32\0"+
    "\1\u02e7\25\7\3\0\3\7\2\0\1\u02e8\4\7\32\0"+
    "\26\7\3\0\3\7\2\0\5\7\32\0\1\u02e9\10\7"+
    "\1\u02ea\14\7\3\0\3\7\2\0\5\7\32\0\2\7"+
    "\1\u02eb\23\7\3\0\3\7\2\0\1\u02ec\4\7\32\0"+
    "\26\7\3\0\3\7\2\0\5\7\32\0\2\7\1\u02ed"+
    "\23\7\3\0\3\7\2\0\5\7\32\0\20\7\1\u02ee"+
    "\5\7\3\0\3\7\2\0\5\7\32\0\1\u02ef\25\7"+
    "\3\0\3\7\2\0\1\u02f0\4\7\32\0\26\7\3\0"+
    "\3\7\2\0\1\u02f1\4\7\32\0\26\7\3\0\3\7"+
    "\2\0\3\7\1\u02f2\1\7\32\0\26\7\3\0\3\7"+
    "\2\0\5\7\32\0\11\7\1\u02f3\14\7\3\0\3\7"+
    "\2\0\2\7\1\u02f4\2\7\32\0\26\7\3\0\3\7"+
    "\2\0\4\7\1\u02f5\32\0\26\7\3\0\3\7\2\0"+
    "\5\7\32\0\3\7\1\u02f6\22\7\3\0\3\7\2\0"+
    "\3\7\1\u02f7\1\7\32\0\26\7\3\0\3\7\2\0"+
    "\5\7\32\0\3\7\1\u02f8\22\7\3\0\3\7\2\0"+
    "\5\7\32\0\2\7\1\u02f9\23\7\3\0\3\7\2\0"+
    "\5\7\32\0\1\7\1\u02fa\21\7\1\u02fb\1\7\1\u02fc"+
    "\3\0\3\7\2\0\5\7\32\0\10\7\1\u02fd\15\7"+
    "\3\0\3\7\2\0\4\7\1\u02fe\32\0\26\7\3\0"+
    "\3\7\2\0\1\u02ff\4\7\32\0\26\7\3\0\3\7"+
    "\2\0\5\7\32\0\3\7\1\u0300\22\7\3\0\3\7"+
    "\2\0\5\7\32\0\23\7\1\u0301\2\7\3\0\3\7"+
    "\2\0\5\7\32\0\6\7\1\u0302\17\7\3\0\3\7"+
    "\2\0\5\7\32\0\3\7\1\u0303\12\7\1\u0304\7\7"+
    "\3\0\3\7\2\0\2\7\1\u0305\2\7\32\0\3\7"+
    "\1\u0306\22\7\3\0\3\7\2\0\3\7\1\u0307\1\7"+
    "\32\0\26\7\3\0\3\7\2\0\5\7\32\0\11\7"+
    "\1\u0308\14\7\3\0\3\7\2\0\5\7\32\0\2\7"+
    "\1\u0309\23\7\3\0\3\7\2\0\5\7\32\0\2\7"+
    "\1\u030a\23\7\3\0\3\7\2\0\5\7\32\0\1\u030b"+
    "\25\7\3\0\3\7\2\0\5\7\32\0\1\7\1\u030c"+
    "\24\7\3\0\3\7\2\0\1\u030d\4\7\32\0\26\7"+
    "\3\0\3\7\2\0\2\7\1\u030e\2\7\32\0\26\7"+
    "\3\0\3\7\2\0\3\7\1\u030f\1\7\32\0\26\7"+
    "\3\0\3\7\2\0\5\7\32\0\14\7\1\u0310\11\7"+
    "\3\0\3\7\2\0\5\7\32\0\5\7\1\u0311\20\7"+
    "\3\0\3\7\2\0\4\7\1\u0312\32\0\26\7\3\0"+
    "\3\7\2\0\1\u0313\4\7\32\0\26\7\3\0\3\7"+
    "\2\0\5\7\32\0\11\7\1\u0314\14\7\3\0\3\7"+
    "\2\0\5\7\32\0\11\7\1\u0315\14\7\3\0\3\7"+
    "\2\0\5\7\32\0\1\u0316\25\7\3\0\3\7\2\0"+
    "\1\u0317\4\7\32\0\26\7\3\0\3\7\2\0\5\7"+
    "\32\0\11\7\1\u0318\14\7\3\0\3\7\2\0\5\7"+
    "\32\0\1\u0319\25\7\3\0\3\7\2\0\1\u031a\4\7"+
    "\32\0\26\7\3\0\3\7\2\0\5\7\32\0\2\7"+
    "\1\u031b\23\7\3\0\3\7\2\0\5\7\32\0\3\7"+
    "\1\u031c\22\7\3\0\3\7\2\0\5\7\32\0\1\u031d"+
    "\25\7\3\0\3\7\2\0\5\7\32\0\11\7\1\u031e"+
    "\14\7\3\0\3\7\2\0\5\7\32\0\2\7\1\u031f"+
    "\23\7\3\0\3\7\2\0\5\7\32\0\2\7\1\u0320"+
    "\23\7\3\0\3\7\2\0\5\7\32\0\1\u0321\25\7"+
    "\3\0\3\7\2\0\5\7\32\0\2\7\1\u0322\23\7"+
    "\3\0\3\7\2\0\5\7\32\0\15\7\1\u0323\10\7"+
    "\3\0\3\7\2\0\5\7\32\0\22\7\1\u0324\3\7"+
    "\3\0\3\7\2\0\1\u0325\4\7\32\0\26\7\3\0"+
    "\3\7\2\0\1\u0326\4\7\32\0\26\7\3\0\3\7"+
    "\2\0\1\u0327\4\7\32\0\26\7\3\0\3\7\2\0"+
    "\1\u0328\4\7\32\0\26\7\3\0\3\7\2\0\5\7"+
    "\32\0\11\7\1\u0329\14\7\3\0\3\7\2\0\1\u032a"+
    "\4\7\32\0\26\7\3\0\3\7\2\0\5\7\32\0"+
    "\7\7\1\u032b\16\7\3\0\3\7\2\0\5\7\32\0"+
    "\7\7\1\u032c\16\7\3\0\3\7\2\0\4\7\1\u032d"+
    "\32\0\26\7\3\0\3\7\2\0\5\7\32\0\2\7"+
    "\1\u032e\23\7\3\0\3\7\2\0\5\7\32\0\1\u032f"+
    "\25\7\3\0\3\7\2\0\1\u0330\4\7\32\0\26\7"+
    "\3\0\3\7\2\0\5\7\32\0\11\7\1\u0331\14\7"+
    "\3\0\3\7\2\0\5\7\32\0\7\7\1\u0332\16\7"+
    "\3\0\3\7\2\0\5\7\32\0\7\7\1\u0333\16\7"+
    "\3\0\3\7\2\0\5\7\32\0\2\7\1\u0334\23\7"+
    "\3\0\3\7\2\0\5\7\32\0\2\7\1\u0335\23\7"+
    "\3\0\3\7\2\0\5\7\32\0\10\7\1\u0336\15\7"+
    "\3\0\3\7\2\0\5\7\32\0\2\7\1\u0337\23\7"+
    "\3\0\3\7\2\0\5\7\32\0\1\7\1\u0338\24\7"+
    "\3\0\3\7\2\0\5\7\32\0\11\7\1\u0339\14\7"+
    "\3\0\3\7\2\0\5\7\32\0\3\7\1\u033a\22\7"+
    "\3\0\3\7\2\0\5\7\32\0\22\7\1\u033b\3\7"+
    "\3\0\3\7\2\0\5\7\32\0\2\7\1\u033c\23\7"+
    "\3\0\1\u027c\2\0\1\u027c\160\0\1\u033d\5\0\3\7"+
    "\2\0\4\7\1\u033e\32\0\26\7\3\0\3\7\2\0"+
    "\1\u033f\4\7\32\0\26\7\3\0\3\7\2\0\5\7"+
    "\32\0\2\7\1\u0340\23\7\3\0\3\7\2\0\2\7"+
    "\1\u0341\2\7\32\0\26\7\3\0\3\7\2\0\5\7"+
    "\32\0\6\7\1\u0342\17\7\3\0\3\7\2\0\5\7"+
    "\32\0\2\7\1\u0343\23\7\3\0\3\7\2\0\5\7"+
    "\32\0\5\7\1\u0344\20\7\3\0\3\7\2\0\5\7"+
    "\32\0\22\7\1\u0345\3\7\3\0\3\7\2\0\5\7"+
    "\32\0\11\7\1\u0346\14\7\3\0\3\7\2\0\5\7"+
    "\32\0\1\u0347\25\7\3\0\3\7\2\0\2\7\1\u0348"+
    "\2\7\32\0\26\7\3\0\3\7\2\0\5\7\32\0"+
    "\5\7\1\u0349\20\7\3\0\3\7\2\0\5\7\32\0"+
    "\6\7\1\u034a\17\7\3\0\3\7\2\0\1\u034b\4\7"+
    "\32\0\26\7\3\0\3\7\2\0\5\7\32\0\17\7"+
    "\1\u034c\6\7\3\0\3\7\2\0\5\7\32\0\10\7"+
    "\1\u034d\15\7\3\0\3\7\2\0\1\u034e\4\7\32\0"+
    "\26\7\3\0\3\7\2\0\2\7\1\u034f\2\7\32\0"+
    "\26\7\3\0\3\7\2\0\5\7\32\0\1\u0350\25\7"+
    "\3\0\3\7\2\0\5\7\32\0\10\7\1\u0351\15\7"+
    "\3\0\3\7\2\0\5\7\32\0\3\7\1\u0352\22\7"+
    "\3\0\3\7\2\0\5\7\32\0\1\u0353\25\7\3\0"+
    "\3\7\2\0\5\7\32\0\2\7\1\u0354\23\7\3\0"+
    "\3\7\2\0\2\7\1\u0355\2\7\32\0\26\7\3\0"+
    "\3\7\2\0\3\7\1\u0356\1\7\32\0\26\7\3\0"+
    "\3\7\2\0\1\u0357\4\7\32\0\26\7\3\0\3\7"+
    "\2\0\5\7\32\0\10\7\1\u0358\15\7\3\0\3\7"+
    "\2\0\5\7\32\0\11\7\1\u0359\14\7\3\0\3\7"+
    "\2\0\5\7\32\0\3\7\1\u035a\22\7\3\0\3\7"+
    "\2\0\5\7\32\0\1\u035b\25\7\3\0\3\7\2\0"+
    "\5\7\32\0\3\7\1\u035c\22\7\3\0\3\7\2\0"+
    "\4\7\1\u035d\32\0\26\7\3\0\3\7\2\0\5\7"+
    "\32\0\1\u035e\25\7\3\0\3\7\2\0\1\u035f\4\7"+
    "\32\0\26\7\3\0\3\7\2\0\2\7\1\u0360\2\7"+
    "\32\0\26\7\3\0\3\7\2\0\5\7\32\0\10\7"+
    "\1\u0361\15\7\3\0\3\7\2\0\5\7\32\0\11\7"+
    "\1\u0362\14\7\3\0\3\7\2\0\2\7\1\u0363\2\7"+
    "\32\0\26\7\3\0\3\7\2\0\2\7\1\u0364\2\7"+
    "\32\0\26\7\3\0\3\7\2\0\5\7\32\0\3\7"+
    "\1\u0365\22\7\3\0\3\7\2\0\5\7\32\0\11\7"+
    "\1\u0366\14\7\3\0\3\7\2\0\5\7\32\0\5\7"+
    "\1\u0367\20\7\3\0\3\7\2\0\5\7\32\0\1\u0368"+
    "\25\7\3\0\3\7\2\0\4\7\1\u0369\32\0\1\u036a"+
    "\25\7\3\0\3\7\2\0\5\7\32\0\11\7\1\u036b"+
    "\14\7\3\0\3\7\2\0\5\7\32\0\10\7\1\u036c"+
    "\15\7\3\0\3\7\2\0\1\u036d\4\7\32\0\26\7"+
    "\3\0\3\7\2\0\5\7\32\0\1\u036e\25\7\3\0"+
    "\3\7\2\0\5\7\32\0\2\7\1\u036f\23\7\3\0"+
    "\3\7\2\0\5\7\32\0\10\7\1\u0370\15\7\3\0"+
    "\3\7\2\0\5\7\32\0\11\7\1\u0371\14\7\3\0"+
    "\3\7\2\0\1\u0372\4\7\32\0\26\7\3\0\3\7"+
    "\2\0\2\7\1\u0373\2\7\32\0\26\7\3\0\3\7"+
    "\2\0\5\7\32\0\11\7\1\u0374\14\7\3\0\3\7"+
    "\2\0\5\7\32\0\3\7\1\u0375\22\7\3\0\3\7"+
    "\2\0\5\7\32\0\22\7\1\u0376\3\7\3\0\3\7"+
    "\2\0\5\7\32\0\6\7\1\u0377\17\7\3\0\3\7"+
    "\2\0\5\7\32\0\2\7\1\u0378\23\7\3\0\3\7"+
    "\2\0\1\u0379\4\7\32\0\26\7\3\0\3\7\2\0"+
    "\1\u037a\4\7\32\0\26\7\3\0\3\7\2\0\5\7"+
    "\32\0\3\7\1\u037b\22\7\3\0\3\7\2\0\5\7"+
    "\32\0\1\u037c\25\7\3\0\3\7\2\0\3\7\1\u037d"+
    "\1\7\32\0\26\7\3\0\3\7\2\0\5\7\32\0"+
    "\11\7\1\u037e\14\7\3\0\3\7\2\0\5\7\32\0"+
    "\2\7\1\u037f\23\7\3\0\3\7\2\0\1\u0380\4\7"+
    "\32\0\26\7\3\0\3\7\2\0\5\7\32\0\10\7"+
    "\1\u0381\15\7\3\0\3\7\2\0\5\7\32\0\11\7"+
    "\1\u0382\14\7\3\0\3\7\2\0\5\7\32\0\10\7"+
    "\1\u0383\15\7\3\0\3\7\2\0\5\7\32\0\1\7"+
    "\1\u0384\24\7\3\0\3\7\2\0\5\7\32\0\2\7"+
    "\1\u0385\23\7\3\0\3\7\2\0\5\7\32\0\3\7"+
    "\1\u0386\22\7\3\0\3\7\2\0\5\7\32\0\5\7"+
    "\1\u0387\20\7\3\0\3\7\2\0\5\7\32\0\20\7"+
    "\1\u0388\5\7\3\0\3\7\2\0\4\7\1\u0389\32\0"+
    "\26\7\3\0\3\7\2\0\5\7\32\0\1\u038a\25\7"+
    "\3\0\3\7\2\0\5\7\32\0\10\7\1\u038b\15\7"+
    "\3\0\3\7\2\0\5\7\32\0\11\7\1\u038c\14\7"+
    "\3\0\3\7\2\0\5\7\32\0\3\7\1\u038d\22\7"+
    "\3\0\3\7\2\0\5\7\32\0\1\u038e\25\7\3\0"+
    "\3\7\2\0\5\7\32\0\1\7\1\u038f\24\7\3\0"+
    "\3\7\2\0\5\7\32\0\3\7\1\u0390\22\7\3\0"+
    "\3\7\2\0\2\7\1\u0391\2\7\32\0\26\7\3\0"+
    "\3\7\2\0\5\7\32\0\3\7\1\u0392\22\7\3\0"+
    "\3\7\2\0\1\u0393\4\7\32\0\26\7\3\0\3\7"+
    "\2\0\5\7\32\0\10\7\1\u0394\15\7\3\0\3\7"+
    "\2\0\5\7\32\0\1\7\1\u0395\24\7\3\0\3\7"+
    "\2\0\1\u0396\4\7\32\0\26\7\3\0\3\7\2\0"+
    "\5\7\32\0\15\7\1\u0397\10\7\3\0\3\7\2\0"+
    "\4\7\1\u0398\32\0\26\7\3\0\3\7\2\0\5\7"+
    "\32\0\6\7\1\u0399\17\7\3\0\3\7\2\0\5\7"+
    "\32\0\6\7\1\u039a\17\7\3\0\3\7\2\0\5\7"+
    "\32\0\11\7\1\u039b\14\7\3\0\3\7\2\0\2\7"+
    "\1\u039c\2\7\32\0\26\7\3\0\3\7\2\0\5\7"+
    "\32\0\3\7\1\u039d\22\7\3\0\3\7\2\0\5\7"+
    "\32\0\3\7\1\u039e\22\7\3\0\3\7\2\0\2\7"+
    "\1\u039f\2\7\32\0\26\7\3\0\3\7\2\0\5\7"+
    "\32\0\2\7\1\u03a0\23\7\3\0\3\7\2\0\5\7"+
    "\32\0\5\7\1\u03a1\20\7\3\0\3\7\2\0\5\7"+
    "\32\0\5\7\1\u03a2\20\7\3\0\3\7\2\0\5\7"+
    "\32\0\2\7\1\u03a3\23\7\3\0\3\7\2\0\5\7"+
    "\32\0\2\7\1\u03a4\23\7\3\0\3\7\2\0\5\7"+
    "\32\0\16\7\1\u03a5\7\7\3\0\3\7\2\0\5\7"+
    "\32\0\10\7\1\u03a6\15\7\3\0\3\7\2\0\5\7"+
    "\32\0\2\7\1\u03a7\23\7\3\0\2\7\1\u03a8\2\0"+
    "\5\7\32\0\26\7\3\0\3\7\2\0\5\7\32\0"+
    "\1\u03a9\25\7\3\0\3\7\2\0\5\7\32\0\20\7"+
    "\1\u03aa\5\7\3\0\3\7\2\0\3\7\1\u03ab\1\7"+
    "\32\0\26\7\3\0\3\7\2\0\2\7\1\u03ac\2\7"+
    "\32\0\26\7\3\0\3\7\2\0\5\7\32\0\1\u03ad"+
    "\25\7\3\0\3\7\2\0\5\7\32\0\2\7\1\u03ae"+
    "\23\7\3\0\3\7\2\0\5\7\32\0\1\u03af\25\7"+
    "\3\0\3\7\2\0\5\7\32\0\5\7\1\u03b0\13\7"+
    "\1\u03b1\4\7\3\0\3\7\2\0\1\u03b2\4\7\32\0"+
    "\26\7\3\0\3\7\2\0\5\7\32\0\5\7\1\u03b3"+
    "\20\7\3\0\3\7\2\0\5\7\32\0\2\7\1\u03b4"+
    "\23\7\3\0\3\7\2\0\5\7\32\0\1\7\1\u03b5"+
    "\24\7\3\0\3\7\2\0\5\7\32\0\1\u03b6\25\7"+
    "\3\0\3\7\2\0\5\7\32\0\11\7\1\u03b7\14\7"+
    "\3\0\3\7\2\0\5\7\32\0\2\7\1\u03b8\23\7"+
    "\3\0\3\7\2\0\5\7\32\0\11\7\1\u03b9\14\7"+
    "\3\0\3\7\2\0\1\u03ba\4\7\32\0\26\7\3\0"+
    "\3\7\2\0\5\7\32\0\15\7\1\u03bb\10\7\3\0"+
    "\3\7\2\0\1\u03bc\4\7\32\0\26\7\3\0\3\7"+
    "\2\0\1\u03bd\4\7\32\0\26\7\3\0\3\7\2\0"+
    "\2\7\1\u03be\2\7\32\0\26\7\3\0\3\7\2\0"+
    "\5\7\32\0\6\7\1\u03bf\17\7\3\0\3\7\2\0"+
    "\5\7\32\0\1\u03c0\25\7\3\0\3\7\2\0\4\7"+
    "\1\u03c1\32\0\26\7\3\0\3\7\2\0\5\7\32\0"+
    "\3\7\1\u03c2\22\7\3\0\3\7\2\0\5\7\32\0"+
    "\5\7\1\u03c3\20\7\3\0\3\7\2\0\5\7\32\0"+
    "\3\7\1\u03c4\22\7\3\0\3\7\2\0\5\7\32\0"+
    "\1\7\1\u03c5\24\7\3\0\3\7\2\0\5\7\32\0"+
    "\3\7\1\u03c6\22\7\3\0\3\7\2\0\4\7\1\u03c7"+
    "\32\0\26\7\3\0\3\7\2\0\5\7\32\0\11\7"+
    "\1\u03c8\14\7\3\0\3\7\2\0\4\7\1\u03c9\32\0"+
    "\26\7\3\0\3\7\2\0\5\7\32\0\10\7\1\u03ca"+
    "\15\7\3\0\3\7\2\0\5\7\32\0\2\7\1\u03cb"+
    "\23\7\3\0\3\7\2\0\5\7\32\0\21\7\1\u03cc"+
    "\4\7\3\0\3\7\2\0\2\7\1\u03cd\2\7\32\0"+
    "\26\7\3\0\3\7\2\0\1\u03ce\4\7\32\0\26\7"+
    "\3\0\3\7\2\0\1\u03cf\4\7\32\0\26\7\3\0"+
    "\3\7\2\0\5\7\32\0\1\7\1\u03d0\24\7\3\0"+
    "\3\7\2\0\5\7\32\0\5\7\1\u03d1\20\7\3\0"+
    "\3\7\2\0\2\7\1\u03d2\2\7\32\0\26\7\3\0"+
    "\3\7\2\0\5\7\32\0\1\u03d3\25\7\3\0\3\7"+
    "\2\0\5\7\32\0\11\7\1\u03d4\14\7\3\0\3\7"+
    "\2\0\1\u03d5\4\7\32\0\26\7\3\0\3\7\2\0"+
    "\5\7\32\0\16\7\1\u03d6\7\7\3\0\3\7\2\0"+
    "\5\7\32\0\1\u03d7\25\7\3\0\3\7\2\0\5\7"+
    "\32\0\1\u03d8\25\7\10\0\1\u03d9\67\0\3\7\2\0"+
    "\1\u03da\4\7\32\0\26\7\3\0\3\7\2\0\5\7"+
    "\32\0\1\u03db\25\7\3\0\3\7\2\0\5\7\32\0"+
    "\2\7\1\u03dc\23\7\3\0\3\7\2\0\5\7\32\0"+
    "\11\7\1\u03dd\14\7\3\0\3\7\2\0\5\7\32\0"+
    "\6\7\1\u03de\17\7\3\0\3\7\2\0\4\7\1\u03df"+
    "\32\0\26\7\3\0\3\7\2\0\5\7\32\0\1\u03e0"+
    "\25\7\3\0\3\7\2\0\5\7\32\0\2\7\1\u03e1"+
    "\23\7\3\0\3\7\2\0\5\7\32\0\14\7\1\u03e2"+
    "\11\7\3\0\3\7\2\0\2\7\1\u03e3\2\7\32\0"+
    "\26\7\3\0\3\7\2\0\5\7\32\0\2\7\1\u03e4"+
    "\23\7\3\0\3\7\2\0\5\7\32\0\2\7\1\u03e5"+
    "\23\7\3\0\3\7\2\0\5\7\32\0\16\7\1\u03e6"+
    "\7\7\3\0\3\7\2\0\5\7\32\0\16\7\1\u03e7"+
    "\7\7\3\0\3\7\2\0\5\7\32\0\11\7\1\u03e8"+
    "\14\7\3\0\3\7\2\0\5\7\32\0\2\7\1\u03e9"+
    "\23\7\3\0\3\7\2\0\5\7\32\0\11\7\1\u03ea"+
    "\14\7\3\0\3\7\2\0\5\7\32\0\2\7\1\u03eb"+
    "\23\7\3\0\3\7\2\0\5\7\32\0\6\7\1\u03ec"+
    "\17\7\3\0\3\7\2\0\5\7\32\0\13\7\1\u03ed"+
    "\1\7\1\u03ee\10\7\3\0\3\7\2\0\1\u03ef\4\7"+
    "\32\0\26\7\3\0\3\7\2\0\4\7\1\u03f0\32\0"+
    "\26\7\3\0\3\7\2\0\1\u03f1\4\7\32\0\1\u03f2"+
    "\25\7\3\0\3\7\2\0\5\7\32\0\2\7\1\u03f3"+
    "\23\7\3\0\3\7\2\0\5\7\32\0\5\7\1\u03f4"+
    "\20\7\3\0\3\7\2\0\5\7\32\0\5\7\1\u03f5"+
    "\20\7\3\0\3\7\2\0\5\7\32\0\13\7\1\u03f6"+
    "\12\7\3\0\3\7\2\0\5\7\32\0\6\7\1\u03f7"+
    "\17\7\3\0\3\7\2\0\2\7\1\u03f8\2\7\32\0"+
    "\26\7\3\0\3\7\2\0\5\7\32\0\1\u03f9\25\7"+
    "\3\0\3\7\2\0\5\7\32\0\12\7\1\u03fa\13\7"+
    "\3\0\3\7\2\0\5\7\32\0\1\u03fb\25\7\3\0"+
    "\3\7\2\0\5\7\32\0\2\7\1\u03fc\23\7\3\0"+
    "\3\7\2\0\5\7\32\0\1\u03fd\25\7\3\0\3\7"+
    "\2\0\5\7\32\0\6\7\1\u03fe\17\7\3\0\3\7"+
    "\2\0\2\7\1\u03ff\2\7\32\0\26\7\3\0\3\7"+
    "\2\0\2\7\1\u0400\2\7\32\0\26\7\3\0\3\7"+
    "\2\0\5\7\32\0\3\7\1\u0401\22\7\3\0\3\7"+
    "\2\0\4\7\1\u0402\32\0\26\7\3\0\3\7\2\0"+
    "\5\7\32\0\1\u0403\25\7\3\0\3\7\2\0\2\7"+
    "\1\u0404\2\7\32\0\26\7\3\0\3\7\2\0\5\7"+
    "\32\0\21\7\1\u0405\4\7\3\0\3\7\2\0\5\7"+
    "\32\0\23\7\1\u0406\2\7\3\0\3\7\2\0\5\7"+
    "\32\0\6\7\1\u0407\17\7\3\0\3\7\2\0\1\u0408"+
    "\4\7\32\0\26\7\3\0\3\7\2\0\5\7\32\0"+
    "\11\7\1\u0409\14\7\3\0\3\7\2\0\5\7\32\0"+
    "\1\u040a\25\7\3\0\3\7\2\0\2\7\1\u040b\2\7"+
    "\32\0\26\7\3\0\3\7\2\0\5\7\32\0\3\7"+
    "\1\u040c\22\7\3\0\3\7\2\0\5\7\32\0\6\7"+
    "\1\u040d\17\7\3\0\3\7\2\0\2\7\1\u040e\2\7"+
    "\32\0\26\7\3\0\3\7\2\0\5\7\32\0\1\7"+
    "\1\u040f\24\7\3\0\3\7\2\0\5\7\32\0\3\7"+
    "\1\u0410\22\7\3\0\3\7\2\0\2\7\1\u0411\2\7"+
    "\32\0\26\7\3\0\3\7\2\0\5\7\32\0\2\7"+
    "\1\u0412\23\7\3\0\3\7\2\0\2\7\1\u0413\2\7"+
    "\32\0\26\7\3\0\3\7\2\0\5\7\32\0\11\7"+
    "\1\u0414\14\7\3\0\3\7\2\0\5\7\32\0\11\7"+
    "\1\u0415\14\7\3\0\3\7\2\0\5\7\32\0\2\7"+
    "\1\u0416\23\7\3\0\2\7\1\u0417\2\0\5\7\32\0"+
    "\26\7\3\0\3\7\2\0\5\7\32\0\17\7\1\u0418"+
    "\6\7\3\0\3\7\2\0\2\7\1\u0419\2\7\32\0"+
    "\26\7\3\0\3\7\2\0\5\7\32\0\10\7\1\u041a"+
    "\15\7\3\0\3\7\2\0\5\7\32\0\2\7\1\u041b"+
    "\23\7\3\0\3\7\2\0\1\u041c\4\7\32\0\26\7"+
    "\3\0\3\7\2\0\2\7\1\u041d\2\7\32\0\26\7"+
    "\3\0\3\7\2\0\5\7\32\0\2\7\1\u041e\23\7"+
    "\3\0\3\7\2\0\5\7\32\0\3\7\1\u041f\22\7"+
    "\3\0\3\7\2\0\5\7\32\0\16\7\1\u0420\7\7"+
    "\3\0\3\7\2\0\1\u0421\4\7\32\0\26\7\3\0"+
    "\3\7\2\0\5\7\32\0\10\7\1\u0422\15\7\3\0"+
    "\3\7\2\0\1\u0423\4\7\32\0\26\7\3\0\3\7"+
    "\2\0\5\7\32\0\2\7\1\u0424\23\7\3\0\3\7"+
    "\2\0\5\7\32\0\2\7\1\u0425\23\7\3\0\3\7"+
    "\2\0\2\7\1\u0426\2\7\32\0\26\7\3\0\3\7"+
    "\2\0\3\7\1\u0427\1\7\32\0\26\7\3\0\3\7"+
    "\2\0\5\7\32\0\1\u0428\25\7\3\0\3\7\2\0"+
    "\5\7\32\0\2\7\1\u0429\23\7\3\0\3\7\2\0"+
    "\1\u042a\4\7\32\0\11\7\1\u042b\14\7\3\0\3\7"+
    "\2\0\5\7\32\0\6\7\1\u042c\17\7\3\0\3\7"+
    "\2\0\5\7\32\0\15\7\1\u042d\10\7\3\0\3\7"+
    "\2\0\1\u042e\4\7\32\0\26\7\3\0\3\7\2\0"+
    "\5\7\32\0\6\7\1\u042f\17\7\3\0\3\7\2\0"+
    "\4\7\1\u0430\32\0\26\7\3\0\3\7\2\0\5\7"+
    "\32\0\2\7\1\u0431\23\7\3\0\3\7\2\0\4\7"+
    "\1\u0432\32\0\26\7\3\0\3\7\2\0\1\u0433\4\7"+
    "\32\0\26\7\3\0\3\7\2\0\5\7\32\0\15\7"+
    "\1\u0434\10\7\3\0\3\7\2\0\5\7\32\0\5\7"+
    "\1\u0435\20\7\3\0\3\7\2\0\5\7\32\0\2\7"+
    "\1\u0436\23\7\3\0\3\7\2\0\1\u0437\4\7\32\0"+
    "\26\7\3\0\3\7\2\0\5\7\32\0\1\u0438\25\7"+
    "\3\0\3\7\2\0\5\7\32\0\3\7\1\u0439\22\7"+
    "\3\0\3\7\2\0\5\7\32\0\11\7\1\u043a\14\7"+
    "\3\0\3\7\2\0\1\u043b\4\7\32\0\26\7\3\0"+
    "\3\7\2\0\4\7\1\u043c\32\0\26\7\3\0\3\7"+
    "\2\0\5\7\32\0\2\7\1\u043d\23\7\3\0\3\7"+
    "\2\0\5\7\32\0\11\7\1\u043e\14\7\3\0\3\7"+
    "\2\0\5\7\32\0\1\u043f\25\7\3\0\3\7\2\0"+
    "\2\7\1\u0440\2\7\32\0\26\7\3\0\3\7\2\0"+
    "\2\7\1\u0441\2\7\32\0\26\7\3\0\3\7\2\0"+
    "\5\7\32\0\2\7\1\u0442\23\7\3\0\3\7\2\0"+
    "\4\7\1\u0443\32\0\26\7\3\0\3\7\2\0\5\7"+
    "\32\0\21\7\1\u0444\4\7\3\0\3\7\2\0\5\7"+
    "\32\0\11\7\1\u0445\14\7\3\0\3\7\2\0\1\u0446"+
    "\4\7\32\0\26\7\3\0\3\7\2\0\3\7\1\u0447"+
    "\1\7\32\0\26\7\3\0\3\7\2\0\5\7\32\0"+
    "\4\7\1\u0448\21\7\3\0\3\7\2\0\1\u0449\4\7"+
    "\32\0\26\7\3\0\3\7\2\0\5\7\32\0\10\7"+
    "\1\u044a\15\7\3\0\3\7\2\0\5\7\32\0\3\7"+
    "\1\u044b\22\7\3\0\3\7\2\0\1\u044c\4\7\32\0"+
    "\26\7\3\0\3\7\2\0\1\u044d\4\7\32\0\26\7"+
    "\3\0\3\7\2\0\1\u044e\4\7\32\0\26\7\3\0"+
    "\3\7\2\0\5\7\32\0\16\7\1\u044f\7\7\3\0"+
    "\3\7\2\0\5\7\32\0\3\7\1\u0450\22\7\3\0"+
    "\3\7\2\0\5\7\32\0\10\7\1\u0451\15\7\3\0"+
    "\3\7\2\0\5\7\32\0\23\7\1\u0452\2\7\3\0"+
    "\3\7\2\0\2\7\1\u0453\2\7\32\0\26\7\3\0"+
    "\3\7\2\0\2\7\1\u0454\2\7\32\0\26\7\3\0"+
    "\3\7\2\0\5\7\32\0\6\7\1\u0455\17\7\55\0"+
    "\1\u0456\22\0\3\7\2\0\4\7\1\u0457\32\0\26\7"+
    "\3\0\3\7\2\0\5\7\32\0\10\7\1\u0458\15\7"+
    "\3\0\3\7\2\0\4\7\1\u0459\32\0\26\7\3\0"+
    "\3\7\2\0\1\u045a\4\7\32\0\26\7\3\0\3\7"+
    "\2\0\1\u045b\4\7\32\0\26\7\3\0\3\7\2\0"+
    "\1\u045c\4\7\32\0\26\7\3\0\3\7\2\0\5\7"+
    "\32\0\12\7\1\u045d\13\7\3\0\3\7\2\0\1\u045e"+
    "\4\7\32\0\26\7\3\0\3\7\2\0\5\7\32\0"+
    "\10\7\1\u045f\15\7\3\0\3\7\2\0\1\u0460\4\7"+
    "\32\0\26\7\3\0\3\7\2\0\5\7\32\0\1\u0461"+
    "\25\7\3\0\3\7\2\0\1\u0462\4\7\32\0\26\7"+
    "\3\0\3\7\2\0\5\7\32\0\2\7\1\u0463\23\7"+
    "\3\0\3\7\2\0\5\7\32\0\1\7\1\u0464\24\7"+
    "\3\0\3\7\2\0\5\7\32\0\13\7\1\u0465\12\7"+
    "\3\0\3\7\2\0\1\u0466\4\7\32\0\26\7\3\0"+
    "\3\7\2\0\5\7\32\0\2\7\1\u0467\23\7\3\0"+
    "\3\7\2\0\3\7\1\u0468\1\7\32\0\26\7\3\0"+
    "\3\7\2\0\5\7\32\0\2\7\1\u0469\23\7\3\0"+
    "\3\7\2\0\1\u046a\4\7\32\0\26\7\3\0\3\7"+
    "\2\0\5\7\32\0\3\7\1\u046b\22\7\3\0\3\7"+
    "\2\0\1\u046c\4\7\32\0\26\7\3\0\3\7\2\0"+
    "\5\7\32\0\20\7\1\u046d\5\7\3\0\3\7\2\0"+
    "\1\u046e\4\7\32\0\26\7\3\0\3\7\2\0\5\7"+
    "\32\0\2\7\1\u046f\23\7\3\0\3\7\2\0\5\7"+
    "\32\0\2\7\1\u0470\23\7\3\0\3\7\2\0\5\7"+
    "\32\0\16\7\1\u0471\7\7\3\0\3\7\2\0\5\7"+
    "\32\0\21\7\1\u0472\4\7\3\0\3\7\2\0\5\7"+
    "\32\0\20\7\1\u0473\5\7\3\0\3\7\2\0\1\u0474"+
    "\4\7\32\0\26\7\3\0\3\7\2\0\1\u0475\4\7"+
    "\32\0\26\7\3\0\3\7\2\0\5\7\32\0\2\7"+
    "\1\u0476\23\7\3\0\3\7\2\0\5\7\32\0\2\7"+
    "\1\u0477\23\7\3\0\3\7\2\0\5\7\32\0\16\7"+
    "\1\u0478\7\7\3\0\3\7\2\0\5\7\32\0\2\7"+
    "\1\u0479\23\7\3\0\3\7\2\0\5\7\32\0\6\7"+
    "\1\u047a\17\7\3\0\3\7\2\0\5\7\32\0\10\7"+
    "\1\u047b\15\7\3\0\3\7\2\0\5\7\32\0\14\7"+
    "\1\u047c\11\7\3\0\3\7\2\0\5\7\32\0\2\7"+
    "\1\u047d\23\7\3\0\3\7\2\0\5\7\32\0\6\7"+
    "\1\u047e\17\7\3\0\2\7\1\u047f\2\0\5\7\32\0"+
    "\26\7\3\0\3\7\2\0\5\7\32\0\4\7\1\u0480"+
    "\21\7\3\0\3\7\2\0\5\7\32\0\6\7\1\u0481"+
    "\17\7\3\0\3\7\2\0\2\7\1\u0482\2\7\32\0"+
    "\26\7\3\0\3\7\2\0\5\7\32\0\11\7\1\u0483"+
    "\14\7\3\0\3\7\2\0\3\7\1\u0484\1\7\32\0"+
    "\26\7\3\0\3\7\2\0\2\7\1\u0485\2\7\32\0"+
    "\26\7\3\0\3\7\2\0\5\7\32\0\2\7\1\u0486"+
    "\23\7\3\0\3\7\2\0\5\7\32\0\3\7\1\u0487"+
    "\22\7\3\0\3\7\2\0\1\u0488\4\7\32\0\26\7"+
    "\3\0\3\7\2\0\5\7\32\0\11\7\1\u0489\14\7"+
    "\3\0\2\7\1\u048a\2\0\5\7\32\0\26\7\3\0"+
    "\3\7\2\0\1\u048b\4\7\32\0\26\7\3\0\3\7"+
    "\2\0\5\7\32\0\1\7\1\u048c\24\7\3\0\3\7"+
    "\2\0\5\7\32\0\11\7\1\u048d\14\7\3\0\3\7"+
    "\2\0\2\7\1\u048e\2\7\32\0\26\7\3\0\3\7"+
    "\2\0\1\u048f\4\7\32\0\26\7\3\0\3\7\2\0"+
    "\5\7\32\0\11\7\1\u0490\14\7\3\0\3\7\2\0"+
    "\5\7\32\0\5\7\1\u0491\20\7\3\0\3\7\2\0"+
    "\1\u0492\4\7\32\0\26\7\3\0\3\7\2\0\5\7"+
    "\32\0\11\7\1\u0493\14\7\3\0\3\7\2\0\5\7"+
    "\32\0\10\7\1\u0494\15\7\3\0\3\7\2\0\1\u0495"+
    "\4\7\32\0\26\7\3\0\3\7\2\0\5\7\32\0"+
    "\10\7\1\u0496\15\7\3\0\3\7\2\0\5\7\32\0"+
    "\14\7\1\u0497\11\7\3\0\3\7\2\0\1\u0498\4\7"+
    "\32\0\26\7\3\0\3\7\2\0\5\7\32\0\1\u0499"+
    "\25\7\3\0\3\7\2\0\5\7\32\0\3\7\1\u049a"+
    "\22\7\3\0\3\7\2\0\5\7\32\0\5\7\1\u049b"+
    "\20\7\3\0\3\7\2\0\5\7\32\0\10\7\1\u049c"+
    "\15\7\3\0\3\7\2\0\5\7\32\0\6\7\1\u049d"+
    "\17\7\3\0\3\7\2\0\4\7\1\u049e\32\0\26\7"+
    "\3\0\3\7\2\0\5\7\32\0\2\7\1\u049f\23\7"+
    "\3\0\3\7\2\0\4\7\1\u04a0\32\0\26\7\3\0"+
    "\3\7\2\0\5\7\32\0\4\7\1\u04a1\21\7\3\0"+
    "\3\7\2\0\5\7\32\0\10\7\1\u04a2\15\7\3\0"+
    "\3\7\2\0\5\7\32\0\2\7\1\u04a3\23\7\3\0"+
    "\3\7\2\0\5\7\32\0\16\7\1\u04a4\7\7\3\0"+
    "\3\7\2\0\1\u04a5\4\7\32\0\26\7\3\0\3\7"+
    "\2\0\5\7\32\0\10\7\1\u04a6\15\7\3\0\3\7"+
    "\2\0\5\7\32\0\3\7\1\u04a7\22\7\3\0\3\7"+
    "\2\0\5\7\32\0\16\7\1\u04a8\7\7\3\0\3\7"+
    "\2\0\2\7\1\u04a9\2\7\32\0\26\7\3\0\3\7"+
    "\2\0\5\7\32\0\23\7\1\u04aa\2\7\3\0\3\7"+
    "\2\0\5\7\32\0\3\7\1\u04ab\22\7\3\0\3\7"+
    "\2\0\5\7\32\0\3\7\1\u04ac\22\7\3\0\3\7"+
    "\2\0\2\7\1\u04ad\2\7\32\0\26\7\3\0\3\7"+
    "\2\0\5\7\32\0\2\7\1\u04ae\23\7\3\0\3\7"+
    "\2\0\5\7\32\0\2\7\1\u04af\23\7\3\0\3\7"+
    "\2\0\2\7\1\u04b0\2\7\32\0\26\7\3\0\3\7"+
    "\2\0\5\7\32\0\3\7\1\u04b1\22\7\3\0\3\7"+
    "\2\0\5\7\32\0\23\7\1\u04b2\2\7\3\0\3\7"+
    "\2\0\5\7\32\0\1\u04b3\25\7\3\0\3\7\2\0"+
    "\2\7\1\u04b4\2\7\32\0\26\7\3\0\3\7\2\0"+
    "\5\7\32\0\2\7\1\u04b5\23\7\3\0\3\7\2\0"+
    "\5\7\32\0\10\7\1\u04b6\15\7\3\0\3\7\2\0"+
    "\4\7\1\u04b7\32\0\26\7\3\0\3\7\2\0\5\7"+
    "\32\0\11\7\1\u04b8\14\7\3\0\3\7\2\0\5\7"+
    "\32\0\2\7\1\u04b9\23\7\3\0\3\7\2\0\5\7"+
    "\32\0\6\7\1\u04ba\17\7\3\0\3\7\2\0\5\7"+
    "\32\0\4\7\1\u04bb\21\7\3\0\3\7\2\0\5\7"+
    "\32\0\15\7\1\u04bc\10\7\3\0\3\7\2\0\1\u04bd"+
    "\4\7\32\0\11\7\1\u04be\14\7\3\0\3\7\2\0"+
    "\5\7\32\0\11\7\1\u04bf\14\7\3\0\3\7\2\0"+
    "\1\u04c0\4\7\32\0\26\7\3\0\3\7\2\0\5\7"+
    "\32\0\15\7\1\u04c1\10\7\3\0\2\7\1\u04c2\2\0"+
    "\5\7\32\0\26\7\3\0\3\7\2\0\3\7\1\u04c3"+
    "\1\7\32\0\26\7\3\0\3\7\2\0\5\7\32\0"+
    "\11\7\1\u04c4\14\7\3\0\3\7\2\0\1\u04c5\4\7"+
    "\32\0\26\7\3\0\3\7\2\0\5\7\32\0\3\7"+
    "\1\u04c6\22\7\3\0\3\7\2\0\5\7\32\0\10\7"+
    "\1\u04c7\15\7\3\0\3\7\2\0\3\7\1\u04c8\1\7"+
    "\32\0\26\7\3\0\3\7\2\0\5\7\32\0\1\u04c9"+
    "\25\7\3\0\3\7\2\0\5\7\32\0\5\7\1\u04ca"+
    "\6\7\1\u04cb\11\7\3\0\3\7\2\0\5\7\32\0"+
    "\16\7\1\u04cc\7\7\3\0\3\7\2\0\5\7\32\0"+
    "\6\7\1\u04cd\17\7\3\0\3\7\2\0\5\7\32\0"+
    "\5\7\1\u04ce\20\7\3\0\3\7\2\0\2\7\1\u04cf"+
    "\2\7\32\0\26\7\3\0\3\7\2\0\3\7\1\u04d0"+
    "\1\7\32\0\1\7\1\u04d1\1\u04d2\23\7\3\0\3\7"+
    "\2\0\5\7\32\0\1\7\1\u04d3\24\7\3\0\3\7"+
    "\2\0\2\7\1\u04d4\2\7\32\0\26\7\3\0\3\7"+
    "\2\0\5\7\32\0\16\7\1\u04d5\7\7\3\0\3\7"+
    "\2\0\5\7\32\0\3\7\1\u04d6\22\7\3\0\3\7"+
    "\2\0\5\7\32\0\10\7\1\u04d7\15\7\3\0\3\7"+
    "\2\0\5\7\32\0\2\7\1\u04d8\23\7\3\0\3\7"+
    "\2\0\2\7\1\u04d9\2\7\32\0\26\7\3\0\3\7"+
    "\2\0\2\7\1\u04da\2\7\32\0\26\7\3\0\3\7"+
    "\2\0\2\7\1\u04db\2\7\32\0\26\7\3\0\3\7"+
    "\2\0\2\7\1\u04dc\2\7\32\0\26\7\3\0\3\7"+
    "\2\0\5\7\32\0\5\7\1\u04dd\20\7\3\0\3\7"+
    "\2\0\5\7\32\0\4\7\1\u04de\21\7\3\0\3\7"+
    "\2\0\5\7\32\0\3\7\1\u04df\22\7\3\0\3\7"+
    "\2\0\5\7\32\0\2\7\1\u04e0\23\7\3\0\3\7"+
    "\2\0\5\7\32\0\11\7\1\u04e1\14\7\3\0\3\7"+
    "\2\0\5\7\32\0\4\7\1\u04e2\21\7\3\0\2\7"+
    "\1\u04e3\2\0\5\7\32\0\6\7\1\u04e4\17\7\3\0"+
    "\3\7\2\0\2\7\1\u04e5\2\7\32\0\26\7\3\0"+
    "\3\7\2\0\1\u04e6\4\7\32\0\26\7\3\0\3\7"+
    "\2\0\5\7\32\0\2\7\1\u04e7\23\7\3\0\3\7"+
    "\2\0\2\7\1\u04e8\2\7\32\0\26\7\3\0\3\7"+
    "\2\0\1\u04e9\4\7\32\0\26\7\3\0\3\7\2\0"+
    "\1\u04ea\4\7\32\0\26\7\3\0\3\7\2\0\5\7"+
    "\32\0\2\7\1\u04eb\23\7\3\0\3\7\2\0\5\7"+
    "\32\0\10\7\1\u04ec\15\7\3\0\3\7\2\0\5\7"+
    "\32\0\2\7\1\u04ed\23\7\3\0\3\7\2\0\5\7"+
    "\32\0\10\7\1\u04ee\15\7\3\0\3\7\2\0\1\u04ef"+
    "\4\7\32\0\26\7\3\0\3\7\2\0\5\7\32\0"+
    "\2\7\1\u04f0\23\7\3\0\3\7\2\0\5\7\32\0"+
    "\2\7\1\u04f1\23\7\3\0\3\7\2\0\1\u04f2\4\7"+
    "\32\0\26\7\3\0\3\7\2\0\5\7\32\0\3\7"+
    "\1\u04f3\22\7\3\0\3\7\2\0\1\u04f4\4\7\32\0"+
    "\26\7\3\0\3\7\2\0\5\7\32\0\6\7\1\u04f5"+
    "\17\7\3\0\3\7\2\0\1\u04f6\4\7\32\0\26\7"+
    "\3\0\3\7\2\0\5\7\32\0\2\7\1\u04f7\23\7"+
    "\3\0\3\7\2\0\4\7\1\u04f8\32\0\26\7\3\0"+
    "\3\7\2\0\5\7\32\0\10\7\1\u04f9\15\7\3\0"+
    "\3\7\2\0\5\7\32\0\10\7\1\u04fa\15\7\3\0"+
    "\3\7\2\0\5\7\32\0\3\7\1\u04fb\22\7\3\0"+
    "\3\7\2\0\5\7\32\0\7\7\1\u04fc\10\7\1\u04fd"+
    "\5\7\3\0\3\7\2\0\5\7\32\0\3\7\1\u04fe"+
    "\22\7\3\0\3\7\2\0\5\7\32\0\10\7\1\u04ff"+
    "\15\7\3\0\3\7\2\0\5\7\32\0\5\7\1\u0500"+
    "\20\7\3\0\3\7\2\0\4\7\1\u0501\32\0\26\7"+
    "\3\0\3\7\2\0\5\7\32\0\5\7\1\u0502\20\7"+
    "\3\0\3\7\2\0\3\7\1\u0503\1\7\32\0\26\7"+
    "\3\0\3\7\2\0\5\7\32\0\11\7\1\u0504\14\7"+
    "\3\0\3\7\2\0\1\u0505\4\7\32\0\26\7\3\0"+
    "\3\7\2\0\5\7\32\0\5\7\1\u0506\20\7\3\0"+
    "\3\7\2\0\1\u0507\4\7\32\0\26\7\3\0\3\7"+
    "\2\0\5\7\32\0\16\7\1\u0508\7\7\3\0\3\7"+
    "\2\0\5\7\32\0\5\7\1\u0509\20\7\3\0\3\7"+
    "\2\0\5\7\32\0\1\u050a\25\7\3\0\3\7\2\0"+
    "\5\7\32\0\11\7\1\u050b\14\7\3\0\3\7\2\0"+
    "\5\7\32\0\2\7\1\u050c\23\7\3\0\3\7\2\0"+
    "\5\7\32\0\2\7\1\u050d\23\7\3\0\2\7\1\u050e"+
    "\2\0\5\7\32\0\26\7\3\0\3\7\2\0\2\7"+
    "\1\u050f\2\7\32\0\26\7\3\0\3\7\2\0\5\7"+
    "\32\0\1\u0510\25\7\3\0\3\7\2\0\5\7\32\0"+
    "\2\7\1\u0511\23\7\3\0\3\7\2\0\5\7\32\0"+
    "\1\7\1\u0512\24\7\3\0\3\7\2\0\5\7\32\0"+
    "\16\7\1\u0513\7\7\3\0\3\7\2\0\5\7\32\0"+
    "\10\7\1\u0514\15\7\3\0\3\7\2\0\5\7\32\0"+
    "\21\7\1\u0515\4\7\3\0\3\7\2\0\5\7\32\0"+
    "\11\7\1\u0516\14\7\3\0\3\7\2\0\5\7\32\0"+
    "\10\7\1\u0517\15\7\3\0\3\7\2\0\5\7\32\0"+
    "\7\7\1\u0518\16\7\3\0\3\7\2\0\5\7\32\0"+
    "\5\7\1\u0519\20\7\3\0\3\7\2\0\5\7\32\0"+
    "\1\u051a\25\7\3\0\3\7\2\0\5\7\32\0\3\7"+
    "\1\u051b\22\7\3\0\3\7\2\0\5\7\32\0\1\7"+
    "\1\u051c\24\7\3\0\3\7\2\0\5\7\32\0\11\7"+
    "\1\u051d\14\7\3\0\3\7\2\0\5\7\32\0\5\7"+
    "\1\u051e\20\7\3\0\3\7\2\0\5\7\32\0\1\7"+
    "\1\u051f\24\7\3\0\3\7\2\0\1\u0520\4\7\32\0"+
    "\26\7\3\0\3\7\2\0\2\7\1\u0521\2\7\32\0"+
    "\26\7\3\0\3\7\2\0\2\7\1\u0522\2\7\32\0"+
    "\26\7\3\0\3\7\2\0\5\7\32\0\2\7\1\u0523"+
    "\23\7\3\0\3\7\2\0\5\7\32\0\10\7\1\u0524"+
    "\15\7\3\0\3\7\2\0\5\7\32\0\11\7\1\u0525"+
    "\14\7\3\0\3\7\2\0\1\u0526\4\7\32\0\26\7"+
    "\3\0\3\7\2\0\2\7\1\u0527\2\7\32\0\26\7"+
    "\3\0\3\7\2\0\1\u0528\4\7\32\0\26\7\3\0"+
    "\3\7\2\0\5\7\32\0\1\7\1\u0529\24\7\3\0"+
    "\3\7\2\0\5\7\32\0\20\7\1\u052a\5\7\3\0"+
    "\3\7\2\0\5\7\32\0\4\7\1\u052b\21\7\3\0"+
    "\3\7\2\0\5\7\32\0\3\7\1\u052c\22\7\3\0"+
    "\3\7\2\0\1\u052d\4\7\32\0\26\7\3\0\3\7"+
    "\2\0\5\7\32\0\2\7\1\u052e\23\7\3\0\3\7"+
    "\2\0\5\7\32\0\20\7\1\u052f\5\7\3\0\3\7"+
    "\2\0\5\7\32\0\7\7\1\u0530\16\7\3\0\3\7"+
    "\2\0\4\7\1\u0531\32\0\26\7\3\0\3\7\2\0"+
    "\5\7\32\0\13\7\1\u0532\12\7\3\0\3\7\2\0"+
    "\5\7\32\0\5\7\1\u0533\20\7\3\0\3\7\2\0"+
    "\5\7\32\0\11\7\1\u0534\14\7\3\0\3\7\2\0"+
    "\5\7\32\0\2\7\1\u0535\23\7\3\0\3\7\2\0"+
    "\3\7\1\u0536\1\7\32\0\26\7\3\0\3\7\2\0"+
    "\1\u0537\4\7\32\0\26\7\3\0\3\7\2\0\2\7"+
    "\1\u0538\2\7\32\0\26\7\3\0\3\7\2\0\4\7"+
    "\1\u0539\32\0\26\7\3\0\3\7\2\0\5\7\32\0"+
    "\13\7\1\u053a\12\7\3\0\3\7\2\0\5\7\32\0"+
    "\10\7\1\u053b\15\7\3\0\3\7\2\0\3\7\1\u053c"+
    "\1\7\32\0\26\7\3\0\3\7\2\0\2\7\1\u053d"+
    "\2\7\32\0\26\7\3\0\3\7\2\0\5\7\32\0"+
    "\3\7\1\u053e\22\7\3\0\3\7\2\0\5\7\32\0"+
    "\11\7\1\u053f\14\7\3\0\3\7\2\0\5\7\32\0"+
    "\11\7\1\u0540\14\7\3\0\3\7\2\0\5\7\32\0"+
    "\15\7\1\u0541\10\7\3\0\3\7\2\0\5\7\32\0"+
    "\3\7\1\u0542\22\7\3\0\3\7\2\0\1\u0543\4\7"+
    "\32\0\26\7\3\0\3\7\2\0\1\u0544\4\7\32\0"+
    "\26\7\3\0\3\7\2\0\1\u0545\4\7\32\0\26\7"+
    "\3\0\3\7\2\0\4\7\1\u0546\32\0\26\7\3\0"+
    "\3\7\2\0\2\7\1\u0547\2\7\32\0\26\7\3\0"+
    "\3\7\2\0\5\7\32\0\7\7\1\u0548\16\7\3\0"+
    "\3\7\2\0\5\7\32\0\3\7\1\u0549\22\7\3\0"+
    "\3\7\2\0\5\7\32\0\5\7\1\u054a\20\7\3\0"+
    "\3\7\2\0\4\7\1\u054b\32\0\26\7\3\0\3\7"+
    "\2\0\2\7\1\u054c\2\7\32\0\26\7\3\0\3\7"+
    "\2\0\5\7\32\0\3\7\1\u054d\22\7\3\0\3\7"+
    "\2\0\3\7\1\u054e\1\7\32\0\26\7\3\0\3\7"+
    "\2\0\5\7\32\0\2\7\1\u054f\23\7\3\0\3\7"+
    "\2\0\4\7\1\u0550\32\0\26\7\3\0\3\7\2\0"+
    "\5\7\32\0\7\7\1\u0551\16\7\3\0\3\7\2\0"+
    "\5\7\32\0\5\7\1\u0552\20\7\3\0\3\7\2\0"+
    "\2\7\1\u0553\2\7\32\0\26\7\3\0\3\7\2\0"+
    "\1\u0554\4\7\32\0\26\7\3\0\3\7\2\0\5\7"+
    "\32\0\16\7\1\u0555\7\7\3\0\3\7\2\0\5\7"+
    "\32\0\6\7\1\u0556\17\7\3\0\3\7\2\0\1\u0557"+
    "\4\7\32\0\26\7\3\0\3\7\2\0\1\u0558\4\7"+
    "\32\0\26\7\3\0\3\7\2\0\5\7\32\0\2\7"+
    "\1\u0559\23\7\3\0\3\7\2\0\5\7\32\0\1\u055a"+
    "\25\7\3\0\3\7\2\0\5\7\32\0\3\7\1\u055b"+
    "\22\7\3\0\3\7\2\0\5\7\32\0\2\7\1\u055c"+
    "\23\7\3\0\3\7\2\0\5\7\32\0\16\7\1\u055d"+
    "\7\7\3\0\3\7\2\0\1\u055e\4\7\32\0\26\7"+
    "\3\0\3\7\2\0\5\7\32\0\3\7\1\u055f\22\7"+
    "\3\0\3\7\2\0\1\u0560\4\7\32\0\26\7\3\0"+
    "\3\7\2\0\5\7\32\0\3\7\1\u0561\22\7\3\0"+
    "\3\7\2\0\5\7\32\0\1\u0562\25\7\3\0\3\7"+
    "\2\0\5\7\32\0\1\u0563\25\7\3\0\3\7\2\0"+
    "\5\7\32\0\2\7\1\u0564\23\7\3\0\3\7\2\0"+
    "\5\7\32\0\2\7\1\u0565\23\7\3\0\3\7\2\0"+
    "\5\7\32\0\11\7\1\u0566\14\7\3\0\3\7\2\0"+
    "\5\7\32\0\5\7\1\u0567\20\7\3\0\3\7\2\0"+
    "\5\7\32\0\20\7\1\u0568\5\7\3\0\3\7\2\0"+
    "\5\7\32\0\7\7\1\u0569\16\7\3\0\3\7\2\0"+
    "\5\7\32\0\2\7\1\u056a\23\7\3\0\3\7\2\0"+
    "\1\u056b\4\7\32\0\26\7\3\0\3\7\2\0\5\7"+
    "\32\0\15\7\1\u056c\10\7\3\0\3\7\2\0\5\7"+
    "\32\0\4\7\1\u056d\21\7\3\0\3\7\2\0\5\7"+
    "\32\0\2\7\1\u056e\23\7\3\0\3\7\2\0\5\7"+
    "\32\0\1\7\1\u056f\1\u0570\23\7\3\0\3\7\2\0"+
    "\5\7\32\0\1\u0571\25\7\3\0\3\7\2\0\1\u0572"+
    "\4\7\32\0\26\7\3\0\3\7\2\0\5\7\32\0"+
    "\1\u0573\25\7\3\0\3\7\2\0\5\7\32\0\13\7"+
    "\1\u0574\12\7\3\0\3\7\2\0\5\7\32\0\2\7"+
    "\1\u0575\23\7\3\0\3\7\2\0\5\7\32\0\13\7"+
    "\1\u0576\12\7\3\0\3\7\2\0\4\7\1\u0577\32\0"+
    "\26\7\3\0\3\7\2\0\5\7\32\0\1\u0578\25\7"+
    "\3\0\3\7\2\0\4\7\1\u0579\32\0\26\7\3\0"+
    "\3\7\2\0\1\u057a\4\7\32\0\26\7\3\0\3\7"+
    "\2\0\5\7\32\0\11\7\1\u057b\14\7\3\0\3\7"+
    "\2\0\1\u057c\4\7\32\0\26\7\3\0\3\7\2\0"+
    "\4\7\1\u057d\32\0\26\7\3\0\3\7\2\0\5\7"+
    "\32\0\5\7\1\u057e\20\7\3\0\3\7\2\0\5\7"+
    "\32\0\2\7\1\u057f\23\7\3\0\3\7\2\0\5\7"+
    "\32\0\1\u0580\25\7\3\0\3\7\2\0\5\7\32\0"+
    "\13\7\1\u0581\12\7\3\0\3\7\2\0\4\7\1\u0582"+
    "\32\0\26\7\3\0\3\7\2\0\1\u0583\4\7\32\0"+
    "\26\7";

  private static int [] zzUnpackTrans() {
    int [] result = new int[67405];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\2\0\1\11\5\1\1\11\5\1\1\11\1\1\4\11"+
    "\1\1\1\11\6\1\2\11\1\1\1\11\1\1\1\11"+
    "\1\1\2\11\25\1\1\11\13\1\1\0\24\1\2\11"+
    "\1\1\1\0\12\11\147\1\1\0\1\11\1\0\43\1"+
    "\1\11\243\1\1\0\1\1\1\0\337\1\1\0\277\1"+
    "\1\0\233\1\1\0\174\1\1\11\u012d\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[1411];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true iff the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true iff the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
    private int cadenaTest = 0;

    private List<MyToken> Tokens = new ArrayList(); 

    StringBuffer _cadenaComentario = new StringBuffer();
    private boolean _comentarioActivo = false;

    public List<MyToken> getTokens() {
        return Tokens;
    }

    public boolean comentarioActivo() {
        return this._comentarioActivo;
    }


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public Lexemas(java.io.Reader in) {
  
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 400) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() throws java.io.IOException {
    if (!zzEOFDone) {
      zzEOFDone = true;
      yyclose();
    }
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public List<MyToken> next_token() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      yychar+= zzMarkedPosL-zzStartRead;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':  // fall through
        case '\u000C':  // fall through
        case '\u0085':  // fall through
        case '\u2028':  // fall through
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn += zzCharCount;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
            zzDoEOF();
            switch (zzLexicalState) {
            case COMENTARIOMULTI: {
              Tokens.add(new MyToken("ComentarioNoCerrado", _cadenaComentario.toString(), "Error", yyline + 1, yylength(), yycolumn + 1));
        return Tokens;
            }  // fall though
            case 1412: break;
            default:
          {     Tokens.add(new MyToken("FINDELARCHIVO", yytext(), "Final", yyline + 1, yylength(), yycolumn + 1));
    return Tokens;
 }
        }
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { Tokens.add(new MyToken("Error", yytext(), "Error", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 356: break;
          case 2: 
            { Tokens.add(new MyToken("Mas", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 357: break;
          case 3: 
            { Tokens.add(new MyToken("Menos", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 358: break;
          case 4: 
            { Tokens.add(new MyToken("DatoEntero", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 359: break;
          case 5: 
            { if (yytext().length() <= 31) {
        Tokens.add(new MyToken("Identificador", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
    } else {
        Tokens.add(new MyToken("IdentificadorTruncado", yytext().substring(0, 31), "Advertencia", yyline + 1, 31, yycolumn + 1));
    }
            } 
            // fall through
          case 360: break;
          case 6: 
            { Tokens.add(new MyToken("Punto", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 361: break;
          case 7: 
            { Tokens.add(new MyToken("Salto", yytext(), "Separador", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 362: break;
          case 8: 
            { Tokens.add(new MyToken("Tabulacion", yytext(), "Separador", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 363: break;
          case 9: 
            { Tokens.add(new MyToken("Carrete", yytext(), "Separador", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 364: break;
          case 10: 
            { Tokens.add(new MyToken("Espacio", yytext(), "Separador", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 365: break;
          case 11: 
            { Tokens.add(new MyToken("Multiplicacion", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 366: break;
          case 12: 
            { Tokens.add(new MyToken("Division", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 367: break;
          case 13: 
            { Tokens.add(new MyToken("Modulo", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 368: break;
          case 14: 
            { Tokens.add(new MyToken("Menor", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 369: break;
          case 15: 
            { Tokens.add(new MyToken("Igual", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 370: break;
          case 16: 
            { Tokens.add(new MyToken("Mayor", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 371: break;
          case 17: 
            { Tokens.add(new MyToken("Not", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 372: break;
          case 18: 
            { Tokens.add(new MyToken("PuntoComa", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 373: break;
          case 19: 
            { Tokens.add(new MyToken("Coma", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 374: break;
          case 20: 
            { Tokens.add(new MyToken("CorcheteAbrir", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 375: break;
          case 21: 
            { Tokens.add(new MyToken("CorcheteCerrar", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 376: break;
          case 22: 
            { Tokens.add(new MyToken("ParentesisAbrir", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 377: break;
          case 23: 
            { Tokens.add(new MyToken("ParentesisCerrar", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 378: break;
          case 24: 
            { Tokens.add(new MyToken("LlaveAbrir", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 379: break;
          case 25: 
            { Tokens.add(new MyToken("LlaveCerrar", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 380: break;
          case 26: 
            { Tokens.add(new MyToken("Arroba", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 381: break;
          case 27: 
            { Tokens.add(new MyToken("Numeral", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 382: break;
          case 28: 
            { _cadenaComentario.append(yytext());
            } 
            // fall through
          case 383: break;
          case 29: 
            { Tokens.add(new MyToken("Comentario", yytext(), "Comentario", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 384: break;
          case 30: 
            { Tokens.add(new MyToken("DatoFloat", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 385: break;
          case 31: 
            { Tokens.add(new MyToken("NO", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 386: break;
          case 32: 
            { Tokens.add(new MyToken("StringNoCerrado", yytext(), "Error", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 387: break;
          case 33: 
            { Tokens.add(new MyToken("DatoString", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 388: break;
          case 34: 
            { Tokens.add(new MyToken("MenorIgual", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 389: break;
          case 35: 
            { Tokens.add(new MyToken("IgualIgual", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 390: break;
          case 36: 
            { Tokens.add(new MyToken("MayorIgual", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 391: break;
          case 37: 
            { Tokens.add(new MyToken("Diferente", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 392: break;
          case 38: 
            { Tokens.add(new MyToken("And", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 393: break;
          case 39: 
            { Tokens.add(new MyToken("Or", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 394: break;
          case 40: 
            { Tokens.add(new MyToken("Corchetes", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 395: break;
          case 41: 
            { Tokens.add(new MyToken("Parentesis", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 396: break;
          case 42: 
            { Tokens.add(new MyToken("Llaves", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 397: break;
          case 43: 
            { Tokens.add(new MyToken("DobleNumeral", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 398: break;
          case 44: 
            { Tokens.add(new MyToken("AT", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 399: break;
          case 45: 
            { Tokens.add(new MyToken("AS", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 400: break;
          case 46: 
            { Tokens.add(new MyToken("TO", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 401: break;
          case 47: 
            { Tokens.add(new MyToken("ON", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 402: break;
          case 48: 
            { Tokens.add(new MyToken("OR", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 403: break;
          case 49: 
            { Tokens.add(new MyToken("OF", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 404: break;
          case 50: 
            { Tokens.add(new MyToken("IN", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 405: break;
          case 51: 
            { Tokens.add(new MyToken("IS", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 406: break;
          case 52: 
            { Tokens.add(new MyToken("IF", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 407: break;
          case 53: 
            { Tokens.add(new MyToken("BY", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 408: break;
          case 54: 
            { Tokens.add(new MyToken("GO", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 409: break;
          case 55: 
            { _cadenaComentario.append(yytext());
        _comentarioActivo = false;
        yybegin(YYINITIAL);
        Tokens.add(new MyToken("Comentario", _cadenaComentario.toString(), "Comentario", yyline + 1, yylength(), yycolumn + 1));
        _cadenaComentario = new StringBuffer();
            } 
            // fall through
          case 410: break;
          case 56: 
            { Tokens.add(new MyToken("END", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 411: break;
          case 57: 
            { Tokens.add(new MyToken("NOT", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 412: break;
          case 58: 
            { Tokens.add(new MyToken("USE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 413: break;
          case 59: 
            { _cadenaComentario.append(yytext());
    _comentarioActivo = true;
    yybegin(COMENTARIOMULTI);
            } 
            // fall through
          case 414: break;
          case 60: 
            { Tokens.add(new MyToken("AND", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 415: break;
          case 61: 
            { Tokens.add(new MyToken("ANY", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 416: break;
          case 62: 
            { Tokens.add(new MyToken("ALL", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 417: break;
          case 63: 
            { Tokens.add(new MyToken("ADA", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 418: break;
          case 64: 
            { Tokens.add(new MyToken("ADD", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 419: break;
          case 65: 
            { Tokens.add(new MyToken("ARE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 420: break;
          case 66: 
            { Tokens.add(new MyToken("ASC", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 421: break;
          case 67: 
            { Tokens.add(new MyToken("AVG", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 422: break;
          case 68: 
            { Tokens.add(new MyToken("DEC", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 423: break;
          case 69: 
            { Tokens.add(new MyToken("DAY", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 424: break;
          case 70: 
            { Tokens.add(new MyToken("TOP", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 425: break;
          case 71: 
            { Tokens.add(new MyToken("SET", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 426: break;
          case 72: 
            { Tokens.add(new MyToken("SUM", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 427: break;
          case 73: 
            { Tokens.add(new MyToken("SQL", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 428: break;
          case 74: 
            { Tokens.add(new MyToken("OFF", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 429: break;
          case 75: 
            { Tokens.add(new MyToken("INT", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 430: break;
          case 76: 
            { Tokens.add(new MyToken("BIT", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 431: break;
          case 77: 
            { Tokens.add(new MyToken("KEY", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 432: break;
          case 78: 
            { Tokens.add(new MyToken("PAD", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 433: break;
          case 79: 
            { Tokens.add(new MyToken("GET", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 434: break;
          case 80: 
            { Tokens.add(new MyToken("MAX", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 435: break;
          case 81: 
            { Tokens.add(new MyToken("MIN", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 436: break;
          case 82: 
            { Tokens.add(new MyToken("FOR", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 437: break;
          case 83: 
            { Tokens.add(new MyToken("ELSE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 438: break;
          case 84: 
            { Tokens.add(new MyToken("EXEC", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 439: break;
          case 85: 
            { Tokens.add(new MyToken("EXIT", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 440: break;
          case 86: 
            { Tokens.add(new MyToken("NEXT", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 441: break;
          case 87: 
            { Tokens.add(new MyToken("NULL", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 442: break;
          case 88: 
            { Tokens.add(new MyToken("NONE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 443: break;
          case 89: 
            { Tokens.add(new MyToken("USER", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 444: break;
          case 90: 
            { Tokens.add(new MyToken("LEFT", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 445: break;
          case 91: 
            { Tokens.add(new MyToken("LAST", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 446: break;
          case 92: 
            { Tokens.add(new MyToken("LOAD", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 447: break;
          case 93: 
            { Tokens.add(new MyToken("LIKE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 448: break;
          case 94: 
            { Tokens.add(new MyToken("DENY", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 449: break;
          case 95: 
            { Tokens.add(new MyToken("DESC", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 450: break;
          case 96: 
            { Tokens.add(new MyToken("DUMP", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 451: break;
          case 97: 
            { Tokens.add(new MyToken("DATE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 452: break;
          case 98: 
            { Tokens.add(new MyToken("DROP", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 453: break;
          case 99: 
            { Tokens.add(new MyToken("DISK", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 454: break;
          case 100: 
            { Tokens.add(new MyToken("DBCC", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 455: break;
          case 101: 
            { Tokens.add(new MyToken("TRAN", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 456: break;
          case 102: 
            { Tokens.add(new MyToken("TRIM", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 457: break;
          case 103: 
            { Tokens.add(new MyToken("THEN", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 458: break;
          case 104: 
            { Tokens.add(new MyToken("TIME", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 459: break;
          case 105: 
            { Tokens.add(new MyToken("REAL", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 460: break;
          case 106: 
            { Tokens.add(new MyToken("READ", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 461: break;
          case 107: 
            { Tokens.add(new MyToken("RULE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 462: break;
          case 108: 
            { Tokens.add(new MyToken("ROWS", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 463: break;
          case 109: 
            { Tokens.add(new MyToken("YEAR", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 464: break;
          case 110: 
            { Tokens.add(new MyToken("SAVE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 465: break;
          case 111: 
            { Tokens.add(new MyToken("SOME", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 466: break;
          case 112: 
            { Tokens.add(new MyToken("SIZE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 467: break;
          case 113: 
            { Tokens.add(new MyToken("CASE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 468: break;
          case 114: 
            { Tokens.add(new MyToken("CAST", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 469: break;
          case 115: 
            { Tokens.add(new MyToken("CHAR", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 470: break;
          case 116: 
            { Tokens.add(new MyToken("HOUR", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 471: break;
          case 117: 
            { Tokens.add(new MyToken("ONLY", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 472: break;
          case 118: 
            { Tokens.add(new MyToken("OPEN", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 473: break;
          case 119: 
            { Tokens.add(new MyToken("OVER", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 474: break;
          case 120: 
            { Tokens.add(new MyToken("INTO", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 475: break;
          case 121: 
            { Tokens.add(new MyToken("ZONE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 476: break;
          case 122: 
            { Tokens.add(new MyToken("BULK", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 477: break;
          case 123: 
            { Tokens.add(new MyToken("BOTH", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 478: break;
          case 124: 
            { Tokens.add(new MyToken("KILL", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 479: break;
          case 125: 
            { Tokens.add(new MyToken("PLAN", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 480: break;
          case 126: 
            { Tokens.add(new MyToken("PROC", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 481: break;
          case 127: 
            { Tokens.add(new MyToken("GOTO", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 482: break;
          case 128: 
            { Tokens.add(new MyToken("WHEN", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 483: break;
          case 129: 
            { Tokens.add(new MyToken("WORK", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 484: break;
          case 130: 
            { Tokens.add(new MyToken("WITH", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 485: break;
          case 131: 
            { Tokens.add(new MyToken("VIEW", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 486: break;
          case 132: 
            { Tokens.add(new MyToken("FULL", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 487: break;
          case 133: 
            { Tokens.add(new MyToken("FROM", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 488: break;
          case 134: 
            { Tokens.add(new MyToken("FILE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 489: break;
          case 135: 
            { Tokens.add(new MyToken("JOIN", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 490: break;
          case 136: 
            { Tokens.add(new MyToken("NAMES", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 491: break;
          case 137: 
            { Tokens.add(new MyToken("NCHAR", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 492: break;
          case 138: 
            { Tokens.add(new MyToken("UNION", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 493: break;
          case 139: 
            { Tokens.add(new MyToken("USAGE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 494: break;
          case 140: 
            { Tokens.add(new MyToken("USING", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 495: break;
          case 141: 
            { Tokens.add(new MyToken("UPPER", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 496: break;
          case 142: 
            { Tokens.add(new MyToken("LEVEL", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 497: break;
          case 143: 
            { Tokens.add(new MyToken("LOCAL", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 498: break;
          case 144: 
            { Tokens.add(new MyToken("LOWER", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 499: break;
          case 145: 
            { Tokens.add(new MyToken("ALTER", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 500: break;
          case 146: 
            { Tokens.add(new MyToken("TABLE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 501: break;
          case 147: 
            { Tokens.add(new MyToken("RIGHT", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 502: break;
          case 148: 
            { Tokens.add(new MyToken("SPACE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 503: break;
          case 149: 
            { Tokens.add(new MyToken("SQLCA", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 504: break;
          case 150: 
            { Tokens.add(new MyToken("CLOSE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 505: break;
          case 151: 
            { Tokens.add(new MyToken("CROSS", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 506: break;
          case 152: 
            { Tokens.add(new MyToken("CHECK", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 507: break;
          case 153: 
            { Tokens.add(new MyToken("COUNT", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 508: break;
          case 154: 
            { Tokens.add(new MyToken("OUTER", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 509: break;
          case 155: 
            { Tokens.add(new MyToken("ORDER", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 510: break;
          case 156: 
            { Tokens.add(new MyToken("INNER", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 511: break;
          case 157: 
            { Tokens.add(new MyToken("INDEX", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 512: break;
          case 158: 
            { Tokens.add(new MyToken("INPUT", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 513: break;
          case 159: 
            { Tokens.add(new MyToken("BEGIN", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 514: break;
          case 160: 
            { Tokens.add(new MyToken("BREAK", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 515: break;
          case 161: 
            { Tokens.add(new MyToken("PRINT", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 516: break;
          case 162: 
            { Tokens.add(new MyToken("PRIOR", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 517: break;
          case 163: 
            { Tokens.add(new MyToken("PIVOT", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 518: break;
          case 164: 
            { Tokens.add(new MyToken("GRANT", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 519: break;
          case 165: 
            { Tokens.add(new MyToken("GROUP", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 520: break;
          case 166: 
            { Tokens.add(new MyToken("WRITE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 521: break;
          case 167: 
            { Tokens.add(new MyToken("WHERE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 522: break;
          case 168: 
            { Tokens.add(new MyToken("WHILE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 523: break;
          case 169: 
            { Tokens.add(new MyToken("MERGE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 524: break;
          case 170: 
            { Tokens.add(new MyToken("MATCH", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 525: break;
          case 171: 
            { Tokens.add(new MyToken("MONTH", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 526: break;
          case 172: 
            { Tokens.add(new MyToken("VALUE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 527: break;
          case 173: 
            { Tokens.add(new MyToken("FETCH", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 528: break;
          case 174: 
            { Tokens.add(new MyToken("FLOAT", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 529: break;
          case 175: 
            { Tokens.add(new MyToken("FALSO", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 530: break;
          case 176: 
            { Tokens.add(new MyToken("FOUND", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 531: break;
          case 177: 
            { Tokens.add(new MyToken("FIRST", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 532: break;
          case 178: 
            { Tokens.add(new MyToken("ERRLVL", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 533: break;
          case 179: 
            { Tokens.add(new MyToken("ESCAPE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 534: break;
          case 180: 
            { Tokens.add(new MyToken("EXCEPT", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 535: break;
          case 181: 
            { Tokens.add(new MyToken("EXISTS", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 536: break;
          case 182: 
            { Tokens.add(new MyToken("NULLIF", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 537: break;
          case 183: 
            { Tokens.add(new MyToken("UNIQUE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 538: break;
          case 184: 
            { Tokens.add(new MyToken("UPDATE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 539: break;
          case 185: 
            { Tokens.add(new MyToken("LINENO", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 540: break;
          case 186: 
            { Tokens.add(new MyToken("ACTION", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 541: break;
          case 187: 
            { Tokens.add(new MyToken("DELETE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 542: break;
          case 188: 
            { Tokens.add(new MyToken("DOUBLE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 543: break;
          case 189: 
            { Tokens.add(new MyToken("DOMAIN", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 544: break;
          case 190: 
            { Tokens.add(new MyToken("RETURN", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 545: break;
          case 191: 
            { Tokens.add(new MyToken("REVERT", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 546: break;
          case 192: 
            { Tokens.add(new MyToken("REVOKE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 547: break;
          case 193: 
            { Tokens.add(new MyToken("SELECT", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 548: break;
          case 194: 
            { Tokens.add(new MyToken("SECOND", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 549: break;
          case 195: 
            { Tokens.add(new MyToken("SCROLL", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 550: break;
          case 196: 
            { Tokens.add(new MyToken("SCHEMA", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 551: break;
          case 197: 
            { Tokens.add(new MyToken("CURSOR", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 552: break;
          case 198: 
            { Tokens.add(new MyToken("CREATE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 553: break;
          case 199: 
            { Tokens.add(new MyToken("COLUMN", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 554: break;
          case 200: 
            { Tokens.add(new MyToken("COMMIT", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 555: break;
          case 201: 
            { Tokens.add(new MyToken("HAVING", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 556: break;
          case 202: 
            { Tokens.add(new MyToken("OUTPUT", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 557: break;
          case 203: 
            { Tokens.add(new MyToken("OPTION", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 558: break;
          case 204: 
            { Tokens.add(new MyToken("INSERT", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 559: break;
          case 205: 
            { Tokens.add(new MyToken("BACKUP", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 560: break;
          case 206: 
            { Tokens.add(new MyToken("BROWSE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 561: break;
          case 207: 
            { Tokens.add(new MyToken("PUBLIC", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 562: break;
          case 208: 
            { Tokens.add(new MyToken("PASCAL", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 563: break;
          case 209: 
            { Tokens.add(new MyToken("GLOBAL", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 564: break;
          case 210: 
            { Tokens.add(new MyToken("WITHIN", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 565: break;
          case 211: 
            { Tokens.add(new MyToken("MODULE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 566: break;
          case 212: 
            { Tokens.add(new MyToken("MINUTE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 567: break;
          case 213: 
            { Tokens.add(new MyToken("VALUES", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 568: break;
          case 214: 
            { Tokens.add(new MyToken("EXECUTE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 569: break;
          case 215: 
            { Tokens.add(new MyToken("EXTRACT", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 570: break;
          case 216: 
            { Tokens.add(new MyToken("NUMERIC", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 571: break;
          case 217: 
            { Tokens.add(new MyToken("NATURAL", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 572: break;
          case 218: 
            { Tokens.add(new MyToken("NOCHECK", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 573: break;
          case 219: 
            { Tokens.add(new MyToken("UNKNOWN", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 574: break;
          case 220: 
            { Tokens.add(new MyToken("UNPIVOT", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 575: break;
          case 221: 
            { Tokens.add(new MyToken("LEADING", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 576: break;
          case 222: 
            { Tokens.add(new MyToken("DECLARE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 577: break;
          case 223: 
            { Tokens.add(new MyToken("DECIMAL", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 578: break;
          case 224: 
            { Tokens.add(new MyToken("DEFAULT", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 579: break;
          case 225: 
            { Tokens.add(new MyToken("TRIGGER", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 580: break;
          case 226: 
            { Tokens.add(new MyToken("TSEQUAL", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 581: break;
          case 227: 
            { Tokens.add(new MyToken("RESTORE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 582: break;
          case 228: 
            { Tokens.add(new MyToken("SETUSER", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 583: break;
          case 229: 
            { Tokens.add(new MyToken("SESSION", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 584: break;
          case 230: 
            { Tokens.add(new MyToken("SECTION", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 585: break;
          case 231: 
            { Tokens.add(new MyToken("SQLCODE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 586: break;
          case 232: 
            { Tokens.add(new MyToken("CURRENT", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 587: break;
          case 233: 
            { Tokens.add(new MyToken("CATALOG", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 588: break;
          case 234: 
            { Tokens.add(new MyToken("CASCADE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 589: break;
          case 235: 
            { Tokens.add(new MyToken("CONNECT", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 590: break;
          case 236: 
            { Tokens.add(new MyToken("CONVERT", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 591: break;
          case 237: 
            { Tokens.add(new MyToken("COLLATE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 592: break;
          case 238: 
            { Tokens.add(new MyToken("COMPUTE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 593: break;
          case 239: 
            { Tokens.add(new MyToken("OPENXML", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 594: break;
          case 240: 
            { Tokens.add(new MyToken("OFFSETS", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 595: break;
          case 241: 
            { Tokens.add(new MyToken("INTEGER", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 596: break;
          case 242: 
            { Tokens.add(new MyToken("INCLUDE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 597: break;
          case 243: 
            { Tokens.add(new MyToken("BETWEEN", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 598: break;
          case 244: 
            { Tokens.add(new MyToken("PERCENT", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 599: break;
          case 245: 
            { Tokens.add(new MyToken("PARTIAL", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 600: break;
          case 246: 
            { Tokens.add(new MyToken("PREPARE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 601: break;
          case 247: 
            { Tokens.add(new MyToken("PRIMARY", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 602: break;
          case 248: 
            { Tokens.add(new MyToken("WAITFOR", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 603: break;
          case 249: 
            { Tokens.add(new MyToken("VARYING", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 604: break;
          case 250: 
            { Tokens.add(new MyToken("VARCHAR", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 605: break;
          case 251: 
            { Tokens.add(new MyToken("FOREIGN", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 606: break;
          case 252: 
            { Tokens.add(new MyToken("FORTRAN", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 607: break;
          case 253: 
            { Tokens.add(new MyToken("ENDEXEC", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 608: break;
          case 254: 
            { Tokens.add(new MyToken("EXTERNAL", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 609: break;
          case 255: 
            { Tokens.add(new MyToken("NATIONAL", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 610: break;
          case 256: 
            { Tokens.add(new MyToken("LANGUAGE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 611: break;
          case 257: 
            { Tokens.add(new MyToken("ALLOCATE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 612: break;
          case 258: 
            { Tokens.add(new MyToken("ABSOLUTE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 613: break;
          case 259: 
            { Tokens.add(new MyToken("DESCRIBE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 614: break;
          case 260: 
            { Tokens.add(new MyToken("DEFERRED", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 615: break;
          case 261: 
            { Tokens.add(new MyToken("DATABASE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 616: break;
          case 262: 
            { Tokens.add(new MyToken("DISTINCT", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 617: break;
          case 263: 
            { Tokens.add(new MyToken("TEXTSIZE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 618: break;
          case 264: 
            { Tokens.add(new MyToken("TRUNCATE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 619: break;
          case 265: 
            { Tokens.add(new MyToken("TRAILING", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 620: break;
          case 266: 
            { Tokens.add(new MyToken("RELATIVE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 621: break;
          case 267: 
            { Tokens.add(new MyToken("READTEXT", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 622: break;
          case 268: 
            { Tokens.add(new MyToken("RESTRICT", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 623: break;
          case 269: 
            { Tokens.add(new MyToken("ROLLBACK", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 624: break;
          case 270: 
            { Tokens.add(new MyToken("ROWCOUNT", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 625: break;
          case 271: 
            { Tokens.add(new MyToken("SHUTDOWN", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 626: break;
          case 272: 
            { Tokens.add(new MyToken("SMALLINT", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 627: break;
          case 273: 
            { Tokens.add(new MyToken("SQLERROR", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 628: break;
          case 274: 
            { Tokens.add(new MyToken("SQLSTATE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 629: break;
          case 275: 
            { Tokens.add(new MyToken("CASCADED", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 630: break;
          case 276: 
            { Tokens.add(new MyToken("CONTAINS", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 631: break;
          case 277: 
            { Tokens.add(new MyToken("CONTINUE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 632: break;
          case 278: 
            { Tokens.add(new MyToken("COALESCE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 633: break;
          case 279: 
            { Tokens.add(new MyToken("HOLDLOCK", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 634: break;
          case 280: 
            { Tokens.add(new MyToken("OVERLAPS", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 635: break;
          case 281: 
            { Tokens.add(new MyToken("INTERVAL", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 636: break;
          case 282: 
            { Tokens.add(new MyToken("IDENTITY", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 637: break;
          case 283: 
            { Tokens.add(new MyToken("PRESERVE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 638: break;
          case 284: 
            { Tokens.add(new MyToken("POSITION", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 639: break;
          case 285: 
            { Tokens.add(new MyToken("WHENEVER", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 640: break;
          case 286: 
            { Tokens.add(new MyToken("FUNCTION", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 641: break;
          case 287: 
            { Tokens.add(new MyToken("FREETEXT", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 642: break;
          case 288: 
            { Tokens.add(new MyToken("EXCEPTION", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 643: break;
          case 289: 
            { Tokens.add(new MyToken("ASSERTION", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 644: break;
          case 290: 
            { Tokens.add(new MyToken("TEMPORARY", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 645: break;
          case 291: 
            { Tokens.add(new MyToken("TRANSLATE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 646: break;
          case 292: 
            { Tokens.add(new MyToken("TIMESTAMP", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 647: break;
          case 293: 
            { Tokens.add(new MyToken("RAISERROR", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 648: break;
          case 294: 
            { Tokens.add(new MyToken("SUBSTRING", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 649: break;
          case 295: 
            { Tokens.add(new MyToken("CLUSTERED", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 650: break;
          case 296: 
            { Tokens.add(new MyToken("CHARACTER", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 651: break;
          case 297: 
            { Tokens.add(new MyToken("COLLATION", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 652: break;
          case 298: 
            { Tokens.add(new MyToken("OPENQUERY", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 653: break;
          case 299: 
            { Tokens.add(new MyToken("INDICATOR", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 654: break;
          case 300: 
            { Tokens.add(new MyToken("INTERSECT", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 655: break;
          case 301: 
            { Tokens.add(new MyToken("INITIALLY", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 656: break;
          case 302: 
            { Tokens.add(new MyToken("ISOLATION", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 657: break;
          case 303: 
            { Tokens.add(new MyToken("IMMEDIATE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 658: break;
          case 304: 
            { Tokens.add(new MyToken("PRECISION", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 659: break;
          case 305: 
            { Tokens.add(new MyToken("PROCEDURE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 660: break;
          case 306: 
            { Tokens.add(new MyToken("WRITETEXT", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 661: break;
          case 307: 
            { Tokens.add(new MyToken("VERDADERO", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 662: break;
          case 308: 
            { Tokens.add(new MyToken("UPDATETEXT", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 663: break;
          case 309: 
            { Tokens.add(new MyToken("DEALLOCATE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 664: break;
          case 310: 
            { Tokens.add(new MyToken("DESCRIPTOR", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 665: break;
          case 311: 
            { Tokens.add(new MyToken("DEFERRABLE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 666: break;
          case 312: 
            { Tokens.add(new MyToken("DISCONNECT", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 667: break;
          case 313: 
            { Tokens.add(new MyToken("REFERENCES", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 668: break;
          case 314: 
            { Tokens.add(new MyToken("ROWGUIDCOL", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 669: break;
          case 315: 
            { Tokens.add(new MyToken("STATISTICS", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 670: break;
          case 316: 
            { Tokens.add(new MyToken("SQLWARNING", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 671: break;
          case 317: 
            { Tokens.add(new MyToken("CHECKPOINT", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 672: break;
          case 318: 
            { Tokens.add(new MyToken("CONNECTION", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 673: break;
          case 319: 
            { Tokens.add(new MyToken("CONSTRAINT", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 674: break;
          case 320: 
            { Tokens.add(new MyToken("BIT_LENGTH", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 675: break;
          case 321: 
            { Tokens.add(new MyToken("PRIVILEGES", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 676: break;
          case 322: 
            { Tokens.add(new MyToken("FILLFACTOR", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 677: break;
          case 323: 
            { Tokens.add(new MyToken("NOCLUSTERED", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 678: break;
          case 324: 
            { Tokens.add(new MyToken("DIAGNOSTICS", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 679: break;
          case 325: 
            { Tokens.add(new MyToken("DISTRIBUTED", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 680: break;
          case 326: 
            { Tokens.add(new MyToken("TABLESAMPLE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 681: break;
          case 327: 
            { Tokens.add(new MyToken("TRANSLATION", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 682: break;
          case 328: 
            { Tokens.add(new MyToken("TRANSACTION", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 683: break;
          case 329: 
            { Tokens.add(new MyToken("TRY_CONVERT", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 684: break;
          case 330: 
            { Tokens.add(new MyToken("RECONFIGURE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 685: break;
          case 331: 
            { Tokens.add(new MyToken("REPLICATION", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 686: break;
          case 332: 
            { Tokens.add(new MyToken("SYSTEM_USER", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 687: break;
          case 333: 
            { Tokens.add(new MyToken("CHAR_LENGTH", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 688: break;
          case 334: 
            { Tokens.add(new MyToken("CONSTRAINTS", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 689: break;
          case 335: 
            { Tokens.add(new MyToken("INSENSITIVE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 690: break;
          case 336: 
            { Tokens.add(new MyToken("IDENTITYCOL", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 691: break;
          case 337: 
            { Tokens.add(new MyToken("SESSION_USER", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 692: break;
          case 338: 
            { Tokens.add(new MyToken("CURRENT_USER", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 693: break;
          case 339: 
            { Tokens.add(new MyToken("CURRENT_DATE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 694: break;
          case 340: 
            { Tokens.add(new MyToken("CURRENT_TIME", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 695: break;
          case 341: 
            { Tokens.add(new MyToken("OCTET_LENGTH", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 696: break;
          case 342: 
            { Tokens.add(new MyToken("AUTHORIZATION", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 697: break;
          case 343: 
            { Tokens.add(new MyToken("TIMEZONE_HOUR", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 698: break;
          case 344: 
            { Tokens.add(new MyToken("SECURITYAUDIT", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 699: break;
          case 345: 
            { Tokens.add(new MyToken("CONTAINSTABLE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 700: break;
          case 346: 
            { Tokens.add(new MyToken("CORRESPONDING", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 701: break;
          case 347: 
            { Tokens.add(new MyToken("FREETEXTTABLE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 702: break;
          case 348: 
            { Tokens.add(new MyToken("OPENDATASOURCE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 703: break;
          case 349: 
            { Tokens.add(new MyToken("TIMEZONE_MINUTE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 704: break;
          case 350: 
            { Tokens.add(new MyToken("IDENTITY_INSERT", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 705: break;
          case 351: 
            { Tokens.add(new MyToken("CHARACTER_LENGTH", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 706: break;
          case 352: 
            { Tokens.add(new MyToken("CURRENT_TIMESTAMP", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 707: break;
          case 353: 
            { Tokens.add(new MyToken("SEMANTICKEYPHRASETAB", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 708: break;
          case 354: 
            { Tokens.add(new MyToken("SEMANTICSIMILARITYTA", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 709: break;
          case 355: 
            { Tokens.add(new MyToken("SEMANTICSIMILARITYDE", yytext(), "Reservada", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 710: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
