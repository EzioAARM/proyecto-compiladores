/* The following code was generated by JFlex 1.7.0 */

package AnalizadorLexico;
import java.util.List;
import java.util.ArrayList;

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>Lexemas.flex</tt>
 */
public class Lexemas {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;
  public static final int COMENTARIOMULTI = 2;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0,  0,  1, 1
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\20\1\16\1\22\1\22\1\21\22\0\1\20\1\31\1\0"+
    "\1\45\1\0\1\25\1\32\1\15\1\40\1\41\1\23\1\1\1\35"+
    "\1\2\1\7\1\24\1\3\1\3\10\3\1\0\1\34\1\26\1\27"+
    "\1\30\1\0\1\44\1\46\1\61\1\54\1\47\1\10\1\70\1\64"+
    "\1\55\1\57\1\72\1\62\1\14\1\66\1\12\1\56\1\63\1\73"+
    "\1\51\1\53\1\50\1\13\1\67\1\65\1\71\1\52\1\60\1\36"+
    "\1\0\1\37\1\0\1\5\1\0\4\4\1\11\25\4\1\42\1\33"+
    "\1\43\7\0\1\22\56\0\1\17\u05ab\0\12\6\206\0\12\6\306\0"+
    "\12\6\u019c\0\12\6\166\0\12\6\166\0\12\6\166\0\12\6\166\0"+
    "\12\6\166\0\12\6\166\0\12\6\166\0\12\6\166\0\12\6\166\0"+
    "\12\6\140\0\12\6\166\0\12\6\106\0\12\6\u0116\0\12\6\106\0"+
    "\12\6\u0746\0\12\6\46\0\12\6\u012c\0\12\6\200\0\12\6\246\0"+
    "\12\6\6\0\12\6\266\0\12\6\126\0\12\6\206\0\12\6\6\0"+
    "\12\6\u03ce\0\1\22\1\22\u85f6\0\12\6\u02a6\0\12\6\46\0\12\6"+
    "\306\0\12\6\26\0\12\6\126\0\12\6\u0196\0\12\6\u5316\0\12\6"+
    "\u0586\0\12\6\u0bbc\0\12\6\200\0\12\6\74\0\12\6\220\0\12\6"+
    "\u0116\0\12\6\u0156\0\12\6\166\0\12\6\u0176\0\12\6\146\0\12\6"+
    "\146\0\12\6\u01a6\0\12\6\u0366\0\12\6\u4e06\0\12\6\346\0\12\6"+
    "\u6c74\0\62\6\u1150\0\12\6\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\u16b5\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\2\0\1\1\1\2\1\3\1\4\1\5\1\1\1\6"+
    "\4\5\1\1\1\7\1\1\1\10\1\11\1\12\1\13"+
    "\1\14\1\15\1\16\2\1\1\17\1\20\1\21\1\22"+
    "\1\23\1\24\1\25\1\26\1\27\1\30\24\5\14\31"+
    "\1\0\1\32\1\33\11\5\1\34\7\5\1\35\1\36"+
    "\2\35\1\0\1\37\1\40\1\41\1\42\1\43\1\44"+
    "\1\45\1\46\1\47\1\50\4\5\1\51\1\5\1\52"+
    "\17\5\1\53\33\5\1\54\1\5\1\55\3\5\1\56"+
    "\1\57\1\5\1\60\1\5\1\61\5\5\1\62\16\5"+
    "\1\63\24\5\1\0\1\64\1\0\1\65\16\5\1\66"+
    "\4\5\1\67\16\5\2\70\1\71\1\72\1\5\1\73"+
    "\1\5\1\74\1\75\1\76\1\5\1\77\2\5\1\100"+
    "\4\5\1\101\3\5\1\102\17\5\1\103\20\5\1\104"+
    "\4\5\1\105\12\5\1\106\31\5\1\107\2\5\1\110"+
    "\17\5\1\111\1\112\4\5\1\113\7\5\1\114\14\5"+
    "\1\115\2\5\1\116\14\5\1\117\3\5\1\0\1\33"+
    "\1\0\1\120\2\5\1\121\3\5\1\122\1\5\1\123"+
    "\1\124\5\5\1\125\6\5\1\126\6\5\1\127\1\5"+
    "\1\130\1\131\3\5\1\132\6\5\1\133\2\5\1\134"+
    "\4\5\1\135\1\136\1\5\1\137\5\5\1\140\1\141"+
    "\4\5\1\142\3\5\1\143\1\5\1\144\1\145\1\5"+
    "\1\146\1\147\7\5\1\150\2\5\1\151\3\5\1\152"+
    "\10\5\1\153\5\5\1\154\1\155\13\5\1\156\1\157"+
    "\4\5\1\160\14\5\1\161\1\5\1\162\4\5\1\163"+
    "\1\5\1\164\5\5\1\165\7\5\1\166\2\5\1\167"+
    "\3\5\1\170\1\5\1\171\2\5\1\172\5\5\1\173"+
    "\11\5\1\174\2\5\1\175\2\5\1\176\1\177\11\5"+
    "\1\200\2\5\1\201\3\5\1\202\3\5\1\203\2\5"+
    "\1\204\1\33\1\0\13\5\1\205\1\206\2\5\1\207"+
    "\3\5\1\210\1\211\1\5\1\212\1\5\1\213\1\5"+
    "\1\214\1\215\3\5\1\216\23\5\1\217\26\5\1\220"+
    "\15\5\1\221\3\5\1\222\5\5\1\223\3\5\1\224"+
    "\1\225\7\5\1\226\10\5\1\227\1\5\1\230\7\5"+
    "\1\231\1\232\7\5\1\233\4\5\1\234\1\5\1\235"+
    "\12\5\1\236\1\237\3\5\1\240\1\5\1\241\1\242"+
    "\1\5\1\243\1\5\1\244\1\245\1\5\1\246\1\247"+
    "\1\250\3\5\1\251\2\5\1\252\1\5\1\253\1\254"+
    "\1\5\1\255\3\5\1\256\1\0\1\257\1\260\3\5"+
    "\1\261\1\262\1\263\5\5\1\264\2\5\1\265\2\5"+
    "\1\266\3\5\1\267\1\5\1\270\7\5\1\271\1\272"+
    "\22\5\1\273\4\5\1\274\1\275\5\5\1\276\4\5"+
    "\1\277\4\5\1\300\1\301\7\5\1\302\3\5\1\303"+
    "\10\5\1\304\4\5\1\305\1\306\1\5\1\307\4\5"+
    "\1\310\7\5\1\311\6\5\1\312\1\313\2\5\1\314"+
    "\1\5\1\315\7\5\1\316\3\5\1\317\1\320\1\321"+
    "\1\5\1\322\7\5\1\0\1\323\1\5\1\324\1\5"+
    "\1\325\1\326\2\5\1\327\1\330\1\331\1\5\1\332"+
    "\10\5\1\333\1\334\2\5\1\335\15\5\1\336\1\337"+
    "\5\5\1\340\7\5\1\341\1\342\1\5\1\343\10\5"+
    "\1\344\1\5\1\345\1\5\1\346\1\347\3\5\1\350"+
    "\3\5\1\351\1\352\3\5\1\353\3\5\1\354\2\5"+
    "\1\355\3\5\1\356\1\5\1\357\4\5\1\360\1\5"+
    "\1\361\1\362\2\5\1\363\1\5\1\364\2\5\1\365"+
    "\3\5\1\366\1\367\2\5\1\370\1\371\1\5\1\372"+
    "\1\373\1\5\1\374\2\5\1\375\1\5\1\376\1\5"+
    "\1\377\1\5\1\u0100\1\5\1\u0101\1\5\1\u0102\2\5"+
    "\1\u0103\2\5\1\u0104\1\5\1\u0105\2\5\1\u0106\3\5"+
    "\1\u0107\1\u0108\1\u0109\4\5\1\u010a\1\u010b\7\5\1\u010c"+
    "\1\u010d\1\u010e\1\u010f\3\5\1\u0110\4\5\1\u0111\1\u0112"+
    "\2\5\1\u0113\1\5\1\u0114\3\5\1\u0115\2\5\1\u0116"+
    "\2\5\1\u0117\3\5\1\u0118\3\5\1\u0119\1\5\1\u011a"+
    "\1\5\1\u011b\1\u011c\1\5\1\u011d\3\5\1\u011e\6\5"+
    "\1\u011f\1\5\1\u0120\3\5\1\u0121\4\5\1\u0122\5\5"+
    "\1\u0123\6\5\1\u0124\2\5\1\u0125\3\5\1\u0126\3\5"+
    "\1\u0127\1\u0128\1\u0129\1\5\1\u012a\2\5\1\u012b\1\u012c"+
    "\1\5\1\u012d\1\u012e\1\5\1\u012f\1\u0130\3\5\1\u0131"+
    "\1\5\1\u0132\1\u0133\1\u0134\2\5\1\u0135\10\5\1\u0136"+
    "\1\u0137\4\5\1\u0138\1\5\1\u0139\3\5\1\u013a\2\5"+
    "\1\u013b\1\5\1\u013c\6\5\1\u013d\1\u013e\1\5\1\u013f"+
    "\1\u0140\1\5\1\u0141\1\u0142\1\u0143\1\u0144\1\u0145\1\u0146"+
    "\2\5\1\u0147\1\u0148\4\5\1\u0149\3\5\1\u014a\2\5"+
    "\1\u014b\3\5\1\u014c\1\5\1\u014d\4\5\1\u014e\3\5"+
    "\1\u014f\1\u0150\1\u0151\3\5\1\u0152\3\5\1\u0153\1\u0154"+
    "\1\5\1\u0155\4\5\1\u0156\1\u0157\2\5\1\u0158\5\5"+
    "\1\u0159\1\5\1\u015a\4\5\1\u015b\3\5\1\u015c\2\5"+
    "\1\u015d\15\5\1\u015e\1\5\1\u015f\6\5\1\u0160";

  private static int [] zzUnpackAction() {
    int [] result = new int[1408];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\74\0\170\0\264\0\360\0\u012c\0\u0168\0\u01a4"+
    "\0\170\0\u01e0\0\u021c\0\u0258\0\u0294\0\u02d0\0\170\0\u030c"+
    "\0\170\0\u0348\0\170\0\u0384\0\u03c0\0\u03fc\0\u0438\0\u0474"+
    "\0\u04b0\0\170\0\170\0\u04ec\0\170\0\u0528\0\170\0\u0564"+
    "\0\170\0\170\0\u05a0\0\u05dc\0\u0618\0\u0654\0\u0690\0\u06cc"+
    "\0\u0708\0\u0744\0\u0780\0\u07bc\0\u07f8\0\u0834\0\u0870\0\u08ac"+
    "\0\u08e8\0\u0924\0\u0960\0\u099c\0\u09d8\0\u0a14\0\u0a50\0\170"+
    "\0\u0a8c\0\u0384\0\u03c0\0\u03fc\0\u0438\0\u0474\0\u04b0\0\u04ec"+
    "\0\u0528\0\u0564\0\u05a0\0\u01a4\0\u0ac8\0\u0b04\0\u0b40\0\u0b7c"+
    "\0\u0bb8\0\u0bf4\0\u0c30\0\u0c6c\0\u0ca8\0\u0ce4\0\u0d20\0\u0d5c"+
    "\0\u0d98\0\u0dd4\0\u0e10\0\u0e4c\0\u0e88\0\u0ec4\0\u0f00\0\u02d0"+
    "\0\170\0\170\0\u030c\0\u0f3c\0\170\0\170\0\170\0\170"+
    "\0\170\0\170\0\170\0\170\0\170\0\170\0\u0f78\0\u0fb4"+
    "\0\u0ff0\0\u102c\0\u0168\0\u1068\0\u10a4\0\u10e0\0\u111c\0\u1158"+
    "\0\u1194\0\u11d0\0\u120c\0\u1248\0\u1284\0\u12c0\0\u12fc\0\u1338"+
    "\0\u1374\0\u13b0\0\u13ec\0\u1428\0\u1464\0\u14a0\0\u14dc\0\u1518"+
    "\0\u1554\0\u1590\0\u15cc\0\u1608\0\u1644\0\u1680\0\u16bc\0\u16f8"+
    "\0\u1734\0\u1770\0\u17ac\0\u17e8\0\u1824\0\u1860\0\u189c\0\u18d8"+
    "\0\u1914\0\u1950\0\u198c\0\u19c8\0\u1a04\0\u1a40\0\u1a7c\0\u1ab8"+
    "\0\u1af4\0\u1b30\0\u1b6c\0\u1ba8\0\u1be4\0\u1c20\0\u1c5c\0\u1c98"+
    "\0\u1cd4\0\u1d10\0\u1d4c\0\u0168\0\u1d88\0\u1dc4\0\u1e00\0\u1e3c"+
    "\0\u1e78\0\u0168\0\u1eb4\0\u1ef0\0\u1f2c\0\u1f68\0\u1fa4\0\u1fe0"+
    "\0\u201c\0\u2058\0\u2094\0\u20d0\0\u210c\0\u2148\0\u2184\0\u21c0"+
    "\0\u21fc\0\u2238\0\u2274\0\u22b0\0\u22ec\0\u2328\0\u2364\0\u23a0"+
    "\0\u23dc\0\u2418\0\u2454\0\u2490\0\u24cc\0\u2508\0\u2544\0\u2580"+
    "\0\u25bc\0\u25f8\0\u2634\0\u2670\0\u26ac\0\u0a8c\0\170\0\u26e8"+
    "\0\u2724\0\u2760\0\u279c\0\u27d8\0\u2814\0\u2850\0\u288c\0\u28c8"+
    "\0\u2904\0\u2940\0\u297c\0\u29b8\0\u29f4\0\u2a30\0\u2a6c\0\u0168"+
    "\0\u2aa8\0\u2ae4\0\u2b20\0\u2b5c\0\u2b98\0\u2bd4\0\u2c10\0\u2c4c"+
    "\0\u2c88\0\u2cc4\0\u2d00\0\u2d3c\0\u2d78\0\u2db4\0\u2df0\0\u2e2c"+
    "\0\u2e68\0\u2ea4\0\u2ee0\0\170\0\u0f3c\0\u0168\0\u0168\0\u2f1c"+
    "\0\u2f58\0\u2f94\0\u0168\0\u0168\0\u0168\0\u2fd0\0\u0168\0\u300c"+
    "\0\u3048\0\u0168\0\u3084\0\u30c0\0\u30fc\0\u3138\0\u3174\0\u31b0"+
    "\0\u31ec\0\u3228\0\u0168\0\u3264\0\u32a0\0\u32dc\0\u3318\0\u3354"+
    "\0\u3390\0\u33cc\0\u3408\0\u3444\0\u3480\0\u34bc\0\u34f8\0\u3534"+
    "\0\u3570\0\u35ac\0\u0168\0\u35e8\0\u3624\0\u3660\0\u369c\0\u36d8"+
    "\0\u3714\0\u3750\0\u378c\0\u37c8\0\u3804\0\u3840\0\u387c\0\u38b8"+
    "\0\u38f4\0\u3930\0\u396c\0\u39a8\0\u39e4\0\u3a20\0\u3a5c\0\u3a98"+
    "\0\u0168\0\u3ad4\0\u3b10\0\u3b4c\0\u3b88\0\u3bc4\0\u3c00\0\u3c3c"+
    "\0\u3c78\0\u3cb4\0\u3cf0\0\u3d2c\0\u3d68\0\u3da4\0\u3de0\0\u3e1c"+
    "\0\u3e58\0\u3e94\0\u3ed0\0\u3f0c\0\u3f48\0\u3f84\0\u3fc0\0\u3ffc"+
    "\0\u4038\0\u4074\0\u40b0\0\u40ec\0\u4128\0\u4164\0\u41a0\0\u41dc"+
    "\0\u4218\0\u4254\0\u4290\0\u42cc\0\u4308\0\u4344\0\u4380\0\u43bc"+
    "\0\u43f8\0\u4434\0\u4470\0\u44ac\0\u44e8\0\u4524\0\u4560\0\u459c"+
    "\0\u45d8\0\u4614\0\u4650\0\u468c\0\u46c8\0\u4704\0\u4740\0\u477c"+
    "\0\u47b8\0\u0168\0\u47f4\0\u4830\0\u486c\0\u48a8\0\u0168\0\u48e4"+
    "\0\u4920\0\u495c\0\u4998\0\u49d4\0\u4a10\0\u4a4c\0\u0168\0\u4a88"+
    "\0\u4ac4\0\u4b00\0\u4b3c\0\u4b78\0\u4bb4\0\u4bf0\0\u4c2c\0\u4c68"+
    "\0\u4ca4\0\u4ce0\0\u4d1c\0\u0168\0\u4d58\0\u4d94\0\u4dd0\0\u4e0c"+
    "\0\u4e48\0\u4e84\0\u4ec0\0\u4efc\0\u4f38\0\u4f74\0\u4fb0\0\u4fec"+
    "\0\u5028\0\u5064\0\u50a0\0\u50dc\0\u5118\0\u5154\0\u5190\0\u51cc"+
    "\0\u5208\0\u5244\0\u0168\0\u5280\0\u52bc\0\u52f8\0\u5334\0\u5370"+
    "\0\u53ac\0\u0168\0\u53e8\0\u0168\0\u5424\0\u5460\0\u549c\0\u54d8"+
    "\0\u5514\0\u5550\0\u0168\0\u558c\0\u55c8\0\u5604\0\u5640\0\u567c"+
    "\0\u56b8\0\u0168\0\u56f4\0\u5730\0\u576c\0\u57a8\0\u57e4\0\u5820"+
    "\0\u0168\0\u585c\0\u0168\0\u0168\0\u5898\0\u58d4\0\u5910\0\u0168"+
    "\0\u594c\0\u5988\0\u59c4\0\u5a00\0\u5a3c\0\u5a78\0\u0168\0\u5ab4"+
    "\0\u5af0\0\u5b2c\0\u5b68\0\u5ba4\0\u5be0\0\u5c1c\0\u0168\0\u0168"+
    "\0\u5c58\0\u0168\0\u5c94\0\u5cd0\0\u5d0c\0\u5d48\0\u5d84\0\u0168"+
    "\0\u0168\0\u5dc0\0\u5dfc\0\u5e38\0\u5e74\0\u5eb0\0\u5eec\0\u5f28"+
    "\0\u5f64\0\u0168\0\u5fa0\0\u0168\0\u5fdc\0\u6018\0\u0168\0\u6054"+
    "\0\u6090\0\u60cc\0\u6108\0\u6144\0\u6180\0\u61bc\0\u61f8\0\u0168"+
    "\0\u6234\0\u6270\0\u0168\0\u62ac\0\u62e8\0\u6324\0\u0168\0\u6360"+
    "\0\u639c\0\u63d8\0\u6414\0\u6450\0\u648c\0\u64c8\0\u6504\0\u0168"+
    "\0\u6540\0\u657c\0\u65b8\0\u65f4\0\u6630\0\u0168\0\u0168\0\u666c"+
    "\0\u66a8\0\u66e4\0\u6720\0\u675c\0\u6798\0\u67d4\0\u6810\0\u684c"+
    "\0\u6888\0\u68c4\0\u0168\0\u0168\0\u6900\0\u693c\0\u6978\0\u69b4"+
    "\0\u69f0\0\u6a2c\0\u6a68\0\u6aa4\0\u6ae0\0\u6b1c\0\u6b58\0\u6b94"+
    "\0\u6bd0\0\u6c0c\0\u6c48\0\u6c84\0\u6cc0\0\u0168\0\u6cfc\0\u0168"+
    "\0\u6d38\0\u6d74\0\u6db0\0\u6dec\0\u6e28\0\u6e64\0\u6ea0\0\u6edc"+
    "\0\u6f18\0\u6f54\0\u6f90\0\u6fcc\0\u0168\0\u7008\0\u7044\0\u7080"+
    "\0\u70bc\0\u70f8\0\u7134\0\u7170\0\u0168\0\u71ac\0\u71e8\0\u0168"+
    "\0\u7224\0\u7260\0\u729c\0\u0168\0\u72d8\0\u0168\0\u7314\0\u7350"+
    "\0\u0168\0\u738c\0\u73c8\0\u7404\0\u7440\0\u747c\0\u74b8\0\u74f4"+
    "\0\u7530\0\u756c\0\u75a8\0\u75e4\0\u7620\0\u765c\0\u7698\0\u76d4"+
    "\0\u0168\0\u7710\0\u774c\0\u7788\0\u77c4\0\u7800\0\u0168\0\u783c"+
    "\0\u7878\0\u78b4\0\u78f0\0\u792c\0\u7968\0\u79a4\0\u79e0\0\u7a1c"+
    "\0\u7a58\0\u0168\0\u7a94\0\u7ad0\0\u0168\0\u7b0c\0\u7b48\0\u7b84"+
    "\0\u0168\0\u7bc0\0\u7bfc\0\u7c38\0\u0168\0\u7c74\0\u7cb0\0\u0168"+
    "\0\u7cec\0\u7d28\0\u7d64\0\u7da0\0\u7ddc\0\u7e18\0\u7e54\0\u7e90"+
    "\0\u7ecc\0\u7f08\0\u7f44\0\u7f80\0\u7fbc\0\u0168\0\u0168\0\u7ff8"+
    "\0\u8034\0\u0168\0\u8070\0\u80ac\0\u80e8\0\u0168\0\u0168\0\u8124"+
    "\0\u0168\0\u8160\0\u0168\0\u819c\0\u0168\0\u0168\0\u81d8\0\u8214"+
    "\0\u8250\0\u0168\0\u828c\0\u82c8\0\u8304\0\u8340\0\u837c\0\u83b8"+
    "\0\u83f4\0\u8430\0\u846c\0\u84a8\0\u84e4\0\u8520\0\u855c\0\u8598"+
    "\0\u85d4\0\u8610\0\u864c\0\u8688\0\u86c4\0\u8700\0\u873c\0\u8778"+
    "\0\u87b4\0\u87f0\0\u882c\0\u8868\0\u88a4\0\u88e0\0\u891c\0\u8958"+
    "\0\u8994\0\u89d0\0\u8a0c\0\u8a48\0\u8a84\0\u8ac0\0\u8afc\0\u8b38"+
    "\0\u8b74\0\u8bb0\0\u8bec\0\u8c28\0\u0168\0\u8c64\0\u8ca0\0\u8cdc"+
    "\0\u8d18\0\u8d54\0\u8d90\0\u8dcc\0\u8e08\0\u8e44\0\u8e80\0\u8ebc"+
    "\0\u8ef8\0\u8f34\0\u0168\0\u8f70\0\u8fac\0\u8fe8\0\u0168\0\u9024"+
    "\0\u9060\0\u909c\0\u90d8\0\u9114\0\u0168\0\u9150\0\u918c\0\u91c8"+
    "\0\u0168\0\u9204\0\u9240\0\u927c\0\u92b8\0\u92f4\0\u9330\0\u936c"+
    "\0\u93a8\0\u0168\0\u93e4\0\u9420\0\u945c\0\u9498\0\u94d4\0\u9510"+
    "\0\u954c\0\u9588\0\u0168\0\u95c4\0\u0168\0\u9600\0\u963c\0\u9678"+
    "\0\u96b4\0\u96f0\0\u972c\0\u9768\0\u0168\0\u0168\0\u97a4\0\u97e0"+
    "\0\u981c\0\u9858\0\u9894\0\u98d0\0\u990c\0\u0168\0\u9948\0\u9984"+
    "\0\u99c0\0\u99fc\0\u0168\0\u9a38\0\u0168\0\u9a74\0\u9ab0\0\u9aec"+
    "\0\u9b28\0\u9b64\0\u9ba0\0\u9bdc\0\u9c18\0\u9c54\0\u9c90\0\u0168"+
    "\0\u0168\0\u9ccc\0\u9d08\0\u9d44\0\u0168\0\u9d80\0\u0168\0\u0168"+
    "\0\u9dbc\0\u9df8\0\u9e34\0\u0168\0\u0168\0\u9e70\0\u0168\0\u0168"+
    "\0\u0168\0\u9eac\0\u9ee8\0\u9f24\0\u9f60\0\u9f9c\0\u9fd8\0\u0168"+
    "\0\ua014\0\u0168\0\u0168\0\ua050\0\u0168\0\ua08c\0\ua0c8\0\ua104"+
    "\0\u0168\0\ua140\0\u0168\0\u0168\0\ua17c\0\ua1b8\0\ua1f4\0\ua230"+
    "\0\u0168\0\u0168\0\ua26c\0\ua2a8\0\ua2e4\0\ua320\0\ua35c\0\u0168"+
    "\0\ua398\0\ua3d4\0\ua410\0\ua44c\0\ua488\0\u0168\0\ua4c4\0\ua500"+
    "\0\ua53c\0\u0168\0\ua578\0\u0168\0\ua5b4\0\ua5f0\0\ua62c\0\ua668"+
    "\0\ua6a4\0\ua6e0\0\ua71c\0\u0168\0\u0168\0\ua758\0\ua794\0\ua7d0"+
    "\0\ua80c\0\ua848\0\ua884\0\ua8c0\0\ua8fc\0\ua938\0\ua974\0\ua9b0"+
    "\0\ua9ec\0\uaa28\0\uaa64\0\uaaa0\0\uaadc\0\uab18\0\uab54\0\u0168"+
    "\0\uab90\0\uabcc\0\uac08\0\uac44\0\u0168\0\u0168\0\uac80\0\uacbc"+
    "\0\uacf8\0\uad34\0\uad70\0\u0168\0\uadac\0\uade8\0\uae24\0\uae60"+
    "\0\u0168\0\uae9c\0\uaed8\0\uaf14\0\uaf50\0\u0168\0\u0168\0\uaf8c"+
    "\0\uafc8\0\ub004\0\ub040\0\ub07c\0\ub0b8\0\ub0f4\0\u0168\0\ub130"+
    "\0\ub16c\0\ub1a8\0\u0168\0\ub1e4\0\ub220\0\ub25c\0\ub298\0\ub2d4"+
    "\0\ub310\0\ub34c\0\ub388\0\u0168\0\ub3c4\0\ub400\0\ub43c\0\ub478"+
    "\0\u0168\0\u0168\0\ub4b4\0\u0168\0\ub4f0\0\ub52c\0\ub568\0\ub5a4"+
    "\0\u0168\0\ub5e0\0\ub61c\0\ub658\0\ub694\0\ub6d0\0\ub70c\0\ub748"+
    "\0\u0168\0\ub784\0\ub7c0\0\ub7fc\0\ub838\0\ub874\0\ub8b0\0\u0168"+
    "\0\u0168\0\ub8ec\0\ub928\0\u0168\0\ub964\0\u0168\0\ub9a0\0\ub9dc"+
    "\0\uba18\0\uba54\0\uba90\0\ubacc\0\ubb08\0\u0168\0\ubb44\0\ubb80"+
    "\0\ubbbc\0\u0168\0\u0168\0\u0168\0\ubbf8\0\u0168\0\ubc34\0\ubc70"+
    "\0\ubcac\0\ubce8\0\ubd24\0\ubd60\0\ubd9c\0\ubdd8\0\u0168\0\ube14"+
    "\0\u0168\0\ube50\0\u0168\0\u0168\0\ube8c\0\ubec8\0\u0168\0\u0168"+
    "\0\u0168\0\ubf04\0\u0168\0\ubf40\0\ubf7c\0\ubfb8\0\ubff4\0\uc030"+
    "\0\uc06c\0\uc0a8\0\uc0e4\0\u0168\0\u0168\0\uc120\0\uc15c\0\u0168"+
    "\0\uc198\0\uc1d4\0\uc210\0\uc24c\0\uc288\0\uc2c4\0\uc300\0\uc33c"+
    "\0\uc378\0\uc3b4\0\uc3f0\0\uc42c\0\uc468\0\u0168\0\u0168\0\uc4a4"+
    "\0\uc4e0\0\uc51c\0\uc558\0\uc594\0\u0168\0\uc5d0\0\uc60c\0\uc648"+
    "\0\uc684\0\uc6c0\0\uc6fc\0\uc738\0\u0168\0\uc774\0\uc7b0\0\u0168"+
    "\0\uc7ec\0\uc828\0\uc864\0\uc8a0\0\uc8dc\0\uc918\0\uc954\0\uc990"+
    "\0\u0168\0\uc9cc\0\uca08\0\uca44\0\u0168\0\uca80\0\ucabc\0\ucaf8"+
    "\0\ucb34\0\ucb70\0\ucbac\0\ucbe8\0\ucc24\0\u0168\0\u0168\0\ucc60"+
    "\0\ucc9c\0\uccd8\0\u0168\0\ucd14\0\ucd50\0\ucd8c\0\u0168\0\ucdc8"+
    "\0\uce04\0\u0168\0\uce40\0\uce7c\0\uceb8\0\u0168\0\ucef4\0\u0168"+
    "\0\ucf30\0\ucf6c\0\ucfa8\0\ucfe4\0\u0168\0\ud020\0\u0168\0\u0168"+
    "\0\ud05c\0\ud098\0\u0168\0\ud0d4\0\u0168\0\ud110\0\ud14c\0\u0168"+
    "\0\ud188\0\ud1c4\0\ud200\0\u0168\0\u0168\0\ud23c\0\ud278\0\u0168"+
    "\0\u0168\0\ud2b4\0\170\0\u0168\0\ud2f0\0\u0168\0\ud32c\0\ud368"+
    "\0\u0168\0\ud3a4\0\u0168\0\ud3e0\0\u0168\0\ud41c\0\u0168\0\ud458"+
    "\0\u0168\0\ud494\0\u0168\0\ud4d0\0\ud50c\0\u0168\0\ud548\0\ud584"+
    "\0\u0168\0\ud5c0\0\u0168\0\ud5fc\0\ud638\0\u0168\0\ud674\0\ud6b0"+
    "\0\ud6ec\0\u0168\0\u0168\0\u0168\0\ud728\0\ud764\0\ud7a0\0\ud7dc"+
    "\0\u0168\0\u0168\0\ud818\0\ud854\0\ud890\0\ud8cc\0\ud908\0\ud944"+
    "\0\ud980\0\u0168\0\u0168\0\u0168\0\u0168\0\ud9bc\0\ud9f8\0\uda34"+
    "\0\u0168\0\uda70\0\udaac\0\udae8\0\udb24\0\udb60\0\u0168\0\udb9c"+
    "\0\udbd8\0\u0168\0\udc14\0\u0168\0\udc50\0\udc8c\0\udcc8\0\u0168"+
    "\0\udd04\0\udd40\0\u0168\0\udd7c\0\uddb8\0\uddf4\0\ude30\0\ude6c"+
    "\0\udea8\0\u0168\0\udee4\0\udf20\0\udf5c\0\u0168\0\udf98\0\u0168"+
    "\0\udfd4\0\u0168\0\ue010\0\ue04c\0\u0168\0\ue088\0\ue0c4\0\ue100"+
    "\0\u0168\0\ue13c\0\ue178\0\ue1b4\0\ue1f0\0\ue22c\0\ue268\0\u0168"+
    "\0\ue2a4\0\u0168\0\ue2e0\0\ue31c\0\ue358\0\u0168\0\ue394\0\ue3d0"+
    "\0\ue40c\0\ue448\0\u0168\0\ue484\0\ue4c0\0\ue4fc\0\ue538\0\ue574"+
    "\0\u0168\0\ue5b0\0\ue5ec\0\ue628\0\ue664\0\ue6a0\0\ue6dc\0\u0168"+
    "\0\ue718\0\ue754\0\ue790\0\ue7cc\0\ue808\0\ue844\0\u0168\0\ue880"+
    "\0\ue8bc\0\ue8f8\0\u0168\0\u0168\0\u0168\0\ue934\0\u0168\0\ue970"+
    "\0\ue9ac\0\u0168\0\u0168\0\ue9e8\0\u0168\0\u0168\0\uea24\0\u0168"+
    "\0\u0168\0\uea60\0\uea9c\0\uead8\0\u0168\0\ueb14\0\u0168\0\u0168"+
    "\0\u0168\0\ueb50\0\ueb8c\0\u0168\0\uebc8\0\uec04\0\uec40\0\uec7c"+
    "\0\uecb8\0\uecf4\0\ued30\0\ued6c\0\u0168\0\u0168\0\ueda8\0\uede4"+
    "\0\uee20\0\uee5c\0\u0168\0\uee98\0\u0168\0\ueed4\0\uef10\0\uef4c"+
    "\0\u0168\0\uef88\0\uefc4\0\u0168\0\uf000\0\uf03c\0\uf078\0\uf0b4"+
    "\0\uf0f0\0\uf12c\0\uf168\0\uf1a4\0\u0168\0\u0168\0\uf1e0\0\u0168"+
    "\0\u0168\0\uf21c\0\u0168\0\u0168\0\u0168\0\u0168\0\u0168\0\u0168"+
    "\0\uf258\0\uf294\0\u0168\0\u0168\0\uf2d0\0\uf30c\0\uf348\0\uf384"+
    "\0\u0168\0\uf3c0\0\uf3fc\0\uf438\0\u0168\0\uf474\0\uf4b0\0\u0168"+
    "\0\uf4ec\0\uf528\0\uf564\0\u0168\0\uf5a0\0\u0168\0\uf5dc\0\uf618"+
    "\0\uf654\0\uf690\0\u0168\0\uf6cc\0\uf708\0\uf744\0\u0168\0\u0168"+
    "\0\uf780\0\uf7bc\0\uf7f8\0\uf834\0\u0168\0\uf870\0\uf8ac\0\uf8e8"+
    "\0\u0168\0\u0168\0\uf924\0\u0168\0\uf960\0\uf99c\0\uf9d8\0\ufa14"+
    "\0\u0168\0\u0168\0\ufa50\0\ufa8c\0\u0168\0\ufac8\0\ufb04\0\ufb40"+
    "\0\ufb7c\0\ufbb8\0\u0168\0\ufbf4\0\u0168\0\ufc30\0\ufc6c\0\ufca8"+
    "\0\ufce4\0\u0168\0\ufd20\0\ufd5c\0\ufd98\0\u0168\0\ufdd4\0\ufe10"+
    "\0\u0168\0\ufe4c\0\ufe88\0\ufec4\0\uff00\0\uff3c\0\uff78\0\uffb4"+
    "\0\ufff0\1\54\1\150\1\244\1\340\1\u011c\0\u0168\1\u0158"+
    "\0\u0168\1\u0194\1\u01d0\1\u020c\1\u0248\1\u0284\1\u02c0\0\u0168";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[1408];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\3\1\4\1\5\1\6\1\7\1\3\1\10\1\11"+
    "\1\12\1\7\1\13\1\14\1\15\1\16\1\17\1\20"+
    "\2\17\1\3\1\21\1\22\1\23\1\24\1\25\1\26"+
    "\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36"+
    "\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46"+
    "\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56"+
    "\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66"+
    "\1\7\1\67\1\7\21\70\2\3\1\71\2\70\1\72"+
    "\1\73\1\74\1\75\1\76\1\77\2\70\1\100\1\70"+
    "\1\101\1\70\1\102\2\70\1\103\26\70\77\0\1\6"+
    "\2\0\1\104\67\0\1\105\1\6\2\0\1\104\70\0"+
    "\1\6\2\0\1\104\1\106\67\0\3\7\2\0\5\7"+
    "\31\0\26\7\3\0\1\104\2\0\1\104\1\106\67\0"+
    "\3\7\2\0\2\7\1\107\1\7\1\110\31\0\3\7"+
    "\1\111\1\7\1\112\15\7\1\113\2\7\3\0\3\7"+
    "\2\0\1\114\2\7\1\115\1\7\31\0\1\116\5\7"+
    "\1\117\1\7\1\120\15\7\3\0\3\7\2\0\2\7"+
    "\1\121\2\7\31\0\5\7\1\122\7\7\1\123\10\7"+
    "\3\0\3\7\2\0\1\124\4\7\31\0\1\125\7\7"+
    "\1\126\1\127\14\7\15\130\1\131\1\132\55\130\16\133"+
    "\1\132\1\131\54\133\23\0\1\134\77\0\1\135\73\0"+
    "\1\136\73\0\1\137\73\0\1\140\76\0\1\141\74\0"+
    "\1\142\77\0\1\143\75\0\1\144\75\0\1\145\75\0"+
    "\1\146\31\0\3\7\2\0\2\7\1\147\1\150\1\151"+
    "\31\0\1\7\1\152\1\153\1\154\1\7\1\155\1\156"+
    "\4\7\1\157\5\7\1\160\4\7\3\0\3\7\2\0"+
    "\1\161\2\7\1\162\1\7\31\0\1\163\2\7\1\164"+
    "\4\7\1\165\1\166\1\7\1\167\12\7\3\0\3\7"+
    "\2\0\1\170\4\7\31\0\1\171\2\7\1\172\1\7"+
    "\1\173\1\7\1\174\1\175\1\176\14\7\3\0\3\7"+
    "\2\0\1\177\2\7\1\200\1\7\31\0\1\201\7\7"+
    "\1\202\1\203\14\7\3\0\3\7\2\0\1\204\4\7"+
    "\31\0\26\7\3\0\3\7\2\0\1\205\2\7\1\206"+
    "\1\7\31\0\1\207\1\7\1\210\1\7\1\211\1\7"+
    "\1\212\1\213\1\214\1\215\3\7\1\216\2\7\1\217"+
    "\4\7\1\220\3\0\3\7\2\0\3\7\1\221\1\222"+
    "\31\0\1\223\2\7\1\224\3\7\1\225\1\226\15\7"+
    "\3\0\3\7\2\0\5\7\31\0\1\227\7\7\1\230"+
    "\15\7\3\0\3\7\2\0\2\7\1\231\1\232\1\7"+
    "\31\0\3\7\1\233\2\7\1\234\6\7\1\235\3\7"+
    "\1\236\1\237\3\7\3\0\3\7\2\0\2\7\1\240"+
    "\2\7\31\0\1\7\1\241\3\7\1\242\12\7\1\243"+
    "\1\7\1\244\3\7\3\0\3\7\2\0\5\7\31\0"+
    "\10\7\1\245\15\7\3\0\3\7\2\0\1\246\2\7"+
    "\1\247\1\7\31\0\1\250\2\7\1\251\1\252\3\7"+
    "\1\253\1\254\14\7\3\0\3\7\2\0\1\255\4\7"+
    "\31\0\11\7\1\256\14\7\3\0\3\7\2\0\1\257"+
    "\2\7\1\260\1\261\31\0\1\262\2\7\1\263\4\7"+
    "\1\264\1\265\14\7\3\0\3\7\2\0\1\266\3\7"+
    "\1\267\31\0\3\7\1\270\4\7\1\271\15\7\3\0"+
    "\3\7\2\0\5\7\31\0\1\272\2\7\1\273\3\7"+
    "\1\274\1\275\1\276\14\7\3\0\3\7\2\0\1\277"+
    "\4\7\31\0\1\300\7\7\1\301\1\302\14\7\3\0"+
    "\3\7\2\0\1\303\4\7\31\0\1\304\10\7\1\305"+
    "\14\7\3\0\3\7\2\0\1\306\2\7\1\307\1\310"+
    "\31\0\1\311\2\7\1\312\4\7\1\313\1\314\14\7"+
    "\3\0\3\7\2\0\5\7\31\0\10\7\1\315\15\7"+
    "\23\0\1\316\1\317\47\0\16\105\1\0\2\105\2\0"+
    "\51\105\3\0\1\106\2\0\1\106\1\0\2\320\65\0"+
    "\3\7\2\0\5\7\31\0\1\7\1\321\24\7\3\0"+
    "\3\7\2\0\5\7\31\0\5\7\1\322\20\7\3\0"+
    "\3\7\2\0\5\7\31\0\3\7\1\323\22\7\3\0"+
    "\3\7\2\0\5\7\31\0\6\7\1\324\17\7\3\0"+
    "\3\7\2\0\1\325\4\7\31\0\2\7\1\326\3\7"+
    "\1\327\2\7\1\330\14\7\3\0\3\7\2\0\5\7"+
    "\31\0\23\7\1\331\2\7\3\0\3\7\2\0\4\7"+
    "\1\332\31\0\20\7\1\333\5\7\3\0\3\7\2\0"+
    "\5\7\31\0\2\7\1\334\15\7\1\335\5\7\3\0"+
    "\3\7\2\0\5\7\31\0\7\7\1\336\16\7\3\0"+
    "\3\7\2\0\2\7\1\337\2\7\31\0\2\7\1\340"+
    "\3\7\1\341\17\7\3\0\3\7\2\0\5\7\31\0"+
    "\11\7\1\342\2\7\1\343\1\344\10\7\3\0\3\7"+
    "\2\0\1\345\4\7\31\0\1\346\10\7\1\347\14\7"+
    "\3\0\3\7\2\0\5\7\31\0\1\7\1\350\13\7"+
    "\1\351\10\7\3\0\3\7\2\0\5\7\31\0\1\352"+
    "\20\7\1\353\1\354\3\7\3\0\3\7\2\0\2\7"+
    "\1\355\2\7\31\0\5\7\1\356\20\7\3\0\3\7"+
    "\2\0\5\7\31\0\1\357\5\7\1\360\10\7\1\361"+
    "\6\7\3\0\3\7\2\0\2\7\1\362\2\7\31\0"+
    "\14\7\1\363\11\7\16\364\1\0\2\364\2\0\1\365"+
    "\50\364\3\0\3\7\2\0\5\7\31\0\1\7\1\366"+
    "\2\7\1\367\21\7\3\0\3\7\2\0\5\7\31\0"+
    "\2\7\1\370\23\7\3\0\3\7\2\0\4\7\1\371"+
    "\31\0\2\7\1\372\23\7\3\0\3\7\2\0\5\7"+
    "\31\0\1\373\1\374\24\7\3\0\3\7\2\0\1\375"+
    "\4\7\31\0\26\7\3\0\3\7\2\0\5\7\31\0"+
    "\5\7\1\376\1\377\17\7\3\0\3\7\2\0\5\7"+
    "\31\0\2\7\1\u0100\23\7\3\0\3\7\2\0\5\7"+
    "\31\0\5\7\1\u0101\20\7\3\0\3\7\2\0\5\7"+
    "\31\0\16\7\1\u0102\7\7\3\0\3\7\2\0\2\7"+
    "\1\u0103\1\7\1\u0104\31\0\1\u0105\4\7\1\u0106\1\u0107"+
    "\13\7\1\u0108\3\7\3\0\3\7\2\0\5\7\31\0"+
    "\20\7\1\u0109\5\7\3\0\3\7\2\0\5\7\31\0"+
    "\2\7\1\u010a\1\7\1\u010b\21\7\3\0\3\7\2\0"+
    "\5\7\31\0\10\7\1\u010c\15\7\3\0\3\7\2\0"+
    "\3\7\1\u010d\1\7\31\0\20\7\1\u010e\5\7\3\0"+
    "\3\7\2\0\5\7\31\0\1\u010f\4\7\1\u0110\20\7"+
    "\3\0\3\7\2\0\5\7\31\0\6\7\1\u0111\17\7"+
    "\3\0\3\7\2\0\5\7\31\0\20\7\1\u0112\2\7"+
    "\1\u0113\2\7\3\0\3\7\2\0\5\7\31\0\13\7"+
    "\1\u0114\12\7\3\0\3\7\2\0\3\7\1\u0115\1\7"+
    "\31\0\1\u0116\3\7\1\u0117\4\7\1\u0118\14\7\3\0"+
    "\3\7\2\0\1\u0119\4\7\31\0\26\7\3\0\3\7"+
    "\2\0\1\u011a\4\7\31\0\26\7\3\0\3\7\2\0"+
    "\5\7\31\0\15\7\1\u011b\10\7\3\0\3\7\2\0"+
    "\5\7\31\0\20\7\1\u011c\5\7\3\0\3\7\2\0"+
    "\4\7\1\u011d\31\0\1\u011e\1\7\1\u011f\2\7\1\u0120"+
    "\1\u0121\6\7\1\u0122\3\7\1\u0123\1\u0124\3\7\3\0"+
    "\3\7\2\0\4\7\1\u0125\31\0\26\7\3\0\3\7"+
    "\2\0\5\7\31\0\11\7\1\u0126\14\7\3\0\3\7"+
    "\2\0\4\7\1\u0127\31\0\17\7\1\u0128\6\7\3\0"+
    "\3\7\2\0\5\7\31\0\16\7\1\u0129\7\7\3\0"+
    "\3\7\2\0\5\7\31\0\1\u012a\25\7\3\0\3\7"+
    "\2\0\4\7\1\u012b\31\0\2\7\1\u012c\2\7\1\u012d"+
    "\1\u012e\11\7\1\u012f\5\7\3\0\3\7\2\0\5\7"+
    "\31\0\13\7\1\u0130\4\7\1\u0131\5\7\3\0\3\7"+
    "\2\0\5\7\31\0\21\7\1\u0132\4\7\3\0\3\7"+
    "\2\0\5\7\31\0\1\u0133\25\7\3\0\3\7\2\0"+
    "\5\7\31\0\5\7\1\u0134\20\7\3\0\3\7\2\0"+
    "\5\7\31\0\3\7\1\u0135\3\7\1\u0136\16\7\3\0"+
    "\3\7\2\0\3\7\1\u0137\1\7\31\0\26\7\3\0"+
    "\3\7\2\0\5\7\31\0\20\7\1\u0138\5\7\3\0"+
    "\3\7\2\0\5\7\31\0\12\7\1\u0139\13\7\3\0"+
    "\3\7\2\0\5\7\31\0\1\u013a\25\7\3\0\3\7"+
    "\2\0\5\7\31\0\1\u013b\25\7\3\0\3\7\2\0"+
    "\4\7\1\u013c\31\0\26\7\3\0\3\7\2\0\5\7"+
    "\31\0\3\7\1\u013d\22\7\3\0\3\7\2\0\3\7"+
    "\1\u013e\1\7\31\0\10\7\1\u013f\15\7\3\0\3\7"+
    "\2\0\5\7\31\0\2\7\1\u0140\2\7\1\u0141\20\7"+
    "\3\0\3\7\2\0\1\u0142\4\7\31\0\10\7\1\u0143"+
    "\15\7\3\0\3\7\2\0\1\u0144\4\7\31\0\1\u0145"+
    "\25\7\3\0\3\7\2\0\2\7\1\u0146\1\u0147\1\u0148"+
    "\31\0\1\u0149\2\7\1\u014a\14\7\1\u014b\5\7\3\0"+
    "\3\7\2\0\5\7\31\0\21\7\1\u014c\4\7\3\0"+
    "\3\7\2\0\3\7\1\u014d\1\u014e\31\0\26\7\3\0"+
    "\3\7\2\0\4\7\1\u014f\31\0\26\7\3\0\3\7"+
    "\2\0\5\7\31\0\2\7\1\u0150\23\7\3\0\3\7"+
    "\2\0\5\7\31\0\1\7\1\u0151\24\7\3\0\3\7"+
    "\2\0\5\7\31\0\2\7\1\u0152\23\7\3\0\3\7"+
    "\2\0\1\u0153\4\7\31\0\2\7\1\u0154\23\7\3\0"+
    "\3\7\2\0\1\u0155\4\7\31\0\26\7\3\0\3\7"+
    "\2\0\5\7\31\0\22\7\1\u0156\3\7\3\0\3\7"+
    "\2\0\2\7\1\u0157\2\7\31\0\1\7\1\u0158\1\u0159"+
    "\2\7\1\u015a\1\u015b\2\7\1\u015c\3\7\1\u015d\10\7"+
    "\3\0\3\7\2\0\1\u015e\4\7\31\0\26\7\3\0"+
    "\3\7\2\0\5\7\31\0\10\7\1\u015f\15\7\3\0"+
    "\3\7\2\0\5\7\31\0\20\7\1\u0160\5\7\3\0"+
    "\3\7\2\0\2\7\1\u0161\2\7\31\0\26\7\3\0"+
    "\3\7\2\0\5\7\31\0\2\7\1\u0162\13\7\1\u0163"+
    "\7\7\3\0\3\7\2\0\4\7\1\u0164\31\0\26\7"+
    "\3\0\3\7\2\0\5\7\31\0\6\7\1\u0165\17\7"+
    "\3\0\3\7\2\0\1\u0166\4\7\31\0\10\7\1\u0167"+
    "\15\7\3\0\3\7\2\0\5\7\31\0\2\7\1\u0168"+
    "\23\7\3\0\3\7\2\0\5\7\31\0\2\7\1\u0169"+
    "\23\7\3\0\3\7\2\0\5\7\31\0\4\7\1\u016a"+
    "\21\7\3\0\3\7\2\0\4\7\1\u016b\31\0\26\7"+
    "\3\0\3\7\2\0\5\7\31\0\3\7\1\u016c\22\7"+
    "\3\0\3\7\2\0\5\7\31\0\13\7\1\u016d\12\7"+
    "\3\0\3\7\2\0\5\7\31\0\1\u016e\25\7\3\0"+
    "\3\7\2\0\5\7\31\0\1\7\1\u016f\1\7\1\u0170"+
    "\1\7\1\u0171\20\7\3\0\3\7\2\0\1\u0172\4\7"+
    "\31\0\10\7\1\u0173\1\u0174\14\7\3\0\3\7\2\0"+
    "\5\7\31\0\5\7\1\u0175\20\7\3\0\3\7\2\0"+
    "\5\7\31\0\21\7\1\u0176\4\7\3\0\3\7\2\0"+
    "\5\7\31\0\2\7\1\u0177\23\7\3\0\3\7\2\0"+
    "\5\7\31\0\10\7\1\u0178\15\7\3\0\3\7\2\0"+
    "\5\7\31\0\1\u0179\7\7\1\u017a\15\7\3\0\3\7"+
    "\2\0\5\7\31\0\2\7\1\u017b\23\7\3\0\3\7"+
    "\2\0\5\7\31\0\11\7\1\u017c\14\7\3\0\3\7"+
    "\2\0\5\7\31\0\11\7\1\u017d\14\7\3\0\3\7"+
    "\2\0\1\u017e\4\7\31\0\11\7\1\u017f\14\7\3\0"+
    "\3\7\2\0\5\7\31\0\3\7\1\u0180\22\7\3\0"+
    "\3\7\2\0\5\7\31\0\2\7\1\u0181\23\7\3\0"+
    "\3\7\2\0\5\7\31\0\3\7\1\u0182\22\7\3\0"+
    "\3\7\2\0\5\7\31\0\2\7\1\u0183\20\7\1\u0184"+
    "\2\7\3\0\3\7\2\0\2\7\1\u0185\2\7\31\0"+
    "\1\7\1\u0186\24\7\3\0\3\7\2\0\2\7\1\u0187"+
    "\2\7\31\0\26\7\3\0\3\7\2\0\5\7\31\0"+
    "\3\7\1\u0188\22\7\3\0\3\7\2\0\4\7\1\u0189"+
    "\31\0\3\7\1\u018a\22\7\3\0\3\7\2\0\1\u018b"+
    "\4\7\31\0\26\7\3\0\3\7\2\0\5\7\31\0"+
    "\2\7\1\u018c\23\7\3\0\3\7\2\0\2\7\1\u018d"+
    "\1\7\1\u018e\31\0\26\7\3\0\3\7\2\0\5\7"+
    "\31\0\10\7\1\u018f\15\7\3\0\3\7\2\0\4\7"+
    "\1\u0190\31\0\26\7\3\0\3\7\2\0\1\u0191\4\7"+
    "\31\0\10\7\1\u0192\15\7\3\0\3\7\2\0\3\7"+
    "\1\u0193\1\7\31\0\3\7\1\u0194\22\7\3\0\3\7"+
    "\2\0\4\7\1\u0195\31\0\3\7\1\u0196\22\7\3\0"+
    "\3\7\2\0\5\7\31\0\11\7\1\u0197\14\7\1\0"+
    "\2\u0198\1\u0199\2\0\1\u0199\67\0\1\u019a\3\7\2\0"+
    "\5\7\31\0\26\7\3\0\3\7\2\0\1\u019b\4\7"+
    "\31\0\26\7\3\0\3\7\2\0\4\7\1\u019c\31\0"+
    "\26\7\3\0\3\7\2\0\5\7\31\0\1\u019d\25\7"+
    "\3\0\3\7\2\0\5\7\31\0\6\7\1\u019e\17\7"+
    "\3\0\3\7\2\0\1\u019f\4\7\31\0\3\7\1\u01a0"+
    "\22\7\3\0\3\7\2\0\1\u01a1\4\7\31\0\26\7"+
    "\3\0\3\7\2\0\5\7\31\0\2\7\1\u01a2\2\7"+
    "\1\u01a3\20\7\3\0\3\7\2\0\5\7\31\0\2\7"+
    "\1\u01a4\23\7\3\0\3\7\2\0\4\7\1\u01a5\31\0"+
    "\26\7\3\0\3\7\2\0\1\u01a6\4\7\31\0\26\7"+
    "\3\0\3\7\2\0\3\7\1\u01a7\1\7\31\0\11\7"+
    "\1\u01a8\14\7\3\0\3\7\2\0\1\u01a9\4\7\31\0"+
    "\26\7\3\0\3\7\2\0\5\7\31\0\1\u01aa\25\7"+
    "\3\0\3\7\2\0\1\u01ab\4\7\31\0\26\7\3\0"+
    "\3\7\2\0\4\7\1\u01ac\31\0\7\7\1\u01ad\16\7"+
    "\3\0\3\7\2\0\5\7\31\0\10\7\1\u01ae\14\7"+
    "\1\u01af\3\0\3\7\2\0\2\7\1\u01b0\2\7\31\0"+
    "\26\7\3\0\3\7\2\0\5\7\31\0\11\7\1\u01b1"+
    "\14\7\3\0\3\7\2\0\5\7\31\0\3\7\1\u01b2"+
    "\22\7\3\0\3\7\2\0\5\7\31\0\16\7\1\u01b3"+
    "\7\7\3\0\3\7\2\0\2\7\1\u01b4\2\7\31\0"+
    "\26\7\3\0\3\7\2\0\5\7\31\0\1\u01b5\25\7"+
    "\3\0\3\7\2\0\1\u01b6\4\7\31\0\26\7\3\0"+
    "\3\7\2\0\5\7\31\0\1\7\1\u01b7\24\7\3\0"+
    "\3\7\2\0\1\u01b8\4\7\31\0\26\7\3\0\3\7"+
    "\2\0\5\7\31\0\2\7\1\u01b9\23\7\3\0\3\7"+
    "\2\0\5\7\31\0\16\7\1\u01ba\7\7\3\0\3\7"+
    "\2\0\5\7\31\0\2\7\1\u01bb\23\7\3\0\3\7"+
    "\2\0\5\7\31\0\1\7\1\u01bc\24\7\3\0\3\7"+
    "\2\0\5\7\31\0\1\u01bd\25\7\3\0\3\7\2\0"+
    "\1\u01be\4\7\31\0\26\7\3\0\3\7\2\0\1\u01bf"+
    "\4\7\31\0\26\7\3\0\3\7\2\0\1\u01c0\4\7"+
    "\31\0\26\7\3\0\3\7\2\0\5\7\31\0\7\7"+
    "\1\u01c1\16\7\3\0\3\7\2\0\5\7\31\0\10\7"+
    "\1\u01c2\15\7\3\0\3\7\2\0\1\u01c3\4\7\31\0"+
    "\26\7\3\0\3\7\2\0\1\u01c4\4\7\31\0\26\7"+
    "\3\0\3\7\2\0\5\7\31\0\11\7\1\u01c5\14\7"+
    "\3\0\3\7\2\0\5\7\31\0\10\7\1\u01c6\15\7"+
    "\3\0\3\7\2\0\5\7\31\0\4\7\1\u01c7\21\7"+
    "\3\0\3\7\2\0\1\u01c8\4\7\31\0\26\7\3\0"+
    "\3\7\2\0\4\7\1\u01c9\31\0\26\7\3\0\3\7"+
    "\2\0\5\7\31\0\6\7\1\u01ca\17\7\3\0\3\7"+
    "\2\0\4\7\1\u01cb\31\0\11\7\1\u01cc\14\7\3\0"+
    "\3\7\2\0\1\u01cd\4\7\31\0\1\u01ce\25\7\3\0"+
    "\3\7\2\0\5\7\31\0\15\7\1\u01cf\10\7\3\0"+
    "\3\7\2\0\1\u01d0\4\7\31\0\1\u01d1\25\7\3\0"+
    "\3\7\2\0\5\7\31\0\15\7\1\u01d2\10\7\3\0"+
    "\3\7\2\0\5\7\31\0\13\7\1\u01d3\12\7\3\0"+
    "\3\7\2\0\5\7\31\0\1\u01d4\25\7\3\0\3\7"+
    "\2\0\5\7\31\0\16\7\1\u01d5\7\7\3\0\3\7"+
    "\2\0\5\7\31\0\2\7\1\u01d6\3\7\1\u01d7\5\7"+
    "\1\u01d8\11\7\3\0\3\7\2\0\5\7\31\0\6\7"+
    "\1\u01d9\17\7\3\0\3\7\2\0\5\7\31\0\15\7"+
    "\1\u01da\10\7\3\0\3\7\2\0\5\7\31\0\2\7"+
    "\1\u01db\23\7\3\0\3\7\2\0\4\7\1\u01dc\31\0"+
    "\26\7\3\0\3\7\2\0\2\7\1\u01dd\2\7\31\0"+
    "\26\7\3\0\3\7\2\0\2\7\1\u01de\2\7\31\0"+
    "\11\7\1\u01df\14\7\3\0\2\7\1\u01e0\2\0\5\7"+
    "\31\0\26\7\3\0\3\7\2\0\5\7\31\0\16\7"+
    "\1\u01e1\1\7\1\u01e2\5\7\3\0\3\7\2\0\5\7"+
    "\31\0\25\7\1\u01e3\3\0\3\7\2\0\2\7\1\u01e4"+
    "\2\7\31\0\26\7\3\0\3\7\2\0\1\u01e5\4\7"+
    "\31\0\26\7\3\0\3\7\2\0\5\7\31\0\1\u01e6"+
    "\25\7\3\0\3\7\2\0\4\7\1\u01e7\31\0\1\7"+
    "\1\u01e8\24\7\3\0\3\7\2\0\3\7\1\u01e9\1\7"+
    "\31\0\26\7\3\0\3\7\2\0\5\7\31\0\2\7"+
    "\1\u01ea\23\7\3\0\3\7\2\0\5\7\31\0\10\7"+
    "\1\u01eb\15\7\3\0\3\7\2\0\4\7\1\u01ec\31\0"+
    "\26\7\3\0\3\7\2\0\1\u01ed\4\7\31\0\10\7"+
    "\1\u01ee\15\7\3\0\3\7\2\0\1\u01ef\4\7\31\0"+
    "\26\7\3\0\3\7\2\0\1\u01f0\4\7\31\0\26\7"+
    "\3\0\3\7\2\0\5\7\31\0\5\7\1\u01f1\20\7"+
    "\3\0\3\7\2\0\4\7\1\u01f2\31\0\26\7\3\0"+
    "\3\7\2\0\5\7\31\0\5\7\1\u01f3\1\u01f4\7\7"+
    "\1\u01f5\7\7\3\0\3\7\2\0\5\7\31\0\7\7"+
    "\1\u01f6\16\7\3\0\3\7\2\0\5\7\31\0\3\7"+
    "\1\u01f7\22\7\3\0\3\7\2\0\1\u01f8\4\7\31\0"+
    "\26\7\3\0\3\7\2\0\3\7\1\u01f9\1\7\31\0"+
    "\26\7\3\0\3\7\2\0\5\7\31\0\5\7\1\u01fa"+
    "\20\7\3\0\3\7\2\0\3\7\1\u01fb\1\7\31\0"+
    "\2\7\1\u01fc\5\7\1\u01fd\15\7\3\0\3\7\2\0"+
    "\5\7\31\0\1\u01fe\25\7\3\0\3\7\2\0\5\7"+
    "\31\0\5\7\1\u01ff\20\7\3\0\3\7\2\0\1\u0200"+
    "\4\7\31\0\26\7\3\0\3\7\2\0\5\7\31\0"+
    "\2\7\1\u0201\23\7\3\0\3\7\2\0\5\7\31\0"+
    "\2\7\1\u0202\23\7\3\0\3\7\2\0\5\7\31\0"+
    "\10\7\1\u0203\15\7\3\0\3\7\2\0\1\u0204\4\7"+
    "\31\0\26\7\3\0\3\7\2\0\5\7\31\0\2\7"+
    "\1\u0205\23\7\3\0\3\7\2\0\1\u0206\4\7\31\0"+
    "\26\7\3\0\3\7\2\0\1\u0207\4\7\31\0\26\7"+
    "\3\0\3\7\2\0\5\7\31\0\6\7\1\u0208\17\7"+
    "\3\0\3\7\2\0\4\7\1\u0209\31\0\26\7\3\0"+
    "\3\7\2\0\1\u020a\4\7\31\0\5\7\1\u020b\1\u020c"+
    "\10\7\1\u020d\6\7\3\0\3\7\2\0\5\7\31\0"+
    "\3\7\1\u020e\1\7\1\u020f\20\7\3\0\3\7\2\0"+
    "\5\7\31\0\5\7\1\u0210\20\7\3\0\3\7\2\0"+
    "\5\7\31\0\5\7\1\u0211\20\7\3\0\3\7\2\0"+
    "\5\7\31\0\1\u0212\25\7\3\0\3\7\2\0\1\u0213"+
    "\4\7\31\0\2\7\1\u0214\3\7\1\u0215\17\7\3\0"+
    "\3\7\2\0\5\7\31\0\1\u0216\25\7\3\0\3\7"+
    "\2\0\5\7\31\0\5\7\1\u0217\20\7\3\0\3\7"+
    "\2\0\5\7\31\0\6\7\1\u0218\17\7\3\0\3\7"+
    "\2\0\5\7\31\0\3\7\1\u0219\22\7\3\0\3\7"+
    "\2\0\2\7\1\u021a\2\7\31\0\2\7\1\u021b\2\7"+
    "\1\u021c\13\7\1\u021d\4\7\3\0\3\7\2\0\2\7"+
    "\1\u021e\2\7\31\0\26\7\3\0\3\7\2\0\3\7"+
    "\1\u021f\1\u0220\31\0\26\7\3\0\3\7\2\0\4\7"+
    "\1\u0221\31\0\26\7\3\0\3\7\2\0\5\7\31\0"+
    "\3\7\1\u0222\22\7\3\0\3\7\2\0\5\7\31\0"+
    "\15\7\1\u0223\2\7\1\u0224\5\7\3\0\3\7\2\0"+
    "\5\7\31\0\11\7\1\u0225\14\7\3\0\3\7\2\0"+
    "\5\7\31\0\3\7\1\u0226\22\7\3\0\3\7\2\0"+
    "\5\7\31\0\1\7\1\u0227\24\7\3\0\3\7\2\0"+
    "\5\7\31\0\4\7\1\u0228\21\7\3\0\3\7\2\0"+
    "\1\u0229\4\7\31\0\15\7\1\u022a\10\7\3\0\3\7"+
    "\2\0\1\u022b\4\7\31\0\26\7\3\0\3\7\2\0"+
    "\1\u022c\4\7\31\0\26\7\3\0\3\7\2\0\2\7"+
    "\1\u022d\2\7\31\0\26\7\3\0\3\7\2\0\5\7"+
    "\31\0\11\7\1\u022e\14\7\3\0\3\7\2\0\5\7"+
    "\31\0\3\7\1\u022f\22\7\3\0\3\7\2\0\5\7"+
    "\31\0\5\7\1\u0230\20\7\3\0\3\7\2\0\1\u0231"+
    "\4\7\31\0\26\7\3\0\3\7\2\0\1\u0232\4\7"+
    "\31\0\11\7\1\u0233\14\7\3\0\3\7\2\0\1\u0234"+
    "\4\7\31\0\10\7\1\u0235\15\7\3\0\3\7\2\0"+
    "\1\u0236\4\7\31\0\26\7\3\0\3\7\2\0\4\7"+
    "\1\u0237\31\0\26\7\3\0\3\7\2\0\5\7\31\0"+
    "\2\7\1\u0238\23\7\3\0\3\7\2\0\3\7\1\u0239"+
    "\1\7\31\0\26\7\3\0\3\7\2\0\2\7\1\u023a"+
    "\2\7\31\0\26\7\3\0\3\7\2\0\4\7\1\u023b"+
    "\31\0\26\7\3\0\3\7\2\0\1\u023c\4\7\31\0"+
    "\26\7\3\0\3\7\2\0\1\u023d\4\7\31\0\26\7"+
    "\3\0\3\7\2\0\5\7\31\0\17\7\1\u023e\6\7"+
    "\3\0\3\7\2\0\5\7\31\0\11\7\1\u023f\14\7"+
    "\3\0\3\7\2\0\5\7\31\0\14\7\1\u0240\11\7"+
    "\3\0\3\7\2\0\5\7\31\0\14\7\1\u0241\11\7"+
    "\3\0\3\7\2\0\5\7\31\0\1\u0242\25\7\3\0"+
    "\3\7\2\0\5\7\31\0\17\7\1\u0243\6\7\3\0"+
    "\3\7\2\0\5\7\31\0\7\7\1\u0244\16\7\3\0"+
    "\2\7\1\u0245\2\0\5\7\31\0\26\7\3\0\3\7"+
    "\2\0\4\7\1\u0246\31\0\26\7\3\0\3\7\2\0"+
    "\5\7\31\0\6\7\1\u0247\17\7\3\0\3\7\2\0"+
    "\4\7\1\u0248\31\0\26\7\3\0\3\7\2\0\2\7"+
    "\1\u0249\2\7\31\0\26\7\3\0\3\7\2\0\5\7"+
    "\31\0\2\7\1\u024a\23\7\3\0\3\7\2\0\5\7"+
    "\31\0\6\7\1\u024b\17\7\3\0\3\7\2\0\5\7"+
    "\31\0\5\7\1\u024c\1\u024d\6\7\1\u024e\10\7\3\0"+
    "\3\7\2\0\5\7\31\0\6\7\1\u024f\17\7\3\0"+
    "\3\7\2\0\2\7\1\u0250\2\7\31\0\10\7\1\u0251"+
    "\7\7\1\u0252\1\u0253\4\7\3\0\3\7\2\0\5\7"+
    "\31\0\11\7\1\u0254\14\7\3\0\3\7\2\0\5\7"+
    "\31\0\10\7\1\u0255\15\7\3\0\3\7\2\0\5\7"+
    "\31\0\13\7\1\u0256\12\7\3\0\3\7\2\0\2\7"+
    "\1\u0257\2\7\31\0\26\7\3\0\3\7\2\0\3\7"+
    "\1\u0258\1\7\31\0\26\7\3\0\3\7\2\0\5\7"+
    "\31\0\10\7\1\u0259\15\7\3\0\3\7\2\0\5\7"+
    "\31\0\2\7\1\u025a\23\7\3\0\3\7\2\0\5\7"+
    "\31\0\2\7\1\u025b\23\7\3\0\3\7\2\0\2\7"+
    "\1\u025c\2\7\31\0\3\7\1\u025d\22\7\3\0\3\7"+
    "\2\0\4\7\1\u025e\31\0\26\7\3\0\3\7\2\0"+
    "\5\7\31\0\14\7\1\u025f\11\7\3\0\3\7\2\0"+
    "\5\7\31\0\7\7\1\u0260\16\7\3\0\3\7\2\0"+
    "\5\7\31\0\16\7\1\u0261\7\7\3\0\3\7\2\0"+
    "\5\7\31\0\6\7\1\u0262\17\7\3\0\3\7\2\0"+
    "\5\7\31\0\2\7\1\u0263\23\7\3\0\3\7\2\0"+
    "\3\7\1\u0264\1\7\31\0\26\7\3\0\3\7\2\0"+
    "\3\7\1\u0265\1\7\31\0\26\7\3\0\3\7\2\0"+
    "\5\7\31\0\1\7\1\u0266\24\7\3\0\3\7\2\0"+
    "\3\7\1\u0267\1\7\31\0\26\7\3\0\3\7\2\0"+
    "\5\7\31\0\4\7\1\u0268\1\7\1\u0269\17\7\3\0"+
    "\3\7\2\0\5\7\31\0\17\7\1\u026a\6\7\3\0"+
    "\3\7\2\0\5\7\31\0\6\7\1\u026b\17\7\3\0"+
    "\3\7\2\0\5\7\31\0\6\7\1\u026c\17\7\3\0"+
    "\3\7\2\0\4\7\1\u026d\31\0\26\7\3\0\3\7"+
    "\2\0\5\7\31\0\1\u026e\25\7\3\0\3\7\2\0"+
    "\5\7\31\0\5\7\1\u026f\20\7\3\0\3\7\2\0"+
    "\1\u0270\4\7\31\0\26\7\3\0\3\7\2\0\5\7"+
    "\31\0\20\7\1\u0271\5\7\3\0\3\7\2\0\2\7"+
    "\1\u0272\2\7\31\0\26\7\3\0\3\7\2\0\1\u0273"+
    "\4\7\31\0\2\7\1\u0274\23\7\3\0\3\7\2\0"+
    "\1\u0275\3\7\1\u0276\31\0\26\7\3\0\3\7\2\0"+
    "\5\7\31\0\5\7\1\u0277\20\7\3\0\3\7\2\0"+
    "\2\7\1\u0278\2\7\31\0\26\7\3\0\1\u0199\2\0"+
    "\1\u0199\70\0\1\u0199\2\0\1\u0199\1\u0279\74\0\1\u027a"+
    "\66\0\3\7\2\0\5\7\31\0\21\7\1\u027b\4\7"+
    "\3\0\3\7\2\0\5\7\31\0\15\7\1\u027c\10\7"+
    "\3\0\3\7\2\0\3\7\1\u027d\1\7\31\0\26\7"+
    "\3\0\3\7\2\0\5\7\31\0\3\7\1\u027e\22\7"+
    "\3\0\3\7\2\0\5\7\31\0\1\u027f\25\7\3\0"+
    "\3\7\2\0\5\7\31\0\15\7\1\u0280\10\7\3\0"+
    "\3\7\2\0\5\7\31\0\2\7\1\u0281\23\7\3\0"+
    "\3\7\2\0\5\7\31\0\11\7\1\u0282\14\7\3\0"+
    "\3\7\2\0\5\7\31\0\3\7\1\u0283\22\7\3\0"+
    "\3\7\2\0\5\7\31\0\3\7\1\u0284\22\7\3\0"+
    "\3\7\2\0\5\7\31\0\10\7\1\u0285\15\7\3\0"+
    "\3\7\2\0\5\7\31\0\5\7\1\u0286\20\7\3\0"+
    "\3\7\2\0\5\7\31\0\3\7\1\u0287\22\7\3\0"+
    "\3\7\2\0\3\7\1\u0288\1\7\31\0\26\7\3\0"+
    "\3\7\2\0\1\u0289\4\7\31\0\26\7\3\0\3\7"+
    "\2\0\2\7\1\u028a\2\7\31\0\26\7\3\0\3\7"+
    "\2\0\3\7\1\u028b\1\7\31\0\26\7\3\0\3\7"+
    "\2\0\5\7\31\0\10\7\1\u028c\15\7\3\0\3\7"+
    "\2\0\5\7\31\0\21\7\1\u028d\4\7\3\0\3\7"+
    "\2\0\1\u028e\4\7\31\0\26\7\3\0\3\7\2\0"+
    "\5\7\31\0\16\7\1\u028f\7\7\3\0\3\7\2\0"+
    "\5\7\31\0\2\7\1\u0290\23\7\3\0\3\7\2\0"+
    "\5\7\31\0\3\7\1\u0291\22\7\3\0\3\7\2\0"+
    "\5\7\31\0\11\7\1\u0292\14\7\3\0\3\7\2\0"+
    "\4\7\1\u0293\31\0\26\7\3\0\3\7\2\0\3\7"+
    "\1\u0294\1\7\31\0\26\7\3\0\3\7\2\0\4\7"+
    "\1\u0295\31\0\26\7\3\0\3\7\2\0\5\7\31\0"+
    "\3\7\1\u0296\22\7\3\0\3\7\2\0\2\7\1\u0297"+
    "\2\7\31\0\26\7\3\0\3\7\2\0\5\7\31\0"+
    "\10\7\1\u0298\15\7\3\0\3\7\2\0\5\7\31\0"+
    "\6\7\1\u0299\17\7\3\0\3\7\2\0\5\7\31\0"+
    "\3\7\1\u029a\22\7\3\0\3\7\2\0\5\7\31\0"+
    "\3\7\1\u029b\22\7\3\0\3\7\2\0\5\7\31\0"+
    "\10\7\1\u029c\15\7\3\0\3\7\2\0\4\7\1\u029d"+
    "\31\0\26\7\3\0\3\7\2\0\5\7\31\0\2\7"+
    "\1\u029e\23\7\3\0\3\7\2\0\4\7\1\u029f\31\0"+
    "\26\7\3\0\3\7\2\0\5\7\31\0\3\7\1\u02a0"+
    "\22\7\3\0\3\7\2\0\5\7\31\0\1\u02a1\25\7"+
    "\3\0\3\7\2\0\5\7\31\0\20\7\1\u02a2\5\7"+
    "\3\0\3\7\2\0\5\7\31\0\3\7\1\u02a3\22\7"+
    "\3\0\3\7\2\0\3\7\1\u02a4\1\7\31\0\26\7"+
    "\3\0\3\7\2\0\5\7\31\0\13\7\1\u02a5\12\7"+
    "\3\0\3\7\2\0\4\7\1\u02a6\31\0\26\7\3\0"+
    "\3\7\2\0\5\7\31\0\11\7\1\u02a7\14\7\3\0"+
    "\3\7\2\0\2\7\1\u02a8\2\7\31\0\26\7\3\0"+
    "\3\7\2\0\5\7\31\0\3\7\1\u02a9\5\7\1\u02aa"+
    "\14\7\3\0\3\7\2\0\5\7\31\0\10\7\1\u02ab"+
    "\15\7\3\0\3\7\2\0\5\7\31\0\10\7\1\u02ac"+
    "\15\7\3\0\3\7\2\0\5\7\31\0\5\7\1\u02ad"+
    "\20\7\3\0\3\7\2\0\1\u02ae\4\7\31\0\26\7"+
    "\3\0\3\7\2\0\5\7\31\0\6\7\1\u02af\17\7"+
    "\3\0\3\7\2\0\5\7\31\0\5\7\1\u02b0\20\7"+
    "\3\0\3\7\2\0\4\7\1\u02b1\31\0\26\7\3\0"+
    "\3\7\2\0\5\7\31\0\6\7\1\u02b2\17\7\3\0"+
    "\3\7\2\0\5\7\31\0\16\7\1\u02b3\7\7\3\0"+
    "\3\7\2\0\3\7\1\u02b4\1\7\31\0\26\7\3\0"+
    "\3\7\2\0\5\7\31\0\5\7\1\u02b5\4\7\1\u02b6"+
    "\13\7\3\0\3\7\2\0\5\7\31\0\2\7\1\u02b7"+
    "\23\7\3\0\3\7\2\0\5\7\31\0\2\7\1\u02b8"+
    "\23\7\3\0\3\7\2\0\5\7\31\0\3\7\1\u02b9"+
    "\22\7\3\0\3\7\2\0\5\7\31\0\3\7\1\u02ba"+
    "\4\7\1\u02bb\15\7\3\0\3\7\2\0\2\7\1\u02bc"+
    "\2\7\31\0\26\7\3\0\3\7\2\0\5\7\31\0"+
    "\11\7\1\u02bd\14\7\3\0\3\7\2\0\5\7\31\0"+
    "\3\7\1\u02be\22\7\3\0\3\7\2\0\5\7\31\0"+
    "\14\7\1\u02bf\11\7\3\0\3\7\2\0\5\7\31\0"+
    "\3\7\1\u02c0\22\7\3\0\3\7\2\0\1\u02c1\4\7"+
    "\31\0\26\7\3\0\3\7\2\0\5\7\31\0\13\7"+
    "\1\u02c2\12\7\3\0\3\7\2\0\5\7\31\0\10\7"+
    "\1\u02c3\15\7\3\0\3\7\2\0\3\7\1\u02c4\1\7"+
    "\31\0\26\7\3\0\3\7\2\0\5\7\31\0\2\7"+
    "\1\u02c5\23\7\3\0\3\7\2\0\5\7\31\0\6\7"+
    "\1\u02c6\17\7\3\0\3\7\2\0\5\7\31\0\5\7"+
    "\1\u02c7\20\7\3\0\3\7\2\0\5\7\31\0\11\7"+
    "\1\u02c8\14\7\3\0\3\7\2\0\5\7\31\0\3\7"+
    "\1\u02c9\22\7\3\0\3\7\2\0\5\7\31\0\11\7"+
    "\1\u02ca\14\7\3\0\3\7\2\0\2\7\1\u02cb\2\7"+
    "\31\0\26\7\3\0\3\7\2\0\2\7\1\u02cc\2\7"+
    "\31\0\26\7\3\0\3\7\2\0\5\7\31\0\2\7"+
    "\1\u02cd\23\7\3\0\3\7\2\0\5\7\31\0\11\7"+
    "\1\u02ce\14\7\3\0\3\7\2\0\1\u02cf\4\7\31\0"+
    "\26\7\3\0\3\7\2\0\4\7\1\u02d0\31\0\26\7"+
    "\3\0\3\7\2\0\5\7\31\0\20\7\1\u02d1\5\7"+
    "\3\0\3\7\2\0\5\7\31\0\1\7\1\u02d2\24\7"+
    "\3\0\3\7\2\0\1\u02d3\4\7\31\0\26\7\3\0"+
    "\3\7\2\0\4\7\1\u02d4\31\0\26\7\3\0\3\7"+
    "\2\0\5\7\31\0\3\7\1\u02d5\22\7\3\0\3\7"+
    "\2\0\5\7\31\0\2\7\1\u02d6\23\7\3\0\3\7"+
    "\2\0\5\7\31\0\1\u02d7\7\7\1\u02d8\15\7\3\0"+
    "\3\7\2\0\5\7\31\0\1\u02d9\25\7\3\0\3\7"+
    "\2\0\1\u02da\4\7\31\0\26\7\3\0\3\7\2\0"+
    "\5\7\31\0\10\7\1\u02db\15\7\3\0\3\7\2\0"+
    "\5\7\31\0\2\7\1\u02dc\23\7\3\0\3\7\2\0"+
    "\1\u02dd\4\7\31\0\26\7\3\0\3\7\2\0\4\7"+
    "\1\u02de\31\0\26\7\3\0\3\7\2\0\5\7\31\0"+
    "\1\u02df\25\7\3\0\3\7\2\0\5\7\31\0\2\7"+
    "\1\u02e0\23\7\3\0\3\7\2\0\5\7\31\0\5\7"+
    "\1\u02e1\20\7\3\0\3\7\2\0\5\7\31\0\14\7"+
    "\1\u02e2\11\7\3\0\2\7\1\u02e3\2\0\5\7\31\0"+
    "\1\u02e4\25\7\3\0\3\7\2\0\1\u02e5\4\7\31\0"+
    "\26\7\3\0\3\7\2\0\5\7\31\0\1\u02e6\10\7"+
    "\1\u02e7\14\7\3\0\3\7\2\0\5\7\31\0\2\7"+
    "\1\u02e8\23\7\3\0\3\7\2\0\1\u02e9\4\7\31\0"+
    "\26\7\3\0\3\7\2\0\5\7\31\0\2\7\1\u02ea"+
    "\23\7\3\0\3\7\2\0\5\7\31\0\20\7\1\u02eb"+
    "\5\7\3\0\3\7\2\0\5\7\31\0\1\u02ec\25\7"+
    "\3\0\3\7\2\0\1\u02ed\4\7\31\0\26\7\3\0"+
    "\3\7\2\0\1\u02ee\4\7\31\0\26\7\3\0\3\7"+
    "\2\0\3\7\1\u02ef\1\7\31\0\26\7\3\0\3\7"+
    "\2\0\5\7\31\0\11\7\1\u02f0\14\7\3\0\3\7"+
    "\2\0\2\7\1\u02f1\2\7\31\0\26\7\3\0\3\7"+
    "\2\0\4\7\1\u02f2\31\0\26\7\3\0\3\7\2\0"+
    "\5\7\31\0\3\7\1\u02f3\22\7\3\0\3\7\2\0"+
    "\3\7\1\u02f4\1\7\31\0\26\7\3\0\3\7\2\0"+
    "\5\7\31\0\3\7\1\u02f5\22\7\3\0\3\7\2\0"+
    "\5\7\31\0\2\7\1\u02f6\23\7\3\0\3\7\2\0"+
    "\5\7\31\0\1\7\1\u02f7\21\7\1\u02f8\1\7\1\u02f9"+
    "\3\0\3\7\2\0\5\7\31\0\10\7\1\u02fa\15\7"+
    "\3\0\3\7\2\0\4\7\1\u02fb\31\0\26\7\3\0"+
    "\3\7\2\0\1\u02fc\4\7\31\0\26\7\3\0\3\7"+
    "\2\0\5\7\31\0\3\7\1\u02fd\22\7\3\0\3\7"+
    "\2\0\5\7\31\0\23\7\1\u02fe\2\7\3\0\3\7"+
    "\2\0\5\7\31\0\6\7\1\u02ff\17\7\3\0\3\7"+
    "\2\0\5\7\31\0\3\7\1\u0300\12\7\1\u0301\7\7"+
    "\3\0\3\7\2\0\2\7\1\u0302\2\7\31\0\3\7"+
    "\1\u0303\22\7\3\0\3\7\2\0\3\7\1\u0304\1\7"+
    "\31\0\26\7\3\0\3\7\2\0\5\7\31\0\11\7"+
    "\1\u0305\14\7\3\0\3\7\2\0\5\7\31\0\2\7"+
    "\1\u0306\23\7\3\0\3\7\2\0\5\7\31\0\2\7"+
    "\1\u0307\23\7\3\0\3\7\2\0\5\7\31\0\1\u0308"+
    "\25\7\3\0\3\7\2\0\5\7\31\0\1\7\1\u0309"+
    "\24\7\3\0\3\7\2\0\1\u030a\4\7\31\0\26\7"+
    "\3\0\3\7\2\0\2\7\1\u030b\2\7\31\0\26\7"+
    "\3\0\3\7\2\0\3\7\1\u030c\1\7\31\0\26\7"+
    "\3\0\3\7\2\0\5\7\31\0\14\7\1\u030d\11\7"+
    "\3\0\3\7\2\0\5\7\31\0\5\7\1\u030e\20\7"+
    "\3\0\3\7\2\0\4\7\1\u030f\31\0\26\7\3\0"+
    "\3\7\2\0\1\u0310\4\7\31\0\26\7\3\0\3\7"+
    "\2\0\5\7\31\0\11\7\1\u0311\14\7\3\0\3\7"+
    "\2\0\5\7\31\0\11\7\1\u0312\14\7\3\0\3\7"+
    "\2\0\5\7\31\0\1\u0313\25\7\3\0\3\7\2\0"+
    "\1\u0314\4\7\31\0\26\7\3\0\3\7\2\0\5\7"+
    "\31\0\11\7\1\u0315\14\7\3\0\3\7\2\0\5\7"+
    "\31\0\1\u0316\25\7\3\0\3\7\2\0\1\u0317\4\7"+
    "\31\0\26\7\3\0\3\7\2\0\5\7\31\0\2\7"+
    "\1\u0318\23\7\3\0\3\7\2\0\5\7\31\0\3\7"+
    "\1\u0319\22\7\3\0\3\7\2\0\5\7\31\0\1\u031a"+
    "\25\7\3\0\3\7\2\0\5\7\31\0\11\7\1\u031b"+
    "\14\7\3\0\3\7\2\0\5\7\31\0\2\7\1\u031c"+
    "\23\7\3\0\3\7\2\0\5\7\31\0\2\7\1\u031d"+
    "\23\7\3\0\3\7\2\0\5\7\31\0\1\u031e\25\7"+
    "\3\0\3\7\2\0\5\7\31\0\2\7\1\u031f\23\7"+
    "\3\0\3\7\2\0\5\7\31\0\15\7\1\u0320\10\7"+
    "\3\0\3\7\2\0\5\7\31\0\22\7\1\u0321\3\7"+
    "\3\0\3\7\2\0\1\u0322\4\7\31\0\26\7\3\0"+
    "\3\7\2\0\1\u0323\4\7\31\0\26\7\3\0\3\7"+
    "\2\0\1\u0324\4\7\31\0\26\7\3\0\3\7\2\0"+
    "\1\u0325\4\7\31\0\26\7\3\0\3\7\2\0\5\7"+
    "\31\0\11\7\1\u0326\14\7\3\0\3\7\2\0\1\u0327"+
    "\4\7\31\0\26\7\3\0\3\7\2\0\5\7\31\0"+
    "\7\7\1\u0328\16\7\3\0\3\7\2\0\5\7\31\0"+
    "\7\7\1\u0329\16\7\3\0\3\7\2\0\4\7\1\u032a"+
    "\31\0\26\7\3\0\3\7\2\0\5\7\31\0\2\7"+
    "\1\u032b\23\7\3\0\3\7\2\0\5\7\31\0\1\u032c"+
    "\25\7\3\0\3\7\2\0\1\u032d\4\7\31\0\26\7"+
    "\3\0\3\7\2\0\5\7\31\0\11\7\1\u032e\14\7"+
    "\3\0\3\7\2\0\5\7\31\0\7\7\1\u032f\16\7"+
    "\3\0\3\7\2\0\5\7\31\0\7\7\1\u0330\16\7"+
    "\3\0\3\7\2\0\5\7\31\0\2\7\1\u0331\23\7"+
    "\3\0\3\7\2\0\5\7\31\0\2\7\1\u0332\23\7"+
    "\3\0\3\7\2\0\5\7\31\0\10\7\1\u0333\15\7"+
    "\3\0\3\7\2\0\5\7\31\0\2\7\1\u0334\23\7"+
    "\3\0\3\7\2\0\5\7\31\0\1\7\1\u0335\24\7"+
    "\3\0\3\7\2\0\5\7\31\0\11\7\1\u0336\14\7"+
    "\3\0\3\7\2\0\5\7\31\0\3\7\1\u0337\22\7"+
    "\3\0\3\7\2\0\5\7\31\0\22\7\1\u0338\3\7"+
    "\3\0\3\7\2\0\5\7\31\0\2\7\1\u0339\23\7"+
    "\3\0\1\u0279\2\0\1\u0279\156\0\1\u033a\5\0\3\7"+
    "\2\0\4\7\1\u033b\31\0\26\7\3\0\3\7\2\0"+
    "\1\u033c\4\7\31\0\26\7\3\0\3\7\2\0\5\7"+
    "\31\0\2\7\1\u033d\23\7\3\0\3\7\2\0\2\7"+
    "\1\u033e\2\7\31\0\26\7\3\0\3\7\2\0\5\7"+
    "\31\0\6\7\1\u033f\17\7\3\0\3\7\2\0\5\7"+
    "\31\0\2\7\1\u0340\23\7\3\0\3\7\2\0\5\7"+
    "\31\0\5\7\1\u0341\20\7\3\0\3\7\2\0\5\7"+
    "\31\0\22\7\1\u0342\3\7\3\0\3\7\2\0\5\7"+
    "\31\0\11\7\1\u0343\14\7\3\0\3\7\2\0\5\7"+
    "\31\0\1\u0344\25\7\3\0\3\7\2\0\2\7\1\u0345"+
    "\2\7\31\0\26\7\3\0\3\7\2\0\5\7\31\0"+
    "\5\7\1\u0346\20\7\3\0\3\7\2\0\5\7\31\0"+
    "\6\7\1\u0347\17\7\3\0\3\7\2\0\1\u0348\4\7"+
    "\31\0\26\7\3\0\3\7\2\0\5\7\31\0\17\7"+
    "\1\u0349\6\7\3\0\3\7\2\0\5\7\31\0\10\7"+
    "\1\u034a\15\7\3\0\3\7\2\0\1\u034b\4\7\31\0"+
    "\26\7\3\0\3\7\2\0\2\7\1\u034c\2\7\31\0"+
    "\26\7\3\0\3\7\2\0\5\7\31\0\1\u034d\25\7"+
    "\3\0\3\7\2\0\5\7\31\0\10\7\1\u034e\15\7"+
    "\3\0\3\7\2\0\5\7\31\0\3\7\1\u034f\22\7"+
    "\3\0\3\7\2\0\5\7\31\0\1\u0350\25\7\3\0"+
    "\3\7\2\0\5\7\31\0\2\7\1\u0351\23\7\3\0"+
    "\3\7\2\0\2\7\1\u0352\2\7\31\0\26\7\3\0"+
    "\3\7\2\0\3\7\1\u0353\1\7\31\0\26\7\3\0"+
    "\3\7\2\0\1\u0354\4\7\31\0\26\7\3\0\3\7"+
    "\2\0\5\7\31\0\10\7\1\u0355\15\7\3\0\3\7"+
    "\2\0\5\7\31\0\11\7\1\u0356\14\7\3\0\3\7"+
    "\2\0\5\7\31\0\3\7\1\u0357\22\7\3\0\3\7"+
    "\2\0\5\7\31\0\1\u0358\25\7\3\0\3\7\2\0"+
    "\5\7\31\0\3\7\1\u0359\22\7\3\0\3\7\2\0"+
    "\4\7\1\u035a\31\0\26\7\3\0\3\7\2\0\5\7"+
    "\31\0\1\u035b\25\7\3\0\3\7\2\0\1\u035c\4\7"+
    "\31\0\26\7\3\0\3\7\2\0\2\7\1\u035d\2\7"+
    "\31\0\26\7\3\0\3\7\2\0\5\7\31\0\10\7"+
    "\1\u035e\15\7\3\0\3\7\2\0\5\7\31\0\11\7"+
    "\1\u035f\14\7\3\0\3\7\2\0\2\7\1\u0360\2\7"+
    "\31\0\26\7\3\0\3\7\2\0\2\7\1\u0361\2\7"+
    "\31\0\26\7\3\0\3\7\2\0\5\7\31\0\3\7"+
    "\1\u0362\22\7\3\0\3\7\2\0\5\7\31\0\11\7"+
    "\1\u0363\14\7\3\0\3\7\2\0\5\7\31\0\5\7"+
    "\1\u0364\20\7\3\0\3\7\2\0\5\7\31\0\1\u0365"+
    "\25\7\3\0\3\7\2\0\4\7\1\u0366\31\0\1\u0367"+
    "\25\7\3\0\3\7\2\0\5\7\31\0\11\7\1\u0368"+
    "\14\7\3\0\3\7\2\0\5\7\31\0\10\7\1\u0369"+
    "\15\7\3\0\3\7\2\0\1\u036a\4\7\31\0\26\7"+
    "\3\0\3\7\2\0\5\7\31\0\1\u036b\25\7\3\0"+
    "\3\7\2\0\5\7\31\0\2\7\1\u036c\23\7\3\0"+
    "\3\7\2\0\5\7\31\0\10\7\1\u036d\15\7\3\0"+
    "\3\7\2\0\5\7\31\0\11\7\1\u036e\14\7\3\0"+
    "\3\7\2\0\1\u036f\4\7\31\0\26\7\3\0\3\7"+
    "\2\0\2\7\1\u0370\2\7\31\0\26\7\3\0\3\7"+
    "\2\0\5\7\31\0\11\7\1\u0371\14\7\3\0\3\7"+
    "\2\0\5\7\31\0\3\7\1\u0372\22\7\3\0\3\7"+
    "\2\0\5\7\31\0\22\7\1\u0373\3\7\3\0\3\7"+
    "\2\0\5\7\31\0\6\7\1\u0374\17\7\3\0\3\7"+
    "\2\0\5\7\31\0\2\7\1\u0375\23\7\3\0\3\7"+
    "\2\0\1\u0376\4\7\31\0\26\7\3\0\3\7\2\0"+
    "\1\u0377\4\7\31\0\26\7\3\0\3\7\2\0\5\7"+
    "\31\0\3\7\1\u0378\22\7\3\0\3\7\2\0\5\7"+
    "\31\0\1\u0379\25\7\3\0\3\7\2\0\3\7\1\u037a"+
    "\1\7\31\0\26\7\3\0\3\7\2\0\5\7\31\0"+
    "\11\7\1\u037b\14\7\3\0\3\7\2\0\5\7\31\0"+
    "\2\7\1\u037c\23\7\3\0\3\7\2\0\1\u037d\4\7"+
    "\31\0\26\7\3\0\3\7\2\0\5\7\31\0\10\7"+
    "\1\u037e\15\7\3\0\3\7\2\0\5\7\31\0\11\7"+
    "\1\u037f\14\7\3\0\3\7\2\0\5\7\31\0\10\7"+
    "\1\u0380\15\7\3\0\3\7\2\0\5\7\31\0\1\7"+
    "\1\u0381\24\7\3\0\3\7\2\0\5\7\31\0\2\7"+
    "\1\u0382\23\7\3\0\3\7\2\0\5\7\31\0\3\7"+
    "\1\u0383\22\7\3\0\3\7\2\0\5\7\31\0\5\7"+
    "\1\u0384\20\7\3\0\3\7\2\0\5\7\31\0\20\7"+
    "\1\u0385\5\7\3\0\3\7\2\0\4\7\1\u0386\31\0"+
    "\26\7\3\0\3\7\2\0\5\7\31\0\1\u0387\25\7"+
    "\3\0\3\7\2\0\5\7\31\0\10\7\1\u0388\15\7"+
    "\3\0\3\7\2\0\5\7\31\0\11\7\1\u0389\14\7"+
    "\3\0\3\7\2\0\5\7\31\0\3\7\1\u038a\22\7"+
    "\3\0\3\7\2\0\5\7\31\0\1\u038b\25\7\3\0"+
    "\3\7\2\0\5\7\31\0\1\7\1\u038c\24\7\3\0"+
    "\3\7\2\0\5\7\31\0\3\7\1\u038d\22\7\3\0"+
    "\3\7\2\0\2\7\1\u038e\2\7\31\0\26\7\3\0"+
    "\3\7\2\0\5\7\31\0\3\7\1\u038f\22\7\3\0"+
    "\3\7\2\0\1\u0390\4\7\31\0\26\7\3\0\3\7"+
    "\2\0\5\7\31\0\10\7\1\u0391\15\7\3\0\3\7"+
    "\2\0\5\7\31\0\1\7\1\u0392\24\7\3\0\3\7"+
    "\2\0\1\u0393\4\7\31\0\26\7\3\0\3\7\2\0"+
    "\5\7\31\0\15\7\1\u0394\10\7\3\0\3\7\2\0"+
    "\4\7\1\u0395\31\0\26\7\3\0\3\7\2\0\5\7"+
    "\31\0\6\7\1\u0396\17\7\3\0\3\7\2\0\5\7"+
    "\31\0\6\7\1\u0397\17\7\3\0\3\7\2\0\5\7"+
    "\31\0\11\7\1\u0398\14\7\3\0\3\7\2\0\2\7"+
    "\1\u0399\2\7\31\0\26\7\3\0\3\7\2\0\5\7"+
    "\31\0\3\7\1\u039a\22\7\3\0\3\7\2\0\5\7"+
    "\31\0\3\7\1\u039b\22\7\3\0\3\7\2\0\2\7"+
    "\1\u039c\2\7\31\0\26\7\3\0\3\7\2\0\5\7"+
    "\31\0\2\7\1\u039d\23\7\3\0\3\7\2\0\5\7"+
    "\31\0\5\7\1\u039e\20\7\3\0\3\7\2\0\5\7"+
    "\31\0\5\7\1\u039f\20\7\3\0\3\7\2\0\5\7"+
    "\31\0\2\7\1\u03a0\23\7\3\0\3\7\2\0\5\7"+
    "\31\0\2\7\1\u03a1\23\7\3\0\3\7\2\0\5\7"+
    "\31\0\16\7\1\u03a2\7\7\3\0\3\7\2\0\5\7"+
    "\31\0\10\7\1\u03a3\15\7\3\0\3\7\2\0\5\7"+
    "\31\0\2\7\1\u03a4\23\7\3\0\2\7\1\u03a5\2\0"+
    "\5\7\31\0\26\7\3\0\3\7\2\0\5\7\31\0"+
    "\1\u03a6\25\7\3\0\3\7\2\0\5\7\31\0\20\7"+
    "\1\u03a7\5\7\3\0\3\7\2\0\3\7\1\u03a8\1\7"+
    "\31\0\26\7\3\0\3\7\2\0\2\7\1\u03a9\2\7"+
    "\31\0\26\7\3\0\3\7\2\0\5\7\31\0\1\u03aa"+
    "\25\7\3\0\3\7\2\0\5\7\31\0\2\7\1\u03ab"+
    "\23\7\3\0\3\7\2\0\5\7\31\0\1\u03ac\25\7"+
    "\3\0\3\7\2\0\5\7\31\0\5\7\1\u03ad\13\7"+
    "\1\u03ae\4\7\3\0\3\7\2\0\1\u03af\4\7\31\0"+
    "\26\7\3\0\3\7\2\0\5\7\31\0\5\7\1\u03b0"+
    "\20\7\3\0\3\7\2\0\5\7\31\0\2\7\1\u03b1"+
    "\23\7\3\0\3\7\2\0\5\7\31\0\1\7\1\u03b2"+
    "\24\7\3\0\3\7\2\0\5\7\31\0\1\u03b3\25\7"+
    "\3\0\3\7\2\0\5\7\31\0\11\7\1\u03b4\14\7"+
    "\3\0\3\7\2\0\5\7\31\0\2\7\1\u03b5\23\7"+
    "\3\0\3\7\2\0\5\7\31\0\11\7\1\u03b6\14\7"+
    "\3\0\3\7\2\0\1\u03b7\4\7\31\0\26\7\3\0"+
    "\3\7\2\0\5\7\31\0\15\7\1\u03b8\10\7\3\0"+
    "\3\7\2\0\1\u03b9\4\7\31\0\26\7\3\0\3\7"+
    "\2\0\1\u03ba\4\7\31\0\26\7\3\0\3\7\2\0"+
    "\2\7\1\u03bb\2\7\31\0\26\7\3\0\3\7\2\0"+
    "\5\7\31\0\6\7\1\u03bc\17\7\3\0\3\7\2\0"+
    "\5\7\31\0\1\u03bd\25\7\3\0\3\7\2\0\4\7"+
    "\1\u03be\31\0\26\7\3\0\3\7\2\0\5\7\31\0"+
    "\3\7\1\u03bf\22\7\3\0\3\7\2\0\5\7\31\0"+
    "\5\7\1\u03c0\20\7\3\0\3\7\2\0\5\7\31\0"+
    "\3\7\1\u03c1\22\7\3\0\3\7\2\0\5\7\31\0"+
    "\1\7\1\u03c2\24\7\3\0\3\7\2\0\5\7\31\0"+
    "\3\7\1\u03c3\22\7\3\0\3\7\2\0\4\7\1\u03c4"+
    "\31\0\26\7\3\0\3\7\2\0\5\7\31\0\11\7"+
    "\1\u03c5\14\7\3\0\3\7\2\0\4\7\1\u03c6\31\0"+
    "\26\7\3\0\3\7\2\0\5\7\31\0\10\7\1\u03c7"+
    "\15\7\3\0\3\7\2\0\5\7\31\0\2\7\1\u03c8"+
    "\23\7\3\0\3\7\2\0\5\7\31\0\21\7\1\u03c9"+
    "\4\7\3\0\3\7\2\0\2\7\1\u03ca\2\7\31\0"+
    "\26\7\3\0\3\7\2\0\1\u03cb\4\7\31\0\26\7"+
    "\3\0\3\7\2\0\1\u03cc\4\7\31\0\26\7\3\0"+
    "\3\7\2\0\5\7\31\0\1\7\1\u03cd\24\7\3\0"+
    "\3\7\2\0\5\7\31\0\5\7\1\u03ce\20\7\3\0"+
    "\3\7\2\0\2\7\1\u03cf\2\7\31\0\26\7\3\0"+
    "\3\7\2\0\5\7\31\0\1\u03d0\25\7\3\0\3\7"+
    "\2\0\5\7\31\0\11\7\1\u03d1\14\7\3\0\3\7"+
    "\2\0\1\u03d2\4\7\31\0\26\7\3\0\3\7\2\0"+
    "\5\7\31\0\16\7\1\u03d3\7\7\3\0\3\7\2\0"+
    "\5\7\31\0\1\u03d4\25\7\3\0\3\7\2\0\5\7"+
    "\31\0\1\u03d5\25\7\10\0\1\u03d6\66\0\3\7\2\0"+
    "\1\u03d7\4\7\31\0\26\7\3\0\3\7\2\0\5\7"+
    "\31\0\1\u03d8\25\7\3\0\3\7\2\0\5\7\31\0"+
    "\2\7\1\u03d9\23\7\3\0\3\7\2\0\5\7\31\0"+
    "\11\7\1\u03da\14\7\3\0\3\7\2\0\5\7\31\0"+
    "\6\7\1\u03db\17\7\3\0\3\7\2\0\4\7\1\u03dc"+
    "\31\0\26\7\3\0\3\7\2\0\5\7\31\0\1\u03dd"+
    "\25\7\3\0\3\7\2\0\5\7\31\0\2\7\1\u03de"+
    "\23\7\3\0\3\7\2\0\5\7\31\0\14\7\1\u03df"+
    "\11\7\3\0\3\7\2\0\2\7\1\u03e0\2\7\31\0"+
    "\26\7\3\0\3\7\2\0\5\7\31\0\2\7\1\u03e1"+
    "\23\7\3\0\3\7\2\0\5\7\31\0\2\7\1\u03e2"+
    "\23\7\3\0\3\7\2\0\5\7\31\0\16\7\1\u03e3"+
    "\7\7\3\0\3\7\2\0\5\7\31\0\16\7\1\u03e4"+
    "\7\7\3\0\3\7\2\0\5\7\31\0\11\7\1\u03e5"+
    "\14\7\3\0\3\7\2\0\5\7\31\0\2\7\1\u03e6"+
    "\23\7\3\0\3\7\2\0\5\7\31\0\11\7\1\u03e7"+
    "\14\7\3\0\3\7\2\0\5\7\31\0\2\7\1\u03e8"+
    "\23\7\3\0\3\7\2\0\5\7\31\0\6\7\1\u03e9"+
    "\17\7\3\0\3\7\2\0\5\7\31\0\13\7\1\u03ea"+
    "\1\7\1\u03eb\10\7\3\0\3\7\2\0\1\u03ec\4\7"+
    "\31\0\26\7\3\0\3\7\2\0\4\7\1\u03ed\31\0"+
    "\26\7\3\0\3\7\2\0\1\u03ee\4\7\31\0\1\u03ef"+
    "\25\7\3\0\3\7\2\0\5\7\31\0\2\7\1\u03f0"+
    "\23\7\3\0\3\7\2\0\5\7\31\0\5\7\1\u03f1"+
    "\20\7\3\0\3\7\2\0\5\7\31\0\5\7\1\u03f2"+
    "\20\7\3\0\3\7\2\0\5\7\31\0\13\7\1\u03f3"+
    "\12\7\3\0\3\7\2\0\5\7\31\0\6\7\1\u03f4"+
    "\17\7\3\0\3\7\2\0\2\7\1\u03f5\2\7\31\0"+
    "\26\7\3\0\3\7\2\0\5\7\31\0\1\u03f6\25\7"+
    "\3\0\3\7\2\0\5\7\31\0\12\7\1\u03f7\13\7"+
    "\3\0\3\7\2\0\5\7\31\0\1\u03f8\25\7\3\0"+
    "\3\7\2\0\5\7\31\0\2\7\1\u03f9\23\7\3\0"+
    "\3\7\2\0\5\7\31\0\1\u03fa\25\7\3\0\3\7"+
    "\2\0\5\7\31\0\6\7\1\u03fb\17\7\3\0\3\7"+
    "\2\0\2\7\1\u03fc\2\7\31\0\26\7\3\0\3\7"+
    "\2\0\2\7\1\u03fd\2\7\31\0\26\7\3\0\3\7"+
    "\2\0\5\7\31\0\3\7\1\u03fe\22\7\3\0\3\7"+
    "\2\0\4\7\1\u03ff\31\0\26\7\3\0\3\7\2\0"+
    "\5\7\31\0\1\u0400\25\7\3\0\3\7\2\0\2\7"+
    "\1\u0401\2\7\31\0\26\7\3\0\3\7\2\0\5\7"+
    "\31\0\21\7\1\u0402\4\7\3\0\3\7\2\0\5\7"+
    "\31\0\23\7\1\u0403\2\7\3\0\3\7\2\0\5\7"+
    "\31\0\6\7\1\u0404\17\7\3\0\3\7\2\0\1\u0405"+
    "\4\7\31\0\26\7\3\0\3\7\2\0\5\7\31\0"+
    "\11\7\1\u0406\14\7\3\0\3\7\2\0\5\7\31\0"+
    "\1\u0407\25\7\3\0\3\7\2\0\2\7\1\u0408\2\7"+
    "\31\0\26\7\3\0\3\7\2\0\5\7\31\0\3\7"+
    "\1\u0409\22\7\3\0\3\7\2\0\5\7\31\0\6\7"+
    "\1\u040a\17\7\3\0\3\7\2\0\2\7\1\u040b\2\7"+
    "\31\0\26\7\3\0\3\7\2\0\5\7\31\0\1\7"+
    "\1\u040c\24\7\3\0\3\7\2\0\5\7\31\0\3\7"+
    "\1\u040d\22\7\3\0\3\7\2\0\2\7\1\u040e\2\7"+
    "\31\0\26\7\3\0\3\7\2\0\5\7\31\0\2\7"+
    "\1\u040f\23\7\3\0\3\7\2\0\2\7\1\u0410\2\7"+
    "\31\0\26\7\3\0\3\7\2\0\5\7\31\0\11\7"+
    "\1\u0411\14\7\3\0\3\7\2\0\5\7\31\0\11\7"+
    "\1\u0412\14\7\3\0\3\7\2\0\5\7\31\0\2\7"+
    "\1\u0413\23\7\3\0\2\7\1\u0414\2\0\5\7\31\0"+
    "\26\7\3\0\3\7\2\0\5\7\31\0\17\7\1\u0415"+
    "\6\7\3\0\3\7\2\0\2\7\1\u0416\2\7\31\0"+
    "\26\7\3\0\3\7\2\0\5\7\31\0\10\7\1\u0417"+
    "\15\7\3\0\3\7\2\0\5\7\31\0\2\7\1\u0418"+
    "\23\7\3\0\3\7\2\0\1\u0419\4\7\31\0\26\7"+
    "\3\0\3\7\2\0\2\7\1\u041a\2\7\31\0\26\7"+
    "\3\0\3\7\2\0\5\7\31\0\2\7\1\u041b\23\7"+
    "\3\0\3\7\2\0\5\7\31\0\3\7\1\u041c\22\7"+
    "\3\0\3\7\2\0\5\7\31\0\16\7\1\u041d\7\7"+
    "\3\0\3\7\2\0\1\u041e\4\7\31\0\26\7\3\0"+
    "\3\7\2\0\5\7\31\0\10\7\1\u041f\15\7\3\0"+
    "\3\7\2\0\1\u0420\4\7\31\0\26\7\3\0\3\7"+
    "\2\0\5\7\31\0\2\7\1\u0421\23\7\3\0\3\7"+
    "\2\0\5\7\31\0\2\7\1\u0422\23\7\3\0\3\7"+
    "\2\0\2\7\1\u0423\2\7\31\0\26\7\3\0\3\7"+
    "\2\0\3\7\1\u0424\1\7\31\0\26\7\3\0\3\7"+
    "\2\0\5\7\31\0\1\u0425\25\7\3\0\3\7\2\0"+
    "\5\7\31\0\2\7\1\u0426\23\7\3\0\3\7\2\0"+
    "\1\u0427\4\7\31\0\11\7\1\u0428\14\7\3\0\3\7"+
    "\2\0\5\7\31\0\6\7\1\u0429\17\7\3\0\3\7"+
    "\2\0\5\7\31\0\15\7\1\u042a\10\7\3\0\3\7"+
    "\2\0\1\u042b\4\7\31\0\26\7\3\0\3\7\2\0"+
    "\5\7\31\0\6\7\1\u042c\17\7\3\0\3\7\2\0"+
    "\4\7\1\u042d\31\0\26\7\3\0\3\7\2\0\5\7"+
    "\31\0\2\7\1\u042e\23\7\3\0\3\7\2\0\4\7"+
    "\1\u042f\31\0\26\7\3\0\3\7\2\0\1\u0430\4\7"+
    "\31\0\26\7\3\0\3\7\2\0\5\7\31\0\15\7"+
    "\1\u0431\10\7\3\0\3\7\2\0\5\7\31\0\5\7"+
    "\1\u0432\20\7\3\0\3\7\2\0\5\7\31\0\2\7"+
    "\1\u0433\23\7\3\0\3\7\2\0\1\u0434\4\7\31\0"+
    "\26\7\3\0\3\7\2\0\5\7\31\0\1\u0435\25\7"+
    "\3\0\3\7\2\0\5\7\31\0\3\7\1\u0436\22\7"+
    "\3\0\3\7\2\0\5\7\31\0\11\7\1\u0437\14\7"+
    "\3\0\3\7\2\0\1\u0438\4\7\31\0\26\7\3\0"+
    "\3\7\2\0\4\7\1\u0439\31\0\26\7\3\0\3\7"+
    "\2\0\5\7\31\0\2\7\1\u043a\23\7\3\0\3\7"+
    "\2\0\5\7\31\0\11\7\1\u043b\14\7\3\0\3\7"+
    "\2\0\5\7\31\0\1\u043c\25\7\3\0\3\7\2\0"+
    "\2\7\1\u043d\2\7\31\0\26\7\3\0\3\7\2\0"+
    "\2\7\1\u043e\2\7\31\0\26\7\3\0\3\7\2\0"+
    "\5\7\31\0\2\7\1\u043f\23\7\3\0\3\7\2\0"+
    "\4\7\1\u0440\31\0\26\7\3\0\3\7\2\0\5\7"+
    "\31\0\21\7\1\u0441\4\7\3\0\3\7\2\0\5\7"+
    "\31\0\11\7\1\u0442\14\7\3\0\3\7\2\0\1\u0443"+
    "\4\7\31\0\26\7\3\0\3\7\2\0\3\7\1\u0444"+
    "\1\7\31\0\26\7\3\0\3\7\2\0\5\7\31\0"+
    "\4\7\1\u0445\21\7\3\0\3\7\2\0\1\u0446\4\7"+
    "\31\0\26\7\3\0\3\7\2\0\5\7\31\0\10\7"+
    "\1\u0447\15\7\3\0\3\7\2\0\5\7\31\0\3\7"+
    "\1\u0448\22\7\3\0\3\7\2\0\1\u0449\4\7\31\0"+
    "\26\7\3\0\3\7\2\0\1\u044a\4\7\31\0\26\7"+
    "\3\0\3\7\2\0\1\u044b\4\7\31\0\26\7\3\0"+
    "\3\7\2\0\5\7\31\0\16\7\1\u044c\7\7\3\0"+
    "\3\7\2\0\5\7\31\0\3\7\1\u044d\22\7\3\0"+
    "\3\7\2\0\5\7\31\0\10\7\1\u044e\15\7\3\0"+
    "\3\7\2\0\5\7\31\0\23\7\1\u044f\2\7\3\0"+
    "\3\7\2\0\2\7\1\u0450\2\7\31\0\26\7\3\0"+
    "\3\7\2\0\2\7\1\u0451\2\7\31\0\26\7\3\0"+
    "\3\7\2\0\5\7\31\0\6\7\1\u0452\17\7\54\0"+
    "\1\u0453\22\0\3\7\2\0\4\7\1\u0454\31\0\26\7"+
    "\3\0\3\7\2\0\5\7\31\0\10\7\1\u0455\15\7"+
    "\3\0\3\7\2\0\4\7\1\u0456\31\0\26\7\3\0"+
    "\3\7\2\0\1\u0457\4\7\31\0\26\7\3\0\3\7"+
    "\2\0\1\u0458\4\7\31\0\26\7\3\0\3\7\2\0"+
    "\1\u0459\4\7\31\0\26\7\3\0\3\7\2\0\5\7"+
    "\31\0\12\7\1\u045a\13\7\3\0\3\7\2\0\1\u045b"+
    "\4\7\31\0\26\7\3\0\3\7\2\0\5\7\31\0"+
    "\10\7\1\u045c\15\7\3\0\3\7\2\0\1\u045d\4\7"+
    "\31\0\26\7\3\0\3\7\2\0\5\7\31\0\1\u045e"+
    "\25\7\3\0\3\7\2\0\1\u045f\4\7\31\0\26\7"+
    "\3\0\3\7\2\0\5\7\31\0\2\7\1\u0460\23\7"+
    "\3\0\3\7\2\0\5\7\31\0\1\7\1\u0461\24\7"+
    "\3\0\3\7\2\0\5\7\31\0\13\7\1\u0462\12\7"+
    "\3\0\3\7\2\0\1\u0463\4\7\31\0\26\7\3\0"+
    "\3\7\2\0\5\7\31\0\2\7\1\u0464\23\7\3\0"+
    "\3\7\2\0\3\7\1\u0465\1\7\31\0\26\7\3\0"+
    "\3\7\2\0\5\7\31\0\2\7\1\u0466\23\7\3\0"+
    "\3\7\2\0\1\u0467\4\7\31\0\26\7\3\0\3\7"+
    "\2\0\5\7\31\0\3\7\1\u0468\22\7\3\0\3\7"+
    "\2\0\1\u0469\4\7\31\0\26\7\3\0\3\7\2\0"+
    "\5\7\31\0\20\7\1\u046a\5\7\3\0\3\7\2\0"+
    "\1\u046b\4\7\31\0\26\7\3\0\3\7\2\0\5\7"+
    "\31\0\2\7\1\u046c\23\7\3\0\3\7\2\0\5\7"+
    "\31\0\2\7\1\u046d\23\7\3\0\3\7\2\0\5\7"+
    "\31\0\16\7\1\u046e\7\7\3\0\3\7\2\0\5\7"+
    "\31\0\21\7\1\u046f\4\7\3\0\3\7\2\0\5\7"+
    "\31\0\20\7\1\u0470\5\7\3\0\3\7\2\0\1\u0471"+
    "\4\7\31\0\26\7\3\0\3\7\2\0\1\u0472\4\7"+
    "\31\0\26\7\3\0\3\7\2\0\5\7\31\0\2\7"+
    "\1\u0473\23\7\3\0\3\7\2\0\5\7\31\0\2\7"+
    "\1\u0474\23\7\3\0\3\7\2\0\5\7\31\0\16\7"+
    "\1\u0475\7\7\3\0\3\7\2\0\5\7\31\0\2\7"+
    "\1\u0476\23\7\3\0\3\7\2\0\5\7\31\0\6\7"+
    "\1\u0477\17\7\3\0\3\7\2\0\5\7\31\0\10\7"+
    "\1\u0478\15\7\3\0\3\7\2\0\5\7\31\0\14\7"+
    "\1\u0479\11\7\3\0\3\7\2\0\5\7\31\0\2\7"+
    "\1\u047a\23\7\3\0\3\7\2\0\5\7\31\0\6\7"+
    "\1\u047b\17\7\3\0\2\7\1\u047c\2\0\5\7\31\0"+
    "\26\7\3\0\3\7\2\0\5\7\31\0\4\7\1\u047d"+
    "\21\7\3\0\3\7\2\0\5\7\31\0\6\7\1\u047e"+
    "\17\7\3\0\3\7\2\0\2\7\1\u047f\2\7\31\0"+
    "\26\7\3\0\3\7\2\0\5\7\31\0\11\7\1\u0480"+
    "\14\7\3\0\3\7\2\0\3\7\1\u0481\1\7\31\0"+
    "\26\7\3\0\3\7\2\0\2\7\1\u0482\2\7\31\0"+
    "\26\7\3\0\3\7\2\0\5\7\31\0\2\7\1\u0483"+
    "\23\7\3\0\3\7\2\0\5\7\31\0\3\7\1\u0484"+
    "\22\7\3\0\3\7\2\0\1\u0485\4\7\31\0\26\7"+
    "\3\0\3\7\2\0\5\7\31\0\11\7\1\u0486\14\7"+
    "\3\0\2\7\1\u0487\2\0\5\7\31\0\26\7\3\0"+
    "\3\7\2\0\1\u0488\4\7\31\0\26\7\3\0\3\7"+
    "\2\0\5\7\31\0\1\7\1\u0489\24\7\3\0\3\7"+
    "\2\0\5\7\31\0\11\7\1\u048a\14\7\3\0\3\7"+
    "\2\0\2\7\1\u048b\2\7\31\0\26\7\3\0\3\7"+
    "\2\0\1\u048c\4\7\31\0\26\7\3\0\3\7\2\0"+
    "\5\7\31\0\11\7\1\u048d\14\7\3\0\3\7\2\0"+
    "\5\7\31\0\5\7\1\u048e\20\7\3\0\3\7\2\0"+
    "\1\u048f\4\7\31\0\26\7\3\0\3\7\2\0\5\7"+
    "\31\0\11\7\1\u0490\14\7\3\0\3\7\2\0\5\7"+
    "\31\0\10\7\1\u0491\15\7\3\0\3\7\2\0\1\u0492"+
    "\4\7\31\0\26\7\3\0\3\7\2\0\5\7\31\0"+
    "\10\7\1\u0493\15\7\3\0\3\7\2\0\5\7\31\0"+
    "\14\7\1\u0494\11\7\3\0\3\7\2\0\1\u0495\4\7"+
    "\31\0\26\7\3\0\3\7\2\0\5\7\31\0\1\u0496"+
    "\25\7\3\0\3\7\2\0\5\7\31\0\3\7\1\u0497"+
    "\22\7\3\0\3\7\2\0\5\7\31\0\5\7\1\u0498"+
    "\20\7\3\0\3\7\2\0\5\7\31\0\10\7\1\u0499"+
    "\15\7\3\0\3\7\2\0\5\7\31\0\6\7\1\u049a"+
    "\17\7\3\0\3\7\2\0\4\7\1\u049b\31\0\26\7"+
    "\3\0\3\7\2\0\5\7\31\0\2\7\1\u049c\23\7"+
    "\3\0\3\7\2\0\4\7\1\u049d\31\0\26\7\3\0"+
    "\3\7\2\0\5\7\31\0\4\7\1\u049e\21\7\3\0"+
    "\3\7\2\0\5\7\31\0\10\7\1\u049f\15\7\3\0"+
    "\3\7\2\0\5\7\31\0\2\7\1\u04a0\23\7\3\0"+
    "\3\7\2\0\5\7\31\0\16\7\1\u04a1\7\7\3\0"+
    "\3\7\2\0\1\u04a2\4\7\31\0\26\7\3\0\3\7"+
    "\2\0\5\7\31\0\10\7\1\u04a3\15\7\3\0\3\7"+
    "\2\0\5\7\31\0\3\7\1\u04a4\22\7\3\0\3\7"+
    "\2\0\5\7\31\0\16\7\1\u04a5\7\7\3\0\3\7"+
    "\2\0\2\7\1\u04a6\2\7\31\0\26\7\3\0\3\7"+
    "\2\0\5\7\31\0\23\7\1\u04a7\2\7\3\0\3\7"+
    "\2\0\5\7\31\0\3\7\1\u04a8\22\7\3\0\3\7"+
    "\2\0\5\7\31\0\3\7\1\u04a9\22\7\3\0\3\7"+
    "\2\0\2\7\1\u04aa\2\7\31\0\26\7\3\0\3\7"+
    "\2\0\5\7\31\0\2\7\1\u04ab\23\7\3\0\3\7"+
    "\2\0\5\7\31\0\2\7\1\u04ac\23\7\3\0\3\7"+
    "\2\0\2\7\1\u04ad\2\7\31\0\26\7\3\0\3\7"+
    "\2\0\5\7\31\0\3\7\1\u04ae\22\7\3\0\3\7"+
    "\2\0\5\7\31\0\23\7\1\u04af\2\7\3\0\3\7"+
    "\2\0\5\7\31\0\1\u04b0\25\7\3\0\3\7\2\0"+
    "\2\7\1\u04b1\2\7\31\0\26\7\3\0\3\7\2\0"+
    "\5\7\31\0\2\7\1\u04b2\23\7\3\0\3\7\2\0"+
    "\5\7\31\0\10\7\1\u04b3\15\7\3\0\3\7\2\0"+
    "\4\7\1\u04b4\31\0\26\7\3\0\3\7\2\0\5\7"+
    "\31\0\11\7\1\u04b5\14\7\3\0\3\7\2\0\5\7"+
    "\31\0\2\7\1\u04b6\23\7\3\0\3\7\2\0\5\7"+
    "\31\0\6\7\1\u04b7\17\7\3\0\3\7\2\0\5\7"+
    "\31\0\4\7\1\u04b8\21\7\3\0\3\7\2\0\5\7"+
    "\31\0\15\7\1\u04b9\10\7\3\0\3\7\2\0\1\u04ba"+
    "\4\7\31\0\11\7\1\u04bb\14\7\3\0\3\7\2\0"+
    "\5\7\31\0\11\7\1\u04bc\14\7\3\0\3\7\2\0"+
    "\1\u04bd\4\7\31\0\26\7\3\0\3\7\2\0\5\7"+
    "\31\0\15\7\1\u04be\10\7\3\0\2\7\1\u04bf\2\0"+
    "\5\7\31\0\26\7\3\0\3\7\2\0\3\7\1\u04c0"+
    "\1\7\31\0\26\7\3\0\3\7\2\0\5\7\31\0"+
    "\11\7\1\u04c1\14\7\3\0\3\7\2\0\1\u04c2\4\7"+
    "\31\0\26\7\3\0\3\7\2\0\5\7\31\0\3\7"+
    "\1\u04c3\22\7\3\0\3\7\2\0\5\7\31\0\10\7"+
    "\1\u04c4\15\7\3\0\3\7\2\0\3\7\1\u04c5\1\7"+
    "\31\0\26\7\3\0\3\7\2\0\5\7\31\0\1\u04c6"+
    "\25\7\3\0\3\7\2\0\5\7\31\0\5\7\1\u04c7"+
    "\6\7\1\u04c8\11\7\3\0\3\7\2\0\5\7\31\0"+
    "\16\7\1\u04c9\7\7\3\0\3\7\2\0\5\7\31\0"+
    "\6\7\1\u04ca\17\7\3\0\3\7\2\0\5\7\31\0"+
    "\5\7\1\u04cb\20\7\3\0\3\7\2\0\2\7\1\u04cc"+
    "\2\7\31\0\26\7\3\0\3\7\2\0\3\7\1\u04cd"+
    "\1\7\31\0\1\7\1\u04ce\1\u04cf\23\7\3\0\3\7"+
    "\2\0\5\7\31\0\1\7\1\u04d0\24\7\3\0\3\7"+
    "\2\0\2\7\1\u04d1\2\7\31\0\26\7\3\0\3\7"+
    "\2\0\5\7\31\0\16\7\1\u04d2\7\7\3\0\3\7"+
    "\2\0\5\7\31\0\3\7\1\u04d3\22\7\3\0\3\7"+
    "\2\0\5\7\31\0\10\7\1\u04d4\15\7\3\0\3\7"+
    "\2\0\5\7\31\0\2\7\1\u04d5\23\7\3\0\3\7"+
    "\2\0\2\7\1\u04d6\2\7\31\0\26\7\3\0\3\7"+
    "\2\0\2\7\1\u04d7\2\7\31\0\26\7\3\0\3\7"+
    "\2\0\2\7\1\u04d8\2\7\31\0\26\7\3\0\3\7"+
    "\2\0\2\7\1\u04d9\2\7\31\0\26\7\3\0\3\7"+
    "\2\0\5\7\31\0\5\7\1\u04da\20\7\3\0\3\7"+
    "\2\0\5\7\31\0\4\7\1\u04db\21\7\3\0\3\7"+
    "\2\0\5\7\31\0\3\7\1\u04dc\22\7\3\0\3\7"+
    "\2\0\5\7\31\0\2\7\1\u04dd\23\7\3\0\3\7"+
    "\2\0\5\7\31\0\11\7\1\u04de\14\7\3\0\3\7"+
    "\2\0\5\7\31\0\4\7\1\u04df\21\7\3\0\2\7"+
    "\1\u04e0\2\0\5\7\31\0\6\7\1\u04e1\17\7\3\0"+
    "\3\7\2\0\2\7\1\u04e2\2\7\31\0\26\7\3\0"+
    "\3\7\2\0\1\u04e3\4\7\31\0\26\7\3\0\3\7"+
    "\2\0\5\7\31\0\2\7\1\u04e4\23\7\3\0\3\7"+
    "\2\0\2\7\1\u04e5\2\7\31\0\26\7\3\0\3\7"+
    "\2\0\1\u04e6\4\7\31\0\26\7\3\0\3\7\2\0"+
    "\1\u04e7\4\7\31\0\26\7\3\0\3\7\2\0\5\7"+
    "\31\0\2\7\1\u04e8\23\7\3\0\3\7\2\0\5\7"+
    "\31\0\10\7\1\u04e9\15\7\3\0\3\7\2\0\5\7"+
    "\31\0\2\7\1\u04ea\23\7\3\0\3\7\2\0\5\7"+
    "\31\0\10\7\1\u04eb\15\7\3\0\3\7\2\0\1\u04ec"+
    "\4\7\31\0\26\7\3\0\3\7\2\0\5\7\31\0"+
    "\2\7\1\u04ed\23\7\3\0\3\7\2\0\5\7\31\0"+
    "\2\7\1\u04ee\23\7\3\0\3\7\2\0\1\u04ef\4\7"+
    "\31\0\26\7\3\0\3\7\2\0\5\7\31\0\3\7"+
    "\1\u04f0\22\7\3\0\3\7\2\0\1\u04f1\4\7\31\0"+
    "\26\7\3\0\3\7\2\0\5\7\31\0\6\7\1\u04f2"+
    "\17\7\3\0\3\7\2\0\1\u04f3\4\7\31\0\26\7"+
    "\3\0\3\7\2\0\5\7\31\0\2\7\1\u04f4\23\7"+
    "\3\0\3\7\2\0\4\7\1\u04f5\31\0\26\7\3\0"+
    "\3\7\2\0\5\7\31\0\10\7\1\u04f6\15\7\3\0"+
    "\3\7\2\0\5\7\31\0\10\7\1\u04f7\15\7\3\0"+
    "\3\7\2\0\5\7\31\0\3\7\1\u04f8\22\7\3\0"+
    "\3\7\2\0\5\7\31\0\7\7\1\u04f9\10\7\1\u04fa"+
    "\5\7\3\0\3\7\2\0\5\7\31\0\3\7\1\u04fb"+
    "\22\7\3\0\3\7\2\0\5\7\31\0\10\7\1\u04fc"+
    "\15\7\3\0\3\7\2\0\5\7\31\0\5\7\1\u04fd"+
    "\20\7\3\0\3\7\2\0\4\7\1\u04fe\31\0\26\7"+
    "\3\0\3\7\2\0\5\7\31\0\5\7\1\u04ff\20\7"+
    "\3\0\3\7\2\0\3\7\1\u0500\1\7\31\0\26\7"+
    "\3\0\3\7\2\0\5\7\31\0\11\7\1\u0501\14\7"+
    "\3\0\3\7\2\0\1\u0502\4\7\31\0\26\7\3\0"+
    "\3\7\2\0\5\7\31\0\5\7\1\u0503\20\7\3\0"+
    "\3\7\2\0\1\u0504\4\7\31\0\26\7\3\0\3\7"+
    "\2\0\5\7\31\0\16\7\1\u0505\7\7\3\0\3\7"+
    "\2\0\5\7\31\0\5\7\1\u0506\20\7\3\0\3\7"+
    "\2\0\5\7\31\0\1\u0507\25\7\3\0\3\7\2\0"+
    "\5\7\31\0\11\7\1\u0508\14\7\3\0\3\7\2\0"+
    "\5\7\31\0\2\7\1\u0509\23\7\3\0\3\7\2\0"+
    "\5\7\31\0\2\7\1\u050a\23\7\3\0\2\7\1\u050b"+
    "\2\0\5\7\31\0\26\7\3\0\3\7\2\0\2\7"+
    "\1\u050c\2\7\31\0\26\7\3\0\3\7\2\0\5\7"+
    "\31\0\1\u050d\25\7\3\0\3\7\2\0\5\7\31\0"+
    "\2\7\1\u050e\23\7\3\0\3\7\2\0\5\7\31\0"+
    "\1\7\1\u050f\24\7\3\0\3\7\2\0\5\7\31\0"+
    "\16\7\1\u0510\7\7\3\0\3\7\2\0\5\7\31\0"+
    "\10\7\1\u0511\15\7\3\0\3\7\2\0\5\7\31\0"+
    "\21\7\1\u0512\4\7\3\0\3\7\2\0\5\7\31\0"+
    "\11\7\1\u0513\14\7\3\0\3\7\2\0\5\7\31\0"+
    "\10\7\1\u0514\15\7\3\0\3\7\2\0\5\7\31\0"+
    "\7\7\1\u0515\16\7\3\0\3\7\2\0\5\7\31\0"+
    "\5\7\1\u0516\20\7\3\0\3\7\2\0\5\7\31\0"+
    "\1\u0517\25\7\3\0\3\7\2\0\5\7\31\0\3\7"+
    "\1\u0518\22\7\3\0\3\7\2\0\5\7\31\0\1\7"+
    "\1\u0519\24\7\3\0\3\7\2\0\5\7\31\0\11\7"+
    "\1\u051a\14\7\3\0\3\7\2\0\5\7\31\0\5\7"+
    "\1\u051b\20\7\3\0\3\7\2\0\5\7\31\0\1\7"+
    "\1\u051c\24\7\3\0\3\7\2\0\1\u051d\4\7\31\0"+
    "\26\7\3\0\3\7\2\0\2\7\1\u051e\2\7\31\0"+
    "\26\7\3\0\3\7\2\0\2\7\1\u051f\2\7\31\0"+
    "\26\7\3\0\3\7\2\0\5\7\31\0\2\7\1\u0520"+
    "\23\7\3\0\3\7\2\0\5\7\31\0\10\7\1\u0521"+
    "\15\7\3\0\3\7\2\0\5\7\31\0\11\7\1\u0522"+
    "\14\7\3\0\3\7\2\0\1\u0523\4\7\31\0\26\7"+
    "\3\0\3\7\2\0\2\7\1\u0524\2\7\31\0\26\7"+
    "\3\0\3\7\2\0\1\u0525\4\7\31\0\26\7\3\0"+
    "\3\7\2\0\5\7\31\0\1\7\1\u0526\24\7\3\0"+
    "\3\7\2\0\5\7\31\0\20\7\1\u0527\5\7\3\0"+
    "\3\7\2\0\5\7\31\0\4\7\1\u0528\21\7\3\0"+
    "\3\7\2\0\5\7\31\0\3\7\1\u0529\22\7\3\0"+
    "\3\7\2\0\1\u052a\4\7\31\0\26\7\3\0\3\7"+
    "\2\0\5\7\31\0\2\7\1\u052b\23\7\3\0\3\7"+
    "\2\0\5\7\31\0\20\7\1\u052c\5\7\3\0\3\7"+
    "\2\0\5\7\31\0\7\7\1\u052d\16\7\3\0\3\7"+
    "\2\0\4\7\1\u052e\31\0\26\7\3\0\3\7\2\0"+
    "\5\7\31\0\13\7\1\u052f\12\7\3\0\3\7\2\0"+
    "\5\7\31\0\5\7\1\u0530\20\7\3\0\3\7\2\0"+
    "\5\7\31\0\11\7\1\u0531\14\7\3\0\3\7\2\0"+
    "\5\7\31\0\2\7\1\u0532\23\7\3\0\3\7\2\0"+
    "\3\7\1\u0533\1\7\31\0\26\7\3\0\3\7\2\0"+
    "\1\u0534\4\7\31\0\26\7\3\0\3\7\2\0\2\7"+
    "\1\u0535\2\7\31\0\26\7\3\0\3\7\2\0\4\7"+
    "\1\u0536\31\0\26\7\3\0\3\7\2\0\5\7\31\0"+
    "\13\7\1\u0537\12\7\3\0\3\7\2\0\5\7\31\0"+
    "\10\7\1\u0538\15\7\3\0\3\7\2\0\3\7\1\u0539"+
    "\1\7\31\0\26\7\3\0\3\7\2\0\2\7\1\u053a"+
    "\2\7\31\0\26\7\3\0\3\7\2\0\5\7\31\0"+
    "\3\7\1\u053b\22\7\3\0\3\7\2\0\5\7\31\0"+
    "\11\7\1\u053c\14\7\3\0\3\7\2\0\5\7\31\0"+
    "\11\7\1\u053d\14\7\3\0\3\7\2\0\5\7\31\0"+
    "\15\7\1\u053e\10\7\3\0\3\7\2\0\5\7\31\0"+
    "\3\7\1\u053f\22\7\3\0\3\7\2\0\1\u0540\4\7"+
    "\31\0\26\7\3\0\3\7\2\0\1\u0541\4\7\31\0"+
    "\26\7\3\0\3\7\2\0\1\u0542\4\7\31\0\26\7"+
    "\3\0\3\7\2\0\4\7\1\u0543\31\0\26\7\3\0"+
    "\3\7\2\0\2\7\1\u0544\2\7\31\0\26\7\3\0"+
    "\3\7\2\0\5\7\31\0\7\7\1\u0545\16\7\3\0"+
    "\3\7\2\0\5\7\31\0\3\7\1\u0546\22\7\3\0"+
    "\3\7\2\0\5\7\31\0\5\7\1\u0547\20\7\3\0"+
    "\3\7\2\0\4\7\1\u0548\31\0\26\7\3\0\3\7"+
    "\2\0\2\7\1\u0549\2\7\31\0\26\7\3\0\3\7"+
    "\2\0\5\7\31\0\3\7\1\u054a\22\7\3\0\3\7"+
    "\2\0\3\7\1\u054b\1\7\31\0\26\7\3\0\3\7"+
    "\2\0\5\7\31\0\2\7\1\u054c\23\7\3\0\3\7"+
    "\2\0\4\7\1\u054d\31\0\26\7\3\0\3\7\2\0"+
    "\5\7\31\0\7\7\1\u054e\16\7\3\0\3\7\2\0"+
    "\5\7\31\0\5\7\1\u054f\20\7\3\0\3\7\2\0"+
    "\2\7\1\u0550\2\7\31\0\26\7\3\0\3\7\2\0"+
    "\1\u0551\4\7\31\0\26\7\3\0\3\7\2\0\5\7"+
    "\31\0\16\7\1\u0552\7\7\3\0\3\7\2\0\5\7"+
    "\31\0\6\7\1\u0553\17\7\3\0\3\7\2\0\1\u0554"+
    "\4\7\31\0\26\7\3\0\3\7\2\0\1\u0555\4\7"+
    "\31\0\26\7\3\0\3\7\2\0\5\7\31\0\2\7"+
    "\1\u0556\23\7\3\0\3\7\2\0\5\7\31\0\1\u0557"+
    "\25\7\3\0\3\7\2\0\5\7\31\0\3\7\1\u0558"+
    "\22\7\3\0\3\7\2\0\5\7\31\0\2\7\1\u0559"+
    "\23\7\3\0\3\7\2\0\5\7\31\0\16\7\1\u055a"+
    "\7\7\3\0\3\7\2\0\1\u055b\4\7\31\0\26\7"+
    "\3\0\3\7\2\0\5\7\31\0\3\7\1\u055c\22\7"+
    "\3\0\3\7\2\0\1\u055d\4\7\31\0\26\7\3\0"+
    "\3\7\2\0\5\7\31\0\3\7\1\u055e\22\7\3\0"+
    "\3\7\2\0\5\7\31\0\1\u055f\25\7\3\0\3\7"+
    "\2\0\5\7\31\0\1\u0560\25\7\3\0\3\7\2\0"+
    "\5\7\31\0\2\7\1\u0561\23\7\3\0\3\7\2\0"+
    "\5\7\31\0\2\7\1\u0562\23\7\3\0\3\7\2\0"+
    "\5\7\31\0\11\7\1\u0563\14\7\3\0\3\7\2\0"+
    "\5\7\31\0\5\7\1\u0564\20\7\3\0\3\7\2\0"+
    "\5\7\31\0\20\7\1\u0565\5\7\3\0\3\7\2\0"+
    "\5\7\31\0\7\7\1\u0566\16\7\3\0\3\7\2\0"+
    "\5\7\31\0\2\7\1\u0567\23\7\3\0\3\7\2\0"+
    "\1\u0568\4\7\31\0\26\7\3\0\3\7\2\0\5\7"+
    "\31\0\15\7\1\u0569\10\7\3\0\3\7\2\0\5\7"+
    "\31\0\4\7\1\u056a\21\7\3\0\3\7\2\0\5\7"+
    "\31\0\2\7\1\u056b\23\7\3\0\3\7\2\0\5\7"+
    "\31\0\1\7\1\u056c\1\u056d\23\7\3\0\3\7\2\0"+
    "\5\7\31\0\1\u056e\25\7\3\0\3\7\2\0\1\u056f"+
    "\4\7\31\0\26\7\3\0\3\7\2\0\5\7\31\0"+
    "\1\u0570\25\7\3\0\3\7\2\0\5\7\31\0\13\7"+
    "\1\u0571\12\7\3\0\3\7\2\0\5\7\31\0\2\7"+
    "\1\u0572\23\7\3\0\3\7\2\0\5\7\31\0\13\7"+
    "\1\u0573\12\7\3\0\3\7\2\0\4\7\1\u0574\31\0"+
    "\26\7\3\0\3\7\2\0\5\7\31\0\1\u0575\25\7"+
    "\3\0\3\7\2\0\4\7\1\u0576\31\0\26\7\3\0"+
    "\3\7\2\0\1\u0577\4\7\31\0\26\7\3\0\3\7"+
    "\2\0\5\7\31\0\11\7\1\u0578\14\7\3\0\3\7"+
    "\2\0\1\u0579\4\7\31\0\26\7\3\0\3\7\2\0"+
    "\4\7\1\u057a\31\0\26\7\3\0\3\7\2\0\5\7"+
    "\31\0\5\7\1\u057b\20\7\3\0\3\7\2\0\5\7"+
    "\31\0\2\7\1\u057c\23\7\3\0\3\7\2\0\5\7"+
    "\31\0\1\u057d\25\7\3\0\3\7\2\0\5\7\31\0"+
    "\13\7\1\u057e\12\7\3\0\3\7\2\0\4\7\1\u057f"+
    "\31\0\26\7\3\0\3\7\2\0\1\u0580\4\7\31\0"+
    "\26\7";

  private static int [] zzUnpackTrans() {
    int [] result = new int[66300];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\2\0\1\11\5\1\1\11\5\1\1\11\1\1\1\11"+
    "\1\1\1\11\6\1\2\11\1\1\1\11\1\1\1\11"+
    "\1\1\2\11\25\1\1\11\13\1\1\0\24\1\2\11"+
    "\1\1\1\0\12\11\147\1\1\0\1\11\1\0\43\1"+
    "\1\11\243\1\1\0\1\1\1\0\337\1\1\0\277\1"+
    "\1\0\233\1\1\0\174\1\1\11\u012d\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[1408];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true iff the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true iff the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
    private int cadenaTest = 0;

    private List<MyToken> Tokens = new ArrayList();

    StringBuffer _cadenaComentario = new StringBuffer();
    private boolean _comentarioActivo = false;

    public List<MyToken> getTokens() {
        return Tokens;
    }

    public boolean comentarioActivo() {
        return this._comentarioActivo;
    }


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public Lexemas(java.io.Reader in) {
  
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 400) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() throws java.io.IOException {
    if (!zzEOFDone) {
      zzEOFDone = true;
      yyclose();
    }
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public List<MyToken> yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      yychar+= zzMarkedPosL-zzStartRead;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':  // fall through
        case '\u000C':  // fall through
        case '\u0085':  // fall through
        case '\u2028':  // fall through
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn += zzCharCount;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
            zzDoEOF();
            switch (zzLexicalState) {
            case COMENTARIOMULTI: {
              Tokens.add(new MyToken("ComentarioNoCerrado", _cadenaComentario.toString(), "Error", yyline + 1, yylength(), yycolumn + 1));
        yybegin(YYINITIAL);
            }  // fall though
            case 1409: break;
            default:
          {     return Tokens;
 }
        }
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { Tokens.add(new MyToken("Error", yytext(), "Error", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 353: break;
          case 2: 
            { Tokens.add(new MyToken("Simbolo.Mas", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 354: break;
          case 3: 
            { Tokens.add(new MyToken("Simbolo.Menos", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 355: break;
          case 4: 
            { Tokens.add(new MyToken("DatoEntero", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 356: break;
          case 5: 
            { if (yytext().length() <= 31) {
        Tokens.add(new MyToken("Identificador", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
    } else {
        Tokens.add(new MyToken("IdentificadorTruncado", yytext().substring(0, 31), "Advertencia", yyline + 1, 31, yycolumn + 1));
    }
            } 
            // fall through
          case 357: break;
          case 6: 
            { Tokens.add(new MyToken("Simbolo.Punto", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 358: break;
          case 7: 
            { // No hacer nada
            } 
            // fall through
          case 359: break;
          case 8: 
            { Tokens.add(new MyToken("Simbolo.Multiplicacion", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 360: break;
          case 9: 
            { Tokens.add(new MyToken("Simbolo.Division", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 361: break;
          case 10: 
            { Tokens.add(new MyToken("Simbolo.Modulo", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 362: break;
          case 11: 
            { Tokens.add(new MyToken("Simbolo.Menor", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 363: break;
          case 12: 
            { Tokens.add(new MyToken("Simbolo.Igual", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 364: break;
          case 13: 
            { Tokens.add(new MyToken("Simbolo.Mayor", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 365: break;
          case 14: 
            { Tokens.add(new MyToken("Simbolo.Not", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 366: break;
          case 15: 
            { Tokens.add(new MyToken("Simbolo.PuntoComa", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 367: break;
          case 16: 
            { Tokens.add(new MyToken("Simbolo.Coma", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 368: break;
          case 17: 
            { Tokens.add(new MyToken("Simbolo.CorcheteAbrir", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 369: break;
          case 18: 
            { Tokens.add(new MyToken("Simbolo.CorcheteCerrar", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 370: break;
          case 19: 
            { Tokens.add(new MyToken("Simbolo.ParantesisAbrir", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 371: break;
          case 20: 
            { Tokens.add(new MyToken("Simbolo.ParentesisCerrar", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 372: break;
          case 21: 
            { Tokens.add(new MyToken("Simbolo.LlaveAbrir", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 373: break;
          case 22: 
            { Tokens.add(new MyToken("Simbolo.LlaveCerrar", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 374: break;
          case 23: 
            { Tokens.add(new MyToken("Simbolo.Arroba", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 375: break;
          case 24: 
            { Tokens.add(new MyToken("Simbolo.Numeral", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 376: break;
          case 25: 
            { _cadenaComentario.append(yytext());
            } 
            // fall through
          case 377: break;
          case 26: 
            { Tokens.add(new MyToken("Comentario", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 378: break;
          case 27: 
            { Tokens.add(new MyToken("DatoFloat", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 379: break;
          case 28: 
            { Tokens.add(new MyToken("reservada.NO", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 380: break;
          case 29: 
            { Tokens.add(new MyToken("StringNoCerrado", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 381: break;
          case 30: 
            { Tokens.add(new MyToken("DatoString", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 382: break;
          case 31: 
            { Tokens.add(new MyToken("Simbolo.MenorIgual", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 383: break;
          case 32: 
            { Tokens.add(new MyToken("Simbolo.IgualIgual", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 384: break;
          case 33: 
            { Tokens.add(new MyToken("Simbolo.MayorIgual", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 385: break;
          case 34: 
            { Tokens.add(new MyToken("Simbolo.Diferente", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 386: break;
          case 35: 
            { Tokens.add(new MyToken("Simbolo.And", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 387: break;
          case 36: 
            { Tokens.add(new MyToken("Simbolo.Or", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 388: break;
          case 37: 
            { Tokens.add(new MyToken("Simbolo.Corchetes", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 389: break;
          case 38: 
            { Tokens.add(new MyToken("Simbolo.Parentesis", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 390: break;
          case 39: 
            { Tokens.add(new MyToken("Simbolo.Llaves", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 391: break;
          case 40: 
            { Tokens.add(new MyToken("Simbolo.DobleNumeral", yytext(), "Simbolo", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 392: break;
          case 41: 
            { Tokens.add(new MyToken("reservada.AT", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 393: break;
          case 42: 
            { Tokens.add(new MyToken("reservada.AS", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 394: break;
          case 43: 
            { Tokens.add(new MyToken("reservada.TO", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 395: break;
          case 44: 
            { Tokens.add(new MyToken("reservada.ON", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 396: break;
          case 45: 
            { Tokens.add(new MyToken("reservada.OR", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 397: break;
          case 46: 
            { Tokens.add(new MyToken("reservada.OF", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 398: break;
          case 47: 
            { Tokens.add(new MyToken("reservada.IN", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 399: break;
          case 48: 
            { Tokens.add(new MyToken("reservada.IS", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 400: break;
          case 49: 
            { Tokens.add(new MyToken("reservada.IF", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 401: break;
          case 50: 
            { Tokens.add(new MyToken("reservada.BY", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 402: break;
          case 51: 
            { Tokens.add(new MyToken("reservada.GO", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 403: break;
          case 52: 
            { _cadenaComentario.append(yytext());
        _comentarioActivo = false;
        yybegin(YYINITIAL);
        Tokens.add(new MyToken("Comentario", _cadenaComentario.toString(), "Token", yyline + 1, yylength(), yycolumn + 1));
        _cadenaComentario = new StringBuffer();
            } 
            // fall through
          case 404: break;
          case 53: 
            { Tokens.add(new MyToken("reservada.END", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 405: break;
          case 54: 
            { Tokens.add(new MyToken("reservada.NOT", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 406: break;
          case 55: 
            { Tokens.add(new MyToken("reservada.USE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 407: break;
          case 56: 
            { _cadenaComentario.append(yytext());
    _comentarioActivo = true;
    yybegin(COMENTARIOMULTI);
            } 
            // fall through
          case 408: break;
          case 57: 
            { Tokens.add(new MyToken("reservada.AND", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 409: break;
          case 58: 
            { Tokens.add(new MyToken("reservada.ANY", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 410: break;
          case 59: 
            { Tokens.add(new MyToken("reservada.ALL", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 411: break;
          case 60: 
            { Tokens.add(new MyToken("reservada.ADA", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 412: break;
          case 61: 
            { Tokens.add(new MyToken("reservada.ADD", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 413: break;
          case 62: 
            { Tokens.add(new MyToken("reservada.ARE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 414: break;
          case 63: 
            { Tokens.add(new MyToken("reservada.ASC", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 415: break;
          case 64: 
            { Tokens.add(new MyToken("reservada.AVG", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 416: break;
          case 65: 
            { Tokens.add(new MyToken("reservada.DEC", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 417: break;
          case 66: 
            { Tokens.add(new MyToken("reservada.DAY", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 418: break;
          case 67: 
            { Tokens.add(new MyToken("reservada.TOP", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 419: break;
          case 68: 
            { Tokens.add(new MyToken("reservada.SET", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 420: break;
          case 69: 
            { Tokens.add(new MyToken("reservada.SUM", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 421: break;
          case 70: 
            { Tokens.add(new MyToken("reservada.SQL", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 422: break;
          case 71: 
            { Tokens.add(new MyToken("reservada.OFF", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 423: break;
          case 72: 
            { Tokens.add(new MyToken("reservada.INT", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 424: break;
          case 73: 
            { Tokens.add(new MyToken("reservada.BIT", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 425: break;
          case 74: 
            { Tokens.add(new MyToken("reservada.KEY", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 426: break;
          case 75: 
            { Tokens.add(new MyToken("reservada.PAD", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 427: break;
          case 76: 
            { Tokens.add(new MyToken("reservada.GET", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 428: break;
          case 77: 
            { Tokens.add(new MyToken("reservada.MAX", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 429: break;
          case 78: 
            { Tokens.add(new MyToken("reservada.MIN", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 430: break;
          case 79: 
            { Tokens.add(new MyToken("reservada.FOR", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 431: break;
          case 80: 
            { Tokens.add(new MyToken("reservada.ELSE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 432: break;
          case 81: 
            { Tokens.add(new MyToken("reservada.EXEC", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 433: break;
          case 82: 
            { Tokens.add(new MyToken("reservada.EXIT", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 434: break;
          case 83: 
            { Tokens.add(new MyToken("reservada.NEXT", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 435: break;
          case 84: 
            { Tokens.add(new MyToken("reservada.NULL", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 436: break;
          case 85: 
            { Tokens.add(new MyToken("reservada.NONE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 437: break;
          case 86: 
            { Tokens.add(new MyToken("reservada.USER", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 438: break;
          case 87: 
            { Tokens.add(new MyToken("reservada.LEFT", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 439: break;
          case 88: 
            { Tokens.add(new MyToken("reservada.LAST", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 440: break;
          case 89: 
            { Tokens.add(new MyToken("reservada.LOAD", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 441: break;
          case 90: 
            { Tokens.add(new MyToken("reservada.LIKE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 442: break;
          case 91: 
            { Tokens.add(new MyToken("reservada.DENY", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 443: break;
          case 92: 
            { Tokens.add(new MyToken("reservada.DESC", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 444: break;
          case 93: 
            { Tokens.add(new MyToken("reservada.DUMP", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 445: break;
          case 94: 
            { Tokens.add(new MyToken("reservada.DATE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 446: break;
          case 95: 
            { Tokens.add(new MyToken("reservada.DROP", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 447: break;
          case 96: 
            { Tokens.add(new MyToken("reservada.DISK", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 448: break;
          case 97: 
            { Tokens.add(new MyToken("reservada.DBCC", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 449: break;
          case 98: 
            { Tokens.add(new MyToken("reservada.TRAN", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 450: break;
          case 99: 
            { Tokens.add(new MyToken("reservada.TRIM", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 451: break;
          case 100: 
            { Tokens.add(new MyToken("reservada.THEN", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 452: break;
          case 101: 
            { Tokens.add(new MyToken("reservada.TIME", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 453: break;
          case 102: 
            { Tokens.add(new MyToken("reservada.REAL", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 454: break;
          case 103: 
            { Tokens.add(new MyToken("reservada.READ", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 455: break;
          case 104: 
            { Tokens.add(new MyToken("reservada.RULE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 456: break;
          case 105: 
            { Tokens.add(new MyToken("reservada.ROWS", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 457: break;
          case 106: 
            { Tokens.add(new MyToken("reservada.YEAR", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 458: break;
          case 107: 
            { Tokens.add(new MyToken("reservada.SAVE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 459: break;
          case 108: 
            { Tokens.add(new MyToken("reservada.SOME", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 460: break;
          case 109: 
            { Tokens.add(new MyToken("reservada.SIZE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 461: break;
          case 110: 
            { Tokens.add(new MyToken("reservada.CASE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 462: break;
          case 111: 
            { Tokens.add(new MyToken("reservada.CAST", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 463: break;
          case 112: 
            { Tokens.add(new MyToken("reservada.CHAR", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 464: break;
          case 113: 
            { Tokens.add(new MyToken("reservada.HOUR", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 465: break;
          case 114: 
            { Tokens.add(new MyToken("reservada.ONLY", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 466: break;
          case 115: 
            { Tokens.add(new MyToken("reservada.OPEN", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 467: break;
          case 116: 
            { Tokens.add(new MyToken("reservada.OVER", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 468: break;
          case 117: 
            { Tokens.add(new MyToken("reservada.INTO", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 469: break;
          case 118: 
            { Tokens.add(new MyToken("reservada.ZONE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 470: break;
          case 119: 
            { Tokens.add(new MyToken("reservada.BULK", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 471: break;
          case 120: 
            { Tokens.add(new MyToken("reservada.BOTH", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 472: break;
          case 121: 
            { Tokens.add(new MyToken("reservada.KILL", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 473: break;
          case 122: 
            { Tokens.add(new MyToken("reservada.PLAN", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 474: break;
          case 123: 
            { Tokens.add(new MyToken("reservada.PROC", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 475: break;
          case 124: 
            { Tokens.add(new MyToken("reservada.GOTO", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 476: break;
          case 125: 
            { Tokens.add(new MyToken("reservada.WHEN", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 477: break;
          case 126: 
            { Tokens.add(new MyToken("reservada.WORK", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 478: break;
          case 127: 
            { Tokens.add(new MyToken("reservada.WITH", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 479: break;
          case 128: 
            { Tokens.add(new MyToken("reservada.VIEW", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 480: break;
          case 129: 
            { Tokens.add(new MyToken("reservada.FULL", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 481: break;
          case 130: 
            { Tokens.add(new MyToken("reservada.FROM", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 482: break;
          case 131: 
            { Tokens.add(new MyToken("reservada.FILE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 483: break;
          case 132: 
            { Tokens.add(new MyToken("reservada.JOIN", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 484: break;
          case 133: 
            { Tokens.add(new MyToken("reservada.NAMES", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 485: break;
          case 134: 
            { Tokens.add(new MyToken("reservada.NCHAR", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 486: break;
          case 135: 
            { Tokens.add(new MyToken("reservada.UNION", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 487: break;
          case 136: 
            { Tokens.add(new MyToken("reservada.USAGE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 488: break;
          case 137: 
            { Tokens.add(new MyToken("reservada.USING", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 489: break;
          case 138: 
            { Tokens.add(new MyToken("reservada.UPPER", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 490: break;
          case 139: 
            { Tokens.add(new MyToken("reservada.LEVEL", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 491: break;
          case 140: 
            { Tokens.add(new MyToken("reservada.LOCAL", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 492: break;
          case 141: 
            { Tokens.add(new MyToken("reservada.LOWER", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 493: break;
          case 142: 
            { Tokens.add(new MyToken("reservada.ALTER", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 494: break;
          case 143: 
            { Tokens.add(new MyToken("reservada.TABLE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 495: break;
          case 144: 
            { Tokens.add(new MyToken("reservada.RIGHT", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 496: break;
          case 145: 
            { Tokens.add(new MyToken("reservada.SPACE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 497: break;
          case 146: 
            { Tokens.add(new MyToken("reservada.SQLCA", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 498: break;
          case 147: 
            { Tokens.add(new MyToken("reservada.CLOSE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 499: break;
          case 148: 
            { Tokens.add(new MyToken("reservada.CROSS", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 500: break;
          case 149: 
            { Tokens.add(new MyToken("reservada.CHECK", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 501: break;
          case 150: 
            { Tokens.add(new MyToken("reservada.COUNT", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 502: break;
          case 151: 
            { Tokens.add(new MyToken("reservada.OUTER", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 503: break;
          case 152: 
            { Tokens.add(new MyToken("reservada.ORDER", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 504: break;
          case 153: 
            { Tokens.add(new MyToken("reservada.INNER", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 505: break;
          case 154: 
            { Tokens.add(new MyToken("reservada.INDEX", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 506: break;
          case 155: 
            { Tokens.add(new MyToken("reservada.INPUT", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 507: break;
          case 156: 
            { Tokens.add(new MyToken("reservada.BEGIN", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 508: break;
          case 157: 
            { Tokens.add(new MyToken("reservada.BREAK", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 509: break;
          case 158: 
            { Tokens.add(new MyToken("reservada.PRINT", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 510: break;
          case 159: 
            { Tokens.add(new MyToken("reservada.PRIOR", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 511: break;
          case 160: 
            { Tokens.add(new MyToken("reservada.PIVOT", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 512: break;
          case 161: 
            { Tokens.add(new MyToken("reservada.GRANT", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 513: break;
          case 162: 
            { Tokens.add(new MyToken("reservada.GROUP", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 514: break;
          case 163: 
            { Tokens.add(new MyToken("reservada.WRITE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 515: break;
          case 164: 
            { Tokens.add(new MyToken("reservada.WHERE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 516: break;
          case 165: 
            { Tokens.add(new MyToken("reservada.WHILE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 517: break;
          case 166: 
            { Tokens.add(new MyToken("reservada.MERGE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 518: break;
          case 167: 
            { Tokens.add(new MyToken("reservada.MATCH", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 519: break;
          case 168: 
            { Tokens.add(new MyToken("reservada.MONTH", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 520: break;
          case 169: 
            { Tokens.add(new MyToken("reservada.VALUE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 521: break;
          case 170: 
            { Tokens.add(new MyToken("reservada.FETCH", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 522: break;
          case 171: 
            { Tokens.add(new MyToken("reservada.FLOAT", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 523: break;
          case 172: 
            { Tokens.add(new MyToken("reservada.FALSO", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 524: break;
          case 173: 
            { Tokens.add(new MyToken("reservada.FOUND", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 525: break;
          case 174: 
            { Tokens.add(new MyToken("reservada.FIRST", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 526: break;
          case 175: 
            { Tokens.add(new MyToken("reservada.ERRLVL", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 527: break;
          case 176: 
            { Tokens.add(new MyToken("reservada.ESCAPE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 528: break;
          case 177: 
            { Tokens.add(new MyToken("reservada.EXCEPT", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 529: break;
          case 178: 
            { Tokens.add(new MyToken("reservada.EXISTS", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 530: break;
          case 179: 
            { Tokens.add(new MyToken("reservada.NULLIF", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 531: break;
          case 180: 
            { Tokens.add(new MyToken("reservada.UNIQUE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 532: break;
          case 181: 
            { Tokens.add(new MyToken("reservada.UPDATE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 533: break;
          case 182: 
            { Tokens.add(new MyToken("reservada.LINENO", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 534: break;
          case 183: 
            { Tokens.add(new MyToken("reservada.ACTION", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 535: break;
          case 184: 
            { Tokens.add(new MyToken("reservada.DELETE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 536: break;
          case 185: 
            { Tokens.add(new MyToken("reservada.DOUBLE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 537: break;
          case 186: 
            { Tokens.add(new MyToken("reservada.DOMAIN", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 538: break;
          case 187: 
            { Tokens.add(new MyToken("reservada.RETURN", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 539: break;
          case 188: 
            { Tokens.add(new MyToken("reservada.REVERT", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 540: break;
          case 189: 
            { Tokens.add(new MyToken("reservada.REVOKE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 541: break;
          case 190: 
            { Tokens.add(new MyToken("reservada.SELECT", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 542: break;
          case 191: 
            { Tokens.add(new MyToken("reservada.SECOND", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 543: break;
          case 192: 
            { Tokens.add(new MyToken("reservada.SCROLL", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 544: break;
          case 193: 
            { Tokens.add(new MyToken("reservada.SCHEMA", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 545: break;
          case 194: 
            { Tokens.add(new MyToken("reservada.CURSOR", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 546: break;
          case 195: 
            { Tokens.add(new MyToken("reservada.CREATE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 547: break;
          case 196: 
            { Tokens.add(new MyToken("reservada.COLUMN", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 548: break;
          case 197: 
            { Tokens.add(new MyToken("reservada.COMMIT", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 549: break;
          case 198: 
            { Tokens.add(new MyToken("reservada.HAVING", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 550: break;
          case 199: 
            { Tokens.add(new MyToken("reservada.OUTPUT", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 551: break;
          case 200: 
            { Tokens.add(new MyToken("reservada.OPTION", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 552: break;
          case 201: 
            { Tokens.add(new MyToken("reservada.INSERT", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 553: break;
          case 202: 
            { Tokens.add(new MyToken("reservada.BACKUP", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 554: break;
          case 203: 
            { Tokens.add(new MyToken("reservada.BROWSE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 555: break;
          case 204: 
            { Tokens.add(new MyToken("reservada.PUBLIC", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 556: break;
          case 205: 
            { Tokens.add(new MyToken("reservada.PASCAL", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 557: break;
          case 206: 
            { Tokens.add(new MyToken("reservada.GLOBAL", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 558: break;
          case 207: 
            { Tokens.add(new MyToken("reservada.WITHIN", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 559: break;
          case 208: 
            { Tokens.add(new MyToken("reservada.MODULE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 560: break;
          case 209: 
            { Tokens.add(new MyToken("reservada.MINUTE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 561: break;
          case 210: 
            { Tokens.add(new MyToken("reservada.VALUES", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 562: break;
          case 211: 
            { Tokens.add(new MyToken("reservada.EXECUTE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 563: break;
          case 212: 
            { Tokens.add(new MyToken("reservada.EXTRACT", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 564: break;
          case 213: 
            { Tokens.add(new MyToken("reservada.NUMERIC", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 565: break;
          case 214: 
            { Tokens.add(new MyToken("reservada.NATURAL", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 566: break;
          case 215: 
            { Tokens.add(new MyToken("reservada.NOCHECK", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 567: break;
          case 216: 
            { Tokens.add(new MyToken("reservada.UNKNOWN", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 568: break;
          case 217: 
            { Tokens.add(new MyToken("reservada.UNPIVOT", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 569: break;
          case 218: 
            { Tokens.add(new MyToken("reservada.LEADING", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 570: break;
          case 219: 
            { Tokens.add(new MyToken("reservada.DECLARE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 571: break;
          case 220: 
            { Tokens.add(new MyToken("reservada.DECIMAL", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 572: break;
          case 221: 
            { Tokens.add(new MyToken("reservada.DEFAULT", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 573: break;
          case 222: 
            { Tokens.add(new MyToken("reservada.TRIGGER", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 574: break;
          case 223: 
            { Tokens.add(new MyToken("reservada.TSEQUAL", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 575: break;
          case 224: 
            { Tokens.add(new MyToken("reservada.RESTORE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 576: break;
          case 225: 
            { Tokens.add(new MyToken("reservada.SETUSER", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 577: break;
          case 226: 
            { Tokens.add(new MyToken("reservada.SESSION", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 578: break;
          case 227: 
            { Tokens.add(new MyToken("reservada.SECTION", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 579: break;
          case 228: 
            { Tokens.add(new MyToken("reservada.SQLCODE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 580: break;
          case 229: 
            { Tokens.add(new MyToken("reservada.CURRENT", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 581: break;
          case 230: 
            { Tokens.add(new MyToken("reservada.CATALOG", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 582: break;
          case 231: 
            { Tokens.add(new MyToken("reservada.CASCADE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 583: break;
          case 232: 
            { Tokens.add(new MyToken("reservada.CONNECT", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 584: break;
          case 233: 
            { Tokens.add(new MyToken("reservada.CONVERT", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 585: break;
          case 234: 
            { Tokens.add(new MyToken("reservada.COLLATE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 586: break;
          case 235: 
            { Tokens.add(new MyToken("reservada.COMPUTE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 587: break;
          case 236: 
            { Tokens.add(new MyToken("reservada.OPENXML", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 588: break;
          case 237: 
            { Tokens.add(new MyToken("reservada.OFFSETS", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 589: break;
          case 238: 
            { Tokens.add(new MyToken("reservada.INTEGER", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 590: break;
          case 239: 
            { Tokens.add(new MyToken("reservada.INCLUDE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 591: break;
          case 240: 
            { Tokens.add(new MyToken("reservada.BETWEEN", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 592: break;
          case 241: 
            { Tokens.add(new MyToken("reservada.PERCENT", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 593: break;
          case 242: 
            { Tokens.add(new MyToken("reservada.PARTIAL", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 594: break;
          case 243: 
            { Tokens.add(new MyToken("reservada.PREPARE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 595: break;
          case 244: 
            { Tokens.add(new MyToken("reservada.PRIMARY", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 596: break;
          case 245: 
            { Tokens.add(new MyToken("reservada.WAITFOR", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 597: break;
          case 246: 
            { Tokens.add(new MyToken("reservada.VARYING", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 598: break;
          case 247: 
            { Tokens.add(new MyToken("reservada.VARCHAR", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 599: break;
          case 248: 
            { Tokens.add(new MyToken("reservada.FOREIGN", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 600: break;
          case 249: 
            { Tokens.add(new MyToken("reservada.FORTRAN", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 601: break;
          case 250: 
            { Tokens.add(new MyToken("reservada.ENDEXEC", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 602: break;
          case 251: 
            { Tokens.add(new MyToken("reservada.EXTERNAL", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 603: break;
          case 252: 
            { Tokens.add(new MyToken("reservada.NATIONAL", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 604: break;
          case 253: 
            { Tokens.add(new MyToken("reservada.LANGUAGE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 605: break;
          case 254: 
            { Tokens.add(new MyToken("reservada.ALLOCATE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 606: break;
          case 255: 
            { Tokens.add(new MyToken("reservada.ABSOLUTE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 607: break;
          case 256: 
            { Tokens.add(new MyToken("reservada.DESCRIBE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 608: break;
          case 257: 
            { Tokens.add(new MyToken("reservada.DEFERRED", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 609: break;
          case 258: 
            { Tokens.add(new MyToken("reservada.DATABASE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 610: break;
          case 259: 
            { Tokens.add(new MyToken("reservada.DISTINCT", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 611: break;
          case 260: 
            { Tokens.add(new MyToken("reservada.TEXTSIZE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 612: break;
          case 261: 
            { Tokens.add(new MyToken("reservada.TRUNCATE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 613: break;
          case 262: 
            { Tokens.add(new MyToken("reservada.TRAILING", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 614: break;
          case 263: 
            { Tokens.add(new MyToken("reservada.RELATIVE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 615: break;
          case 264: 
            { Tokens.add(new MyToken("reservada.READTEXT", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 616: break;
          case 265: 
            { Tokens.add(new MyToken("reservada.RESTRICT", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 617: break;
          case 266: 
            { Tokens.add(new MyToken("reservada.ROLLBACK", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 618: break;
          case 267: 
            { Tokens.add(new MyToken("reservada.ROWCOUNT", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 619: break;
          case 268: 
            { Tokens.add(new MyToken("reservada.SHUTDOWN", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 620: break;
          case 269: 
            { Tokens.add(new MyToken("reservada.SMALLINT", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 621: break;
          case 270: 
            { Tokens.add(new MyToken("reservada.SQLERROR", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 622: break;
          case 271: 
            { Tokens.add(new MyToken("reservada.SQLSTATE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 623: break;
          case 272: 
            { Tokens.add(new MyToken("reservada.CASCADED", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 624: break;
          case 273: 
            { Tokens.add(new MyToken("reservada.CONTAINS", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 625: break;
          case 274: 
            { Tokens.add(new MyToken("reservada.CONTINUE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 626: break;
          case 275: 
            { Tokens.add(new MyToken("reservada.COALESCE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 627: break;
          case 276: 
            { Tokens.add(new MyToken("reservada.HOLDLOCK", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 628: break;
          case 277: 
            { Tokens.add(new MyToken("reservada.OVERLAPS", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 629: break;
          case 278: 
            { Tokens.add(new MyToken("reservada.INTERVAL", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 630: break;
          case 279: 
            { Tokens.add(new MyToken("reservada.IDENTITY", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 631: break;
          case 280: 
            { Tokens.add(new MyToken("reservada.PRESERVE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 632: break;
          case 281: 
            { Tokens.add(new MyToken("reservada.POSITION", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 633: break;
          case 282: 
            { Tokens.add(new MyToken("reservada.WHENEVER", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 634: break;
          case 283: 
            { Tokens.add(new MyToken("reservada.FUNCTION", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 635: break;
          case 284: 
            { Tokens.add(new MyToken("reservada.FREETEXT", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 636: break;
          case 285: 
            { Tokens.add(new MyToken("reservada.EXCEPTION", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 637: break;
          case 286: 
            { Tokens.add(new MyToken("reservada.ASSERTION", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 638: break;
          case 287: 
            { Tokens.add(new MyToken("reservada.TEMPORARY", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 639: break;
          case 288: 
            { Tokens.add(new MyToken("reservada.TRANSLATE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 640: break;
          case 289: 
            { Tokens.add(new MyToken("reservada.TIMESTAMP", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 641: break;
          case 290: 
            { Tokens.add(new MyToken("reservada.RAISERROR", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 642: break;
          case 291: 
            { Tokens.add(new MyToken("reservada.SUBSTRING", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 643: break;
          case 292: 
            { Tokens.add(new MyToken("reservada.CLUSTERED", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 644: break;
          case 293: 
            { Tokens.add(new MyToken("reservada.CHARACTER", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 645: break;
          case 294: 
            { Tokens.add(new MyToken("reservada.COLLATION", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 646: break;
          case 295: 
            { Tokens.add(new MyToken("reservada.OPENQUERY", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 647: break;
          case 296: 
            { Tokens.add(new MyToken("reservada.INDICATOR", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 648: break;
          case 297: 
            { Tokens.add(new MyToken("reservada.INTERSECT", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 649: break;
          case 298: 
            { Tokens.add(new MyToken("reservada.INITIALLY", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 650: break;
          case 299: 
            { Tokens.add(new MyToken("reservada.ISOLATION", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 651: break;
          case 300: 
            { Tokens.add(new MyToken("reservada.IMMEDIATE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 652: break;
          case 301: 
            { Tokens.add(new MyToken("reservada.PRECISION", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 653: break;
          case 302: 
            { Tokens.add(new MyToken("reservada.PROCEDURE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 654: break;
          case 303: 
            { Tokens.add(new MyToken("reservada.WRITETEXT", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 655: break;
          case 304: 
            { Tokens.add(new MyToken("reservada.VERDADERO", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 656: break;
          case 305: 
            { Tokens.add(new MyToken("reservada.UPDATETEXT", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 657: break;
          case 306: 
            { Tokens.add(new MyToken("reservada.DEALLOCATE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 658: break;
          case 307: 
            { Tokens.add(new MyToken("reservada.DESCRIPTOR", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 659: break;
          case 308: 
            { Tokens.add(new MyToken("reservada.DEFERRABLE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 660: break;
          case 309: 
            { Tokens.add(new MyToken("reservada.DISCONNECT", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 661: break;
          case 310: 
            { Tokens.add(new MyToken("reservada.REFERENCES", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 662: break;
          case 311: 
            { Tokens.add(new MyToken("reservada.ROWGUIDCOL", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 663: break;
          case 312: 
            { Tokens.add(new MyToken("reservada.STATISTICS", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 664: break;
          case 313: 
            { Tokens.add(new MyToken("reservada.SQLWARNING", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 665: break;
          case 314: 
            { Tokens.add(new MyToken("reservada.CHECKPOINT", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 666: break;
          case 315: 
            { Tokens.add(new MyToken("reservada.CONNECTION", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 667: break;
          case 316: 
            { Tokens.add(new MyToken("reservada.CONSTRAINT", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 668: break;
          case 317: 
            { Tokens.add(new MyToken("reservada.BIT_LENGTH", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 669: break;
          case 318: 
            { Tokens.add(new MyToken("reservada.PRIVILEGES", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 670: break;
          case 319: 
            { Tokens.add(new MyToken("reservada.FILLFACTOR", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 671: break;
          case 320: 
            { Tokens.add(new MyToken("reservada.NOCLUSTERED", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 672: break;
          case 321: 
            { Tokens.add(new MyToken("reservada.DIAGNOSTICS", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 673: break;
          case 322: 
            { Tokens.add(new MyToken("reservada.DISTRIBUTED", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 674: break;
          case 323: 
            { Tokens.add(new MyToken("reservada.TABLESAMPLE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 675: break;
          case 324: 
            { Tokens.add(new MyToken("reservada.TRANSLATION", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 676: break;
          case 325: 
            { Tokens.add(new MyToken("reservada.TRANSACTION", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 677: break;
          case 326: 
            { Tokens.add(new MyToken("reservada.TRY_CONVERT", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 678: break;
          case 327: 
            { Tokens.add(new MyToken("reservada.RECONFIGURE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 679: break;
          case 328: 
            { Tokens.add(new MyToken("reservada.REPLICATION", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 680: break;
          case 329: 
            { Tokens.add(new MyToken("reservada.SYSTEM_USER", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 681: break;
          case 330: 
            { Tokens.add(new MyToken("reservada.CHAR_LENGTH", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 682: break;
          case 331: 
            { Tokens.add(new MyToken("reservada.CONSTRAINTS", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 683: break;
          case 332: 
            { Tokens.add(new MyToken("reservada.INSENSITIVE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 684: break;
          case 333: 
            { Tokens.add(new MyToken("reservada.IDENTITYCOL", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 685: break;
          case 334: 
            { Tokens.add(new MyToken("reservada.SESSION_USER", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 686: break;
          case 335: 
            { Tokens.add(new MyToken("reservada.CURRENT_USER", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 687: break;
          case 336: 
            { Tokens.add(new MyToken("reservada.CURRENT_DATE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 688: break;
          case 337: 
            { Tokens.add(new MyToken("reservada.CURRENT_TIME", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 689: break;
          case 338: 
            { Tokens.add(new MyToken("reservada.OCTET_LENGTH", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 690: break;
          case 339: 
            { Tokens.add(new MyToken("reservada.AUTHORIZATION", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 691: break;
          case 340: 
            { Tokens.add(new MyToken("reservada.TIMEZONE_HOUR", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 692: break;
          case 341: 
            { Tokens.add(new MyToken("reservada.SECURITYAUDIT", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 693: break;
          case 342: 
            { Tokens.add(new MyToken("reservada.CONTAINSTABLE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 694: break;
          case 343: 
            { Tokens.add(new MyToken("reservada.CORRESPONDING", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 695: break;
          case 344: 
            { Tokens.add(new MyToken("reservada.FREETEXTTABLE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 696: break;
          case 345: 
            { Tokens.add(new MyToken("reservada.OPENDATASOURCE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 697: break;
          case 346: 
            { Tokens.add(new MyToken("reservada.TIMEZONE_MINUTE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 698: break;
          case 347: 
            { Tokens.add(new MyToken("reservada.IDENTITY_INSERT", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 699: break;
          case 348: 
            { Tokens.add(new MyToken("reservada.CHARACTER_LENGTH", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 700: break;
          case 349: 
            { Tokens.add(new MyToken("reservada.CURRENT_TIMESTAMP", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 701: break;
          case 350: 
            { Tokens.add(new MyToken("reservada.SEMANTICKEYPHRASETAB", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 702: break;
          case 351: 
            { Tokens.add(new MyToken("reservada.SEMANTICSIMILARITYTA", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 703: break;
          case 352: 
            { Tokens.add(new MyToken("reservada.SEMANTICSIMILARITYDE", yytext(), "Token", yyline + 1, yylength(), yycolumn + 1));
            } 
            // fall through
          case 704: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
