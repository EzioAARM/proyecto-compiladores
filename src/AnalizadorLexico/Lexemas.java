/* The following code was generated by JFlex 1.7.0 */

package AnalizadorLexico;

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>Lexemas.flex</tt>
 */
public class Lexemas {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\21\1\17\1\23\1\23\1\22\22\0\1\21\1\24\1\0"+
    "\1\24\1\0\1\24\1\24\1\16\1\24\1\24\1\24\1\10\1\24"+
    "\1\11\1\5\1\24\1\12\1\12\10\1\1\0\1\24\1\24\1\24"+
    "\1\24\1\0\1\24\1\25\1\40\1\33\1\26\1\6\1\47\1\43"+
    "\1\34\1\36\1\51\1\41\1\15\1\45\1\13\1\35\1\42\1\52"+
    "\1\30\1\32\1\27\1\14\1\46\1\44\1\50\1\31\1\37\1\24"+
    "\1\0\1\24\1\0\1\3\1\0\4\2\1\7\25\2\1\24\1\0"+
    "\1\24\7\0\1\23\56\0\1\20\u05ab\0\12\4\206\0\12\4\306\0"+
    "\12\4\u019c\0\12\4\166\0\12\4\166\0\12\4\166\0\12\4\166\0"+
    "\12\4\166\0\12\4\166\0\12\4\166\0\12\4\166\0\12\4\166\0"+
    "\12\4\140\0\12\4\166\0\12\4\106\0\12\4\u0116\0\12\4\106\0"+
    "\12\4\u0746\0\12\4\46\0\12\4\u012c\0\12\4\200\0\12\4\246\0"+
    "\12\4\6\0\12\4\266\0\12\4\126\0\12\4\206\0\12\4\6\0"+
    "\12\4\u03ce\0\1\23\1\23\u85f6\0\12\4\u02a6\0\12\4\46\0\12\4"+
    "\306\0\12\4\26\0\12\4\126\0\12\4\u0196\0\12\4\u5316\0\12\4"+
    "\u0586\0\12\4\u0bbc\0\12\4\200\0\12\4\74\0\12\4\220\0\12\4"+
    "\u0116\0\12\4\u0156\0\12\4\166\0\12\4\u0176\0\12\4\146\0\12\4"+
    "\146\0\12\4\u01a6\0\12\4\u0366\0\12\4\u4e06\0\12\4\346\0\12\4"+
    "\u6c74\0\62\4\u1150\0\12\4\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\u16b5\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\1\0\1\3\1\2\1\3\1\1"+
    "\3\2\1\0\1\4\1\0\24\2\1\5\5\2\1\6"+
    "\1\7\1\0\4\2\1\10\7\2\1\11\4\2\1\10"+
    "\1\2\1\10\17\2\1\10\33\2\1\10\1\2\1\10"+
    "\3\2\2\10\1\2\1\10\24\2\1\10\24\2\1\0"+
    "\1\10\6\2\1\0\10\2\1\10\13\2\1\10\6\2"+
    "\1\10\40\2\1\10\13\2\1\10\24\2\1\10\1\2"+
    "\1\10\15\2\1\10\23\2\1\10\12\2\1\10\2\2"+
    "\1\5\2\0\6\2\1\0\1\10\21\2\1\10\13\2"+
    "\1\10\4\2\1\10\1\2\1\10\40\2\1\10\14\2"+
    "\2\10\21\2\1\10\4\2\2\10\6\2\1\5\1\0"+
    "\2\2\2\7\22\2\1\10\34\2\1\10\35\2\1\10"+
    "\3\2\1\0\1\10\52\2\1\0\11\2\1\10\4\2"+
    "\1\10\1\2\1\10\14\2\1\10\11\2\1\10\3\2"+
    "\1\10\33\2\1\10\21\2";

  private static int [] zzUnpackAction() {
    int [] result = new int[655];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\53\0\126\0\53\0\201\0\254\0\327\0\u0102"+
    "\0\u012d\0\u0158\0\u0183\0\u01ae\0\201\0\u01d9\0\u0204\0\u022f"+
    "\0\u025a\0\u0285\0\u02b0\0\u02db\0\u0306\0\u0331\0\u035c\0\u0387"+
    "\0\u03b2\0\u03dd\0\u0408\0\u0433\0\u045e\0\u0489\0\u04b4\0\u04df"+
    "\0\u050a\0\u0535\0\u0560\0\u058b\0\u05b6\0\u05e1\0\u060c\0\u0637"+
    "\0\u0662\0\u0102\0\u068d\0\u06b8\0\u06e3\0\u070e\0\u0739\0\u0764"+
    "\0\u078f\0\u07ba\0\u07e5\0\u0810\0\u083b\0\u0866\0\u0891\0\201"+
    "\0\u08bc\0\u08e7\0\u0912\0\u093d\0\126\0\u0968\0\u0993\0\u09be"+
    "\0\u09e9\0\u0a14\0\u0a3f\0\u0a6a\0\u0a95\0\u0ac0\0\u0aeb\0\u0b16"+
    "\0\u0b41\0\u0b6c\0\u0b97\0\u0bc2\0\u0bed\0\u0c18\0\u0c43\0\u0c6e"+
    "\0\u0c99\0\u0cc4\0\u0cef\0\u0d1a\0\u0d45\0\u0d70\0\u0d9b\0\u0dc6"+
    "\0\u0df1\0\u0e1c\0\u0e47\0\u0e72\0\u0e9d\0\u0ec8\0\u0ef3\0\u0f1e"+
    "\0\u0f49\0\u0f74\0\u0f9f\0\u0fca\0\u0ff5\0\u1020\0\u104b\0\u1076"+
    "\0\u10a1\0\u10cc\0\u10f7\0\u1122\0\u114d\0\u1178\0\u11a3\0\u11ce"+
    "\0\u11f9\0\u1224\0\u124f\0\u127a\0\u12a5\0\u12d0\0\u12fb\0\u1326"+
    "\0\u1351\0\u137c\0\u13a7\0\u13d2\0\u13fd\0\u1428\0\u1453\0\u147e"+
    "\0\u14a9\0\u14d4\0\u14ff\0\u152a\0\u1555\0\u1580\0\u15ab\0\u15d6"+
    "\0\u1601\0\u162c\0\u1657\0\u1682\0\u16ad\0\u16d8\0\u1703\0\u172e"+
    "\0\u1759\0\u1784\0\u17af\0\u17da\0\u1805\0\u1830\0\u185b\0\u1886"+
    "\0\u18b1\0\u18dc\0\u1907\0\u1932\0\u195d\0\u1988\0\u19b3\0\u19de"+
    "\0\u1a09\0\u1a34\0\u1a5f\0\u1a8a\0\u1ab5\0\u1ae0\0\u1b0b\0\u1b36"+
    "\0\u1b61\0\u1b8c\0\u1bb7\0\u1be2\0\u1c0d\0\u1c38\0\u1c63\0\u1c8e"+
    "\0\u1cb9\0\u1ce4\0\u1d0f\0\u1d3a\0\u1d65\0\u1d90\0\u1dbb\0\u1de6"+
    "\0\u1e11\0\u1e3c\0\u1e67\0\u1e92\0\u1ebd\0\u1ee8\0\u1f13\0\u1f3e"+
    "\0\u1f69\0\u1f94\0\u1fbf\0\u0c43\0\u1fea\0\u2015\0\u2040\0\u206b"+
    "\0\u2096\0\u20c1\0\u20ec\0\u2117\0\u2142\0\u216d\0\u2198\0\u21c3"+
    "\0\u21ee\0\u2219\0\u2244\0\u226f\0\u229a\0\u22c5\0\u22f0\0\u231b"+
    "\0\u2346\0\u2371\0\u239c\0\u23c7\0\u23f2\0\u241d\0\u2448\0\u2473"+
    "\0\u1c63\0\u249e\0\u24c9\0\u24f4\0\u251f\0\u254a\0\u2575\0\u25a0"+
    "\0\u25cb\0\u25f6\0\u2621\0\u264c\0\u2677\0\u26a2\0\u26cd\0\u26f8"+
    "\0\u2723\0\u274e\0\u2779\0\u27a4\0\u27cf\0\u27fa\0\u2825\0\u2850"+
    "\0\u287b\0\u28a6\0\u28d1\0\u28fc\0\u2927\0\u2952\0\u297d\0\u29a8"+
    "\0\u29d3\0\u29fe\0\u2a29\0\u2a54\0\u2a7f\0\u2aaa\0\u2ad5\0\u2b00"+
    "\0\u2b2b\0\u2b56\0\u2b81\0\u2bac\0\u2bd7\0\u2c02\0\u2c2d\0\u2c58"+
    "\0\u2c83\0\u2cae\0\u2cd9\0\u2d04\0\u2d2f\0\u2d5a\0\u2d85\0\u2db0"+
    "\0\u2ddb\0\u2e06\0\u2e31\0\u2e5c\0\u2e87\0\u2eb2\0\u2edd\0\u2f08"+
    "\0\u2f33\0\u2f5e\0\u2f89\0\u2fb4\0\u2fdf\0\u300a\0\u3035\0\u3060"+
    "\0\u308b\0\u30b6\0\u30e1\0\u310c\0\u3137\0\u3162\0\u318d\0\u31b8"+
    "\0\u31e3\0\u320e\0\u3239\0\u3264\0\u328f\0\u32ba\0\u32e5\0\u3310"+
    "\0\u333b\0\u3366\0\u3391\0\u33bc\0\u33e7\0\u3412\0\u343d\0\u3468"+
    "\0\u3493\0\u34be\0\u34e9\0\u3514\0\u353f\0\u356a\0\u3595\0\u35c0"+
    "\0\u35eb\0\u3616\0\u3641\0\u366c\0\u3697\0\u36c2\0\u36ed\0\u3718"+
    "\0\u3743\0\u376e\0\u3799\0\u37c4\0\u37ef\0\u381a\0\u3845\0\u3870"+
    "\0\u389b\0\u38c6\0\u38f1\0\u391c\0\u3947\0\u3972\0\u399d\0\u39c8"+
    "\0\u39f3\0\u3a1e\0\u3a49\0\u3a74\0\u3a9f\0\u3aca\0\u3af5\0\u3b20"+
    "\0\u3b4b\0\u3b76\0\u3ba1\0\u3bcc\0\u3bf7\0\u3c22\0\u3c4d\0\u3c78"+
    "\0\u3ca3\0\u3cce\0\u3cf9\0\u3d24\0\u3d4f\0\u3d7a\0\u3da5\0\u3dd0"+
    "\0\u3dfb\0\u3e26\0\u3e51\0\u3e7c\0\u3ea7\0\u3ed2\0\u3efd\0\u3f28"+
    "\0\u3f53\0\u3f7e\0\u3fa9\0\u3fd4\0\u3fff\0\u402a\0\u4055\0\u4080"+
    "\0\u40ab\0\u40d6\0\u4101\0\u412c\0\u4157\0\u4182\0\u3060\0\u41ad"+
    "\0\u41d8\0\u4203\0\u422e\0\u4259\0\u4284\0\u42af\0\u42da\0\u4305"+
    "\0\u4330\0\u435b\0\u4386\0\u43b1\0\u43dc\0\u4407\0\u4432\0\u445d"+
    "\0\u4488\0\u44b3\0\u44de\0\u4509\0\u4534\0\u455f\0\u458a\0\u45b5"+
    "\0\u45e0\0\u460b\0\u4636\0\u4661\0\u468c\0\u46b7\0\u46e2\0\u470d"+
    "\0\u4738\0\u4763\0\u478e\0\u47b9\0\u47e4\0\u480f\0\u483a\0\u4865"+
    "\0\u4890\0\u48bb\0\u48e6\0\u4911\0\u493c\0\u4967\0\u1e67\0\u4992"+
    "\0\u49bd\0\u49e8\0\u4a13\0\u4a3e\0\u4a69\0\u4a94\0\u4abf\0\u4aea"+
    "\0\u4b15\0\u4b40\0\u4b6b\0\u4b96\0\u4bc1\0\u4bec\0\u4c17\0\u4c42"+
    "\0\u4c6d\0\u4c98\0\u4cc3\0\u4cee\0\u4d19\0\u4d44\0\u4d6f\0\u4d9a"+
    "\0\u4dc5\0\u4df0\0\u4e1b\0\u4e46\0\u4e71\0\u4e9c\0\u4ec7\0\u4ef2"+
    "\0\u4f1d\0\u4f48\0\u4f73\0\u4f9e\0\u4fc9\0\u4ff4\0\u501f\0\u504a"+
    "\0\u5075\0\u50a0\0\u50cb\0\u50f6\0\u5121\0\u514c\0\u5177\0\u51a2"+
    "\0\u51cd\0\u2d04\0\u51f8\0\u5223\0\u524e\0\u5279\0\u52a4\0\u52cf"+
    "\0\u52fa\0\u5325\0\u5350\0\u537b\0\u53a6\0\u53d1\0\u53fc\0\u5427"+
    "\0\u5452\0\u547d\0\u54a8\0\u54d3\0\u54fe\0\u3514\0\u5529\0\u5554"+
    "\0\u557f\0\u55aa\0\u1ebd\0\u55d5\0\u5600\0\u562b\0\u5656\0\u5681"+
    "\0\u56ac\0\u56d7\0\u5702\0\u572d\0\u5758\0\u5783\0\u57ae\0\u57d9"+
    "\0\u5804\0\u582f\0\u585a\0\u5885\0\u58b0\0\u58db\0\u5906\0\u5931"+
    "\0\u595c\0\u5987\0\u59b2\0\u59dd\0\u5a08\0\u5a33\0\u5a5e\0\u5a89"+
    "\0\u5ab4\0\u5adf\0\u5b0a\0\u5b35\0\u5b60\0\u5b8b\0\u5bb6\0\u5be1"+
    "\0\u5c0c\0\u5c37\0\u5c62\0\u5c8d\0\u5cb8\0\u5ce3\0\u5d0e\0\u5d39"+
    "\0\u5d64\0\u5d8f\0\u5dba\0\u5de5\0\u5e10\0\u5e3b\0\u5e66\0\u58b0"+
    "\0\u5e91\0\u5ebc\0\u5ee7\0\u24c9\0\u5f12\0\u5f3d\0\u1dbb\0\u5f68"+
    "\0\u5f93\0\u5fbe\0\u5fe9\0\u6014\0\u10f7\0\u603f\0\u606a\0\u6095"+
    "\0\u60c0\0\u60eb\0\u6116\0\201\0\u6141\0\u616c\0\u6197\0\u61c2"+
    "\0\u61ed\0\u6218\0\u6243\0\u626e\0\u6299\0\u62c4\0\u62ef\0\u631a"+
    "\0\u6345\0\u6370\0\u639b\0\u63c6\0\u63f1\0\u641c\0\u6447\0\u6472"+
    "\0\u649d\0\u64c8\0\u64f3\0\u651e\0\u6549\0\u6574\0\u659f\0\u65ca"+
    "\0\u65f5\0\u6620\0\u664b\0\u6676\0\u66a1\0\u66cc\0\u66f7\0\u6722"+
    "\0\u674d\0\u6778\0\u67a3\0\u67ce\0\u67f9\0\u6824\0\u684f\0\u687a"+
    "\0\u68a5\0\u68d0\0\u68fb\0\u6926\0\u6951\0\u697c\0\u69a7\0\u62c4"+
    "\0\u69d2\0\u69fd\0\u6a28\0\u6a53\0\u6a7e\0\u6aa9\0\u6ad4";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[655];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\0\1\2\1\3\1\0\1\4\1\5\1\6\1\3"+
    "\1\5\1\7\1\10\1\11\1\12\1\13\1\14\1\15"+
    "\1\16\2\15\1\0\1\5\1\17\1\20\1\21\1\22"+
    "\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32"+
    "\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\3"+
    "\1\42\1\3\1\0\1\4\2\0\1\4\1\43\4\0"+
    "\1\4\41\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\26\3\54\0\3\3\2\0\2\3\2\0\1\3\1\44"+
    "\1\3\1\45\7\0\3\3\1\46\1\3\1\47\15\3"+
    "\1\50\2\3\11\0\1\51\42\0\1\4\2\0\1\4"+
    "\1\43\4\0\1\52\1\53\40\0\3\3\2\0\1\54"+
    "\1\3\2\0\2\3\1\55\1\3\7\0\1\56\5\3"+
    "\1\57\1\3\1\60\15\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\1\61\2\3\7\0\5\3\1\62\7\3"+
    "\1\63\10\3\1\0\3\3\2\0\1\64\1\3\2\0"+
    "\4\3\7\0\1\65\7\3\1\66\1\67\14\3\16\14"+
    "\1\70\1\0\33\14\17\16\1\0\1\70\32\16\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\1\71\1\72\1\73"+
    "\7\0\1\3\1\74\1\75\1\76\1\3\1\77\1\100"+
    "\4\3\1\101\5\3\1\102\4\3\1\0\3\3\2\0"+
    "\1\103\1\3\2\0\2\3\1\104\1\3\7\0\1\105"+
    "\2\3\1\106\4\3\1\107\1\110\1\3\1\111\12\3"+
    "\1\0\3\3\2\0\1\112\1\3\2\0\4\3\7\0"+
    "\1\113\2\3\1\114\1\3\1\115\1\3\1\116\1\117"+
    "\1\120\14\3\1\0\3\3\2\0\1\121\1\3\2\0"+
    "\2\3\1\122\1\3\7\0\1\123\7\3\1\124\1\125"+
    "\14\3\1\0\3\3\2\0\1\126\1\3\2\0\4\3"+
    "\7\0\26\3\1\0\3\3\2\0\1\127\1\3\2\0"+
    "\2\3\1\130\1\3\7\0\1\131\1\3\1\132\1\3"+
    "\1\133\1\3\1\134\1\135\1\136\1\137\3\3\1\140"+
    "\2\3\1\141\4\3\1\142\1\0\3\3\2\0\2\3"+
    "\2\0\2\3\1\143\1\144\7\0\1\145\2\3\1\146"+
    "\3\3\1\147\1\150\15\3\1\0\3\3\2\0\2\3"+
    "\2\0\4\3\7\0\1\151\7\3\1\152\15\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\1\153\1\154\1\3"+
    "\7\0\3\3\1\155\2\3\1\156\6\3\1\157\3\3"+
    "\1\160\1\161\3\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\1\162\2\3\7\0\1\3\1\163\3\3\1\164"+
    "\12\3\1\165\1\3\1\75\3\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\10\3\1\166\15\3\1\0"+
    "\3\3\2\0\1\167\1\3\2\0\2\3\1\170\1\3"+
    "\7\0\1\171\2\3\1\172\1\75\3\3\1\173\1\174"+
    "\14\3\1\0\3\3\2\0\1\175\1\3\2\0\4\3"+
    "\7\0\11\3\1\176\14\3\1\0\3\3\2\0\1\177"+
    "\1\3\2\0\2\3\1\200\1\201\7\0\1\202\2\3"+
    "\1\203\4\3\1\204\1\205\14\3\1\0\3\3\2\0"+
    "\1\206\1\3\2\0\3\3\1\207\7\0\3\3\1\210"+
    "\4\3\1\211\15\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\1\212\2\3\1\213\3\3\1\214\1\215"+
    "\1\216\14\3\1\0\3\3\2\0\1\217\1\3\2\0"+
    "\4\3\7\0\1\220\7\3\1\221\1\222\14\3\1\0"+
    "\3\3\2\0\1\223\1\3\2\0\4\3\7\0\1\224"+
    "\10\3\1\225\14\3\1\0\3\3\2\0\1\226\1\3"+
    "\2\0\2\3\1\227\1\230\7\0\1\231\2\3\1\232"+
    "\4\3\1\233\1\234\14\3\1\0\3\3\2\0\2\3"+
    "\2\0\4\3\7\0\10\3\1\235\15\3\1\0\1\43"+
    "\2\0\1\43\1\0\2\236\2\0\1\43\41\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\1\3\1\237\24\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\5\3"+
    "\1\76\20\3\1\0\3\3\2\0\2\3\2\0\4\3"+
    "\7\0\3\3\1\240\22\3\1\0\3\3\2\0\2\3"+
    "\2\0\4\3\7\0\6\3\1\241\17\3\1\0\3\3"+
    "\2\0\1\242\1\3\2\0\4\3\7\0\2\3\1\243"+
    "\3\3\1\244\2\3\1\245\14\3\17\51\1\0\2\51"+
    "\2\0\27\51\14\0\1\246\37\0\3\3\2\0\2\3"+
    "\2\0\4\3\7\0\23\3\1\206\2\3\1\0\3\3"+
    "\2\0\2\3\2\0\3\3\1\247\7\0\20\3\1\250"+
    "\5\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\2\3\1\251\15\3\1\252\5\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\7\3\1\126\16\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\1\76\2\3\7\0"+
    "\2\3\1\75\3\3\1\253\17\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\11\3\1\254\2\3\1\255"+
    "\1\256\10\3\1\0\3\3\2\0\1\257\1\3\2\0"+
    "\4\3\7\0\1\260\10\3\1\261\14\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\1\3\1\262\13\3"+
    "\1\263\10\3\1\0\3\3\2\0\2\3\2\0\4\3"+
    "\7\0\1\264\20\3\1\265\1\206\3\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\1\266\2\3\7\0\5\3"+
    "\1\206\20\3\1\0\3\3\2\0\2\3\2\0\4\3"+
    "\7\0\1\267\5\3\1\270\10\3\1\263\6\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\1\271\2\3\7\0"+
    "\14\3\1\76\11\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\1\3\1\75\2\3\1\75\21\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\2\3\1\272"+
    "\23\3\1\0\3\3\2\0\2\3\2\0\3\3\1\273"+
    "\7\0\2\3\1\263\23\3\1\0\3\3\2\0\2\3"+
    "\2\0\4\3\7\0\2\75\24\3\1\0\3\3\2\0"+
    "\1\75\1\3\2\0\4\3\7\0\26\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\5\3\1\274\1\75"+
    "\17\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\2\3\1\275\23\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\5\3\1\276\20\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\16\3\1\75\7\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\1\175\1\3\1\277"+
    "\7\0\1\300\4\3\1\301\1\302\13\3\1\303\3\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\20\3"+
    "\1\304\5\3\1\0\3\3\2\0\2\3\2\0\4\3"+
    "\7\0\2\3\1\305\1\3\1\75\21\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\10\3\1\304\15\3"+
    "\1\0\3\3\2\0\2\3\2\0\2\3\1\306\1\3"+
    "\7\0\20\3\1\307\5\3\1\0\3\3\2\0\2\3"+
    "\2\0\4\3\7\0\1\310\4\3\1\311\20\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\6\3\1\312"+
    "\17\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\20\3\1\313\2\3\1\314\2\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\13\3\1\315\12\3\1\0"+
    "\3\3\2\0\2\3\2\0\2\3\1\316\1\3\7\0"+
    "\1\317\3\3\1\320\4\3\1\321\14\3\1\0\3\3"+
    "\2\0\1\322\1\3\2\0\4\3\7\0\26\3\1\0"+
    "\3\3\2\0\1\323\1\3\2\0\4\3\7\0\26\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\15\3"+
    "\1\75\10\3\1\0\3\3\2\0\2\3\2\0\4\3"+
    "\7\0\20\3\1\324\5\3\1\0\3\3\2\0\2\3"+
    "\2\0\3\3\1\325\7\0\1\326\1\3\1\327\2\3"+
    "\1\330\1\331\6\3\1\332\3\3\1\333\1\334\3\3"+
    "\1\0\3\3\2\0\2\3\2\0\3\3\1\76\7\0"+
    "\26\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\11\3\1\335\14\3\1\0\3\3\2\0\2\3\2\0"+
    "\3\3\1\336\7\0\17\3\1\337\6\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\16\3\1\340\7\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\1\341"+
    "\25\3\1\0\3\3\2\0\2\3\2\0\3\3\1\342"+
    "\7\0\2\3\1\343\2\3\1\344\1\345\11\3\1\346"+
    "\5\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\13\3\1\347\4\3\1\75\5\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\21\3\1\76\4\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\1\350\25\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\5\3"+
    "\1\351\20\3\1\0\3\3\2\0\2\3\2\0\4\3"+
    "\7\0\3\3\1\352\3\3\1\353\16\3\1\0\3\3"+
    "\2\0\2\3\2\0\2\3\1\354\1\3\7\0\26\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\20\3"+
    "\1\76\5\3\1\0\3\3\2\0\2\3\2\0\4\3"+
    "\7\0\12\3\1\76\13\3\1\0\3\3\2\0\2\3"+
    "\2\0\4\3\7\0\1\355\25\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\1\356\25\3\1\0\3\3"+
    "\2\0\2\3\2\0\3\3\1\357\7\0\26\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\3\3\1\360"+
    "\22\3\1\0\3\3\2\0\2\3\2\0\2\3\1\361"+
    "\1\3\7\0\10\3\1\45\15\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\2\3\1\362\2\3\1\363"+
    "\20\3\1\0\3\3\2\0\1\364\1\3\2\0\4\3"+
    "\7\0\10\3\1\365\15\3\1\0\3\3\2\0\1\366"+
    "\1\3\2\0\4\3\7\0\1\367\25\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\1\370\1\371\1\372\7\0"+
    "\1\373\2\3\1\374\14\3\1\375\5\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\21\3\1\376\4\3"+
    "\1\0\3\3\2\0\2\3\2\0\2\3\1\341\1\377"+
    "\7\0\26\3\1\0\3\3\2\0\2\3\2\0\3\3"+
    "\1\175\7\0\26\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\2\3\1\u0100\23\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\1\3\1\263\24\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\2\3\1\u0101"+
    "\23\3\1\0\3\3\2\0\1\u0102\1\3\2\0\4\3"+
    "\7\0\2\3\1\275\23\3\1\0\3\3\2\0\1\u0103"+
    "\1\3\2\0\4\3\7\0\26\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\22\3\1\u0104\3\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\1\263\2\3\7\0"+
    "\1\3\1\u0105\1\u0106\2\3\1\u0107\1\u0108\2\3\1\u0109"+
    "\3\3\1\u010a\10\3\1\0\3\3\2\0\1\u010b\1\3"+
    "\2\0\4\3\7\0\26\3\1\0\3\3\2\0\2\3"+
    "\2\0\4\3\7\0\10\3\1\u010c\15\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\20\3\1\u010d\5\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\1\76\2\3"+
    "\7\0\26\3\1\0\3\3\2\0\2\3\2\0\4\3"+
    "\7\0\2\3\1\u010e\13\3\1\235\7\3\1\0\3\3"+
    "\2\0\2\3\2\0\3\3\1\u010f\7\0\26\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\6\3\1\u0110"+
    "\17\3\1\0\3\3\2\0\1\u0111\1\3\2\0\4\3"+
    "\7\0\10\3\1\u0112\15\3\1\0\3\3\2\0\2\3"+
    "\2\0\4\3\7\0\2\3\1\u0113\23\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\2\3\1\u0114\23\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\4\3"+
    "\1\75\21\3\1\0\3\3\2\0\2\3\2\0\3\3"+
    "\1\u0115\7\0\26\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\3\3\1\u0116\22\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\13\3\1\u0117\12\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\1\323\25\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\1\3"+
    "\1\75\1\3\1\u0118\1\3\1\u0119\20\3\1\0\3\3"+
    "\2\0\1\u011a\1\3\2\0\4\3\7\0\10\3\1\u011b"+
    "\1\u011c\14\3\1\0\3\3\2\0\2\3\2\0\4\3"+
    "\7\0\5\3\1\u011d\20\3\1\0\3\3\2\0\2\3"+
    "\2\0\4\3\7\0\21\3\1\u011e\4\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\2\3\1\75\23\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\10\3"+
    "\1\u011f\15\3\1\0\3\3\2\0\2\3\2\0\4\3"+
    "\7\0\1\371\7\3\1\u0120\15\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\2\3\1\u0121\23\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\11\3\1\u0122"+
    "\14\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\11\3\1\u0123\14\3\1\0\3\3\2\0\1\u0124\1\3"+
    "\2\0\4\3\7\0\11\3\1\122\14\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\3\3\1\u010f\22\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\2\3"+
    "\1\u0125\23\3\1\0\3\3\2\0\2\3\2\0\4\3"+
    "\7\0\3\3\1\260\22\3\1\0\3\3\2\0\2\3"+
    "\2\0\4\3\7\0\2\3\1\u0126\20\3\1\75\2\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\1\173\2\3"+
    "\7\0\1\3\1\u0127\24\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\1\u0128\2\3\7\0\26\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\3\3\1\u0129\22\3"+
    "\1\0\3\3\2\0\2\3\2\0\3\3\1\u012a\7\0"+
    "\3\3\1\u012b\22\3\1\0\3\3\2\0\1\u012c\1\3"+
    "\2\0\4\3\7\0\26\3\1\0\3\3\2\0\2\3"+
    "\2\0\4\3\7\0\2\3\1\u0126\23\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\1\u012d\1\3\1\u0115\7\0"+
    "\26\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\10\3\1\u012e\15\3\1\0\3\3\2\0\2\3\2\0"+
    "\3\3\1\u012f\7\0\26\3\1\0\3\3\2\0\1\u0130"+
    "\1\3\2\0\4\3\7\0\10\3\1\u0131\15\3\1\0"+
    "\3\3\2\0\2\3\2\0\2\3\1\u0132\1\3\7\0"+
    "\3\3\1\u0133\22\3\1\0\3\3\2\0\2\3\2\0"+
    "\3\3\1\u0134\7\0\3\3\1\u0135\22\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\11\3\1\323\14\3"+
    "\1\0\1\u0136\2\0\1\u0136\1\0\2\236\2\u0137\1\u0136"+
    "\41\0\3\3\2\0\2\3\1\0\1\u0138\4\3\7\0"+
    "\26\3\1\0\3\3\2\0\2\3\2\0\3\3\1\u0139"+
    "\7\0\26\3\1\0\3\3\2\0\2\3\2\0\4\3"+
    "\7\0\1\u013a\25\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\6\3\1\u0128\17\3\1\0\3\3\2\0"+
    "\1\u013b\1\3\2\0\4\3\7\0\3\3\1\u013c\22\3"+
    "\1\0\3\3\2\0\1\u013d\1\3\2\0\4\3\7\0"+
    "\26\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\2\3\1\75\2\3\1\u013e\20\3\15\0\1\u013f\36\0"+
    "\3\3\2\0\2\3\2\0\3\3\1\u0140\7\0\26\3"+
    "\1\0\3\3\2\0\1\u0141\1\3\2\0\4\3\7\0"+
    "\26\3\1\0\3\3\2\0\2\3\2\0\2\3\1\u0142"+
    "\1\3\7\0\11\3\1\u0143\14\3\1\0\3\3\2\0"+
    "\1\u0144\1\3\2\0\4\3\7\0\26\3\1\0\3\3"+
    "\2\0\2\3\2\0\3\3\1\u0145\7\0\7\3\1\u0146"+
    "\16\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\10\3\1\323\14\3\1\u0147\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\1\u0148\2\3\7\0\26\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\11\3\1\205\14\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\3\3"+
    "\1\75\22\3\1\0\3\3\2\0\2\3\2\0\4\3"+
    "\7\0\16\3\1\76\7\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\1\102\2\3\7\0\26\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\1\u0123\25\3\1\0"+
    "\3\3\2\0\1\341\1\3\2\0\4\3\7\0\26\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\1\3"+
    "\1\376\24\3\1\0\3\3\2\0\1\u0115\1\3\2\0"+
    "\4\3\7\0\26\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\16\3\1\u0149\7\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\1\3\1\75\24\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\1\u0115\25\3"+
    "\1\0\3\3\2\0\1\u014a\1\3\2\0\4\3\7\0"+
    "\26\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\7\3\1\u014b\16\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\10\3\1\u014c\15\3\1\0\3\3\2\0"+
    "\1\u014d\1\3\2\0\4\3\7\0\26\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\11\3\1\u014e\14\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\10\3"+
    "\1\u014f\15\3\1\0\3\3\2\0\1\u0150\1\3\2\0"+
    "\4\3\7\0\26\3\1\0\3\3\2\0\2\3\2\0"+
    "\3\3\1\u0151\7\0\26\3\1\0\3\3\2\0\2\3"+
    "\2\0\4\3\7\0\6\3\1\u0152\17\3\1\0\3\3"+
    "\2\0\2\3\2\0\3\3\1\u0153\7\0\11\3\1\u0154"+
    "\14\3\1\0\3\3\2\0\1\u0155\1\3\2\0\4\3"+
    "\7\0\1\u0156\25\3\1\0\3\3\2\0\1\75\1\3"+
    "\2\0\4\3\7\0\1\u0157\25\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\13\3\1\122\12\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\1\235\25\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\16\3"+
    "\1\u0158\7\3\1\0\3\3\2\0\2\3\2\0\4\3"+
    "\7\0\2\3\1\u0159\3\3\1\u015a\5\3\1\75\11\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\6\3"+
    "\1\75\17\3\1\0\3\3\2\0\2\3\2\0\4\3"+
    "\7\0\15\3\1\u015b\10\3\1\0\3\3\2\0\2\3"+
    "\2\0\4\3\7\0\2\3\1\u015c\23\3\1\0\3\3"+
    "\2\0\2\3\2\0\3\3\1\u015d\7\0\26\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\1\u014c\2\3\7\0"+
    "\26\3\1\0\3\3\2\0\2\3\2\0\1\3\1\u015e"+
    "\2\3\7\0\11\3\1\u015f\14\3\1\0\2\3\1\u0160"+
    "\2\0\2\3\2\0\4\3\7\0\26\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\16\3\1\u0161\1\3"+
    "\1\75\5\3\1\0\3\3\2\0\2\3\2\0\4\3"+
    "\7\0\25\3\1\u0162\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\1\75\2\3\7\0\26\3\1\0\3\3\2\0"+
    "\1\u0163\1\3\2\0\4\3\7\0\26\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\1\u0164\25\3\1\0"+
    "\3\3\2\0\2\3\2\0\3\3\1\75\7\0\1\3"+
    "\1\u0165\24\3\1\0\3\3\2\0\2\3\2\0\2\3"+
    "\1\u0166\1\3\7\0\26\3\1\0\3\3\2\0\2\3"+
    "\2\0\4\3\7\0\2\3\1\u0167\23\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\10\3\1\u0168\15\3"+
    "\1\0\3\3\2\0\2\3\2\0\3\3\1\u0169\7\0"+
    "\26\3\1\0\3\3\2\0\1\u016a\1\3\2\0\4\3"+
    "\7\0\10\3\1\u016b\15\3\1\0\3\3\2\0\1\u016c"+
    "\1\3\2\0\4\3\7\0\26\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\5\3\1\u016d\20\3\1\0"+
    "\3\3\2\0\2\3\2\0\3\3\1\u016e\7\0\26\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\5\3"+
    "\1\75\1\u016f\7\3\1\u0170\7\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\7\3\1\206\16\3\1\0"+
    "\3\3\2\0\1\u0171\1\3\2\0\4\3\7\0\26\3"+
    "\1\0\3\3\2\0\2\3\2\0\2\3\1\u0172\1\3"+
    "\7\0\26\3\1\0\3\3\2\0\2\3\2\0\4\3"+
    "\7\0\5\3\1\u0173\20\3\1\0\3\3\2\0\2\3"+
    "\2\0\2\3\1\u0174\1\3\7\0\2\3\1\275\5\3"+
    "\1\u0132\15\3\1\0\3\3\2\0\2\3\2\0\4\3"+
    "\7\0\1\u0175\25\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\5\3\1\u0176\20\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\2\3\1\u0177\23\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\2\3\1\u0178"+
    "\23\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\10\3\1\176\15\3\1\0\3\3\2\0\1\u0179\1\3"+
    "\2\0\4\3\7\0\26\3\1\0\3\3\2\0\2\3"+
    "\2\0\4\3\7\0\2\3\1\u017a\23\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\6\3\1\76\17\3"+
    "\1\0\3\3\2\0\2\3\2\0\3\3\1\u017b\7\0"+
    "\26\3\1\0\3\3\2\0\1\u017c\1\3\2\0\4\3"+
    "\7\0\5\3\1\u017d\1\u017e\10\3\1\u017f\6\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\3\3\1\u0180"+
    "\1\3\1\u0181\20\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\5\3\1\u0182\20\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\1\u0183\25\3\1\0\3\3"+
    "\2\0\1\75\1\3\2\0\4\3\7\0\2\3\1\75"+
    "\3\3\1\u0184\17\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\1\u0150\25\3\1\0\3\3\2\0\2\3"+
    "\2\0\4\3\7\0\5\3\1\u0144\20\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\6\3\1\u0185\17\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\3\3"+
    "\1\u0186\22\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\1\u0187\2\3\7\0\2\3\1\u0188\2\3\1\u0189\13\3"+
    "\1\u018a\4\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\1\206\2\3\7\0\26\3\1\0\3\3\2\0\2\3"+
    "\2\0\2\3\1\u018b\1\u018c\7\0\26\3\1\0\3\3"+
    "\2\0\2\3\2\0\3\3\1\u018d\7\0\26\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\3\3\1\u018e"+
    "\22\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\15\3\1\u018f\2\3\1\u0190\5\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\11\3\1\261\14\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\1\3\1\u0191"+
    "\24\3\1\0\3\3\2\0\1\341\1\3\2\0\4\3"+
    "\7\0\15\3\1\u010a\10\3\1\0\3\3\2\0\1\u0192"+
    "\1\3\2\0\4\3\7\0\26\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\1\u0193\2\3\7\0\26\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\3\3\1\u0194"+
    "\22\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\5\3\1\u0195\20\3\1\0\3\3\2\0\1\u0196\1\3"+
    "\2\0\4\3\7\0\11\3\1\u0197\14\3\1\0\3\3"+
    "\2\0\1\u0198\1\3\2\0\4\3\7\0\10\3\1\75"+
    "\15\3\1\0\3\3\2\0\1\u0199\1\3\2\0\4\3"+
    "\7\0\26\3\1\0\3\3\2\0\2\3\2\0\3\3"+
    "\1\u019a\7\0\26\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\2\3\1\u019b\23\3\1\0\3\3\2\0"+
    "\2\3\2\0\2\3\1\206\1\3\7\0\26\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\1\u019c\2\3\7\0"+
    "\26\3\1\0\3\3\2\0\2\3\2\0\3\3\1\u019d"+
    "\7\0\26\3\1\0\3\3\2\0\1\u019e\1\3\2\0"+
    "\4\3\7\0\26\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\17\3\1\u019f\6\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\14\3\1\75\11\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\14\3\1\u0120"+
    "\11\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\1\u010f\25\3\1\0\3\3\2\0\2\3\2\0\4\3"+
    "\7\0\17\3\1\45\6\3\1\0\3\3\2\0\2\3"+
    "\2\0\4\3\7\0\7\3\1\75\16\3\1\0\2\3"+
    "\1\u01a0\2\0\2\3\2\0\4\3\7\0\26\3\1\0"+
    "\3\3\2\0\2\3\2\0\3\3\1\75\7\0\26\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\6\3"+
    "\1\u01a1\17\3\1\0\3\3\2\0\2\3\2\0\3\3"+
    "\1\u01a2\7\0\26\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\2\3\1\u01a3\23\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\6\3\1\270\17\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\5\3\1\u01a4"+
    "\1\u01a5\6\3\1\u0153\10\3\1\0\3\3\2\0\2\3"+
    "\2\0\4\3\7\0\6\3\1\u01a6\17\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\1\206\2\3\7\0\10\3"+
    "\1\341\7\3\1\u01a7\1\u01a8\4\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\11\3\1\100\14\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\10\3\1\206"+
    "\15\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\13\3\1\270\12\3\1\0\3\3\2\0\2\3\2\0"+
    "\2\3\1\304\1\3\7\0\26\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\10\3\1\75\15\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\2\3\1\u01a9"+
    "\23\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\2\3\1\u01aa\23\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\1\u01ab\2\3\7\0\3\3\1\76\22\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\7\3\1\u01ac"+
    "\16\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\6\3\1\u0113\17\3\1\0\3\3\2\0\2\3\2\0"+
    "\2\3\1\122\1\3\7\0\26\3\1\0\3\3\2\0"+
    "\2\3\2\0\2\3\1\u0150\1\3\7\0\26\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\1\3\1\u01ad"+
    "\24\3\1\0\3\3\2\0\2\3\2\0\2\3\1\u01ae"+
    "\1\3\7\0\26\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\4\3\1\376\1\3\1\57\17\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\17\3\1\75"+
    "\6\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\6\3\1\100\17\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\1\206\25\3\1\0\3\3\2\0\2\3"+
    "\2\0\4\3\7\0\5\3\1\u0121\20\3\1\0\3\3"+
    "\2\0\1\u01af\1\3\2\0\4\3\7\0\26\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\20\3\1\75"+
    "\5\3\1\0\3\3\2\0\2\3\2\0\1\3\1\267"+
    "\2\3\7\0\26\3\1\0\3\3\2\0\1\u01b0\1\3"+
    "\2\0\4\3\7\0\2\3\1\u01b1\23\3\1\0\3\3"+
    "\2\0\1\75\1\3\2\0\3\3\1\u01b2\7\0\26\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\5\3"+
    "\1\206\20\3\1\0\1\u0136\2\0\1\u0136\1\u01b3\2\236"+
    "\2\0\1\u0136\41\0\1\u0136\2\0\1\u0136\3\0\2\u0137"+
    "\1\u0136\46\0\1\u01b4\45\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\21\3\1\u0115\4\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\15\3\1\76\10\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\3\3\1\u01b5"+
    "\22\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\1\u0171\25\3\1\0\3\3\2\0\2\3\2\0\4\3"+
    "\7\0\15\3\1\u01b6\10\3\1\0\3\3\2\0\2\3"+
    "\2\0\4\3\7\0\2\3\1\u0144\23\3\15\0\1\u01b7"+
    "\36\0\3\3\2\0\2\3\2\0\1\u01b8\1\u01b9\2\3"+
    "\7\0\11\3\1\u01ba\14\3\1\0\3\3\2\0\2\3"+
    "\2\0\4\3\7\0\3\3\1\u01a2\22\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\3\3\1\270\22\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\10\3"+
    "\1\u01b5\15\3\1\0\3\3\2\0\2\3\2\0\4\3"+
    "\7\0\5\3\1\75\20\3\1\0\3\3\2\0\2\3"+
    "\2\0\2\3\1\361\1\3\7\0\26\3\1\0\3\3"+
    "\2\0\1\u01bb\1\3\2\0\4\3\7\0\26\3\1\0"+
    "\3\3\2\0\2\3\2\0\2\3\1\76\1\3\7\0"+
    "\26\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\10\3\1\u01bc\15\3\1\0\3\3\2\0\2\3\2\0"+
    "\2\3\1\u01bd\1\3\7\0\26\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\1\u0121\2\3\7\0\26\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\10\3\1\u01be"+
    "\15\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\6\3\1\364\17\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\3\3\1\100\22\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\10\3\1\323\15\3\1\0"+
    "\3\3\2\0\2\3\2\0\3\3\1\u018f\7\0\26\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\2\3"+
    "\1\76\23\3\1\0\3\3\2\0\2\3\2\0\3\3"+
    "\1\u01bf\7\0\26\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\3\3\1\u01c0\22\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\1\u01c1\25\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\20\3\1\270\5\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\3\3"+
    "\1\u01c2\22\3\1\0\3\3\2\0\2\3\2\0\2\3"+
    "\1\u01c3\1\3\7\0\26\3\1\0\3\3\2\0\2\3"+
    "\2\0\4\3\7\0\13\3\1\u01c4\12\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\1\u01c5\2\3\7\0\26\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\3\3"+
    "\1\u01c6\5\3\1\u01c7\14\3\1\0\3\3\2\0\2\3"+
    "\2\0\4\3\7\0\10\3\1\u01c8\15\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\10\3\1\u01c9\15\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\5\3"+
    "\1\u01ca\20\3\1\0\3\3\2\0\1\u01cb\1\3\2\0"+
    "\4\3\7\0\26\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\5\3\1\u01cc\20\3\1\0\3\3\2\0"+
    "\2\3\2\0\3\3\1\376\7\0\26\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\6\3\1\u01cd\17\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\16\3"+
    "\1\263\7\3\1\0\3\3\2\0\2\3\2\0\2\3"+
    "\1\270\1\3\7\0\26\3\1\0\3\3\2\0\2\3"+
    "\2\0\4\3\7\0\5\3\1\u01ce\4\3\1\u01cf\13\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\2\3"+
    "\1\u01d0\23\3\1\0\3\3\2\0\2\3\2\0\4\3"+
    "\7\0\2\3\1\u01d1\23\3\1\0\3\3\2\0\2\3"+
    "\2\0\4\3\7\0\3\3\1\323\22\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\3\3\1\u01d2\4\3"+
    "\1\u01c1\15\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\1\u01d3\2\3\7\0\26\3\1\0\3\3\2\0\2\3"+
    "\2\0\4\3\7\0\11\3\1\u01d4\14\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\3\3\1\206\22\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\14\3"+
    "\1\76\11\3\1\0\3\3\2\0\2\3\2\0\4\3"+
    "\7\0\3\3\1\u01d5\22\3\1\0\3\3\2\0\1\u017c"+
    "\1\3\2\0\4\3\7\0\26\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\13\3\1\u01d6\12\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\10\3\1\u01d7"+
    "\15\3\1\0\3\3\2\0\2\3\2\0\2\3\1\u01d8"+
    "\1\3\7\0\26\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\6\3\1\206\17\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\5\3\1\263\20\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\11\3\1\u01d9"+
    "\14\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\3\3\1\u01da\22\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\1\u01db\2\3\7\0\26\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\2\3\1\u01dc\23\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\11\3\1\u01dd"+
    "\14\3\1\0\3\3\2\0\1\u01de\1\3\2\0\4\3"+
    "\7\0\26\3\1\0\3\3\2\0\2\3\2\0\4\3"+
    "\7\0\20\3\1\u01df\5\3\1\0\3\3\2\0\2\3"+
    "\2\0\4\3\7\0\1\3\1\u0148\24\3\1\0\3\3"+
    "\2\0\2\3\2\0\3\3\1\u01e0\7\0\26\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\3\3\1\u01e1"+
    "\22\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\2\3\1\364\23\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\1\75\7\3\1\u01e2\15\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\1\u01e3\25\3\1\0"+
    "\3\3\2\0\1\u01e4\1\3\2\0\4\3\7\0\26\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\10\3"+
    "\1\341\15\3\1\0\3\3\2\0\2\3\2\0\4\3"+
    "\7\0\2\3\1\u01e5\23\3\1\0\3\3\2\0\2\3"+
    "\2\0\3\3\1\u01e6\7\0\26\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\1\u01e7\25\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\14\3\1\u01e8\11\3"+
    "\1\0\2\3\1\u01a0\2\0\2\3\2\0\4\3\7\0"+
    "\1\u01e9\25\3\1\0\3\3\2\0\1\u01ea\1\3\2\0"+
    "\4\3\7\0\26\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\1\u01eb\10\3\1\u01ec\14\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\2\3\1\u01ed\23\3"+
    "\1\0\3\3\2\0\1\u016a\1\3\2\0\4\3\7\0"+
    "\26\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\20\3\1\323\5\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\1\u01ee\25\3\1\0\3\3\2\0\1\u01ef"+
    "\1\3\2\0\4\3\7\0\26\3\1\0\3\3\2\0"+
    "\1\u01f0\1\3\2\0\4\3\7\0\26\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\11\3\1\206\14\3"+
    "\1\0\3\3\2\0\2\3\2\0\3\3\1\u01f1\7\0"+
    "\26\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\2\3\1\u01f2\23\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\1\3\1\u01f3\21\3\1\u01f4\1\3\1\u01f5"+
    "\1\0\3\3\2\0\2\3\2\0\3\3\1\u01f6\7\0"+
    "\26\3\1\0\3\3\2\0\1\u013e\1\3\2\0\4\3"+
    "\7\0\26\3\1\0\3\3\2\0\2\3\2\0\4\3"+
    "\7\0\23\3\1\75\2\3\1\0\3\3\2\0\2\3"+
    "\2\0\4\3\7\0\6\3\1\u01f7\17\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\3\3\1\u01f8\12\3"+
    "\1\263\7\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\1\u01f9\2\3\7\0\3\3\1\206\22\3\1\0\3\3"+
    "\2\0\2\3\2\0\2\3\1\u01e2\1\3\7\0\26\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\11\3"+
    "\1\u01fa\14\3\1\0\3\3\2\0\2\3\2\0\4\3"+
    "\7\0\2\3\1\u01fb\23\3\1\0\3\3\2\0\2\3"+
    "\2\0\4\3\7\0\1\100\25\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\1\3\1\u01fc\24\3\1\0"+
    "\3\3\2\0\1\116\1\3\2\0\4\3\7\0\26\3"+
    "\1\0\3\3\2\0\2\3\2\0\3\3\1\u01fd\7\0"+
    "\26\3\1\0\3\3\2\0\1\371\1\3\2\0\4\3"+
    "\7\0\26\3\1\0\3\3\2\0\2\3\2\0\4\3"+
    "\7\0\11\3\1\312\14\3\1\0\3\3\2\0\2\3"+
    "\2\0\4\3\7\0\11\3\1\270\14\3\1\0\3\3"+
    "\2\0\1\u01fe\1\3\2\0\4\3\7\0\26\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\11\3\1\u01ff"+
    "\14\3\1\0\3\3\2\0\1\u0200\1\3\2\0\4\3"+
    "\7\0\26\3\1\0\3\3\2\0\2\3\2\0\4\3"+
    "\7\0\1\u0201\25\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\11\3\1\u0202\14\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\22\3\1\u0181\3\3\1\0"+
    "\3\3\2\0\1\u0165\1\3\2\0\4\3\7\0\26\3"+
    "\1\0\3\3\2\0\1\u0203\1\3\2\0\4\3\7\0"+
    "\26\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\11\3\1\u0204\14\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\1\u0205\25\3\1\0\3\3\2\0\1\u0206"+
    "\1\3\2\0\4\3\7\0\26\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\2\3\1\u0207\23\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\11\3\1\u0208"+
    "\14\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\3\3\1\201\22\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\22\3\1\u0209\3\3\1\0\1\43\2\0"+
    "\1\43\1\u01b3\2\236\2\0\1\43\110\0\1\u020a\3\0"+
    "\3\3\2\0\2\3\2\0\1\3\1\270\2\3\7\0"+
    "\26\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\2\3\1\u020b\23\3\12\0\1\u01b7\1\53\40\0\3\3"+
    "\2\0\2\3\2\0\1\u01b8\1\u01b9\2\3\7\0\26\3"+
    "\1\0\3\3\2\0\2\3\2\0\2\3\1\u020c\1\3"+
    "\7\0\26\3\1\0\3\3\2\0\2\3\2\0\4\3"+
    "\7\0\22\3\1\75\3\3\1\0\3\3\2\0\2\3"+
    "\2\0\4\3\7\0\6\3\1\u010f\17\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\17\3\1\323\6\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\1\260"+
    "\25\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\3\3\1\u020d\22\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\11\3\1\u020e\14\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\3\3\1\76\22\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\3\3\1\u020f"+
    "\22\3\1\0\3\3\2\0\2\3\2\0\3\3\1\206"+
    "\7\0\26\3\1\0\3\3\2\0\2\3\2\0\4\3"+
    "\7\0\1\45\25\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\10\3\1\u01dd\15\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\11\3\1\u0210\14\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\1\u0171\2\3\7\0"+
    "\26\3\1\0\3\3\2\0\2\3\2\0\1\3\1\u0211"+
    "\2\3\7\0\26\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\3\3\1\u01a7\22\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\11\3\1\137\14\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\5\3\1\u0212"+
    "\20\3\1\0\3\3\2\0\2\3\2\0\3\3\1\u018c"+
    "\7\0\1\u012d\25\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\10\3\1\u0213\15\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\2\3\1\u0214\23\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\10\3\1\u0215"+
    "\15\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\11\3\1\131\14\3\1\0\3\3\2\0\1\54\1\3"+
    "\2\0\4\3\7\0\26\3\1\0\3\3\2\0\2\3"+
    "\2\0\4\3\7\0\11\3\1\u0171\14\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\22\3\1\u0216\3\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\6\3"+
    "\1\u019d\17\3\1\0\3\3\2\0\1\u0217\1\3\2\0"+
    "\4\3\7\0\26\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\1\u01bb\25\3\1\0\3\3\2\0\2\3"+
    "\2\0\2\3\1\371\1\3\7\0\26\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\11\3\1\u0218\14\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\10\3"+
    "\1\u0219\15\3\1\0\3\3\2\0\2\3\2\0\4\3"+
    "\7\0\11\3\1\u021a\14\3\1\0\3\3\2\0\2\3"+
    "\2\0\4\3\7\0\2\3\1\u021b\23\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\3\3\1\376\22\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\5\3"+
    "\1\u021c\20\3\1\0\3\3\2\0\2\3\2\0\4\3"+
    "\7\0\20\3\1\u021d\5\3\1\0\3\3\2\0\2\3"+
    "\2\0\4\3\7\0\1\75\25\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\11\3\1\371\14\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\3\3\1\u0181"+
    "\22\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\1\3\1\76\24\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\3\3\1\u021e\22\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\1\u021f\2\3\7\0\26\3\1\0"+
    "\3\3\2\0\1\u0220\1\3\2\0\4\3\7\0\26\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\10\3"+
    "\1\102\15\3\1\0\3\3\2\0\2\3\2\0\4\3"+
    "\7\0\1\3\1\u0221\24\3\1\0\3\3\2\0\2\3"+
    "\2\0\4\3\7\0\15\3\1\u0222\10\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\6\3\1\u0223\17\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\6\3"+
    "\1\u01b6\17\3\1\0\3\3\2\0\2\3\2\0\4\3"+
    "\7\0\11\3\1\u0224\14\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\1\u0147\2\3\7\0\26\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\3\3\1\u0225\22\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\2\3"+
    "\1\u0226\23\3\1\0\3\3\2\0\2\3\2\0\4\3"+
    "\7\0\5\3\1\355\20\3\1\0\3\3\2\0\2\3"+
    "\2\0\4\3\7\0\5\3\1\u0227\20\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\10\3\1\u01bb\15\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\1\u0228"+
    "\25\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\20\3\1\u0115\5\3\1\0\3\3\2\0\2\3\2\0"+
    "\2\3\1\u0229\1\3\7\0\26\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\1\u022a\25\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\1\u022b\25\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\5\3\1\342"+
    "\13\3\1\270\4\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\5\3\1\u022c\20\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\1\u022d\25\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\11\3\1\u022e\14\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\11\3"+
    "\1\364\14\3\1\0\3\3\2\0\1\u022f\1\3\2\0"+
    "\4\3\7\0\26\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\3\3\1\131\22\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\5\3\1\275\20\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\1\3\1\u0230"+
    "\24\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\3\3\1\175\22\3\1\0\3\3\2\0\2\3\2\0"+
    "\3\3\1\u0231\7\0\26\3\1\0\3\3\2\0\2\3"+
    "\2\0\4\3\7\0\21\3\1\263\4\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\1\u0232\2\3\7\0\26\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\1\3"+
    "\1\u0233\24\3\1\0\3\3\2\0\1\u0234\1\3\2\0"+
    "\4\3\7\0\26\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\16\3\1\323\7\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\1\u0235\25\3\6\0\1\u0236"+
    "\45\0\3\3\2\0\2\3\2\0\3\3\1\u0237\7\0"+
    "\26\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\11\3\1\u0238\14\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\13\3\1\76\1\3\1\u022b\10\3\1\0"+
    "\3\3\2\0\1\267\1\3\2\0\4\3\7\0\1\306"+
    "\25\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\13\3\1\u0239\12\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\1\342\2\3\7\0\26\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\1\u023a\25\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\1\u023b\2\3\7\0\26\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\1\104"+
    "\25\3\1\0\3\3\2\0\2\3\2\0\1\3\1\u023c"+
    "\2\3\7\0\26\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\11\3\1\u023d\14\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\1\u023e\2\3\7\0\26\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\1\3\1\u023f"+
    "\24\3\1\0\3\3\2\0\2\3\2\0\1\3\1\u0240"+
    "\2\3\7\0\26\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\2\3\1\u0241\23\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\11\3\1\u0242\14\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\2\3\1\u0243"+
    "\23\3\1\0\2\3\1\u0244\2\0\2\3\2\0\4\3"+
    "\7\0\26\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\1\376\2\3\7\0\26\3\1\0\3\3\2\0\2\3"+
    "\2\0\4\3\7\0\2\3\1\u0245\23\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\3\3\1\u0246\22\3"+
    "\1\0\3\3\2\0\1\u0247\1\3\2\0\4\3\7\0"+
    "\26\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\10\3\1\u01e0\15\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\2\3\1\u0248\23\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\1\u0249\2\3\7\0\26\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\1\u024a\25\3"+
    "\1\0\3\3\2\0\1\75\1\3\2\0\4\3\7\0"+
    "\11\3\1\u014e\14\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\15\3\1\u024b\10\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\2\3\1\u024c\23\3\1\0"+
    "\3\3\2\0\1\u0201\1\3\2\0\4\3\7\0\26\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\15\3"+
    "\1\u0144\10\3\1\0\3\3\2\0\2\3\2\0\4\3"+
    "\7\0\2\3\1\u0181\23\3\1\0\3\3\2\0\2\3"+
    "\2\0\4\3\7\0\11\3\1\u0164\14\3\1\0\3\3"+
    "\2\0\2\3\2\0\3\3\1\u024d\7\0\26\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\2\3\1\u024e"+
    "\23\3\1\0\3\3\2\0\2\3\2\0\1\3\1\u024f"+
    "\2\3\7\0\26\3\1\0\3\3\2\0\2\3\2\0"+
    "\2\3\1\u01c1\1\3\7\0\26\3\1\0\3\3\2\0"+
    "\1\u0250\1\3\2\0\4\3\7\0\26\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\16\3\1\u0251\7\3"+
    "\1\0\3\3\2\0\1\u0252\1\3\2\0\4\3\7\0"+
    "\26\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\23\3\1\u0253\2\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\6\3\1\u022b\17\3\33\0\1\u0254\20\0"+
    "\3\3\2\0\2\3\2\0\3\3\1\u01b8\7\0\26\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\12\3"+
    "\1\u019d\13\3\1\0\3\3\2\0\2\3\2\0\2\3"+
    "\1\u0255\1\3\7\0\26\3\1\0\3\3\2\0\2\3"+
    "\2\0\4\3\7\0\20\3\1\u0256\5\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\21\3\1\u018a\4\3"+
    "\1\0\3\3\2\0\1\u0257\1\3\2\0\4\3\7\0"+
    "\26\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\16\3\1\u0230\7\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\6\3\1\252\17\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\6\3\1\u0258\17\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\4\3\1\u0259"+
    "\21\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\6\3\1\u025a\17\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\11\3\1\u025b\14\3\1\0\2\3\1\u025c"+
    "\2\0\2\3\2\0\4\3\7\0\26\3\1\0\3\3"+
    "\2\0\1\267\1\3\2\0\4\3\7\0\26\3\1\0"+
    "\3\3\2\0\1\u025d\1\3\2\0\4\3\7\0\26\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\5\3"+
    "\1\u025e\20\3\1\0\3\3\2\0\2\3\2\0\4\3"+
    "\7\0\11\3\1\u025f\14\3\1\0\3\3\2\0\2\3"+
    "\2\0\4\3\7\0\10\3\1\u0260\15\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\1\u0261\25\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\4\3\1\u0262"+
    "\21\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\16\3\1\173\7\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\16\3\1\252\7\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\3\3\1\u0263\22\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\3\3\1\u0121"+
    "\22\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\2\3\1\u025e\23\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\2\3\1\u0246\23\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\15\3\1\122\10\3\1\0"+
    "\2\3\1\u0264\2\0\2\3\2\0\4\3\7\0\26\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\10\3"+
    "\1\u0115\15\3\1\0\3\3\2\0\2\3\2\0\4\3"+
    "\7\0\1\u0265\25\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\5\3\1\u0266\6\3\1\u0267\11\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\6\3\1\u0144"+
    "\17\3\1\0\3\3\2\0\2\3\2\0\2\3\1\u0172"+
    "\1\3\7\0\1\3\1\364\1\u0268\23\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\3\3\1\u0114\22\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\2\3"+
    "\1\u0269\23\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\1\u026a\2\3\7\0\26\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\1\264\2\3\7\0\26\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\5\3\1\u026b\20\3"+
    "\1\0\2\3\1\u026c\2\0\2\3\2\0\4\3\7\0"+
    "\6\3\1\u0258\17\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\10\3\1\u0120\15\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\7\3\1\u026d\10\3\1\u026e"+
    "\5\3\1\0\3\3\2\0\2\3\2\0\2\3\1\u026f"+
    "\1\3\7\0\26\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\11\3\1\u0270\14\3\1\0\3\3\2\0"+
    "\1\u0271\1\3\2\0\4\3\7\0\26\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\11\3\1\u0272\14\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\1\306"+
    "\25\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\2\3\1\u0206\23\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\10\3\1\u0273\15\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\11\3\1\u0274\14\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\10\3\1\u0275"+
    "\15\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\11\3\1\u0276\14\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\1\3\1\u0190\24\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\20\3\1\u0277\5\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\4\3\1\u0278"+
    "\21\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\20\3\1\u0279\5\3\1\0\3\3\2\0\2\3\2\0"+
    "\2\3\1\u027a\1\3\7\0\26\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\1\u027b\2\3\7\0\26\3\1\0"+
    "\3\3\2\0\2\3\2\0\2\3\1\341\1\3\7\0"+
    "\26\3\1\0\3\3\2\0\2\3\2\0\1\3\1\u018f"+
    "\2\3\7\0\26\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\11\3\1\u027c\14\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\15\3\1\u027d\10\3\1\0"+
    "\3\3\2\0\1\u027e\1\3\2\0\4\3\7\0\26\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\3\3"+
    "\1\355\22\3\1\0\3\3\2\0\2\3\2\0\4\3"+
    "\7\0\5\3\1\u018a\20\3\1\0\3\3\2\0\2\3"+
    "\2\0\3\3\1\u027f\7\0\26\3\1\0\3\3\2\0"+
    "\2\3\2\0\4\3\7\0\7\3\1\u0280\16\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\5\3\1\u01ce"+
    "\20\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\1\u0281\25\3\1\0\3\3\2\0\2\3\2\0\4\3"+
    "\7\0\3\3\1\u0282\22\3\1\0\3\3\2\0\2\3"+
    "\2\0\4\3\7\0\3\3\1\u0283\22\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\1\u0284\25\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\11\3\1\u0285"+
    "\14\3\1\0\3\3\2\0\2\3\2\0\4\3\7\0"+
    "\5\3\1\u0286\20\3\1\0\3\3\2\0\2\3\2\0"+
    "\4\3\7\0\2\3\1\u0287\23\3\1\0\3\3\2\0"+
    "\1\u0288\1\3\2\0\4\3\7\0\26\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\4\3\1\u0289\21\3"+
    "\1\0\3\3\2\0\2\3\2\0\4\3\7\0\1\3"+
    "\1\u028a\1\u0269\23\3\1\0\3\3\2\0\1\u028b\1\3"+
    "\2\0\4\3\7\0\26\3\1\0\3\3\2\0\2\3"+
    "\2\0\4\3\7\0\2\3\1\u028c\23\3\1\0\3\3"+
    "\2\0\2\3\2\0\4\3\7\0\1\u028d\25\3\1\0"+
    "\3\3\2\0\2\3\2\0\4\3\7\0\11\3\1\u028e"+
    "\14\3\1\0\3\3\2\0\2\3\2\0\3\3\1\u028f"+
    "\7\0\26\3\1\0\3\3\2\0\2\3\2\0\4\3"+
    "\7\0\5\3\1\u0288\20\3";

  private static int [] zzUnpackTrans() {
    int [] result = new int[27391];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\2\1\1\0\1\11\6\1\1\0\1\11\1\0"+
    "\34\1\1\0\14\1\1\11\145\1\1\0\7\1\1\0"+
    "\220\1\2\0\6\1\1\0\164\1\1\0\125\1\1\0"+
    "\53\1\1\0\35\1\1\11\73\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[655];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true iff the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true iff the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
    private boolean _existenTokens = false;

    public boolean existenTokens() {
        return this._existenTokens;
    }


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public Lexemas(java.io.Reader in) {
  
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 400) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() {
    if (!zzEOFDone) {
      zzEOFDone = true;
        this._existenTokens = false;

    }
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public MyToken yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
            zzDoEOF();
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { MyToken token = new MyToken("DatoEntero", yytext(), yyline, yylength(), yycolumn);
    this._existenTokens = true;
    return token;
            } 
            // fall through
          case 10: break;
          case 2: 
            { MyToken token = new MyToken("Identificador", yytext(), yyline, yylength(), yycolumn);
    this._existenTokens = true;
    return token;
            } 
            // fall through
          case 11: break;
          case 3: 
            { MyToken token = new MyToken("Simbolo", yytext(), yyline, yylength(), yycolumn);
    this._existenTokens = true;
    return token;
            } 
            // fall through
          case 12: break;
          case 4: 
            { // No hacer nada
            } 
            // fall through
          case 13: break;
          case 5: 
            { MyToken token = new MyToken("DatoFloat", yytext(), yyline, yylength(), yycolumn);
    this._existenTokens = true;
    return token;
            } 
            // fall through
          case 14: break;
          case 6: 
            { MyToken token = new MyToken("Comentario", yytext(), yyline, yylength(), yycolumn);
    this._existenTokens = true;
    return token;
            } 
            // fall through
          case 15: break;
          case 7: 
            { MyToken token = new MyToken("DatoBit", yytext(), yyline, yylength(), yycolumn);
    this._existenTokens = true;
    return token;
            } 
            // fall through
          case 16: break;
          case 8: 
            { MyToken token = new MyToken("PalabraReservada", yytext(), yyline, yylength(), yycolumn);
    this._existenTokens = true;
    return token;
            } 
            // fall through
          case 17: break;
          case 9: 
            { MyToken token = new MyToken("DatoString", yytext(), yyline, yylength(), yycolumn);
    this._existenTokens = true;
    return token;
            } 
            // fall through
          case 18: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
