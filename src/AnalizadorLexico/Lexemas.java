/* The following code was generated by JFlex 1.7.0 */

package AnalizadorLexico;

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>Lexemas.flex</tt>
 */
public class Lexemas {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\16\1\14\2\0\1\16\22\0\1\16\1\20\1\0\1\20"+
    "\1\0\1\20\1\20\1\13\1\20\1\20\1\17\1\10\1\20\1\11"+
    "\1\5\1\17\1\12\1\12\10\1\1\0\1\20\1\20\1\20\1\20"+
    "\1\0\1\20\1\21\1\37\1\31\1\22\1\6\1\46\1\42\1\33"+
    "\1\35\1\50\1\40\1\23\1\44\1\26\1\34\1\41\1\51\1\25"+
    "\1\30\1\24\1\32\1\45\1\43\1\47\1\27\1\36\1\20\1\0"+
    "\1\20\1\0\1\3\1\0\4\2\1\7\25\2\1\20\1\20\1\20"+
    "\66\0\1\15\u05ab\0\12\4\206\0\12\4\306\0\12\4\u019c\0\12\4"+
    "\166\0\12\4\166\0\12\4\166\0\12\4\166\0\12\4\166\0\12\4"+
    "\166\0\12\4\166\0\12\4\166\0\12\4\166\0\12\4\140\0\12\4"+
    "\166\0\12\4\106\0\12\4\u0116\0\12\4\106\0\12\4\u0746\0\12\4"+
    "\46\0\12\4\u012c\0\12\4\200\0\12\4\246\0\12\4\6\0\12\4"+
    "\266\0\12\4\126\0\12\4\206\0\12\4\6\0\12\4\u89c6\0\12\4"+
    "\u02a6\0\12\4\46\0\12\4\306\0\12\4\26\0\12\4\126\0\12\4"+
    "\u0196\0\12\4\u5316\0\12\4\u0586\0\12\4\u0bbc\0\12\4\200\0\12\4"+
    "\74\0\12\4\220\0\12\4\u0116\0\12\4\u0156\0\12\4\166\0\12\4"+
    "\u0176\0\12\4\146\0\12\4\146\0\12\4\u01a6\0\12\4\u0366\0\12\4"+
    "\u4e06\0\12\4\346\0\12\4\u6c74\0\62\4\u1150\0\12\4\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\u16b5\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\1\0\1\3\1\2\1\3\1\1"+
    "\1\0\1\4\1\0\1\3\27\2\1\5\5\2\1\6"+
    "\1\7\1\10\1\0\1\6\2\2\1\11\2\2\1\11"+
    "\24\2\1\11\12\2\1\11\30\2\2\11\4\2\1\11"+
    "\1\2\2\11\24\2\1\11\24\2\1\0\1\2\1\11"+
    "\5\2\1\11\10\2\1\11\53\2\1\11\13\2\1\11"+
    "\21\2\1\11\11\2\1\11\2\2\1\11\14\2\1\11"+
    "\23\2\1\11\11\2\1\11\3\2\1\5\1\0\1\2"+
    "\1\0\14\2\1\11\15\2\1\11\4\2\2\11\17\2"+
    "\1\11\30\2\1\11\16\2\2\11\20\2\1\11\5\2"+
    "\2\11\6\2\1\5\1\0\20\2\1\11\36\2\1\11"+
    "\36\2\1\11\3\2\1\0\1\11\51\2\1\0\10\2"+
    "\1\11\4\2\1\11\1\2\1\11\14\2\1\11\12\2"+
    "\1\11\2\2\1\11\33\2\1\11\21\2";

  private static int [] zzUnpackAction() {
    int [] result = new int[650];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\52\0\124\0\52\0\176\0\250\0\322\0\374"+
    "\0\u0126\0\176\0\u0150\0\u017a\0\u01a4\0\u01ce\0\u01f8\0\u0222"+
    "\0\u024c\0\u0276\0\u02a0\0\u02ca\0\u02f4\0\u031e\0\u0348\0\u0372"+
    "\0\u039c\0\u03c6\0\u03f0\0\u041a\0\u0444\0\u046e\0\u0498\0\u04c2"+
    "\0\u04ec\0\u0516\0\u0540\0\u056a\0\u0594\0\u05be\0\u05e8\0\u0612"+
    "\0\u063c\0\u0666\0\374\0\176\0\u017a\0\u017a\0\u0690\0\u06ba"+
    "\0\124\0\u06e4\0\u070e\0\u0738\0\u0762\0\u078c\0\u07b6\0\u07e0"+
    "\0\u080a\0\u0834\0\u085e\0\u0888\0\u08b2\0\u08dc\0\u0906\0\u0930"+
    "\0\u095a\0\u0984\0\u09ae\0\u09d8\0\u0a02\0\u0a2c\0\u0a56\0\u0a80"+
    "\0\u0aaa\0\u0ad4\0\u0afe\0\u0b28\0\u0b52\0\u0b7c\0\u0ba6\0\u0bd0"+
    "\0\u0bfa\0\u0c24\0\u0c4e\0\u0c78\0\u0ca2\0\u0ccc\0\u0cf6\0\u0d20"+
    "\0\u0d4a\0\u0d74\0\u0d9e\0\u0dc8\0\u0df2\0\u0e1c\0\u0e46\0\u0e70"+
    "\0\u0e9a\0\u0ec4\0\u0eee\0\u0f18\0\u0f42\0\u0f6c\0\u0f96\0\u0fc0"+
    "\0\u0fea\0\u1014\0\u103e\0\u1068\0\u1092\0\u10bc\0\u10e6\0\u1110"+
    "\0\u113a\0\u1164\0\u118e\0\u11b8\0\u11e2\0\u120c\0\u1236\0\u1260"+
    "\0\u128a\0\u12b4\0\u12de\0\u1308\0\u1332\0\u135c\0\u1386\0\u13b0"+
    "\0\u13da\0\u1404\0\u142e\0\u1458\0\u1482\0\u14ac\0\u14d6\0\u1500"+
    "\0\u152a\0\u1554\0\u157e\0\u15a8\0\u15d2\0\u15fc\0\u1626\0\u1650"+
    "\0\u167a\0\u16a4\0\u16ce\0\u16f8\0\u1722\0\u174c\0\u1776\0\u17a0"+
    "\0\u17ca\0\u17f4\0\u181e\0\u1848\0\u1872\0\u189c\0\u18c6\0\u18f0"+
    "\0\u191a\0\u1944\0\u196e\0\u1998\0\u19c2\0\u19ec\0\u1a16\0\u1a40"+
    "\0\u1a6a\0\u1a94\0\u1abe\0\u1ae8\0\u1b12\0\u1b3c\0\u1b66\0\u1b90"+
    "\0\u1bba\0\u1be4\0\u1c0e\0\u0aaa\0\u1c38\0\u1c62\0\u1c8c\0\u1cb6"+
    "\0\u1ce0\0\u1d0a\0\u1d34\0\u1d5e\0\u1d88\0\u1db2\0\u1ddc\0\u1e06"+
    "\0\u1e30\0\u1e5a\0\u1e84\0\u1eae\0\u1ed8\0\u1f02\0\u1f2c\0\u1f56"+
    "\0\u1f80\0\u1faa\0\u1fd4\0\u1ffe\0\u2028\0\u2052\0\u207c\0\u20a6"+
    "\0\u20d0\0\u20fa\0\u2124\0\u214e\0\u2178\0\u21a2\0\u21cc\0\u21f6"+
    "\0\u2220\0\u224a\0\u2274\0\u229e\0\u22c8\0\u22f2\0\u231c\0\u2346"+
    "\0\u2370\0\u239a\0\u23c4\0\u23ee\0\u2418\0\u2442\0\u246c\0\u2496"+
    "\0\u24c0\0\u24ea\0\u2514\0\u253e\0\u2568\0\u2592\0\u25bc\0\u25e6"+
    "\0\u2610\0\u263a\0\u2664\0\u268e\0\u26b8\0\u26e2\0\u270c\0\u2736"+
    "\0\u2760\0\u278a\0\u2274\0\u27b4\0\u27de\0\u2808\0\u2832\0\u285c"+
    "\0\u2886\0\u28b0\0\u28da\0\u2904\0\u292e\0\u2958\0\u2982\0\u29ac"+
    "\0\u29d6\0\u2a00\0\u2a2a\0\u2a54\0\u2a7e\0\u2aa8\0\u2ad2\0\u2afc"+
    "\0\u2b26\0\u2b50\0\u2b7a\0\u2ba4\0\u2bce\0\u2bf8\0\u2c22\0\u2c4c"+
    "\0\u2c76\0\u2ca0\0\u2cca\0\u2cf4\0\u2d1e\0\u2d48\0\u2d72\0\u2d9c"+
    "\0\u2dc6\0\u2df0\0\u2e1a\0\u2e44\0\u2e6e\0\u2e98\0\u2ec2\0\u2eec"+
    "\0\u2f16\0\u2f40\0\u2f6a\0\u2f94\0\u2fbe\0\u2fe8\0\u3012\0\u303c"+
    "\0\u3066\0\u3090\0\u30ba\0\u30e4\0\u310e\0\u3138\0\u3162\0\u318c"+
    "\0\u31b6\0\u31e0\0\u320a\0\u3234\0\u325e\0\u3288\0\u32b2\0\u32dc"+
    "\0\u3306\0\u3330\0\u335a\0\u3384\0\u33ae\0\u33d8\0\u3402\0\u342c"+
    "\0\u3456\0\u3480\0\u34aa\0\u34d4\0\u34fe\0\u3528\0\u3552\0\u357c"+
    "\0\u35a6\0\u35d0\0\u35fa\0\u3624\0\u364e\0\u3678\0\u36a2\0\u36cc"+
    "\0\u36f6\0\u3720\0\u374a\0\u3774\0\u379e\0\u37c8\0\u37f2\0\u381c"+
    "\0\u3846\0\u3870\0\u389a\0\u38c4\0\u38ee\0\u3918\0\u3942\0\u396c"+
    "\0\u3996\0\u39c0\0\u39ea\0\u3a14\0\u3a3e\0\u3a68\0\u3a92\0\u3abc"+
    "\0\u3ae6\0\u3b10\0\u3b3a\0\u3b64\0\u3b8e\0\u3bb8\0\u3be2\0\u3c0c"+
    "\0\u3c36\0\u3c60\0\u3c8a\0\u3cb4\0\u3cde\0\u3d08\0\u3d32\0\u3d5c"+
    "\0\u3d86\0\u3db0\0\u3dda\0\u3e04\0\u3e2e\0\u3e58\0\u3e82\0\u3eac"+
    "\0\u3ed6\0\u3f00\0\u3f2a\0\u3f54\0\u2f16\0\u3f7e\0\u3fa8\0\u3fd2"+
    "\0\u3ffc\0\u4026\0\u4050\0\u407a\0\u40a4\0\u40ce\0\u40f8\0\u4122"+
    "\0\u414c\0\u4176\0\u41a0\0\u41ca\0\u41f4\0\u421e\0\u4248\0\u4272"+
    "\0\u429c\0\u42c6\0\u42f0\0\u431a\0\u4344\0\u436e\0\u4398\0\u43c2"+
    "\0\u43ec\0\u4416\0\u4440\0\u446a\0\u4494\0\u44be\0\u44e8\0\u4512"+
    "\0\u453c\0\u4566\0\u4590\0\u45ba\0\u45e4\0\u460e\0\u4638\0\u1a40"+
    "\0\u4662\0\u468c\0\u46b6\0\u46e0\0\u470a\0\u4734\0\u475e\0\u4788"+
    "\0\u47b2\0\u47dc\0\u4806\0\u4830\0\u485a\0\u4884\0\u48ae\0\u48d8"+
    "\0\u4902\0\u492c\0\u4956\0\u4980\0\u49aa\0\u49d4\0\u49fe\0\u4a28"+
    "\0\u4a52\0\u4a7c\0\u4aa6\0\u4ad0\0\u4afa\0\u4b24\0\u4b4e\0\u4b78"+
    "\0\u4ba2\0\u4bcc\0\u4bf6\0\u4c20\0\u4c4a\0\u4c74\0\u4c9e\0\u4cc8"+
    "\0\u4cf2\0\u4d1c\0\u4d46\0\u4d70\0\u4d9a\0\u4dc4\0\u4dee\0\u4e18"+
    "\0\u4e42\0\u4e6c\0\u4e96\0\u4ec0\0\u4eea\0\u4f14\0\u2bce\0\u4f3e"+
    "\0\u4f68\0\u4f92\0\u4fbc\0\u4fe6\0\u5010\0\u503a\0\u5064\0\u508e"+
    "\0\u50b8\0\u50e2\0\u510c\0\u5136\0\u5160\0\u518a\0\u51b4\0\u51de"+
    "\0\u5208\0\u5232\0\u39c0\0\u525c\0\u5286\0\u52b0\0\u52da\0\u1abe"+
    "\0\u5304\0\u532e\0\u5358\0\u5382\0\u53ac\0\u53d6\0\u5400\0\u542a"+
    "\0\u5454\0\u547e\0\u54a8\0\u54d2\0\u54fc\0\u5526\0\u5550\0\u557a"+
    "\0\u55a4\0\u55ce\0\u55f8\0\u5622\0\u564c\0\u5676\0\u56a0\0\u56ca"+
    "\0\u56f4\0\u571e\0\u5748\0\u5772\0\u579c\0\u57c6\0\u57f0\0\u581a"+
    "\0\u5844\0\u586e\0\u5898\0\u58c2\0\u58ec\0\u5916\0\u5940\0\u596a"+
    "\0\u5994\0\u59be\0\u59e8\0\u5a12\0\u5a3c\0\u5a66\0\u5a90\0\u5aba"+
    "\0\u5ae4\0\u5b0e\0\u55a4\0\u5b38\0\u5b62\0\u5b8c\0\u22c8\0\u1d88"+
    "\0\u5bb6\0\u5be0\0\u5c0a\0\u5c34\0\u5c5e\0\u5c88\0\u5cb2\0\u5cdc"+
    "\0\u10bc\0\u5d06\0\u5d30\0\u5d5a\0\u5d84\0\u5dae\0\176\0\u5dd8"+
    "\0\u5e02\0\u5e2c\0\u5e56\0\u5e80\0\u5eaa\0\u5ed4\0\u5efe\0\u5f28"+
    "\0\u5f52\0\u5f7c\0\u5fa6\0\u5fd0\0\u5ffa\0\u6024\0\u604e\0\u6078"+
    "\0\u60a2\0\u60cc\0\u60f6\0\u6120\0\u614a\0\u6174\0\u619e\0\u61c8"+
    "\0\u61f2\0\u621c\0\u6246\0\u6270\0\u629a\0\u62c4\0\u62ee\0\u6318"+
    "\0\u6342\0\u636c\0\u6396\0\u63c0\0\u63ea\0\u6414\0\u643e\0\u6468"+
    "\0\u6492\0\u64bc\0\u64e6\0\u6510\0\u653a\0\u6564\0\u658e\0\u65b8"+
    "\0\u65e2\0\u660c\0\u5f7c\0\u6636\0\u6660\0\u668a\0\u66b4\0\u66de"+
    "\0\u6708\0\u6732";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[650];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\0\1\2\1\3\1\0\1\4\1\5\1\6\1\3"+
    "\1\5\1\7\1\10\1\11\1\12\1\13\1\12\1\14"+
    "\1\5\1\15\1\16\1\17\1\20\1\21\1\22\1\23"+
    "\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33"+
    "\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\3"+
    "\1\43\1\3\1\0\1\4\2\0\1\4\1\44\4\0"+
    "\1\4\40\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\31\3\53\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\2\3\1\45\1\3\1\46\1\47\1\3\1\50\16\3"+
    "\1\51\2\3\11\0\1\52\41\0\1\4\2\0\1\4"+
    "\1\44\4\0\1\53\37\0\13\11\1\54\1\0\35\11"+
    "\14\13\1\0\1\54\34\13\17\55\1\56\32\55\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\1\3\1\57"+
    "\1\60\1\61\1\62\1\63\1\3\1\64\1\65\1\66"+
    "\4\3\1\67\5\3\1\70\4\3\1\0\3\3\2\0"+
    "\1\71\1\3\2\0\1\3\6\0\1\72\3\3\1\73"+
    "\4\3\1\74\1\3\1\75\1\76\1\3\1\77\12\3"+
    "\1\0\3\3\2\0\1\100\1\3\2\0\1\3\6\0"+
    "\1\101\12\3\1\102\1\103\14\3\1\0\3\3\2\0"+
    "\1\104\1\3\2\0\1\3\6\0\1\105\3\3\1\106"+
    "\2\3\1\107\2\3\1\110\1\111\1\112\14\3\1\0"+
    "\3\3\2\0\1\113\1\3\2\0\1\3\6\0\1\114"+
    "\10\3\1\115\1\3\1\116\1\117\14\3\1\0\3\3"+
    "\2\0\1\120\1\3\2\0\1\3\6\0\1\121\7\3"+
    "\1\122\1\123\1\3\1\124\15\3\1\0\3\3\2\0"+
    "\1\125\1\3\2\0\1\3\6\0\31\3\1\0\3\3"+
    "\2\0\1\126\1\3\2\0\1\3\6\0\1\127\2\3"+
    "\1\130\2\3\1\131\1\3\1\132\1\133\1\134\1\135"+
    "\1\136\3\3\1\137\2\3\1\140\4\3\1\141\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\1\142\1\3"+
    "\1\143\1\3\1\144\4\3\1\145\1\146\1\147\15\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\5\3"+
    "\1\150\1\3\1\151\10\3\1\152\10\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\1\153\12\3\1\154"+
    "\15\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\4\3\1\155\1\156\2\3\1\157\1\160\6\3\1\161"+
    "\3\3\1\162\1\163\3\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\1\3\1\164\3\3\1\165\1\3"+
    "\1\166\13\3\1\167\1\3\1\61\3\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\13\3\1\170\15\3"+
    "\1\0\3\3\2\0\1\171\1\3\2\0\1\3\6\0"+
    "\1\172\3\3\1\173\1\3\1\61\2\3\1\174\1\3"+
    "\1\175\1\176\14\3\1\0\3\3\2\0\1\177\1\3"+
    "\2\0\1\3\6\0\14\3\1\200\14\3\1\0\3\3"+
    "\2\0\1\201\1\3\2\0\1\3\6\0\1\202\1\3"+
    "\1\203\1\3\1\204\4\3\1\205\1\3\1\206\1\207"+
    "\14\3\1\0\3\3\2\0\1\210\1\3\2\0\1\3"+
    "\6\0\2\3\1\211\1\3\1\212\6\3\1\213\15\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\1\214"+
    "\3\3\1\215\5\3\1\216\1\217\1\220\14\3\1\0"+
    "\3\3\2\0\1\221\1\3\2\0\1\3\6\0\1\222"+
    "\12\3\1\223\1\224\14\3\1\0\3\3\2\0\1\225"+
    "\1\3\2\0\1\3\6\0\1\226\13\3\1\227\14\3"+
    "\1\0\3\3\2\0\1\230\1\3\2\0\1\3\6\0"+
    "\1\231\1\3\1\232\1\3\1\233\4\3\1\234\1\3"+
    "\1\235\1\236\14\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\13\3\1\237\15\3\1\0\1\44\2\0"+
    "\1\44\1\0\2\240\2\0\1\44\40\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\7\3\1\62\21\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\4\3\1\241"+
    "\24\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\1\3\1\242\27\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\10\3\1\243\20\3\1\0\3\3\2\0"+
    "\1\244\1\3\2\0\1\3\6\0\3\3\1\245\4\3"+
    "\1\246\3\3\1\247\14\3\52\52\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\2\61\27\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\2\3\1\250\1\251"+
    "\25\3\1\0\3\3\2\0\1\61\1\3\2\0\1\3"+
    "\6\0\31\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\1\3\1\61\4\3\1\61\22\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\7\3\1\252\1\61"+
    "\20\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\3\3\1\253\25\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\3\3\1\254\25\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\7\3\1\255\21\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\21\3\1\61"+
    "\7\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\1\256\1\3\1\257\2\3\1\177\1\3\1\260\1\261"+
    "\14\3\1\262\3\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\3\3\1\263\2\3\1\61\22\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\13\3\1\264"+
    "\15\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\23\3\1\264\5\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\11\3\1\265\11\3\1\266\5\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\1\267\6\3"+
    "\1\270\21\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\10\3\1\271\20\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\1\272\23\3\1\273\1\210\3\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\5\3"+
    "\1\274\1\3\1\210\21\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\1\275\7\3\1\276\11\3\1\251"+
    "\6\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\5\3\1\277\11\3\1\62\11\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\23\3\1\300\2\3\1\301"+
    "\2\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\16\3\1\302\12\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\1\303\5\3\1\304\2\3\1\305\2\3"+
    "\1\306\14\3\1\0\3\3\2\0\1\307\1\3\2\0"+
    "\1\3\6\0\31\3\1\0\3\3\2\0\1\310\1\3"+
    "\2\0\1\3\6\0\31\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\20\3\1\61\10\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\23\3\1\311\5\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\1\312"+
    "\1\3\1\313\1\314\3\3\1\315\1\316\7\3\1\317"+
    "\3\3\1\320\1\321\3\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\14\3\1\322\14\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\2\3\1\62\26\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\2\3"+
    "\1\323\17\3\1\324\6\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\21\3\1\325\7\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\26\3\1\210\2\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\3\3"+
    "\1\326\17\3\1\327\5\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\12\3\1\125\16\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\2\3\1\330\20\3"+
    "\1\331\5\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\3\3\1\61\1\3\1\62\2\3\1\332\20\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\1\333"+
    "\30\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\2\3\1\334\1\335\3\3\1\336\1\337\12\3\1\340"+
    "\5\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\24\3\1\62\4\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\1\341\30\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\7\3\1\342\21\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\4\3\1\343\5\3"+
    "\1\344\16\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\16\3\1\345\4\3\1\61\5\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\11\3\1\346\17\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\23\3"+
    "\1\62\5\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\15\3\1\62\13\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\1\347\30\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\1\350\30\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\2\3\1\351\26\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\3\3"+
    "\1\352\3\3\1\353\21\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\11\3\1\354\1\3\1\45\15\3"+
    "\1\0\3\3\2\0\1\355\1\3\2\0\1\3\6\0"+
    "\13\3\1\356\15\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\4\3\1\357\24\3\1\0\3\3\2\0"+
    "\1\360\1\3\2\0\1\3\6\0\1\361\30\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\1\362\1\3"+
    "\1\363\1\3\1\364\1\365\3\3\1\366\11\3\1\367"+
    "\5\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\14\3\1\370\2\3\1\371\1\372\10\3\1\0\3\3"+
    "\2\0\1\373\1\3\2\0\1\3\6\0\1\374\13\3"+
    "\1\375\14\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\1\3\1\376\16\3\1\251\10\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\24\3\1\377\4\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\2\3"+
    "\1\u0100\6\3\1\333\17\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\1\3\1\251\27\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\2\3\1\177\26\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\3\3"+
    "\1\u0101\25\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\3\3\1\u0102\25\3\1\0\3\3\2\0\1\u0103"+
    "\1\3\2\0\1\3\6\0\3\3\1\253\25\3\1\0"+
    "\3\3\2\0\1\u0104\1\3\2\0\1\3\6\0\31\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\25\3"+
    "\1\u0105\3\3\1\0\3\3\2\0\1\u0106\1\3\2\0"+
    "\1\3\6\0\31\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\1\3\1\u0107\1\3\1\u0108\1\3\1\251"+
    "\1\3\1\u0109\1\u010a\3\3\1\u010b\3\3\1\u010c\10\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\13\3"+
    "\1\u010d\15\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\23\3\1\u010e\5\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\5\3\1\62\23\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\3\3\1\u010f\15\3"+
    "\1\237\7\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\10\3\1\u0110\20\3\1\0\3\3\2\0\1\u0111"+
    "\1\3\2\0\1\3\6\0\13\3\1\u0112\15\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\2\3\1\u0113"+
    "\26\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\3\3\1\u0114\25\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\3\3\1\u0115\25\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\6\3\1\61\22\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\2\3\1\u0116"+
    "\26\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\4\3\1\u0117\24\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\1\3\1\61\2\3\1\u0118\2\3\1\u0119"+
    "\21\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\1\310\30\3\1\0\3\3\2\0\1\u011a\1\3\2\0"+
    "\1\3\6\0\13\3\1\u011b\1\u011c\14\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\16\3\1\u011d\12\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\7\3"+
    "\1\u011e\21\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\24\3\1\u011f\4\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\3\3\1\61\25\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\13\3\1\u0120\15\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\1\366"+
    "\12\3\1\u0121\15\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\3\3\1\u0122\25\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\14\3\1\u0123\14\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\14\3\1\u0124"+
    "\14\3\1\0\3\3\2\0\1\u0125\1\3\2\0\1\3"+
    "\6\0\14\3\1\115\14\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\4\3\1\u0113\24\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\3\3\1\u0126\25\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\4\3"+
    "\1\374\24\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\3\3\1\u0127\22\3\1\61\2\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\1\3\1\u0128\3\3"+
    "\1\175\23\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\5\3\1\u0129\23\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\4\3\1\u012a\24\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\2\3\1\u012b\1\3"+
    "\1\u012c\24\3\1\0\3\3\2\0\1\u012d\1\3\2\0"+
    "\1\3\6\0\31\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\3\3\1\u0127\25\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\2\3\1\u012e\26\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\13\3\1\u012f"+
    "\15\3\1\0\3\3\2\0\1\u0130\1\3\2\0\1\3"+
    "\6\0\13\3\1\u0131\15\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\2\3\1\u0116\2\3\1\u0132\23\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\4\3"+
    "\1\u0133\4\3\1\u0134\17\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\2\3\1\u0135\1\3\1\u0136\24\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\14\3"+
    "\1\310\14\3\1\0\1\u0137\2\0\1\u0137\1\0\2\240"+
    "\2\u0138\1\u0137\40\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\2\3\1\u0139\26\3\1\0\3\3\2\0\2\3"+
    "\1\0\1\u013a\1\3\6\0\31\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\1\u013b\30\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\10\3\1\u0129\20\3"+
    "\1\0\3\3\2\0\1\u013c\1\3\2\0\1\3\6\0"+
    "\4\3\1\u013d\24\3\1\0\3\3\2\0\1\u013e\1\3"+
    "\2\0\1\3\6\0\31\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\3\3\1\61\3\3\1\u013f\21\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\13\3"+
    "\1\u0140\15\3\1\0\3\3\2\0\1\333\1\3\2\0"+
    "\1\3\6\0\31\3\1\0\3\3\2\0\1\u0141\1\3"+
    "\2\0\1\3\6\0\31\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\14\3\1\u0142\14\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\12\3\1\u0143\16\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\13\3"+
    "\1\u0144\15\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\2\3\1\u0145\26\3\1\0\3\3\2\0\1\u0146"+
    "\1\3\2\0\1\3\6\0\31\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\10\3\1\u0147\20\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\2\3\1\u0148"+
    "\11\3\1\u0149\14\3\1\0\3\3\2\0\1\u014a\1\3"+
    "\2\0\1\3\6\0\1\u014b\30\3\1\0\3\3\2\0"+
    "\1\61\1\3\2\0\1\3\6\0\1\u014c\30\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\16\3\1\115"+
    "\12\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\1\237\30\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\21\3\1\u014d\7\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\3\3\1\u014e\4\3\1\u014f\6\3"+
    "\1\61\11\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\10\3\1\61\20\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\1\3\1\377\27\3\1\0\3\3"+
    "\2\0\1\u0116\1\3\2\0\1\3\6\0\31\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\21\3\1\u0150"+
    "\7\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\1\3\1\61\27\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\1\u0116\30\3\1\0\3\3\2\0\1\u0151"+
    "\1\3\2\0\1\3\6\0\31\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\20\3\1\u0152\10\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\3\3\1\u0153"+
    "\25\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\2\3\1\u0154\26\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\5\3\1\u0155\6\3\1\u0156\14\3\1\0"+
    "\2\3\1\u0157\2\0\2\3\2\0\1\3\6\0\31\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\5\3"+
    "\1\u0140\23\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\21\3\1\u0158\1\3\1\61\5\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\30\3\1\u0159\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\5\3\1\61"+
    "\23\3\1\0\3\3\2\0\1\u015a\1\3\2\0\1\3"+
    "\6\0\31\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\1\3\1\u015b\1\61\26\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\1\u015c\30\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\11\3\1\u015d\17\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\3\3"+
    "\1\u015e\25\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\13\3\1\u015f\15\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\2\3\1\u0160\26\3\1\0\3\3"+
    "\2\0\1\u0161\1\3\2\0\1\3\6\0\13\3\1\u0162"+
    "\15\3\1\0\3\3\2\0\1\u0163\1\3\2\0\1\3"+
    "\6\0\31\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\7\3\1\u0164\21\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\2\3\1\u0165\26\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\7\3\1\61\1\u0166"+
    "\10\3\1\u0167\7\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\12\3\1\210\16\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\11\3\1\u0168\2\3\1\u0169"+
    "\14\3\1\0\3\3\2\0\1\u016a\1\3\2\0\1\3"+
    "\6\0\31\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\2\3\1\u016b\26\3\1\0\3\3\2\0\1\u016c"+
    "\1\3\2\0\1\3\6\0\31\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\2\3\1\u016d\7\3\1\u016e"+
    "\16\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\4\3\1\61\24\3\1\0\3\3\2\0\1\u016f\1\3"+
    "\2\0\1\3\6\0\31\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\11\3\1\u0170\17\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\7\3\1\u0171\21\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\3\3"+
    "\1\253\5\3\1\u0172\1\3\1\u0134\15\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\1\u0173\30\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\3\3\1\u0174"+
    "\25\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\3\3\1\u0175\25\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\13\3\1\200\15\3\1\0\3\3\2\0"+
    "\1\u0176\1\3\2\0\1\3\6\0\31\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\7\3\1\u0177\21\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\3\3"+
    "\1\u0178\25\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\10\3\1\62\20\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\2\3\1\u0179\26\3\1\0\3\3"+
    "\2\0\1\u017a\1\3\2\0\1\3\6\0\7\3\1\u017b"+
    "\1\u017c\11\3\1\u017d\6\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\1\u017e\30\3\1\0\3\3\2\0"+
    "\1\61\1\3\2\0\1\3\6\0\3\3\1\61\4\3"+
    "\1\u017f\20\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\7\3\1\u0180\21\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\1\u0146\30\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\7\3\1\u016a\21\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\4\3\1\u0181"+
    "\2\3\1\u0182\21\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\10\3\1\u0183\20\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\4\3\1\u0184\24\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\2\3\1\u0185"+
    "\26\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\2\3\1\u0186\6\3\1\u0187\17\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\4\3\1\u0188\24\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\3\3\1\u0189"+
    "\1\3\1\u018a\1\3\1\u018b\14\3\1\u018c\4\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\5\3\1\210"+
    "\23\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\20\3\1\u018d\2\3\1\u018e\5\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\13\3\1\310\14\3\1\u018f"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\5\3"+
    "\1\u0190\23\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\14\3\1\207\14\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\21\3\1\62\7\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\5\3\1\70\23\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\1\u0124"+
    "\30\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\14\3\1\375\14\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\1\3\1\u0191\27\3\1\0\3\3\2\0"+
    "\1\u0192\1\3\2\0\1\3\6\0\31\3\1\0\3\3"+
    "\2\0\1\333\1\3\2\0\1\3\6\0\20\3\1\u010c"+
    "\10\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\5\3\1\u0193\23\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\4\3\1\u0194\24\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\7\3\1\u0195\21\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\5\3\1\u0196"+
    "\23\3\1\0\3\3\2\0\1\u0197\1\3\2\0\1\3"+
    "\6\0\14\3\1\u0198\14\3\1\0\3\3\2\0\1\u0199"+
    "\1\3\2\0\1\3\6\0\13\3\1\61\15\3\1\0"+
    "\3\3\2\0\1\u019a\1\3\2\0\1\3\6\0\31\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\2\3"+
    "\1\u019b\26\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\3\3\1\u019c\25\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\11\3\1\210\17\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\2\3\1\u019d\26\3"+
    "\1\0\3\3\2\0\1\u019e\1\3\2\0\1\3\6\0"+
    "\31\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\22\3\1\u019f\6\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\17\3\1\u0121\11\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\1\u0113\30\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\22\3\1\45\6\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\17\3"+
    "\1\61\11\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\12\3\1\61\16\3\1\0\2\3\1\u01a0\2\0"+
    "\2\3\2\0\1\3\6\0\31\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\2\3\1\61\26\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\10\3\1\u01a1"+
    "\20\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\3\3\1\u01a2\25\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\10\3\1\276\20\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\7\3\1\u01a3\1\u01a4\7\3"+
    "\1\u0148\10\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\10\3\1\u01a5\20\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\5\3\1\210\5\3\1\333\7\3"+
    "\1\u01a6\1\u01a7\4\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\2\3\1\u01a8\26\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\14\3\1\65\14\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\13\3\1\210"+
    "\15\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\16\3\1\276\12\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\11\3\1\264\17\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\13\3\1\61\15\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\3\3\1\u01a9"+
    "\25\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\3\3\1\u01aa\25\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\4\3\1\62\1\u01ab\23\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\12\3\1\u01ac\16\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\10\3"+
    "\1\u0114\20\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\11\3\1\115\17\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\11\3\1\u0146\17\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\1\3\1\u01ad\27\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\11\3"+
    "\1\u01ae\17\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\6\3\1\377\1\3\1\122\20\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\22\3\1\61\6\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\7\3"+
    "\1\u0122\21\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\1\210\30\3\1\0\3\3\2\0\1\u01af\1\3"+
    "\2\0\1\3\6\0\31\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\23\3\1\61\5\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\10\3\1\65\20\3"+
    "\1\0\3\3\2\0\1\u01b0\1\3\2\0\1\3\6\0"+
    "\3\3\1\u01b1\25\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\5\3\1\275\23\3\1\0\3\3\2\0"+
    "\1\61\1\3\2\0\1\3\6\0\2\3\1\u01b2\26\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\7\3"+
    "\1\210\21\3\1\0\1\u0137\2\0\1\u0137\1\u01b3\2\240"+
    "\2\0\1\u0137\40\0\1\u0137\2\0\1\u0137\3\0\2\u0138"+
    "\1\u0137\40\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\24\3\1\u0116\4\3\6\0\1\u01b4\44\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\20\3\1\62\10\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\4\3\1\u01b5"+
    "\24\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\1\u016f\30\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\20\3\1\u01b6\10\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\3\3\1\u016a\25\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\10\3\1\355\20\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\4\3"+
    "\1\65\24\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\13\3\1\310\15\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\13\3\1\u01b7\15\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\2\3\1\u018d\26\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\2\3"+
    "\1\u01b8\26\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\3\3\1\62\25\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\4\3\1\u01b9\24\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\1\u01ba\30\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\23\3\1\276"+
    "\5\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\4\3\1\u01bb\24\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\11\3\1\u01bc\17\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\16\3\1\u01bd\12\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\5\3\1\u01be"+
    "\23\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\4\3\1\u01bf\7\3\1\u01c0\14\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\13\3\1\u01c1\15\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\11\3\1\u01c2"+
    "\17\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\5\3\1\u0122\23\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\13\3\1\u01c3\15\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\7\3\1\u01c4\21\3\1\0"+
    "\3\3\2\0\1\u01c5\1\3\2\0\1\3\6\0\31\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\7\3"+
    "\1\u01c6\21\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\2\3\1\377\26\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\10\3\1\u01c7\20\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\21\3\1\251\7\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\11\3"+
    "\1\276\17\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\7\3\1\u01c8\5\3\1\u01c9\13\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\3\3\1\u01ca\25\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\3\3"+
    "\1\u01cb\25\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\4\3\1\310\24\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\4\3\1\u01cc\6\3\1\u01ba\15\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\5\3"+
    "\1\u01cd\23\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\14\3\1\u01ce\14\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\4\3\1\210\24\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\17\3\1\62\11\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\4\3"+
    "\1\u01cf\24\3\1\0\3\3\2\0\1\u017a\1\3\2\0"+
    "\1\3\6\0\31\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\16\3\1\u01d0\12\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\13\3\1\u01d1\15\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\11\3\1\u01d2"+
    "\17\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\4\3\1\276\24\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\13\3\1\u01b5\15\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\7\3\1\61\21\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\14\3\1\u01d3"+
    "\14\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\4\3\1\u01a8\24\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\11\3\1\354\17\3\1\0\3\3\2\0"+
    "\1\u01d4\1\3\2\0\1\3\6\0\31\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\10\3\1\210\20\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\7\3"+
    "\1\251\21\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\14\3\1\u01d5\14\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\4\3\1\u01d6\24\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\5\3\1\u01d7\23\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\14\3"+
    "\1\u01d8\14\3\1\0\3\3\2\0\1\u01d9\1\3\2\0"+
    "\1\3\6\0\31\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\23\3\1\u01da\5\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\3\3\1\u01db\25\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\1\3\1\u0190"+
    "\27\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\2\3\1\u01dc\26\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\4\3\1\u01dd\24\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\3\3\1\355\25\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\1\61\12\3"+
    "\1\u01de\15\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\1\u01df\30\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\2\3\1\u01e0\26\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\1\u01e1\30\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\3\3\1\u01e2\25\3"+
    "\1\0\3\3\2\0\1\u01e3\1\3\2\0\1\3\6\0"+
    "\31\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\13\3\1\333\15\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\17\3\1\u01e4\11\3\1\0\2\3\1\u01a0"+
    "\2\0\2\3\2\0\1\3\6\0\1\u01e5\30\3\1\0"+
    "\3\3\2\0\1\u01e6\1\3\2\0\1\3\6\0\31\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\1\u01e7"+
    "\30\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\23\3\1\310\5\3\1\0\3\3\2\0\1\u01e8\1\3"+
    "\2\0\1\3\6\0\31\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\1\u01e9\13\3\1\u01ea\14\3\1\0"+
    "\3\3\2\0\1\u01eb\1\3\2\0\1\3\6\0\31\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\3\3"+
    "\1\u01ec\25\3\1\0\3\3\2\0\1\u0161\1\3\2\0"+
    "\1\3\6\0\31\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\14\3\1\210\14\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\11\3\1\62\17\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\13\3\1\u01ed"+
    "\15\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\2\3\1\u01ee\26\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\3\3\1\u01ef\25\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\1\3\1\u01f0\24\3\1\u01f1"+
    "\1\3\1\u01f2\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\2\3\1\u01f3\26\3\1\0\3\3\2\0\1\u013f"+
    "\1\3\2\0\1\3\6\0\31\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\3\3\1\u01f4\25\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\26\3\1\61"+
    "\2\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\10\3\1\u01f5\20\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\4\3\1\u01f6\14\3\1\251\7\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\4\3\1\210"+
    "\1\u01f7\23\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\11\3\1\u01de\17\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\14\3\1\u01f8\14\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\1\65\30\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\1\3\1\u01f9"+
    "\27\3\1\0\3\3\2\0\1\110\1\3\2\0\1\3"+
    "\6\0\31\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\2\3\1\u01fa\26\3\1\0\3\3\2\0\1\366"+
    "\1\3\2\0\1\3\6\0\31\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\14\3\1\276\14\3\1\0"+
    "\3\3\2\0\1\u01fb\1\3\2\0\1\3\6\0\31\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\14\3"+
    "\1\u01fc\14\3\1\0\3\3\2\0\1\u01fd\1\3\2\0"+
    "\1\3\6\0\31\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\1\u01fe\30\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\14\3\1\u01ff\14\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\14\3\1\271\14\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\25\3"+
    "\1\u0182\3\3\1\0\3\3\2\0\1\u015b\1\3\2\0"+
    "\1\3\6\0\31\3\1\0\3\3\2\0\1\u0200\1\3"+
    "\2\0\1\3\6\0\31\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\14\3\1\u0201\14\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\1\u0202\30\3\1\0"+
    "\3\3\2\0\1\u0203\1\3\2\0\1\3\6\0\31\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\3\3"+
    "\1\u0204\25\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\14\3\1\u0205\14\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\4\3\1\203\24\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\25\3\1\u0206\3\3"+
    "\1\0\1\44\2\0\1\44\1\u01b3\2\240\2\0\1\44"+
    "\106\0\1\u0207\3\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\5\3\1\276\23\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\3\3\1\u0208\25\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\4\3\1\u0209\24\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\14\3"+
    "\1\u020a\14\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\4\3\1\62\24\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\4\3\1\u020b\24\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\2\3\1\210\26\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\1\45"+
    "\30\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\13\3\1\u01d8\15\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\14\3\1\u020c\14\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\5\3\1\u016f\23\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\5\3\1\u020d"+
    "\23\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\1\374\30\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\4\3\1\u01a6\24\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\14\3\1\136\14\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\7\3\1\u020e\21\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\1\u0132"+
    "\1\3\1\u0186\26\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\13\3\1\u020f\15\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\3\3\1\u0210\25\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\13\3\1\u0211"+
    "\15\3\1\0\3\3\2\0\1\120\1\3\2\0\1\3"+
    "\6\0\31\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\14\3\1\127\14\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\14\3\1\u016f\14\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\25\3\1\u0212\3\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\10\3"+
    "\1\u019d\20\3\1\0\3\3\2\0\1\u0213\1\3\2\0"+
    "\1\3\6\0\31\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\1\u01d4\30\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\11\3\1\366\17\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\14\3\1\u0214\14\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\25\3"+
    "\1\61\3\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\10\3\1\u0113\20\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\13\3\1\u0215\15\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\14\3\1\u0216\14\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\3\3"+
    "\1\u0217\25\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\7\3\1\u0218\21\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\23\3\1\u0219\5\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\1\61\30\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\4\3\1\377"+
    "\24\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\14\3\1\366\14\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\4\3\1\u0182\24\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\1\3\1\62\27\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\4\3\1\u021a"+
    "\24\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\13\3\1\70\15\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\1\3\1\u021b\27\3\1\0\3\3\2\0"+
    "\1\u021c\1\3\2\0\1\3\6\0\31\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\5\3\1\u021d\23\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\20\3"+
    "\1\u021e\10\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\10\3\1\u021f\20\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\7\3\1\347\21\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\3\3\1\u0220\25\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\7\3"+
    "\1\u0221\21\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\14\3\1\u0222\14\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\5\3\1\u018f\23\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\10\3\1\u01b6\20\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\4\3"+
    "\1\u0223\24\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\22\3\1\310\6\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\13\3\1\u01d4\15\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\1\u0224\30\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\23\3\1\u0116"+
    "\5\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\11\3\1\u0225\17\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\1\u0226\30\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\14\3\1\u0227\14\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\1\u0228\30\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\7\3\1\334"+
    "\14\3\1\276\4\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\7\3\1\u0229\21\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\1\u022a\30\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\14\3\1\355\14\3"+
    "\1\0\3\3\2\0\1\u022b\1\3\2\0\1\3\6\0"+
    "\31\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\4\3\1\127\24\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\7\3\1\253\21\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\1\3\1\u022c\27\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\4\3\1\177"+
    "\24\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\2\3\1\u022d\26\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\24\3\1\251\4\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\5\3\1\u022e\23\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\1\3\1\u022f"+
    "\27\3\1\0\3\3\2\0\1\u0230\1\3\2\0\1\3"+
    "\6\0\31\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\21\3\1\310\7\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\1\u0231\30\3\6\0\1\u0232\44\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\14\3\1\u0233"+
    "\14\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\16\3\1\62\1\3\1\u0228\10\3\1\0\3\3\2\0"+
    "\1\275\1\3\2\0\1\3\6\0\1\265\30\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\16\3\1\u0234"+
    "\12\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\5\3\1\334\23\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\1\u0235\30\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\5\3\1\u0236\23\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\1\74\30\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\5\3\1\u0237"+
    "\23\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\14\3\1\u0238\14\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\5\3\1\u0239\23\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\1\3\1\u023a\27\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\5\3\1\u023b"+
    "\23\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\3\3\1\u023c\25\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\14\3\1\u023d\14\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\3\3\1\u023e\25\3\1\0"+
    "\2\3\1\u023f\2\0\2\3\2\0\1\3\6\0\31\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\5\3"+
    "\1\377\23\3\1\0\3\3\2\0\1\u0240\1\3\2\0"+
    "\1\3\6\0\31\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\4\3\1\u0241\24\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\3\3\1\u0242\25\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\13\3\1\u01dc"+
    "\15\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\3\3\1\u0243\25\3\1\0\3\3\2\0\1\61\1\3"+
    "\2\0\1\3\6\0\14\3\1\u0142\14\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\20\3\1\u0244\10\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\5\3"+
    "\1\u0245\23\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\1\u0246\30\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\3\3\1\u0247\25\3\1\0\3\3\2\0"+
    "\1\u01fe\1\3\2\0\1\3\6\0\31\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\20\3\1\u016a\10\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\3\3"+
    "\1\u0248\25\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\3\3\1\u0182\25\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\14\3\1\u015c\14\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\2\3\1\u0249\26\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\5\3"+
    "\1\u024a\23\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\11\3\1\u01ba\17\3\1\0\3\3\2\0\1\u024b"+
    "\1\3\2\0\1\3\6\0\31\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\21\3\1\u024c\7\3\1\0"+
    "\3\3\2\0\1\u024d\1\3\2\0\1\3\6\0\31\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\26\3"+
    "\1\u024e\2\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\10\3\1\u0228\20\3\31\0\1\u024f\21\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\15\3\1\u019d\13\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\11\3"+
    "\1\u0250\17\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\23\3\1\u0251\5\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\24\3\1\u018c\4\3\1\0\3\3"+
    "\2\0\1\u0252\1\3\2\0\1\3\6\0\31\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\21\3\1\u022c"+
    "\7\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\10\3\1\327\20\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\10\3\1\u0253\20\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\6\3\1\u0254\22\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\10\3\1\u0255"+
    "\20\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\14\3\1\u0256\14\3\1\0\3\3\2\0\1\275\1\3"+
    "\2\0\1\3\6\0\31\3\1\0\2\3\1\u0257\2\0"+
    "\2\3\2\0\1\3\6\0\31\3\1\0\3\3\2\0"+
    "\1\u0258\1\3\2\0\1\3\6\0\31\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\13\3\1\u0259\15\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\7\3"+
    "\1\u025a\21\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\14\3\1\u025b\14\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\1\u025c\30\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\6\3\1\u025d\22\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\21\3\1\175"+
    "\7\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\21\3\1\327\7\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\4\3\1\u025e\24\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\4\3\1\u0122\24\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\3\3\1\u025a"+
    "\25\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\3\3\1\u0241\25\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\20\3\1\115\10\3\1\0\2\3\1\u025f"+
    "\2\0\2\3\2\0\1\3\6\0\31\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\13\3\1\u0116\15\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\1\u0260"+
    "\30\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\7\3\1\u0261\7\3\1\u0262\11\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\10\3\1\u016a\20\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\1\3\1\355"+
    "\1\3\1\u0263\5\3\1\u0170\17\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\4\3\1\u0115\24\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\5\3\1\272"+
    "\23\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\3\3\1\u0264\25\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\5\3\1\u0265\23\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\7\3\1\u0266\21\3\1\0"+
    "\2\3\1\u0267\2\0\2\3\2\0\1\3\6\0\10\3"+
    "\1\u0253\20\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\13\3\1\u0121\15\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\12\3\1\u0268\10\3\1\u0269\5\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\11\3"+
    "\1\u026a\17\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\14\3\1\u026b\14\3\1\0\3\3\2\0\1\u026c"+
    "\1\3\2\0\1\3\6\0\31\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\14\3\1\u026d\14\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\1\265\30\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\3\3"+
    "\1\u0203\25\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\13\3\1\u026e\15\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\14\3\1\u026f\14\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\13\3\1\u0270\15\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\14\3"+
    "\1\u0271\14\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\1\3\1\u018e\27\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\23\3\1\u0272\5\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\6\3\1\u0273\22\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\23\3"+
    "\1\u0274\5\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\11\3\1\u0275\17\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\5\3\1\u0276\23\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\11\3\1\333\17\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\5\3"+
    "\1\u018d\23\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\14\3\1\u0277\14\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\20\3\1\u0278\10\3\1\0\3\3"+
    "\2\0\1\u0279\1\3\2\0\1\3\6\0\31\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\4\3\1\347"+
    "\24\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\7\3\1\u018c\21\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\2\3\1\u027a\26\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\12\3\1\u027b\16\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\7\3\1\u01c8"+
    "\21\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\1\u027c\30\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\4\3\1\u027d\24\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\4\3\1\u027e\24\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\1\u027f\30\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\14\3\1\u0280"+
    "\14\3\1\0\3\3\2\0\2\3\2\0\1\3\6\0"+
    "\7\3\1\u0281\21\3\1\0\3\3\2\0\2\3\2\0"+
    "\1\3\6\0\3\3\1\u0282\25\3\1\0\3\3\2\0"+
    "\1\u0283\1\3\2\0\1\3\6\0\31\3\1\0\3\3"+
    "\2\0\2\3\2\0\1\3\6\0\6\3\1\u0284\22\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\1\3"+
    "\1\u0285\1\3\1\u0264\25\3\1\0\3\3\2\0\1\u0286"+
    "\1\3\2\0\1\3\6\0\31\3\1\0\3\3\2\0"+
    "\2\3\2\0\1\3\6\0\3\3\1\u0287\25\3\1\0"+
    "\3\3\2\0\2\3\2\0\1\3\6\0\1\u0288\30\3"+
    "\1\0\3\3\2\0\2\3\2\0\1\3\6\0\14\3"+
    "\1\u0289\14\3\1\0\3\3\2\0\2\3\2\0\1\3"+
    "\6\0\2\3\1\u028a\26\3\1\0\3\3\2\0\2\3"+
    "\2\0\1\3\6\0\7\3\1\u0283\21\3";

  private static int [] zzUnpackTrans() {
    int [] result = new int[26460];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\2\1\1\0\1\11\3\1\1\0\1\11\1\0"+
    "\40\1\1\11\1\0\162\1\1\0\227\1\1\0\1\1"+
    "\1\0\171\1\1\0\122\1\1\0\52\1\1\0\34\1"+
    "\1\11\73\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[650];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true iff the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true iff the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
    private boolean _existenTokens = false;

    public boolean existenTokens() {
        return this._existenTokens;
    }


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public Lexemas(java.io.Reader in) {
  
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 388) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() {
    if (!zzEOFDone) {
      zzEOFDone = true;
        this._existenTokens = false;

    }
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public MyToken yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':  // fall through
        case '\u000C':  // fall through
        case '\u0085':  // fall through
        case '\u2028':  // fall through
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn += zzCharCount;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
            zzDoEOF();
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { MyToken token = new MyToken("DatoEntero", yytext(), yyline, yylength(), yycolumn);
    this._existenTokens = true;
    return token;
            } 
            // fall through
          case 10: break;
          case 2: 
            { if (yytext().length() <= 31) {
        MyToken token = new MyToken("Identificador", yytext(), yyline, yylength(), yycolumn);
        this._existenTokens = true;
        return token;
    } else {
        MyToken token = new MyToken("IdentificadorTruncado", yytext(), yyline, yylength(), yycolumn);
        this._existenTokens = true;
        return token;
    }
            } 
            // fall through
          case 11: break;
          case 3: 
            { MyToken token = new MyToken("Simbolo", yytext(), yyline, yylength(), yycolumn);
    this._existenTokens = true;
    return token;
            } 
            // fall through
          case 12: break;
          case 4: 
            { // No hacer nada
            } 
            // fall through
          case 13: break;
          case 5: 
            { MyToken token = new MyToken("DatoFloat", yytext(), yyline, yylength(), yycolumn);
    this._existenTokens = true;
    return token;
            } 
            // fall through
          case 14: break;
          case 6: 
            { MyToken token = new MyToken("Comentario", yytext(), yyline, yylength(), yycolumn);
    this._existenTokens = true;
    return token;
            } 
            // fall through
          case 15: break;
          case 7: 
            { MyToken token = new MyToken("DatoBit", yytext(), yyline, yylength(), yycolumn);
    this._existenTokens = true;
    return token;
            } 
            // fall through
          case 16: break;
          case 8: 
            { MyToken token = new MyToken("DatoString", yytext(), yyline, yylength(), yycolumn);
    this._existenTokens = true;
    return token;
            } 
            // fall through
          case 17: break;
          case 9: 
            { MyToken token = new MyToken("PalabraReservada", yytext(), yyline, yylength(), yycolumn);
    this._existenTokens = true;
    return token;
            } 
            // fall through
          case 18: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
